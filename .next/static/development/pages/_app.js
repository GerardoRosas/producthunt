(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["static/development/pages/_app.js"],{

/***/ "./firebase/config.js":
/*!****************************!*\
  !*** ./firebase/config.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBOfmZ1khIFUU1F55qLLiJm1C99E4jNktA\",\n  authDomain: \"product-hunt-e0662.firebaseapp.com\",\n  databaseURL: \"https://product-hunt-e0662.firebaseio.com\",\n  projectId: \"product-hunt-e0662\",\n  storageBucket: \"product-hunt-e0662.appspot.com\",\n  messagingSenderId: \"491967122362\",\n  appId: \"1:491967122362:web:1a9fb59255100a54526b83\"\n}; // Initialize Firebase\n//firebase.initializeApp(firebaseConfig);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (firebaseConfig);\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9maXJlYmFzZS9jb25maWcuanM/YjdkYiJdLCJuYW1lcyI6WyJmaXJlYmFzZUNvbmZpZyIsImFwaUtleSIsImF1dGhEb21haW4iLCJkYXRhYmFzZVVSTCIsInByb2plY3RJZCIsInN0b3JhZ2VCdWNrZXQiLCJtZXNzYWdpbmdTZW5kZXJJZCIsImFwcElkIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0EsSUFBTUEsY0FBYyxHQUFHO0FBQ25CQyxRQUFNLEVBQUUseUNBRFc7QUFFbkJDLFlBQVUsRUFBRSxvQ0FGTztBQUduQkMsYUFBVyxFQUFFLDJDQUhNO0FBSW5CQyxXQUFTLEVBQUUsb0JBSlE7QUFLbkJDLGVBQWEsRUFBRSxnQ0FMSTtBQU1uQkMsbUJBQWlCLEVBQUUsY0FOQTtBQU9uQkMsT0FBSyxFQUFFO0FBUFksQ0FBdkIsQyxDQVNBO0FBQ0E7O0FBQ2VQLDZFQUFmIiwiZmlsZSI6Ii4vZmlyZWJhc2UvY29uZmlnLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gWW91ciB3ZWIgYXBwJ3MgRmlyZWJhc2UgY29uZmlndXJhdGlvblxuY29uc3QgZmlyZWJhc2VDb25maWcgPSB7XG4gICAgYXBpS2V5OiBcIkFJemFTeUJPZm1aMWtoSUZVVTFGNTVxTExpSm0xQzk5RTRqTmt0QVwiLFxuICAgIGF1dGhEb21haW46IFwicHJvZHVjdC1odW50LWUwNjYyLmZpcmViYXNlYXBwLmNvbVwiLFxuICAgIGRhdGFiYXNlVVJMOiBcImh0dHBzOi8vcHJvZHVjdC1odW50LWUwNjYyLmZpcmViYXNlaW8uY29tXCIsXG4gICAgcHJvamVjdElkOiBcInByb2R1Y3QtaHVudC1lMDY2MlwiLFxuICAgIHN0b3JhZ2VCdWNrZXQ6IFwicHJvZHVjdC1odW50LWUwNjYyLmFwcHNwb3QuY29tXCIsXG4gICAgbWVzc2FnaW5nU2VuZGVySWQ6IFwiNDkxOTY3MTIyMzYyXCIsXG4gICAgYXBwSWQ6IFwiMTo0OTE5NjcxMjIzNjI6d2ViOjFhOWZiNTkyNTUxMDBhNTQ1MjZiODNcIlxufTtcbi8vIEluaXRpYWxpemUgRmlyZWJhc2Vcbi8vZmlyZWJhc2UuaW5pdGlhbGl6ZUFwcChmaXJlYmFzZUNvbmZpZyk7XG5leHBvcnQgZGVmYXVsdCBmaXJlYmFzZUNvbmZpZztcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./firebase/config.js\n");

/***/ }),

/***/ "./firebase/context.js":
/*!*****************************!*\
  !*** ./firebase/context.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nvar FirebaseContext = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"createContext\"])(null);\n/* harmony default export */ __webpack_exports__[\"default\"] = (FirebaseContext);\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9maXJlYmFzZS9jb250ZXh0LmpzPzFlZmEiXSwibmFtZXMiOlsiRmlyZWJhc2VDb250ZXh0IiwiY3JlYXRlQ29udGV4dCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFFQSxJQUFNQSxlQUFlLEdBQUdDLDJEQUFhLENBQUMsSUFBRCxDQUFyQztBQUVlRCw4RUFBZiIsImZpbGUiOiIuL2ZpcmViYXNlL2NvbnRleHQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgY3JlYXRlQ29udGV4dCB9IGZyb20gJ3JlYWN0JztcblxuY29uc3QgRmlyZWJhc2VDb250ZXh0ID0gY3JlYXRlQ29udGV4dChudWxsKTtcblxuZXhwb3J0IGRlZmF1bHQgRmlyZWJhc2VDb250ZXh0OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./firebase/context.js\n");

/***/ }),

/***/ "./firebase/firebase.js":
/*!******************************!*\
  !*** ./firebase/firebase.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! firebase/app */ \"./node_modules/firebase/app/dist/index.cjs.js\");\n/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(firebase_app__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! firebase/auth */ \"./node_modules/firebase/auth/dist/index.esm.js\");\n/* harmony import */ var firebase_firebase_firestore__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! firebase/firebase-firestore */ \"./node_modules/firebase/firebase-firestore.js\");\n/* harmony import */ var firebase_firebase_firestore__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(firebase_firebase_firestore__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var firebase_firebase_database__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! firebase/firebase-database */ \"./node_modules/firebase/firebase-database.js\");\n/* harmony import */ var firebase_firebase_database__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(firebase_firebase_database__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var firebase_storage__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! firebase/storage */ \"./node_modules/firebase/storage/dist/index.esm.js\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./config */ \"./firebase/config.js\");\n\n\n\n\n\n\n\n\n\n\n\nvar Firebase = /*#__PURE__*/function () {\n  function Firebase() {\n    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, Firebase);\n\n    if (!firebase_app__WEBPACK_IMPORTED_MODULE_4___default.a.apps.length) {\n      firebase_app__WEBPACK_IMPORTED_MODULE_4___default.a.initializeApp(_config__WEBPACK_IMPORTED_MODULE_9__[\"default\"]);\n    }\n\n    this.auth = firebase_app__WEBPACK_IMPORTED_MODULE_4___default.a.auth();\n    this.db = firebase_app__WEBPACK_IMPORTED_MODULE_4___default.a.firestore();\n    this.storage = firebase_app__WEBPACK_IMPORTED_MODULE_4___default.a.storage();\n  } //Registra un usuario\n\n\n  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Firebase, [{\n    key: \"registar\",\n    value: function () {\n      var _registar = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(nombre, email, password) {\n        var nuevoUsuario;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.auth.createUserWithEmailAndPassword(email, password);\n\n              case 2:\n                nuevoUsuario = _context.sent;\n                _context.next = 5;\n                return nuevoUsuario.user.updateProfile({\n                  displayName: nombre\n                });\n\n              case 5:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function registar(_x, _x2, _x3) {\n        return _registar.apply(this, arguments);\n      }\n\n      return registar;\n    }() //Inicia sesion del usuario\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(email, password) {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", this.auth.signInWithEmailAndPassword(email, password));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function login(_x4, _x5) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }() //Cierra la sesion del usuario\n\n  }, {\n    key: \"cerrarSesion\",\n    value: function () {\n      var _cerrarSesion = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3() {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.auth.signOut();\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function cerrarSesion() {\n        return _cerrarSesion.apply(this, arguments);\n      }\n\n      return cerrarSesion;\n    }()\n  }]);\n\n  return Firebase;\n}();\n\nvar firebase = new Firebase();\n/* harmony default export */ __webpack_exports__[\"default\"] = (firebase);\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9maXJlYmFzZS9maXJlYmFzZS5qcz8yM2JjIl0sIm5hbWVzIjpbIkZpcmViYXNlIiwiYXBwIiwiYXBwcyIsImxlbmd0aCIsImluaXRpYWxpemVBcHAiLCJmaXJlYmFzZUNvbmZpZyIsImF1dGgiLCJkYiIsImZpcmVzdG9yZSIsInN0b3JhZ2UiLCJub21icmUiLCJlbWFpbCIsInBhc3N3b3JkIiwiY3JlYXRlVXNlcldpdGhFbWFpbEFuZFBhc3N3b3JkIiwibnVldm9Vc3VhcmlvIiwidXNlciIsInVwZGF0ZVByb2ZpbGUiLCJkaXNwbGF5TmFtZSIsInNpZ25JbldpdGhFbWFpbEFuZFBhc3N3b3JkIiwic2lnbk91dCIsImZpcmViYXNlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOztJQUVNQSxRO0FBQ0Ysc0JBQWE7QUFBQTs7QUFDVCxRQUFHLENBQUNDLG1EQUFHLENBQUNDLElBQUosQ0FBU0MsTUFBYixFQUFvQjtBQUNoQkYseURBQUcsQ0FBQ0csYUFBSixDQUFrQkMsK0NBQWxCO0FBQ0g7O0FBQ0QsU0FBS0MsSUFBTCxHQUFZTCxtREFBRyxDQUFDSyxJQUFKLEVBQVo7QUFDQSxTQUFLQyxFQUFMLEdBQVVOLG1EQUFHLENBQUNPLFNBQUosRUFBVjtBQUNBLFNBQUtDLE9BQUwsR0FBZVIsbURBQUcsQ0FBQ1EsT0FBSixFQUFmO0FBQ0gsRyxDQUVEOzs7Ozs7d05BQ2VDLE0sRUFBUUMsSyxFQUFPQyxROzs7Ozs7O3VCQUNDLEtBQUtOLElBQUwsQ0FBVU8sOEJBQVYsQ0FBeUNGLEtBQXpDLEVBQWdEQyxRQUFoRCxDOzs7QUFBckJFLDRCOzt1QkFFT0EsWUFBWSxDQUFDQyxJQUFiLENBQWtCQyxhQUFsQixDQUFnQztBQUN6Q0MsNkJBQVcsRUFBR1A7QUFEMkIsaUJBQWhDLEM7Ozs7Ozs7Ozs7Ozs7Ozs7OztRQUtqQjs7Ozs7c05BQ1lDLEssRUFBT0MsUTs7Ozs7a0RBQ1IsS0FBS04sSUFBTCxDQUFVWSwwQkFBVixDQUFxQ1AsS0FBckMsRUFBNENDLFFBQTVDLEM7Ozs7Ozs7Ozs7Ozs7OztRQUdYOzs7Ozs7Ozs7Ozt1QkFFVSxLQUFLTixJQUFMLENBQVVhLE9BQVYsRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSWQsSUFBTUMsUUFBUSxHQUFHLElBQUlwQixRQUFKLEVBQWpCO0FBRWVvQix1RUFBZiIsImZpbGUiOiIuL2ZpcmViYXNlL2ZpcmViYXNlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFwcCBmcm9tICdmaXJlYmFzZS9hcHAnO1xuaW1wb3J0ICdmaXJlYmFzZS9hdXRoJztcbmltcG9ydCAnZmlyZWJhc2UvZmlyZWJhc2UtZmlyZXN0b3JlJztcbmltcG9ydCAnZmlyZWJhc2UvZmlyZWJhc2UtZGF0YWJhc2UnO1xuaW1wb3J0ICdmaXJlYmFzZS9zdG9yYWdlJztcblxuaW1wb3J0IGZpcmViYXNlQ29uZmlnIGZyb20gJy4vY29uZmlnJztcblxuY2xhc3MgRmlyZWJhc2V7XG4gICAgY29uc3RydWN0b3IoKXtcbiAgICAgICAgaWYoIWFwcC5hcHBzLmxlbmd0aCl7XG4gICAgICAgICAgICBhcHAuaW5pdGlhbGl6ZUFwcChmaXJlYmFzZUNvbmZpZyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5hdXRoID0gYXBwLmF1dGgoKTtcbiAgICAgICAgdGhpcy5kYiA9IGFwcC5maXJlc3RvcmUoKTsgIFxuICAgICAgICB0aGlzLnN0b3JhZ2UgPSBhcHAuc3RvcmFnZSgpO1xuICAgIH1cblxuICAgIC8vUmVnaXN0cmEgdW4gdXN1YXJpb1xuICAgIGFzeW5jIHJlZ2lzdGFyKG5vbWJyZSwgZW1haWwsIHBhc3N3b3JkKXtcbiAgICAgICAgY29uc3QgbnVldm9Vc3VhcmlvID0gYXdhaXQgdGhpcy5hdXRoLmNyZWF0ZVVzZXJXaXRoRW1haWxBbmRQYXNzd29yZChlbWFpbCwgcGFzc3dvcmQpO1xuXG4gICAgICAgIHJldHVybiBhd2FpdCBudWV2b1VzdWFyaW8udXNlci51cGRhdGVQcm9maWxlKHtcbiAgICAgICAgICAgIGRpc3BsYXlOYW1lIDogbm9tYnJlXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgLy9JbmljaWEgc2VzaW9uIGRlbCB1c3VhcmlvXG4gICAgYXN5bmMgbG9naW4oZW1haWwsIHBhc3N3b3JkKXtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXV0aC5zaWduSW5XaXRoRW1haWxBbmRQYXNzd29yZChlbWFpbCwgcGFzc3dvcmQpO1xuICAgIH1cblxuICAgIC8vQ2llcnJhIGxhIHNlc2lvbiBkZWwgdXN1YXJpb1xuICAgIGFzeW5jIGNlcnJhclNlc2lvbigpe1xuICAgICAgICBhd2FpdCB0aGlzLmF1dGguc2lnbk91dCgpO1xuICAgIH1cbn1cblxuY29uc3QgZmlyZWJhc2UgPSBuZXcgRmlyZWJhc2UoKTtcblxuZXhwb3J0IGRlZmF1bHQgZmlyZWJhc2U7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./firebase/firebase.js\n");

/***/ }),

/***/ "./firebase/index.js":
/*!***************************!*\
  !*** ./firebase/index.js ***!
  \***************************/
/*! exports provided: FirebaseContext, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./firebase */ \"./firebase/firebase.js\");\n/* harmony import */ var _firebase_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../firebase/context */ \"./firebase/context.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FirebaseContext\", function() { return _firebase_context__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; });\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_firebase__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9maXJlYmFzZS9pbmRleC5qcz9jNTZiIl0sIm5hbWVzIjpbImZpcmViYXNlIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ2VBLGdIQUFmIiwiZmlsZSI6Ii4vZmlyZWJhc2UvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZmlyZWJhc2UgZnJvbSAnLi9maXJlYmFzZSc7XG5pbXBvcnQgRmlyZWJhc2VDb250ZXh0IGZyb20gJy4uL2ZpcmViYXNlL2NvbnRleHQnO1xuXG5leHBvcnQge0ZpcmViYXNlQ29udGV4dH0gXG5leHBvcnQgZGVmYXVsdCBmaXJlYmFzZTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./firebase/index.js\n");

/***/ }),

/***/ "./hooks/useAutenticacion.js":
/*!***********************************!*\
  !*** ./hooks/useAutenticacion.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../firebase */ \"./firebase/index.js\");\nvar _s = $RefreshSig$();\n\n\n\n\nfunction useAutenticacion() {\n  _s();\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(null),\n      usuarioAutenticado = _useState[0],\n      guardarUsuarioAutenticado = _useState[1];\n\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(function () {\n    var unsuscribe = _firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].auth.onAuthStateChanged(function (user) {\n      if (user) {\n        guardarUsuarioAutenticado(user);\n      } else {\n        guardarUsuarioAutenticado(null);\n      }\n    });\n    return function () {\n      return unsuscribe();\n    };\n  }, []);\n  return usuarioAutenticado;\n}\n\n_s(useAutenticacion, \"73aeFF5NNkU9numcp0IQoKUdTrI=\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (useAutenticacion);\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ob29rcy91c2VBdXRlbnRpY2FjaW9uLmpzPzcyYzciXSwibmFtZXMiOlsidXNlQXV0ZW50aWNhY2lvbiIsInVzZVN0YXRlIiwidXN1YXJpb0F1dGVudGljYWRvIiwiZ3VhcmRhclVzdWFyaW9BdXRlbnRpY2FkbyIsInVzZUVmZmVjdCIsInVuc3VzY3JpYmUiLCJmaXJlYmFzZSIsImF1dGgiLCJvbkF1dGhTdGF0ZUNoYW5nZWQiLCJ1c2VyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBOztBQUVBLFNBQVNBLGdCQUFULEdBQTRCO0FBQUE7O0FBQUEsa0JBQ2lDQyxzREFBUSxDQUFDLElBQUQsQ0FEekM7QUFBQSxNQUNqQkMsa0JBRGlCO0FBQUEsTUFDR0MseUJBREg7O0FBR3hCQyx5REFBUyxDQUFDLFlBQU07QUFDWixRQUFNQyxVQUFVLEdBQUdDLGlEQUFRLENBQUNDLElBQVQsQ0FBY0Msa0JBQWQsQ0FBaUMsVUFBQUMsSUFBSSxFQUFJO0FBQ3hELFVBQUdBLElBQUgsRUFBUTtBQUNKTixpQ0FBeUIsQ0FBQ00sSUFBRCxDQUF6QjtBQUNILE9BRkQsTUFFSztBQUNETixpQ0FBeUIsQ0FBQyxJQUFELENBQXpCO0FBQ0g7QUFDSixLQU5rQixDQUFuQjtBQU9BLFdBQU87QUFBQSxhQUFNRSxVQUFVLEVBQWhCO0FBQUEsS0FBUDtBQUVILEdBVlEsRUFVTixFQVZNLENBQVQ7QUFZQSxTQUFPSCxrQkFBUDtBQUNIOztHQWhCUUYsZ0I7O0FBbUJNQSwrRUFBZiIsImZpbGUiOiIuL2hvb2tzL3VzZUF1dGVudGljYWNpb24uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBmaXJlYmFzZSBmcm9tICcuLi9maXJlYmFzZSc7XG5cbmZ1bmN0aW9uIHVzZUF1dGVudGljYWNpb24oKSB7XG4gICAgY29uc3QgW3VzdWFyaW9BdXRlbnRpY2FkbywgZ3VhcmRhclVzdWFyaW9BdXRlbnRpY2FkbyBdID0gdXNlU3RhdGUobnVsbCk7XG5cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBjb25zdCB1bnN1c2NyaWJlID0gZmlyZWJhc2UuYXV0aC5vbkF1dGhTdGF0ZUNoYW5nZWQodXNlciA9PiB7XG4gICAgICAgICAgICBpZih1c2VyKXtcbiAgICAgICAgICAgICAgICBndWFyZGFyVXN1YXJpb0F1dGVudGljYWRvKHVzZXIpXG4gICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICAgICBndWFyZGFyVXN1YXJpb0F1dGVudGljYWRvKG51bGwpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICByZXR1cm4gKCkgPT4gdW5zdXNjcmliZSgpO1xuICAgICAgICBcbiAgICB9LCBbXSk7XG5cbiAgICByZXR1cm4gdXN1YXJpb0F1dGVudGljYWRvO1xufVxuXG5cbmV4cG9ydCBkZWZhdWx0IHVzZUF1dGVudGljYWNpb247Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./hooks/useAutenticacion.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/arrayLikeToArray.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayLikeToArray.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hcnJheUxpa2VUb0FycmF5LmpzPzVhNDMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFFQSx3Q0FBd0MsU0FBUztBQUNqRDtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hcnJheUxpa2VUb0FycmF5LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHtcbiAgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7XG5cbiAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7XG4gICAgYXJyMltpXSA9IGFycltpXTtcbiAgfVxuXG4gIHJldHVybiBhcnIyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9hcnJheUxpa2VUb0FycmF5OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/arrayWithHoles.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hcnJheVdpdGhIb2xlcy5qcz9jMTM1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2FycmF5V2l0aEhvbGVzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9hcnJheVdpdGhIb2xlczsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/arrayWithHoles.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/assertThisInitialized.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQuanM/M2M5NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXNzZXJ0VGhpc0luaXRpYWxpemVkLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7XG4gIGlmIChzZWxmID09PSB2b2lkIDApIHtcbiAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7XG4gIH1cblxuICByZXR1cm4gc2VsZjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfYXNzZXJ0VGhpc0luaXRpYWxpemVkOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/assertThisInitialized.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/asyncToGenerator.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3luY1RvR2VuZXJhdG9yLmpzP2M5NzMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3luY1RvR2VuZXJhdG9yLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBrZXksIGFyZykge1xuICB0cnkge1xuICAgIHZhciBpbmZvID0gZ2VuW2tleV0oYXJnKTtcbiAgICB2YXIgdmFsdWUgPSBpbmZvLnZhbHVlO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJlamVjdChlcnJvcik7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKGluZm8uZG9uZSkge1xuICAgIHJlc29sdmUodmFsdWUpO1xuICB9IGVsc2Uge1xuICAgIFByb21pc2UucmVzb2x2ZSh2YWx1ZSkudGhlbihfbmV4dCwgX3Rocm93KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihmbikge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBzZWxmID0gdGhpcyxcbiAgICAgICAgYXJncyA9IGFyZ3VtZW50cztcbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgdmFyIGdlbiA9IGZuLmFwcGx5KHNlbGYsIGFyZ3MpO1xuXG4gICAgICBmdW5jdGlvbiBfbmV4dCh2YWx1ZSkge1xuICAgICAgICBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIFwibmV4dFwiLCB2YWx1ZSk7XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIF90aHJvdyhlcnIpIHtcbiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcInRocm93XCIsIGVycik7XG4gICAgICB9XG5cbiAgICAgIF9uZXh0KHVuZGVmaW5lZCk7XG4gICAgfSk7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2FzeW5jVG9HZW5lcmF0b3I7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjay5qcz85NzBiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjay5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2NsYXNzQ2FsbENoZWNrOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/classCallCheck.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/construct.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/construct.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ \"./node_modules/@babel/runtime/helpers/setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = __webpack_require__(/*! ./isNativeReflectConstruct */ \"./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jb25zdHJ1Y3QuanM/YjE3YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxQkFBcUIsbUJBQU8sQ0FBQyxpRkFBa0I7O0FBRS9DLCtCQUErQixtQkFBTyxDQUFDLHFHQUE0Qjs7QUFFbkU7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY29uc3RydWN0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHNldFByb3RvdHlwZU9mID0gcmVxdWlyZShcIi4vc2V0UHJvdG90eXBlT2ZcIik7XG5cbnZhciBpc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSByZXF1aXJlKFwiLi9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3RcIik7XG5cbmZ1bmN0aW9uIF9jb25zdHJ1Y3QoUGFyZW50LCBhcmdzLCBDbGFzcykge1xuICBpZiAoaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IF9jb25zdHJ1Y3QgPSBSZWZsZWN0LmNvbnN0cnVjdDtcbiAgfSBlbHNlIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IF9jb25zdHJ1Y3QgPSBmdW5jdGlvbiBfY29uc3RydWN0KFBhcmVudCwgYXJncywgQ2xhc3MpIHtcbiAgICAgIHZhciBhID0gW251bGxdO1xuICAgICAgYS5wdXNoLmFwcGx5KGEsIGFyZ3MpO1xuICAgICAgdmFyIENvbnN0cnVjdG9yID0gRnVuY3Rpb24uYmluZC5hcHBseShQYXJlbnQsIGEpO1xuICAgICAgdmFyIGluc3RhbmNlID0gbmV3IENvbnN0cnVjdG9yKCk7XG4gICAgICBpZiAoQ2xhc3MpIHNldFByb3RvdHlwZU9mKGluc3RhbmNlLCBDbGFzcy5wcm90b3R5cGUpO1xuICAgICAgcmV0dXJuIGluc3RhbmNlO1xuICAgIH07XG4gIH1cblxuICByZXR1cm4gX2NvbnN0cnVjdC5hcHBseShudWxsLCBhcmd1bWVudHMpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9jb25zdHJ1Y3Q7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/construct.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/createClass.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/createClass.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcy5qcz81YmMzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsaUJBQWlCLGtCQUFrQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gIH1cbn1cblxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICByZXR1cm4gQ29uc3RydWN0b3I7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2NyZWF0ZUNsYXNzOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/createClass.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _asyncToGenerator; });\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcz8xZGExIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBrZXksIGFyZykge1xuICB0cnkge1xuICAgIHZhciBpbmZvID0gZ2VuW2tleV0oYXJnKTtcbiAgICB2YXIgdmFsdWUgPSBpbmZvLnZhbHVlO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJlamVjdChlcnJvcik7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKGluZm8uZG9uZSkge1xuICAgIHJlc29sdmUodmFsdWUpO1xuICB9IGVsc2Uge1xuICAgIFByb21pc2UucmVzb2x2ZSh2YWx1ZSkudGhlbihfbmV4dCwgX3Rocm93KTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihmbikge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBzZWxmID0gdGhpcyxcbiAgICAgICAgYXJncyA9IGFyZ3VtZW50cztcbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgdmFyIGdlbiA9IGZuLmFwcGx5KHNlbGYsIGFyZ3MpO1xuXG4gICAgICBmdW5jdGlvbiBfbmV4dCh2YWx1ZSkge1xuICAgICAgICBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIFwibmV4dFwiLCB2YWx1ZSk7XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIF90aHJvdyhlcnIpIHtcbiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcInRocm93XCIsIGVycik7XG4gICAgICB9XG5cbiAgICAgIF9uZXh0KHVuZGVmaW5lZCk7XG4gICAgfSk7XG4gIH07XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _classCallCheck; });\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2suanM/ZDRlYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjay5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICB9XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/createClass.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/createClass.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _createClass; });\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MuanM/YmVlMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQSxpQkFBaUIsa0JBQWtCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICByZXR1cm4gQ29uc3RydWN0b3I7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/createClass.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/extends.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/extends.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _extends; });\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcy5qcz9jMzFkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBZTtBQUNmO0FBQ0EsbUJBQW1CLHNCQUFzQjtBQUN6Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcblxuICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9O1xuXG4gIHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/extends.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/getPrototypeOf.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9nZXRQcm90b3R5cGVPZi5qcz8zNmM2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2dldFByb3RvdHlwZU9mLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2Yobykge1xuICAgIHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7XG4gIH07XG4gIHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2dldFByb3RvdHlwZU9mOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/getPrototypeOf.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/inherits.js":
/*!*********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/inherits.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ \"./node_modules/@babel/runtime/helpers/setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0cy5qcz9lZDZkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHFCQUFxQixtQkFBTyxDQUFDLGlGQUFrQjs7QUFFL0M7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0cy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBzZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoXCIuL3NldFByb3RvdHlwZU9mXCIpO1xuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTtcbiAgfVxuXG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwge1xuICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICB2YWx1ZTogc3ViQ2xhc3MsXG4gICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH1cbiAgfSk7XG4gIGlmIChzdXBlckNsYXNzKSBzZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2luaGVyaXRzOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/inherits.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/inheritsLoose.js":
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/inheritsLoose.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nmodule.exports = _inheritsLoose;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0c0xvb3NlLmpzPzU1YjUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzTG9vc2UuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfaW5oZXJpdHNMb29zZShzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MucHJvdG90eXBlKTtcbiAgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7XG4gIHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2luaGVyaXRzTG9vc2U7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/inheritsLoose.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHQuanM/NGVhNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtcbiAgICBcImRlZmF1bHRcIjogb2JqXG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/interopRequireDefault.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/interopRequireWildcard.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireWildcard.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var _typeof = __webpack_require__(/*! ../helpers/typeof */ \"./node_modules/@babel/runtime/helpers/typeof.js\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nmodule.exports = _interopRequireWildcard;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkLmpzP2RiY2UiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxtQkFBTyxDQUFDLDBFQUFtQjs7QUFFekM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIF90eXBlb2YgPSByZXF1aXJlKFwiLi4vaGVscGVycy90eXBlb2ZcIik7XG5cbmZ1bmN0aW9uIF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSgpIHtcbiAgaWYgKHR5cGVvZiBXZWFrTWFwICE9PSBcImZ1bmN0aW9uXCIpIHJldHVybiBudWxsO1xuICB2YXIgY2FjaGUgPSBuZXcgV2Vha01hcCgpO1xuXG4gIF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSA9IGZ1bmN0aW9uIF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSgpIHtcbiAgICByZXR1cm4gY2FjaGU7XG4gIH07XG5cbiAgcmV0dXJuIGNhY2hlO1xufVxuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHtcbiAgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkge1xuICAgIHJldHVybiBvYmo7XG4gIH1cblxuICBpZiAob2JqID09PSBudWxsIHx8IF90eXBlb2Yob2JqKSAhPT0gXCJvYmplY3RcIiAmJiB0eXBlb2Ygb2JqICE9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgXCJkZWZhdWx0XCI6IG9ialxuICAgIH07XG4gIH1cblxuICB2YXIgY2FjaGUgPSBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUoKTtcblxuICBpZiAoY2FjaGUgJiYgY2FjaGUuaGFzKG9iaikpIHtcbiAgICByZXR1cm4gY2FjaGUuZ2V0KG9iaik7XG4gIH1cblxuICB2YXIgbmV3T2JqID0ge307XG4gIHZhciBoYXNQcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcblxuICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHtcbiAgICAgIHZhciBkZXNjID0gaGFzUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiBudWxsO1xuXG4gICAgICBpZiAoZGVzYyAmJiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpKSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIG5ld09ialtcImRlZmF1bHRcIl0gPSBvYmo7XG5cbiAgaWYgKGNhY2hlKSB7XG4gICAgY2FjaGUuc2V0KG9iaiwgbmV3T2JqKTtcbiAgfVxuXG4gIHJldHVybiBuZXdPYmo7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/interopRequireWildcard.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QuanM/NmY4ZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDJFQUEyRTtBQUMzRTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkge1xuICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7XG4gIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7XG4gIGlmICh0eXBlb2YgUHJveHkgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIHRydWU7XG5cbiAgdHJ5IHtcbiAgICBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbiAoKSB7fSkpO1xuICAgIHJldHVybiB0cnVlO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdDsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pdGVyYWJsZVRvQXJyYXlMaW1pdC5qcz85YjQyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDZDQUE2QywrQkFBK0I7QUFDNUU7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pdGVyYWJsZVRvQXJyYXlMaW1pdC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHtcbiAgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwidW5kZWZpbmVkXCIgfHwgIShTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpKSByZXR1cm47XG4gIHZhciBfYXJyID0gW107XG4gIHZhciBfbiA9IHRydWU7XG4gIHZhciBfZCA9IGZhbHNlO1xuICB2YXIgX2UgPSB1bmRlZmluZWQ7XG5cbiAgdHJ5IHtcbiAgICBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7XG4gICAgICBfYXJyLnB1c2goX3MudmFsdWUpO1xuXG4gICAgICBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7XG4gICAgfVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBfZCA9IHRydWU7XG4gICAgX2UgPSBlcnI7XG4gIH0gZmluYWxseSB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICghX24gJiYgX2lbXCJyZXR1cm5cIl0gIT0gbnVsbCkgX2lbXCJyZXR1cm5cIl0oKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgaWYgKF9kKSB0aHJvdyBfZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gX2Fycjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfaXRlcmFibGVUb0FycmF5TGltaXQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/nonIterableRest.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9ub25JdGVyYWJsZVJlc3QuanM/YzI0MCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9ub25JdGVyYWJsZVJlc3QuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkge1xuICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9ub25JdGVyYWJsZVJlc3Q7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/nonIterableRest.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var _typeof = __webpack_require__(/*! ../helpers/typeof */ \"./node_modules/@babel/runtime/helpers/typeof.js\");\n\nvar assertThisInitialized = __webpack_require__(/*! ./assertThisInitialized */ \"./node_modules/@babel/runtime/helpers/assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuLmpzPzZiNTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxtQkFBTyxDQUFDLDBFQUFtQjs7QUFFekMsNEJBQTRCLG1CQUFPLENBQUMsK0ZBQXlCOztBQUU3RDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVybi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBfdHlwZW9mID0gcmVxdWlyZShcIi4uL2hlbHBlcnMvdHlwZW9mXCIpO1xuXG52YXIgYXNzZXJ0VGhpc0luaXRpYWxpemVkID0gcmVxdWlyZShcIi4vYXNzZXJ0VGhpc0luaXRpYWxpemVkXCIpO1xuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7XG4gIGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpKSB7XG4gICAgcmV0dXJuIGNhbGw7XG4gIH1cblxuICByZXR1cm4gYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/setPrototypeOf.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9zZXRQcm90b3R5cGVPZi5qcz80YTRiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3NldFByb3RvdHlwZU9mLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICBvLl9fcHJvdG9fXyA9IHA7XG4gICAgcmV0dXJuIG87XG4gIH07XG5cbiAgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfc2V0UHJvdG90eXBlT2Y7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/slicedToArray.js":
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/slicedToArray.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles */ \"./node_modules/@babel/runtime/helpers/arrayWithHoles.js\");\n\nvar iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit */ \"./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray */ \"./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js\");\n\nvar nonIterableRest = __webpack_require__(/*! ./nonIterableRest */ \"./node_modules/@babel/runtime/helpers/nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9zbGljZWRUb0FycmF5LmpzPzI3OGMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEscUJBQXFCLG1CQUFPLENBQUMsaUZBQWtCOztBQUUvQywyQkFBMkIsbUJBQU8sQ0FBQyw2RkFBd0I7O0FBRTNELGlDQUFpQyxtQkFBTyxDQUFDLHlHQUE4Qjs7QUFFdkUsc0JBQXNCLG1CQUFPLENBQUMsbUZBQW1COztBQUVqRDtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9zbGljZWRUb0FycmF5LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGFycmF5V2l0aEhvbGVzID0gcmVxdWlyZShcIi4vYXJyYXlXaXRoSG9sZXNcIik7XG5cbnZhciBpdGVyYWJsZVRvQXJyYXlMaW1pdCA9IHJlcXVpcmUoXCIuL2l0ZXJhYmxlVG9BcnJheUxpbWl0XCIpO1xuXG52YXIgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkgPSByZXF1aXJlKFwiLi91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheVwiKTtcblxudmFyIG5vbkl0ZXJhYmxlUmVzdCA9IHJlcXVpcmUoXCIuL25vbkl0ZXJhYmxlUmVzdFwiKTtcblxuZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7XG4gIHJldHVybiBhcnJheVdpdGhIb2xlcyhhcnIpIHx8IGl0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBub25JdGVyYWJsZVJlc3QoKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfc2xpY2VkVG9BcnJheTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/slicedToArray.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/typeof.js":
/*!*******************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/typeof.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90eXBlb2YuanM/NzAzNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90eXBlb2YuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfdHlwZW9mKG9iaikge1xuICBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7XG5cbiAgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiKSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHtcbiAgICAgIHJldHVybiB0eXBlb2Ygb2JqO1xuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqO1xuICAgIH07XG4gIH1cblxuICByZXR1cm4gX3R5cGVvZihvYmopO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF90eXBlb2Y7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/typeof.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray */ \"./node_modules/@babel/runtime/helpers/arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheS5qcz82NjEzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHVCQUF1QixtQkFBTyxDQUFDLHFGQUFvQjs7QUFFbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGFycmF5TGlrZVRvQXJyYXkgPSByZXF1aXJlKFwiLi9hcnJheUxpa2VUb0FycmF5XCIpO1xuXG5mdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7XG4gIGlmICghbykgcmV0dXJuO1xuICBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBhcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7XG4gIHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTtcbiAgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTtcbiAgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7XG4gIGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/regenerator/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! regenerator-runtime */ \"./node_modules/regenerator-runtime/runtime.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanM/YTM0YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIsbUJBQU8sQ0FBQywwRUFBcUIiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJyZWdlbmVyYXRvci1ydW50aW1lXCIpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/regenerator/index.js\n");

/***/ }),

/***/ "./node_modules/@emotion/cache/dist/cache.browser.esm.js":
/*!***************************************************************!*\
  !*** ./node_modules/@emotion/cache/dist/cache.browser.esm.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_sheet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/sheet */ \"./node_modules/@emotion/sheet/dist/sheet.browser.esm.js\");\n/* harmony import */ var _emotion_stylis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/stylis */ \"./node_modules/@emotion/stylis/dist/stylis.browser.esm.js\");\n/* harmony import */ var _emotion_weak_memoize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/weak-memoize */ \"./node_modules/@emotion/weak-memoize/dist/weak-memoize.browser.esm.js\");\n\n\n\n\n// https://github.com/thysultan/stylis.js/tree/master/plugins/rule-sheet\n// inlined to avoid umd wrapper and peerDep warnings/installing stylis\n// since we use stylis after closure compiler\nvar delimiter = '/*|*/';\nvar needle = delimiter + '}';\n\nfunction toSheet(block) {\n  if (block) {\n    Sheet.current.insert(block + '}');\n  }\n}\n\nvar Sheet = {\n  current: null\n};\nvar ruleSheet = function ruleSheet(context, content, selectors, parents, line, column, length, ns, depth, at) {\n  switch (context) {\n    // property\n    case 1:\n      {\n        switch (content.charCodeAt(0)) {\n          case 64:\n            {\n              // @import\n              Sheet.current.insert(content + ';');\n              return '';\n            }\n          // charcode for l\n\n          case 108:\n            {\n              // charcode for b\n              // this ignores label\n              if (content.charCodeAt(2) === 98) {\n                return '';\n              }\n            }\n        }\n\n        break;\n      }\n    // selector\n\n    case 2:\n      {\n        if (ns === 0) return content + delimiter;\n        break;\n      }\n    // at-rule\n\n    case 3:\n      {\n        switch (ns) {\n          // @font-face, @page\n          case 102:\n          case 112:\n            {\n              Sheet.current.insert(selectors[0] + content);\n              return '';\n            }\n\n          default:\n            {\n              return content + (at === 0 ? delimiter : '');\n            }\n        }\n      }\n\n    case -2:\n      {\n        content.split(needle).forEach(toSheet);\n      }\n  }\n};\n\nvar createCache = function createCache(options) {\n  if (options === undefined) options = {};\n  var key = options.key || 'css';\n  var stylisOptions;\n\n  if (options.prefix !== undefined) {\n    stylisOptions = {\n      prefix: options.prefix\n    };\n  }\n\n  var stylis = new _emotion_stylis__WEBPACK_IMPORTED_MODULE_1__[\"default\"](stylisOptions);\n\n  if (true) {\n    // $FlowFixMe\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n    }\n  }\n\n  var inserted = {}; // $FlowFixMe\n\n  var container;\n\n  {\n    container = options.container || document.head;\n    var nodes = document.querySelectorAll(\"style[data-emotion-\" + key + \"]\");\n    Array.prototype.forEach.call(nodes, function (node) {\n      var attrib = node.getAttribute(\"data-emotion-\" + key); // $FlowFixMe\n\n      attrib.split(' ').forEach(function (id) {\n        inserted[id] = true;\n      });\n\n      if (node.parentNode !== container) {\n        container.appendChild(node);\n      }\n    });\n  }\n\n  var _insert;\n\n  {\n    stylis.use(options.stylisPlugins)(ruleSheet);\n\n    _insert = function insert(selector, serialized, sheet, shouldCache) {\n      var name = serialized.name;\n      Sheet.current = sheet;\n\n      if ( true && serialized.map !== undefined) {\n        var map = serialized.map;\n        Sheet.current = {\n          insert: function insert(rule) {\n            sheet.insert(rule + map);\n          }\n        };\n      }\n\n      stylis(selector, serialized.styles);\n\n      if (shouldCache) {\n        cache.inserted[name] = true;\n      }\n    };\n  }\n\n  if (true) {\n    // https://esbench.com/bench/5bf7371a4cd7e6009ef61d0a\n    var commentStart = /\\/\\*/g;\n    var commentEnd = /\\*\\//g;\n    stylis.use(function (context, content) {\n      switch (context) {\n        case -1:\n          {\n            while (commentStart.test(content)) {\n              commentEnd.lastIndex = commentStart.lastIndex;\n\n              if (commentEnd.test(content)) {\n                commentStart.lastIndex = commentEnd.lastIndex;\n                continue;\n              }\n\n              throw new Error('Your styles have an unterminated comment (\"/*\" without corresponding \"*/\").');\n            }\n\n            commentStart.lastIndex = 0;\n            break;\n          }\n      }\n    });\n    stylis.use(function (context, content, selectors) {\n      switch (context) {\n        case -1:\n          {\n            var flag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';\n            var unsafePseudoClasses = content.match(/(:first|:nth|:nth-last)-child/g);\n\n            if (unsafePseudoClasses && cache.compat !== true) {\n              unsafePseudoClasses.forEach(function (unsafePseudoClass) {\n                var ignoreRegExp = new RegExp(unsafePseudoClass + \".*\\\\/\\\\* \" + flag + \" \\\\*\\\\/\");\n                var ignore = ignoreRegExp.test(content);\n\n                if (unsafePseudoClass && !ignore) {\n                  console.error(\"The pseudo class \\\"\" + unsafePseudoClass + \"\\\" is potentially unsafe when doing server-side rendering. Try changing it to \\\"\" + unsafePseudoClass.split('-child')[0] + \"-of-type\\\".\");\n                }\n              });\n            }\n\n            break;\n          }\n      }\n    });\n  }\n\n  var cache = {\n    key: key,\n    sheet: new _emotion_sheet__WEBPACK_IMPORTED_MODULE_0__[\"StyleSheet\"]({\n      key: key,\n      container: container,\n      nonce: options.nonce,\n      speedy: options.speedy\n    }),\n    nonce: options.nonce,\n    inserted: inserted,\n    registered: {},\n    insert: _insert\n  };\n  return cache;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (createCache);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@emotion/cache/dist/cache.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/@emotion/core/dist/core.browser.esm.js":
/*!*************************************************************!*\
  !*** ./node_modules/@emotion/core/dist/core.browser.esm.js ***!
  \*************************************************************/
/*! exports provided: css, CacheProvider, ClassNames, Global, ThemeContext, jsx, keyframes, withEmotionCache */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CacheProvider\", function() { return CacheProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClassNames\", function() { return ClassNames; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Global\", function() { return Global; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ThemeContext\", function() { return ThemeContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"jsx\", function() { return jsx; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"keyframes\", function() { return keyframes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"withEmotionCache\", function() { return withEmotionCache; });\n/* harmony import */ var _babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/inheritsLoose */ \"./node_modules/@babel/runtime/helpers/inheritsLoose.js\");\n/* harmony import */ var _babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _emotion_cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/cache */ \"./node_modules/@emotion/cache/dist/cache.browser.esm.js\");\n/* harmony import */ var _emotion_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/utils */ \"./node_modules/@emotion/utils/dist/utils.browser.esm.js\");\n/* harmony import */ var _emotion_serialize__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/serialize */ \"./node_modules/@emotion/serialize/dist/serialize.browser.esm.js\");\n/* harmony import */ var _emotion_sheet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @emotion/sheet */ \"./node_modules/@emotion/sheet/dist/sheet.browser.esm.js\");\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @emotion/css */ \"./node_modules/@emotion/css/dist/css.browser.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"css\", function() { return _emotion_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"]; });\n\n\n\n\n\n\n\n\n\n\nvar EmotionCacheContext = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createContext\"])( // we're doing this to avoid preconstruct's dead code elimination in this one case\n// because this module is primarily intended for the browser and node\n// but it's also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== 'undefined' ? Object(_emotion_cache__WEBPACK_IMPORTED_MODULE_2__[\"default\"])() : null);\nvar ThemeContext = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createContext\"])({});\nvar CacheProvider = EmotionCacheContext.Provider;\n\nvar withEmotionCache = function withEmotionCache(func) {\n  var render = function render(props, ref) {\n    return Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(EmotionCacheContext.Consumer, null, function (cache) {\n      return func(props, cache, ref);\n    });\n  }; // $FlowFixMe\n\n\n  return Object(react__WEBPACK_IMPORTED_MODULE_1__[\"forwardRef\"])(render);\n};\n\n// thus we only need to replace what is a valid character for JS, but not for CSS\n\nvar sanitizeIdentifier = function sanitizeIdentifier(identifier) {\n  return identifier.replace(/\\$/g, '-');\n};\n\nvar typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\nvar labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar render = function render(cache, props, theme, ref) {\n  var cssProp = theme === null ? props.css : props.css(theme); // so that using `css` from `emotion` and passing the result to the css prop works\n  // not passing the registered cache to serializeStyles because it would\n  // make certain babel optimisations not possible\n\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n    cssProp = cache.registered[cssProp];\n  }\n\n  var type = props[typePropName];\n  var registeredStyles = [cssProp];\n  var className = '';\n\n  if (typeof props.className === 'string') {\n    className = Object(_emotion_utils__WEBPACK_IMPORTED_MODULE_3__[\"getRegisteredStyles\"])(cache.registered, registeredStyles, props.className);\n  } else if (props.className != null) {\n    className = props.className + \" \";\n  }\n\n  var serialized = Object(_emotion_serialize__WEBPACK_IMPORTED_MODULE_4__[\"serializeStyles\"])(registeredStyles);\n\n  if ( true && serialized.name.indexOf('-') === -1) {\n    var labelFromStack = props[labelPropName];\n\n    if (labelFromStack) {\n      serialized = Object(_emotion_serialize__WEBPACK_IMPORTED_MODULE_4__[\"serializeStyles\"])([serialized, 'label:' + labelFromStack + ';']);\n    }\n  }\n\n  var rules = Object(_emotion_utils__WEBPACK_IMPORTED_MODULE_3__[\"insertStyles\"])(cache, serialized, typeof type === 'string');\n  className += cache.key + \"-\" + serialized.name;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && ( false || key !== labelPropName)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps.ref = ref;\n  newProps.className = className;\n  var ele = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(type, newProps);\n\n  return ele;\n};\n\nvar Emotion =\n/* #__PURE__ */\nwithEmotionCache(function (props, cache, ref) {\n  // use Context.read for the theme when it's stable\n  if (typeof props.css === 'function') {\n    return Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(ThemeContext.Consumer, null, function (theme) {\n      return render(cache, props, theme, ref);\n    });\n  }\n\n  return render(cache, props, null, ref);\n});\n\nif (true) {\n  Emotion.displayName = 'EmotionCssPropInternal';\n} // $FlowFixMe\n\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !hasOwnProperty.call(props, 'css')) {\n    // $FlowFixMe\n    return react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"].apply(undefined, args);\n  }\n\n  if ( true && typeof props.css === 'string' && // check if there is a css declaration\n  props.css.indexOf(':') !== -1) {\n    throw new Error(\"Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/css' like this: css`\" + props.css + \"`\");\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps[typePropName] = type;\n\n  if (true) {\n    var error = new Error();\n\n    if (error.stack) {\n      // chrome\n      var match = error.stack.match(/at (?:Object\\.|)jsx.*\\n\\s+at ([A-Z][A-Za-z$]+) /);\n\n      if (!match) {\n        // safari and firefox\n        match = error.stack.match(/.*\\n([A-Z][A-Za-z$]+)@/);\n      }\n\n      if (match) {\n        newProps[labelPropName] = sanitizeIdentifier(match[1]);\n      }\n    }\n  }\n\n  createElementArgArray[1] = newProps;\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"].apply(null, createElementArgArray);\n};\n\nvar warnedAboutCssPropForGlobal = false;\nvar Global =\n/* #__PURE__ */\nwithEmotionCache(function (props, cache) {\n  if ( true && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n  // probably using the custom createElement which\n  // means it will be turned into a className prop\n  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n  props.className || props.css)) {\n    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n    warnedAboutCssPropForGlobal = true;\n  }\n\n  var styles = props.styles;\n\n  if (typeof styles === 'function') {\n    return Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(ThemeContext.Consumer, null, function (theme) {\n      var serialized = Object(_emotion_serialize__WEBPACK_IMPORTED_MODULE_4__[\"serializeStyles\"])([styles(theme)]);\n      return Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(InnerGlobal, {\n        serialized: serialized,\n        cache: cache\n      });\n    });\n  }\n\n  var serialized = Object(_emotion_serialize__WEBPACK_IMPORTED_MODULE_4__[\"serializeStyles\"])([styles]);\n  return Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(InnerGlobal, {\n    serialized: serialized,\n    cache: cache\n  });\n});\n\n// maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\nvar InnerGlobal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_0___default()(InnerGlobal, _React$Component);\n\n  function InnerGlobal(props, context, updater) {\n    return _React$Component.call(this, props, context, updater) || this;\n  }\n\n  var _proto = InnerGlobal.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.sheet = new _emotion_sheet__WEBPACK_IMPORTED_MODULE_5__[\"StyleSheet\"]({\n      key: this.props.cache.key + \"-global\",\n      nonce: this.props.cache.sheet.nonce,\n      container: this.props.cache.sheet.container\n    }); // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion-\" + this.props.cache.key + \"=\\\"\" + this.props.serialized.name + \"\\\"]\");\n\n    if (node !== null) {\n      this.sheet.tags.push(node);\n    }\n\n    if (this.props.cache.sheet.tags.length) {\n      this.sheet.before = this.props.cache.sheet.tags[0];\n    }\n\n    this.insertStyles();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.serialized.name !== this.props.serialized.name) {\n      this.insertStyles();\n    }\n  };\n\n  _proto.insertStyles = function insertStyles$1() {\n    if (this.props.serialized.next !== undefined) {\n      // insert keyframes\n      Object(_emotion_utils__WEBPACK_IMPORTED_MODULE_3__[\"insertStyles\"])(this.props.cache, this.props.serialized.next, true);\n    }\n\n    if (this.sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = this.sheet.tags[this.sheet.tags.length - 1].nextElementSibling;\n      this.sheet.before = element;\n      this.sheet.flush();\n    }\n\n    this.props.cache.insert(\"\", this.props.serialized, this.sheet, false);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.sheet.flush();\n  };\n\n  _proto.render = function render() {\n\n    return null;\n  };\n\n  return InnerGlobal;\n}(react__WEBPACK_IMPORTED_MODULE_1__[\"Component\"]);\n\nvar keyframes = function keyframes() {\n  var insertable = _emotion_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = Object(_emotion_utils__WEBPACK_IMPORTED_MODULE_3__[\"getRegisteredStyles\"])(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar ClassNames = withEmotionCache(function (props, context) {\n  return Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(ThemeContext.Consumer, null, function (theme) {\n    var hasRendered = false;\n\n    var css = function css() {\n      if (hasRendered && \"development\" !== 'production') {\n        throw new Error('css can only be used during render');\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var serialized = Object(_emotion_serialize__WEBPACK_IMPORTED_MODULE_4__[\"serializeStyles\"])(args, context.registered);\n\n      {\n        Object(_emotion_utils__WEBPACK_IMPORTED_MODULE_3__[\"insertStyles\"])(context, serialized, false);\n      }\n\n      return context.key + \"-\" + serialized.name;\n    };\n\n    var cx = function cx() {\n      if (hasRendered && \"development\" !== 'production') {\n        throw new Error('cx can only be used during render');\n      }\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return merge(context.registered, css, classnames(args));\n    };\n\n    var content = {\n      css: css,\n      cx: cx,\n      theme: theme\n    };\n    var ele = props.children(content);\n    hasRendered = true;\n\n    return ele;\n  });\n});\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@emotion/core/dist/core.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/@emotion/css/dist/css.browser.esm.js":
/*!***********************************************************!*\
  !*** ./node_modules/@emotion/css/dist/css.browser.esm.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_serialize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/serialize */ \"./node_modules/@emotion/serialize/dist/serialize.browser.esm.js\");\n\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return Object(_emotion_serialize__WEBPACK_IMPORTED_MODULE_0__[\"serializeStyles\"])(args);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (css);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vY3NzL2Rpc3QvY3NzLmJyb3dzZXIuZXNtLmpzPzg5ODkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFxRDs7QUFFckQ7QUFDQSxxRUFBcUUsYUFBYTtBQUNsRjtBQUNBOztBQUVBLFNBQVMsMEVBQWU7QUFDeEI7O0FBRWUsa0VBQUcsRUFBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9jc3MvZGlzdC9jc3MuYnJvd3Nlci5lc20uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzZXJpYWxpemVTdHlsZXMgfSBmcm9tICdAZW1vdGlvbi9zZXJpYWxpemUnO1xuXG5mdW5jdGlvbiBjc3MoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICByZXR1cm4gc2VyaWFsaXplU3R5bGVzKGFyZ3MpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjc3M7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@emotion/css/dist/css.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/@emotion/hash/dist/hash.browser.esm.js":
/*!*************************************************************!*\
  !*** ./node_modules/@emotion/hash/dist/hash.browser.esm.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (murmur2);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vaGFzaC9kaXN0L2hhc2guYnJvd3Nlci5lc20uanM/Y2U5NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7O0FBRVo7QUFDQTtBQUNBOztBQUVBLFFBQVEsVUFBVTtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWUsc0VBQU8sRUFBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9oYXNoL2Rpc3QvaGFzaC5icm93c2VyLmVzbS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlICovXG4vLyBJbnNwaXJlZCBieSBodHRwczovL2dpdGh1Yi5jb20vZ2FyeWNvdXJ0L211cm11cmhhc2gtanNcbi8vIFBvcnRlZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9hYXBwbGVieS9zbWhhc2hlci9ibG9iLzYxYTA1MzBmMjgyNzdmMmU4NTBiZmMzOTYwMGNlNjFkMDJiNTE4ZGUvc3JjL011cm11ckhhc2gyLmNwcCNMMzctTDg2XG5mdW5jdGlvbiBtdXJtdXIyKHN0cikge1xuICAvLyAnbScgYW5kICdyJyBhcmUgbWl4aW5nIGNvbnN0YW50cyBnZW5lcmF0ZWQgb2ZmbGluZS5cbiAgLy8gVGhleSdyZSBub3QgcmVhbGx5ICdtYWdpYycsIHRoZXkganVzdCBoYXBwZW4gdG8gd29yayB3ZWxsLlxuICAvLyBjb25zdCBtID0gMHg1YmQxZTk5NTtcbiAgLy8gY29uc3QgciA9IDI0O1xuICAvLyBJbml0aWFsaXplIHRoZSBoYXNoXG4gIHZhciBoID0gMDsgLy8gTWl4IDQgYnl0ZXMgYXQgYSB0aW1lIGludG8gdGhlIGhhc2hcblxuICB2YXIgayxcbiAgICAgIGkgPSAwLFxuICAgICAgbGVuID0gc3RyLmxlbmd0aDtcblxuICBmb3IgKDsgbGVuID49IDQ7ICsraSwgbGVuIC09IDQpIHtcbiAgICBrID0gc3RyLmNoYXJDb2RlQXQoaSkgJiAweGZmIHwgKHN0ci5jaGFyQ29kZUF0KCsraSkgJiAweGZmKSA8PCA4IHwgKHN0ci5jaGFyQ29kZUF0KCsraSkgJiAweGZmKSA8PCAxNiB8IChzdHIuY2hhckNvZGVBdCgrK2kpICYgMHhmZikgPDwgMjQ7XG4gICAgayA9XG4gICAgLyogTWF0aC5pbXVsKGssIG0pOiAqL1xuICAgIChrICYgMHhmZmZmKSAqIDB4NWJkMWU5OTUgKyAoKGsgPj4+IDE2KSAqIDB4ZTk5NSA8PCAxNik7XG4gICAgayBePVxuICAgIC8qIGsgPj4+IHI6ICovXG4gICAgayA+Pj4gMjQ7XG4gICAgaCA9XG4gICAgLyogTWF0aC5pbXVsKGssIG0pOiAqL1xuICAgIChrICYgMHhmZmZmKSAqIDB4NWJkMWU5OTUgKyAoKGsgPj4+IDE2KSAqIDB4ZTk5NSA8PCAxNikgXlxuICAgIC8qIE1hdGguaW11bChoLCBtKTogKi9cbiAgICAoaCAmIDB4ZmZmZikgKiAweDViZDFlOTk1ICsgKChoID4+PiAxNikgKiAweGU5OTUgPDwgMTYpO1xuICB9IC8vIEhhbmRsZSB0aGUgbGFzdCBmZXcgYnl0ZXMgb2YgdGhlIGlucHV0IGFycmF5XG5cblxuICBzd2l0Y2ggKGxlbikge1xuICAgIGNhc2UgMzpcbiAgICAgIGggXj0gKHN0ci5jaGFyQ29kZUF0KGkgKyAyKSAmIDB4ZmYpIDw8IDE2O1xuXG4gICAgY2FzZSAyOlxuICAgICAgaCBePSAoc3RyLmNoYXJDb2RlQXQoaSArIDEpICYgMHhmZikgPDwgODtcblxuICAgIGNhc2UgMTpcbiAgICAgIGggXj0gc3RyLmNoYXJDb2RlQXQoaSkgJiAweGZmO1xuICAgICAgaCA9XG4gICAgICAvKiBNYXRoLmltdWwoaCwgbSk6ICovXG4gICAgICAoaCAmIDB4ZmZmZikgKiAweDViZDFlOTk1ICsgKChoID4+PiAxNikgKiAweGU5OTUgPDwgMTYpO1xuICB9IC8vIERvIGEgZmV3IGZpbmFsIG1peGVzIG9mIHRoZSBoYXNoIHRvIGVuc3VyZSB0aGUgbGFzdCBmZXdcbiAgLy8gYnl0ZXMgYXJlIHdlbGwtaW5jb3Jwb3JhdGVkLlxuXG5cbiAgaCBePSBoID4+PiAxMztcbiAgaCA9XG4gIC8qIE1hdGguaW11bChoLCBtKTogKi9cbiAgKGggJiAweGZmZmYpICogMHg1YmQxZTk5NSArICgoaCA+Pj4gMTYpICogMHhlOTk1IDw8IDE2KTtcbiAgcmV0dXJuICgoaCBeIGggPj4+IDE1KSA+Pj4gMCkudG9TdHJpbmcoMzYpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBtdXJtdXIyO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@emotion/hash/dist/hash.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/@emotion/memoize/dist/memoize.browser.esm.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@emotion/memoize/dist/memoize.browser.esm.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (memoize);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vbWVtb2l6ZS9kaXN0L21lbW9pemUuYnJvd3Nlci5lc20uanM/ZTJhNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVlLHNFQUFPLEVBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vbWVtb2l6ZS9kaXN0L21lbW9pemUuYnJvd3Nlci5lc20uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBtZW1vaXplKGZuKSB7XG4gIHZhciBjYWNoZSA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gKGFyZykge1xuICAgIGlmIChjYWNoZVthcmddID09PSB1bmRlZmluZWQpIGNhY2hlW2FyZ10gPSBmbihhcmcpO1xuICAgIHJldHVybiBjYWNoZVthcmddO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBtZW1vaXplO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@emotion/memoize/dist/memoize.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/@emotion/serialize/dist/serialize.browser.esm.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@emotion/serialize/dist/serialize.browser.esm.js ***!
  \***********************************************************************/
/*! exports provided: serializeStyles */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"serializeStyles\", function() { return serializeStyles; });\n/* harmony import */ var _emotion_hash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/hash */ \"./node_modules/@emotion/hash/dist/hash.browser.esm.js\");\n/* harmony import */ var _emotion_unitless__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/unitless */ \"./node_modules/@emotion/unitless/dist/unitless.browser.esm.js\");\n/* harmony import */ var _emotion_memoize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/memoize */ \"./node_modules/@emotion/memoize/dist/memoize.browser.esm.js\");\n\n\n\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = Object(_emotion_memoize__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (_emotion_unitless__WEBPACK_IMPORTED_MODULE_1__[\"default\"][key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (true) {\n  var contentValuePattern = /(attr|calc|counters?|url)\\(/;\n  var contentValues = ['normal', 'none', 'counter', 'open-quote', 'close-quote', 'no-open-quote', 'no-close-quote', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        console.error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n\n    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n        return _char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nvar shouldWarnAboutInterpolatingClassNameFromCss = true;\n\nfunction handleInterpolation(mergedProps, registered, interpolation, couldBeSelectorInterpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if ( true && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + \";\";\n\n          if ( true && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result, couldBeSelectorInterpolation);\n        } else if (true) {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        break;\n      }\n\n    case 'string':\n      if (true) {\n        var matched = [];\n        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {\n          var fakeVarName = \"animation\" + matched.length;\n          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n          return \"${\" + fakeVarName + \"}\";\n        });\n\n        if (matched.length) {\n          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' + 'Instead of doing this:\\n\\n' + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + '\\n\\nYou should wrap it with `css` like this:\\n\\n' + (\"css`\" + replaced + \"`\"));\n        }\n      }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n\n  if ( true && couldBeSelectorInterpolation && shouldWarnAboutInterpolatingClassNameFromCss && cached !== undefined) {\n    console.error('Interpolating a className from css`` is not recommended and will cause problems with composition.\\n' + 'Interpolating a className from css`` will be completely unsupported in a future major version of Emotion');\n    shouldWarnAboutInterpolatingClassNameFromCss = false;\n  }\n\n  return cached !== undefined && !couldBeSelectorInterpolation ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i], false);\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && \"development\" !== 'production') {\n          throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value, false);\n\n          switch (_key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(_key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if ( true && _key === 'undefined') {\n                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n                }\n\n                string += _key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g;\nvar sourceMapPattern;\n\nif (true) {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings, false);\n  } else {\n    if ( true && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n    }\n\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i], styles.charCodeAt(styles.length - 1) === 46);\n\n    if (stringMode) {\n      if ( true && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (true) {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = Object(_emotion_hash__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(styles) + identifierName;\n\n  if (true) {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor,\n      toString: function toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n      }\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@emotion/serialize/dist/serialize.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/@emotion/sheet/dist/sheet.browser.esm.js":
/*!***************************************************************!*\
  !*** ./node_modules/@emotion/sheet/dist/sheet.browser.esm.js ***!
  \***************************************************************/
/*! exports provided: StyleSheet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StyleSheet\", function() { return StyleSheet; });\n/*\n\nBased off glamor's StyleSheet, thanks Sunil ❤️\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n\n// usage\n\nimport { StyleSheet } from '@emotion/sheet'\n\nlet styleSheet = new StyleSheet({ key: '', container: document.head })\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n// $FlowFixMe\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    // $FlowFixMe\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n  /* istanbul ignore next */\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      // $FlowFixMe\n      return document.styleSheets[i];\n    }\n  }\n}\n\nfunction createStyleElement(options) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', options.key);\n\n  if (options.nonce !== undefined) {\n    tag.setAttribute('nonce', options.nonce);\n  }\n\n  tag.appendChild(document.createTextNode(''));\n  return tag;\n}\n\nvar StyleSheet =\n/*#__PURE__*/\nfunction () {\n  function StyleSheet(options) {\n    this.isSpeedy = options.speedy === undefined ? \"development\" === 'production' : options.speedy;\n    this.tags = [];\n    this.ctr = 0;\n    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets\n\n    this.key = options.key;\n    this.container = options.container;\n    this.before = null;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.insert = function insert(rule) {\n    // the max length is how many rules we have per style tag, it's 65000 in speedy mode\n    // it's 1 in dev because we insert source maps that map a single rule to a location\n    // and you can only have one source map per style tag\n    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {\n      var _tag = createStyleElement(this);\n\n      var before;\n\n      if (this.tags.length === 0) {\n        before = this.before;\n      } else {\n        before = this.tags[this.tags.length - 1].nextSibling;\n      }\n\n      this.container.insertBefore(_tag, before);\n      this.tags.push(_tag);\n    }\n\n    var tag = this.tags[this.tags.length - 1];\n\n    if (this.isSpeedy) {\n      var sheet = sheetForTag(tag);\n\n      try {\n        // this is a really hot path\n        // we check the second character first because having \"i\"\n        // as the second character will happen less often than\n        // having \"@\" as the first character\n        var isImportRule = rule.charCodeAt(1) === 105 && rule.charCodeAt(0) === 64; // this is the ultrafast version, works across browsers\n        // the big drawback is that the css won't be editable in devtools\n\n        sheet.insertRule(rule, // we need to insert @import rules before anything else\n        // otherwise there will be an error\n        // technically this means that the @import rules will\n        // _usually_(not always since there could be multiple style tags)\n        // be the first ones in prod and generally later in dev\n        // this shouldn't really matter in the real world though\n        // @import is generally only used for font faces from google fonts and etc.\n        // so while this could be technically correct then it would be slower and larger\n        // for a tiny bit of correctness that won't matter in the real world\n        isImportRule ? 0 : sheet.cssRules.length);\n      } catch (e) {\n        if (true) {\n          console.warn(\"There was a problem inserting the following rule: \\\"\" + rule + \"\\\"\", e);\n        }\n      }\n    } else {\n      tag.appendChild(document.createTextNode(rule));\n    }\n\n    this.ctr++;\n  };\n\n  _proto.flush = function flush() {\n    // $FlowFixMe\n    this.tags.forEach(function (tag) {\n      return tag.parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0;\n  };\n\n  return StyleSheet;\n}();\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vc2hlZXQvZGlzdC9zaGVldC5icm93c2VyLmVzbS5qcz9jZmQyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBLFFBQVEsYUFBYTs7QUFFckIsaUNBQWlDLG9DQUFvQzs7QUFFckUseUJBQXlCLHVCQUF1QixFQUFFO0FBQ2xEOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDs7O0FBR0EsaUJBQWlCLGlDQUFpQztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsYUFBb0I7QUFDdkU7QUFDQTtBQUNBLCtCQUErQjs7QUFFL0I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUZBQW1GO0FBQ25GOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLFlBQVksSUFBcUM7QUFDakQ7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxDQUFDOztBQUVxQiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9zaGVldC9kaXN0L3NoZWV0LmJyb3dzZXIuZXNtLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcblxuQmFzZWQgb2ZmIGdsYW1vcidzIFN0eWxlU2hlZXQsIHRoYW5rcyBTdW5pbCDinaTvuI9cblxuaGlnaCBwZXJmb3JtYW5jZSBTdHlsZVNoZWV0IGZvciBjc3MtaW4tanMgc3lzdGVtc1xuXG4tIHVzZXMgbXVsdGlwbGUgc3R5bGUgdGFncyBiZWhpbmQgdGhlIHNjZW5lcyBmb3IgbWlsbGlvbnMgb2YgcnVsZXNcbi0gdXNlcyBgaW5zZXJ0UnVsZWAgZm9yIGFwcGVuZGluZyBpbiBwcm9kdWN0aW9uIGZvciAqbXVjaCogZmFzdGVyIHBlcmZvcm1hbmNlXG5cbi8vIHVzYWdlXG5cbmltcG9ydCB7IFN0eWxlU2hlZXQgfSBmcm9tICdAZW1vdGlvbi9zaGVldCdcblxubGV0IHN0eWxlU2hlZXQgPSBuZXcgU3R5bGVTaGVldCh7IGtleTogJycsIGNvbnRhaW5lcjogZG9jdW1lbnQuaGVhZCB9KVxuXG5zdHlsZVNoZWV0Lmluc2VydCgnI2JveCB7IGJvcmRlcjogMXB4IHNvbGlkIHJlZDsgfScpXG4tIGFwcGVuZHMgYSBjc3MgcnVsZSBpbnRvIHRoZSBzdHlsZXNoZWV0XG5cbnN0eWxlU2hlZXQuZmx1c2goKVxuLSBlbXB0aWVzIHRoZSBzdHlsZXNoZWV0IG9mIGFsbCBpdHMgY29udGVudHNcblxuKi9cbi8vICRGbG93Rml4TWVcbmZ1bmN0aW9uIHNoZWV0Rm9yVGFnKHRhZykge1xuICBpZiAodGFnLnNoZWV0KSB7XG4gICAgLy8gJEZsb3dGaXhNZVxuICAgIHJldHVybiB0YWcuc2hlZXQ7XG4gIH0gLy8gdGhpcyB3ZWlyZG5lc3MgYnJvdWdodCB0byB5b3UgYnkgZmlyZWZveFxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGRvY3VtZW50LnN0eWxlU2hlZXRzLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGRvY3VtZW50LnN0eWxlU2hlZXRzW2ldLm93bmVyTm9kZSA9PT0gdGFnKSB7XG4gICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICByZXR1cm4gZG9jdW1lbnQuc3R5bGVTaGVldHNbaV07XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciB0YWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICB0YWcuc2V0QXR0cmlidXRlKCdkYXRhLWVtb3Rpb24nLCBvcHRpb25zLmtleSk7XG5cbiAgaWYgKG9wdGlvbnMubm9uY2UgIT09IHVuZGVmaW5lZCkge1xuICAgIHRhZy5zZXRBdHRyaWJ1dGUoJ25vbmNlJywgb3B0aW9ucy5ub25jZSk7XG4gIH1cblxuICB0YWcuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJycpKTtcbiAgcmV0dXJuIHRhZztcbn1cblxudmFyIFN0eWxlU2hlZXQgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBTdHlsZVNoZWV0KG9wdGlvbnMpIHtcbiAgICB0aGlzLmlzU3BlZWR5ID0gb3B0aW9ucy5zcGVlZHkgPT09IHVuZGVmaW5lZCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgOiBvcHRpb25zLnNwZWVkeTtcbiAgICB0aGlzLnRhZ3MgPSBbXTtcbiAgICB0aGlzLmN0ciA9IDA7XG4gICAgdGhpcy5ub25jZSA9IG9wdGlvbnMubm9uY2U7IC8vIGtleSBpcyB0aGUgdmFsdWUgb2YgdGhlIGRhdGEtZW1vdGlvbiBhdHRyaWJ1dGUsIGl0J3MgdXNlZCB0byBpZGVudGlmeSBkaWZmZXJlbnQgc2hlZXRzXG5cbiAgICB0aGlzLmtleSA9IG9wdGlvbnMua2V5O1xuICAgIHRoaXMuY29udGFpbmVyID0gb3B0aW9ucy5jb250YWluZXI7XG4gICAgdGhpcy5iZWZvcmUgPSBudWxsO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFN0eWxlU2hlZXQucHJvdG90eXBlO1xuXG4gIF9wcm90by5pbnNlcnQgPSBmdW5jdGlvbiBpbnNlcnQocnVsZSkge1xuICAgIC8vIHRoZSBtYXggbGVuZ3RoIGlzIGhvdyBtYW55IHJ1bGVzIHdlIGhhdmUgcGVyIHN0eWxlIHRhZywgaXQncyA2NTAwMCBpbiBzcGVlZHkgbW9kZVxuICAgIC8vIGl0J3MgMSBpbiBkZXYgYmVjYXVzZSB3ZSBpbnNlcnQgc291cmNlIG1hcHMgdGhhdCBtYXAgYSBzaW5nbGUgcnVsZSB0byBhIGxvY2F0aW9uXG4gICAgLy8gYW5kIHlvdSBjYW4gb25seSBoYXZlIG9uZSBzb3VyY2UgbWFwIHBlciBzdHlsZSB0YWdcbiAgICBpZiAodGhpcy5jdHIgJSAodGhpcy5pc1NwZWVkeSA/IDY1MDAwIDogMSkgPT09IDApIHtcbiAgICAgIHZhciBfdGFnID0gY3JlYXRlU3R5bGVFbGVtZW50KHRoaXMpO1xuXG4gICAgICB2YXIgYmVmb3JlO1xuXG4gICAgICBpZiAodGhpcy50YWdzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBiZWZvcmUgPSB0aGlzLmJlZm9yZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGJlZm9yZSA9IHRoaXMudGFnc1t0aGlzLnRhZ3MubGVuZ3RoIC0gMV0ubmV4dFNpYmxpbmc7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuY29udGFpbmVyLmluc2VydEJlZm9yZShfdGFnLCBiZWZvcmUpO1xuICAgICAgdGhpcy50YWdzLnB1c2goX3RhZyk7XG4gICAgfVxuXG4gICAgdmFyIHRhZyA9IHRoaXMudGFnc1t0aGlzLnRhZ3MubGVuZ3RoIC0gMV07XG5cbiAgICBpZiAodGhpcy5pc1NwZWVkeSkge1xuICAgICAgdmFyIHNoZWV0ID0gc2hlZXRGb3JUYWcodGFnKTtcblxuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gdGhpcyBpcyBhIHJlYWxseSBob3QgcGF0aFxuICAgICAgICAvLyB3ZSBjaGVjayB0aGUgc2Vjb25kIGNoYXJhY3RlciBmaXJzdCBiZWNhdXNlIGhhdmluZyBcImlcIlxuICAgICAgICAvLyBhcyB0aGUgc2Vjb25kIGNoYXJhY3RlciB3aWxsIGhhcHBlbiBsZXNzIG9mdGVuIHRoYW5cbiAgICAgICAgLy8gaGF2aW5nIFwiQFwiIGFzIHRoZSBmaXJzdCBjaGFyYWN0ZXJcbiAgICAgICAgdmFyIGlzSW1wb3J0UnVsZSA9IHJ1bGUuY2hhckNvZGVBdCgxKSA9PT0gMTA1ICYmIHJ1bGUuY2hhckNvZGVBdCgwKSA9PT0gNjQ7IC8vIHRoaXMgaXMgdGhlIHVsdHJhZmFzdCB2ZXJzaW9uLCB3b3JrcyBhY3Jvc3MgYnJvd3NlcnNcbiAgICAgICAgLy8gdGhlIGJpZyBkcmF3YmFjayBpcyB0aGF0IHRoZSBjc3Mgd29uJ3QgYmUgZWRpdGFibGUgaW4gZGV2dG9vbHNcblxuICAgICAgICBzaGVldC5pbnNlcnRSdWxlKHJ1bGUsIC8vIHdlIG5lZWQgdG8gaW5zZXJ0IEBpbXBvcnQgcnVsZXMgYmVmb3JlIGFueXRoaW5nIGVsc2VcbiAgICAgICAgLy8gb3RoZXJ3aXNlIHRoZXJlIHdpbGwgYmUgYW4gZXJyb3JcbiAgICAgICAgLy8gdGVjaG5pY2FsbHkgdGhpcyBtZWFucyB0aGF0IHRoZSBAaW1wb3J0IHJ1bGVzIHdpbGxcbiAgICAgICAgLy8gX3VzdWFsbHlfKG5vdCBhbHdheXMgc2luY2UgdGhlcmUgY291bGQgYmUgbXVsdGlwbGUgc3R5bGUgdGFncylcbiAgICAgICAgLy8gYmUgdGhlIGZpcnN0IG9uZXMgaW4gcHJvZCBhbmQgZ2VuZXJhbGx5IGxhdGVyIGluIGRldlxuICAgICAgICAvLyB0aGlzIHNob3VsZG4ndCByZWFsbHkgbWF0dGVyIGluIHRoZSByZWFsIHdvcmxkIHRob3VnaFxuICAgICAgICAvLyBAaW1wb3J0IGlzIGdlbmVyYWxseSBvbmx5IHVzZWQgZm9yIGZvbnQgZmFjZXMgZnJvbSBnb29nbGUgZm9udHMgYW5kIGV0Yy5cbiAgICAgICAgLy8gc28gd2hpbGUgdGhpcyBjb3VsZCBiZSB0ZWNobmljYWxseSBjb3JyZWN0IHRoZW4gaXQgd291bGQgYmUgc2xvd2VyIGFuZCBsYXJnZXJcbiAgICAgICAgLy8gZm9yIGEgdGlueSBiaXQgb2YgY29ycmVjdG5lc3MgdGhhdCB3b24ndCBtYXR0ZXIgaW4gdGhlIHJlYWwgd29ybGRcbiAgICAgICAgaXNJbXBvcnRSdWxlID8gMCA6IHNoZWV0LmNzc1J1bGVzLmxlbmd0aCk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgY29uc29sZS53YXJuKFwiVGhlcmUgd2FzIGEgcHJvYmxlbSBpbnNlcnRpbmcgdGhlIGZvbGxvd2luZyBydWxlOiBcXFwiXCIgKyBydWxlICsgXCJcXFwiXCIsIGUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHRhZy5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShydWxlKSk7XG4gICAgfVxuXG4gICAgdGhpcy5jdHIrKztcbiAgfTtcblxuICBfcHJvdG8uZmx1c2ggPSBmdW5jdGlvbiBmbHVzaCgpIHtcbiAgICAvLyAkRmxvd0ZpeE1lXG4gICAgdGhpcy50YWdzLmZvckVhY2goZnVuY3Rpb24gKHRhZykge1xuICAgICAgcmV0dXJuIHRhZy5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRhZyk7XG4gICAgfSk7XG4gICAgdGhpcy50YWdzID0gW107XG4gICAgdGhpcy5jdHIgPSAwO1xuICB9O1xuXG4gIHJldHVybiBTdHlsZVNoZWV0O1xufSgpO1xuXG5leHBvcnQgeyBTdHlsZVNoZWV0IH07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@emotion/sheet/dist/sheet.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/@emotion/stylis/dist/stylis.browser.esm.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@emotion/stylis/dist/stylis.browser.esm.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction stylis_min (W) {\n  function M(d, c, e, h, a) {\n    for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C; l < B;) {\n      g = e.charCodeAt(l);\n      l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);\n\n      if (0 === b + n + v + m) {\n        if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {\n          switch (g) {\n            case 32:\n            case 9:\n            case 59:\n            case 13:\n            case 10:\n              break;\n\n            default:\n              f += e.charAt(l);\n          }\n\n          g = 59;\n        }\n\n        switch (g) {\n          case 123:\n            f = f.trim();\n            q = f.charCodeAt(0);\n            k = 1;\n\n            for (t = ++l; l < B;) {\n              switch (g = e.charCodeAt(l)) {\n                case 123:\n                  k++;\n                  break;\n\n                case 125:\n                  k--;\n                  break;\n\n                case 47:\n                  switch (g = e.charCodeAt(l + 1)) {\n                    case 42:\n                    case 47:\n                      a: {\n                        for (u = l + 1; u < J; ++u) {\n                          switch (e.charCodeAt(u)) {\n                            case 47:\n                              if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                              break;\n\n                            case 10:\n                              if (47 === g) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                          }\n                        }\n\n                        l = u;\n                      }\n\n                  }\n\n                  break;\n\n                case 91:\n                  g++;\n\n                case 40:\n                  g++;\n\n                case 34:\n                case 39:\n                  for (; l++ < J && e.charCodeAt(l) !== g;) {\n                  }\n\n              }\n\n              if (0 === k) break;\n              l++;\n            }\n\n            k = e.substring(t, l);\n            0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));\n\n            switch (q) {\n              case 64:\n                0 < r && (f = f.replace(N, ''));\n                g = f.charCodeAt(1);\n\n                switch (g) {\n                  case 100:\n                  case 109:\n                  case 115:\n                  case 45:\n                    r = c;\n                    break;\n\n                  default:\n                    r = O;\n                }\n\n                k = M(c, r, k, g, a + 1);\n                t = k.length;\n                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(''), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ''));\n                if (0 < t) switch (g) {\n                  case 115:\n                    f = f.replace(da, ea);\n\n                  case 100:\n                  case 109:\n                  case 45:\n                    k = f + '{' + k + '}';\n                    break;\n\n                  case 107:\n                    f = f.replace(fa, '$1 $2');\n                    k = f + '{' + k + '}';\n                    k = 1 === w || 2 === w && L('@' + k, 3) ? '@-webkit-' + k + '@' + k : '@' + k;\n                    break;\n\n                  default:\n                    k = f + k, 112 === h && (k = (p += k, ''));\n                } else k = '';\n                break;\n\n              default:\n                k = M(c, X(c, f, I), k, h, a + 1);\n            }\n\n            F += k;\n            k = I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n            break;\n\n          case 125:\n          case 59:\n            f = (0 < r ? f.replace(N, '') : f).trim();\n            if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(' ', ':')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\\x00\\x00'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {\n              case 0:\n                break;\n\n              case 64:\n                if (105 === g || 99 === g) {\n                  G += f + e.charAt(l);\n                  break;\n                }\n\n              default:\n                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));\n            }\n            I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n        }\n      }\n\n      switch (g) {\n        case 13:\n        case 10:\n          47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += '\\x00');\n          0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);\n          z = 1;\n          D++;\n          break;\n\n        case 59:\n        case 125:\n          if (0 === b + n + v + m) {\n            z++;\n            break;\n          }\n\n        default:\n          z++;\n          y = e.charAt(l);\n\n          switch (g) {\n            case 9:\n            case 32:\n              if (0 === n + m + b) switch (x) {\n                case 44:\n                case 58:\n                case 9:\n                case 32:\n                  y = '';\n                  break;\n\n                default:\n                  32 !== g && (y = ' ');\n              }\n              break;\n\n            case 0:\n              y = '\\\\0';\n              break;\n\n            case 12:\n              y = '\\\\f';\n              break;\n\n            case 11:\n              y = '\\\\v';\n              break;\n\n            case 38:\n              0 === n + b + m && (r = I = 1, y = '\\f' + y);\n              break;\n\n            case 108:\n              if (0 === n + b + m + E && 0 < u) switch (l - u) {\n                case 2:\n                  112 === x && 58 === e.charCodeAt(l - 3) && (E = x);\n\n                case 8:\n                  111 === K && (E = K);\n              }\n              break;\n\n            case 58:\n              0 === n + b + m && (u = l);\n              break;\n\n            case 44:\n              0 === b + v + n + m && (r = 1, y += '\\r');\n              break;\n\n            case 34:\n            case 39:\n              0 === b && (n = n === g ? 0 : 0 === n ? g : n);\n              break;\n\n            case 91:\n              0 === n + b + v && m++;\n              break;\n\n            case 93:\n              0 === n + b + v && m--;\n              break;\n\n            case 41:\n              0 === n + b + m && v--;\n              break;\n\n            case 40:\n              if (0 === n + b + m) {\n                if (0 === q) switch (2 * x + 3 * K) {\n                  case 533:\n                    break;\n\n                  default:\n                    q = 1;\n                }\n                v++;\n              }\n\n              break;\n\n            case 64:\n              0 === b + v + n + m + u + k && (k = 1);\n              break;\n\n            case 42:\n            case 47:\n              if (!(0 < n + m + v)) switch (b) {\n                case 0:\n                  switch (2 * g + 3 * e.charCodeAt(l + 1)) {\n                    case 235:\n                      b = 47;\n                      break;\n\n                    case 220:\n                      t = l, b = 42;\n                  }\n\n                  break;\n\n                case 42:\n                  47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = '', b = 0);\n              }\n          }\n\n          0 === b && (f += y);\n      }\n\n      K = x;\n      x = g;\n      l++;\n    }\n\n    t = p.length;\n\n    if (0 < t) {\n      r = c;\n      if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G + p + F;\n      p = r.join(',') + '{' + p + '}';\n\n      if (0 !== w * E) {\n        2 !== w || L(p, 2) || (E = 0);\n\n        switch (E) {\n          case 111:\n            p = p.replace(ha, ':-moz-$1') + p;\n            break;\n\n          case 112:\n            p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p;\n        }\n\n        E = 0;\n      }\n    }\n\n    return G + p + F;\n  }\n\n  function X(d, c, e) {\n    var h = c.trim().split(ia);\n    c = h;\n    var a = h.length,\n        m = d.length;\n\n    switch (m) {\n      case 0:\n      case 1:\n        var b = 0;\n\n        for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {\n          c[b] = Z(d, c[b], e).trim();\n        }\n\n        break;\n\n      default:\n        var v = b = 0;\n\n        for (c = []; b < a; ++b) {\n          for (var n = 0; n < m; ++n) {\n            c[v++] = Z(d[n] + ' ', h[b], e).trim();\n          }\n        }\n\n    }\n\n    return c;\n  }\n\n  function Z(d, c, e) {\n    var h = c.charCodeAt(0);\n    33 > h && (h = (c = c.trim()).charCodeAt(0));\n\n    switch (h) {\n      case 38:\n        return c.replace(F, '$1' + d.trim());\n\n      case 58:\n        return d.trim() + c.replace(F, '$1' + d.trim());\n\n      default:\n        if (0 < 1 * e && 0 < c.indexOf('\\f')) return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());\n    }\n\n    return d + c;\n  }\n\n  function P(d, c, e, h) {\n    var a = d + ';',\n        m = 2 * c + 3 * e + 4 * h;\n\n    if (944 === m) {\n      d = a.indexOf(':', 9) + 1;\n      var b = a.substring(d, a.length - 1).trim();\n      b = a.substring(0, d).trim() + b + ';';\n      return 1 === w || 2 === w && L(b, 1) ? '-webkit-' + b + b : b;\n    }\n\n    if (0 === w || 2 === w && !L(a, 1)) return a;\n\n    switch (m) {\n      case 1015:\n        return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;\n\n      case 951:\n        return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;\n\n      case 963:\n        return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;\n\n      case 1009:\n        if (100 !== a.charCodeAt(4)) break;\n\n      case 969:\n      case 942:\n        return '-webkit-' + a + a;\n\n      case 978:\n        return '-webkit-' + a + '-moz-' + a + a;\n\n      case 1019:\n      case 983:\n        return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;\n\n      case 883:\n        if (45 === a.charCodeAt(8)) return '-webkit-' + a + a;\n        if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a;\n        break;\n\n      case 932:\n        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {\n          case 103:\n            return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;\n\n          case 98:\n            return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;\n        }\n        return '-webkit-' + a + '-ms-' + a + a;\n\n      case 964:\n        return '-webkit-' + a + '-ms-flex-' + a + a;\n\n      case 1023:\n        if (99 !== a.charCodeAt(8)) break;\n        b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');\n        return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;\n\n      case 1005:\n        return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;\n\n      case 1e3:\n        b = a.substring(13).trim();\n        c = b.indexOf('-') + 1;\n\n        switch (b.charCodeAt(0) + b.charCodeAt(c)) {\n          case 226:\n            b = a.replace(G, 'tb');\n            break;\n\n          case 232:\n            b = a.replace(G, 'tb-rl');\n            break;\n\n          case 220:\n            b = a.replace(G, 'lr');\n            break;\n\n          default:\n            return a;\n        }\n\n        return '-webkit-' + a + '-ms-' + b + a;\n\n      case 1017:\n        if (-1 === a.indexOf('sticky', 9)) break;\n\n      case 975:\n        c = (a = d).length - 10;\n        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim();\n\n        switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {\n          case 203:\n            if (111 > b.charCodeAt(8)) break;\n\n          case 115:\n            a = a.replace(b, '-webkit-' + b) + ';' + a;\n            break;\n\n          case 207:\n          case 102:\n            a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;\n        }\n\n        return a + ';';\n\n      case 938:\n        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {\n          case 105:\n            return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;\n\n          default:\n            return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a;\n        }\n        break;\n\n      case 973:\n      case 989:\n        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;\n\n      case 931:\n      case 953:\n        if (!0 === la.test(d)) return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0) ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;\n        break;\n\n      case 962:\n        if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)) return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;\n    }\n\n    return a;\n  }\n\n  function L(d, c) {\n    var e = d.indexOf(1 === c ? ':' : '{'),\n        h = d.substring(0, 3 !== c ? e : 10);\n    e = d.substring(e + 1, d.length - 1);\n    return R(2 !== c ? h : h.replace(na, '$1'), e, c);\n  }\n\n  function ea(d, c) {\n    var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));\n    return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';\n  }\n\n  function H(d, c, e, h, a, m, b, v, n, q) {\n    for (var g = 0, x = c, w; g < A; ++g) {\n      switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {\n        case void 0:\n        case !1:\n        case !0:\n        case null:\n          break;\n\n        default:\n          x = w;\n      }\n    }\n\n    if (x !== c) return x;\n  }\n\n  function T(d) {\n    switch (d) {\n      case void 0:\n      case null:\n        A = S.length = 0;\n        break;\n\n      default:\n        if ('function' === typeof d) S[A++] = d;else if ('object' === typeof d) for (var c = 0, e = d.length; c < e; ++c) {\n          T(d[c]);\n        } else Y = !!d | 0;\n    }\n\n    return T;\n  }\n\n  function U(d) {\n    d = d.prefix;\n    void 0 !== d && (R = null, d ? 'function' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);\n    return U;\n  }\n\n  function B(d, c) {\n    var e = d;\n    33 > e.charCodeAt(0) && (e = e.trim());\n    V = e;\n    e = [V];\n\n    if (0 < A) {\n      var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);\n      void 0 !== h && 'string' === typeof h && (c = h);\n    }\n\n    var a = M(O, e, c, 0, 0);\n    0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));\n    V = '';\n    E = 0;\n    z = D = 1;\n    return a;\n  }\n\n  var ca = /^\\0+/g,\n      N = /[\\0\\r\\f]/g,\n      aa = /: */g,\n      ka = /zoo|gra/,\n      ma = /([,: ])(transform)/g,\n      ia = /,\\r+?/g,\n      F = /([\\t\\r\\n ])*\\f?&/g,\n      fa = /@(k\\w+)\\s*(\\S*)\\s*/,\n      Q = /::(place)/g,\n      ha = /:(read-only)/g,\n      G = /[svh]\\w+-[tblr]{2}/,\n      da = /\\(\\s*(.*)\\s*\\)/g,\n      oa = /([\\s\\S]*?);/g,\n      ba = /-self|flex-/g,\n      na = /[^]*?(:[rp][el]a[\\w-]+)[^]*/,\n      la = /stretch|:\\s*\\w+\\-(?:conte|avail)/,\n      ja = /([^-])(image-set\\()/,\n      z = 1,\n      D = 1,\n      E = 0,\n      w = 1,\n      O = [],\n      S = [],\n      A = 0,\n      R = null,\n      Y = 0,\n      V = '';\n  B.use = T;\n  B.set = U;\n  void 0 !== W && U(W);\n  return B;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (stylis_min);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@emotion/stylis/dist/stylis.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/@emotion/unitless/dist/unitless.browser.esm.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@emotion/unitless/dist/unitless.browser.esm.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (unitlessKeys);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vdW5pdGxlc3MvZGlzdC91bml0bGVzcy5icm93c2VyLmVzbS5qcz8zMDRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVlLDJFQUFZLEVBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vdW5pdGxlc3MvZGlzdC91bml0bGVzcy5icm93c2VyLmVzbS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciB1bml0bGVzc0tleXMgPSB7XG4gIGFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiAxLFxuICBib3JkZXJJbWFnZU91dHNldDogMSxcbiAgYm9yZGVySW1hZ2VTbGljZTogMSxcbiAgYm9yZGVySW1hZ2VXaWR0aDogMSxcbiAgYm94RmxleDogMSxcbiAgYm94RmxleEdyb3VwOiAxLFxuICBib3hPcmRpbmFsR3JvdXA6IDEsXG4gIGNvbHVtbkNvdW50OiAxLFxuICBjb2x1bW5zOiAxLFxuICBmbGV4OiAxLFxuICBmbGV4R3JvdzogMSxcbiAgZmxleFBvc2l0aXZlOiAxLFxuICBmbGV4U2hyaW5rOiAxLFxuICBmbGV4TmVnYXRpdmU6IDEsXG4gIGZsZXhPcmRlcjogMSxcbiAgZ3JpZFJvdzogMSxcbiAgZ3JpZFJvd0VuZDogMSxcbiAgZ3JpZFJvd1NwYW46IDEsXG4gIGdyaWRSb3dTdGFydDogMSxcbiAgZ3JpZENvbHVtbjogMSxcbiAgZ3JpZENvbHVtbkVuZDogMSxcbiAgZ3JpZENvbHVtblNwYW46IDEsXG4gIGdyaWRDb2x1bW5TdGFydDogMSxcbiAgbXNHcmlkUm93OiAxLFxuICBtc0dyaWRSb3dTcGFuOiAxLFxuICBtc0dyaWRDb2x1bW46IDEsXG4gIG1zR3JpZENvbHVtblNwYW46IDEsXG4gIGZvbnRXZWlnaHQ6IDEsXG4gIGxpbmVIZWlnaHQ6IDEsXG4gIG9wYWNpdHk6IDEsXG4gIG9yZGVyOiAxLFxuICBvcnBoYW5zOiAxLFxuICB0YWJTaXplOiAxLFxuICB3aWRvd3M6IDEsXG4gIHpJbmRleDogMSxcbiAgem9vbTogMSxcbiAgV2Via2l0TGluZUNsYW1wOiAxLFxuICAvLyBTVkctcmVsYXRlZCBwcm9wZXJ0aWVzXG4gIGZpbGxPcGFjaXR5OiAxLFxuICBmbG9vZE9wYWNpdHk6IDEsXG4gIHN0b3BPcGFjaXR5OiAxLFxuICBzdHJva2VEYXNoYXJyYXk6IDEsXG4gIHN0cm9rZURhc2hvZmZzZXQ6IDEsXG4gIHN0cm9rZU1pdGVybGltaXQ6IDEsXG4gIHN0cm9rZU9wYWNpdHk6IDEsXG4gIHN0cm9rZVdpZHRoOiAxXG59O1xuXG5leHBvcnQgZGVmYXVsdCB1bml0bGVzc0tleXM7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@emotion/unitless/dist/unitless.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/@emotion/utils/dist/utils.browser.esm.js":
/*!***************************************************************!*\
  !*** ./node_modules/@emotion/utils/dist/utils.browser.esm.js ***!
  \***************************************************************/
/*! exports provided: getRegisteredStyles, insertStyles */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getRegisteredStyles\", function() { return getRegisteredStyles; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"insertStyles\", function() { return insertStyles; });\nvar isBrowser = \"object\" !== 'undefined';\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className]);\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false && cache.compat !== undefined) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(\".\" + className, current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vdXRpbHMvZGlzdC91dGlscy5icm93c2VyLmVzbS5qcz80ODgzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFNkMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vdXRpbHMvZGlzdC91dGlscy5icm93c2VyLmVzbS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBpc0Jyb3dzZXIgPSBcIm9iamVjdFwiICE9PSAndW5kZWZpbmVkJztcbmZ1bmN0aW9uIGdldFJlZ2lzdGVyZWRTdHlsZXMocmVnaXN0ZXJlZCwgcmVnaXN0ZXJlZFN0eWxlcywgY2xhc3NOYW1lcykge1xuICB2YXIgcmF3Q2xhc3NOYW1lID0gJyc7XG4gIGNsYXNzTmFtZXMuc3BsaXQoJyAnKS5mb3JFYWNoKGZ1bmN0aW9uIChjbGFzc05hbWUpIHtcbiAgICBpZiAocmVnaXN0ZXJlZFtjbGFzc05hbWVdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJlZ2lzdGVyZWRTdHlsZXMucHVzaChyZWdpc3RlcmVkW2NsYXNzTmFtZV0pO1xuICAgIH0gZWxzZSB7XG4gICAgICByYXdDbGFzc05hbWUgKz0gY2xhc3NOYW1lICsgXCIgXCI7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHJhd0NsYXNzTmFtZTtcbn1cbnZhciBpbnNlcnRTdHlsZXMgPSBmdW5jdGlvbiBpbnNlcnRTdHlsZXMoY2FjaGUsIHNlcmlhbGl6ZWQsIGlzU3RyaW5nVGFnKSB7XG4gIHZhciBjbGFzc05hbWUgPSBjYWNoZS5rZXkgKyBcIi1cIiArIHNlcmlhbGl6ZWQubmFtZTtcblxuICBpZiAoIC8vIHdlIG9ubHkgbmVlZCB0byBhZGQgdGhlIHN0eWxlcyB0byB0aGUgcmVnaXN0ZXJlZCBjYWNoZSBpZiB0aGVcbiAgLy8gY2xhc3MgbmFtZSBjb3VsZCBiZSB1c2VkIGZ1cnRoZXIgZG93blxuICAvLyB0aGUgdHJlZSBidXQgaWYgaXQncyBhIHN0cmluZyB0YWcsIHdlIGtub3cgaXQgd29uJ3RcbiAgLy8gc28gd2UgZG9uJ3QgaGF2ZSB0byBhZGQgaXQgdG8gcmVnaXN0ZXJlZCBjYWNoZS5cbiAgLy8gdGhpcyBpbXByb3ZlcyBtZW1vcnkgdXNhZ2Ugc2luY2Ugd2UgY2FuIGF2b2lkIHN0b3JpbmcgdGhlIHdob2xlIHN0eWxlIHN0cmluZ1xuICAoaXNTdHJpbmdUYWcgPT09IGZhbHNlIHx8IC8vIHdlIG5lZWQgdG8gYWx3YXlzIHN0b3JlIGl0IGlmIHdlJ3JlIGluIGNvbXBhdCBtb2RlIGFuZFxuICAvLyBpbiBub2RlIHNpbmNlIGVtb3Rpb24tc2VydmVyIHJlbGllcyBvbiB3aGV0aGVyIGEgc3R5bGUgaXMgaW5cbiAgLy8gdGhlIHJlZ2lzdGVyZWQgY2FjaGUgdG8ga25vdyB3aGV0aGVyIGEgc3R5bGUgaXMgZ2xvYmFsIG9yIG5vdFxuICAvLyBhbHNvLCBub3RlIHRoYXQgdGhpcyBjaGVjayB3aWxsIGJlIGRlYWQgY29kZSBlbGltaW5hdGVkIGluIHRoZSBicm93c2VyXG4gIGlzQnJvd3NlciA9PT0gZmFsc2UgJiYgY2FjaGUuY29tcGF0ICE9PSB1bmRlZmluZWQpICYmIGNhY2hlLnJlZ2lzdGVyZWRbY2xhc3NOYW1lXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgY2FjaGUucmVnaXN0ZXJlZFtjbGFzc05hbWVdID0gc2VyaWFsaXplZC5zdHlsZXM7XG4gIH1cblxuICBpZiAoY2FjaGUuaW5zZXJ0ZWRbc2VyaWFsaXplZC5uYW1lXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdmFyIGN1cnJlbnQgPSBzZXJpYWxpemVkO1xuXG4gICAgZG8ge1xuICAgICAgdmFyIG1heWJlU3R5bGVzID0gY2FjaGUuaW5zZXJ0KFwiLlwiICsgY2xhc3NOYW1lLCBjdXJyZW50LCBjYWNoZS5zaGVldCwgdHJ1ZSk7XG5cbiAgICAgIGN1cnJlbnQgPSBjdXJyZW50Lm5leHQ7XG4gICAgfSB3aGlsZSAoY3VycmVudCAhPT0gdW5kZWZpbmVkKTtcbiAgfVxufTtcblxuZXhwb3J0IHsgZ2V0UmVnaXN0ZXJlZFN0eWxlcywgaW5zZXJ0U3R5bGVzIH07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@emotion/utils/dist/utils.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/@emotion/weak-memoize/dist/weak-memoize.browser.esm.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@emotion/weak-memoize/dist/weak-memoize.browser.esm.js ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar weakMemoize = function weakMemoize(func) {\n  // $FlowFixMe flow doesn't include all non-primitive types as allowed for weakmaps\n  var cache = new WeakMap();\n  return function (arg) {\n    if (cache.has(arg)) {\n      // $FlowFixMe\n      return cache.get(arg);\n    }\n\n    var ret = func(arg);\n    cache.set(arg, ret);\n    return ret;\n  };\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (weakMemoize);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vd2Vhay1tZW1vaXplL2Rpc3Qvd2Vhay1tZW1vaXplLmJyb3dzZXIuZXNtLmpzPzgxMTEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWUsMEVBQVcsRUFBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AZW1vdGlvbi93ZWFrLW1lbW9pemUvZGlzdC93ZWFrLW1lbW9pemUuYnJvd3Nlci5lc20uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgd2Vha01lbW9pemUgPSBmdW5jdGlvbiB3ZWFrTWVtb2l6ZShmdW5jKSB7XG4gIC8vICRGbG93Rml4TWUgZmxvdyBkb2Vzbid0IGluY2x1ZGUgYWxsIG5vbi1wcmltaXRpdmUgdHlwZXMgYXMgYWxsb3dlZCBmb3Igd2Vha21hcHNcbiAgdmFyIGNhY2hlID0gbmV3IFdlYWtNYXAoKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIChhcmcpIHtcbiAgICBpZiAoY2FjaGUuaGFzKGFyZykpIHtcbiAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgIHJldHVybiBjYWNoZS5nZXQoYXJnKTtcbiAgICB9XG5cbiAgICB2YXIgcmV0ID0gZnVuYyhhcmcpO1xuICAgIGNhY2hlLnNldChhcmcsIHJldCk7XG4gICAgcmV0dXJuIHJldDtcbiAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHdlYWtNZW1vaXplO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@emotion/weak-memoize/dist/weak-memoize.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/@firebase/app/dist/index.cjs.js":
/*!******************************************************!*\
  !*** ./node_modules/@firebase/app/dist/index.cjs.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib = __webpack_require__(/*! tslib */ \"./node_modules/@firebase/app/node_modules/tslib/tslib.es6.js\");\nvar util = __webpack_require__(/*! @firebase/util */ \"./node_modules/@firebase/util/dist/index.cjs.js\");\nvar component = __webpack_require__(/*! @firebase/component */ \"./node_modules/@firebase/component/dist/index.cjs.js\");\nvar logger$1 = __webpack_require__(/*! @firebase/logger */ \"./node_modules/@firebase/logger/dist/index.esm.js\");\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERRORS = (_a = {},\r\n    _a[\"no-app\" /* NO_APP */] = \"No Firebase App '{$appName}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    _a[\"bad-app-name\" /* BAD_APP_NAME */] = \"Illegal App name: '{$appName}\",\r\n    _a[\"duplicate-app\" /* DUPLICATE_APP */] = \"Firebase App named '{$appName}' already exists\",\r\n    _a[\"app-deleted\" /* APP_DELETED */] = \"Firebase App named '{$appName}' already deleted\",\r\n    _a[\"invalid-app-argument\" /* INVALID_APP_ARGUMENT */] = 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.',\r\n    _a[\"invalid-log-argument\" /* INVALID_LOG_ARGUMENT */] = 'First argument to `onLog` must be null or a function.',\r\n    _a);\r\nvar ERROR_FACTORY = new util.ErrorFactory('app', 'Firebase', ERRORS);\n\nvar name$1 = \"@firebase/app\";\nvar version = \"0.6.4\";\n\nvar name$2 = \"@firebase/analytics\";\n\nvar name$3 = \"@firebase/auth\";\n\nvar name$4 = \"@firebase/database\";\n\nvar name$5 = \"@firebase/functions\";\n\nvar name$6 = \"@firebase/installations\";\n\nvar name$7 = \"@firebase/messaging\";\n\nvar name$8 = \"@firebase/performance\";\n\nvar name$9 = \"@firebase/remote-config\";\n\nvar name$a = \"@firebase/storage\";\n\nvar name$b = \"@firebase/firestore\";\n\nvar name$c = \"firebase-wrapper\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a$1;\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nvar PLATFORM_LOG_STRING = (_a$1 = {},\r\n    _a$1[name$1] = 'fire-core',\r\n    _a$1[name$2] = 'fire-analytics',\r\n    _a$1[name$3] = 'fire-auth',\r\n    _a$1[name$4] = 'fire-rtdb',\r\n    _a$1[name$5] = 'fire-fn',\r\n    _a$1[name$6] = 'fire-iid',\r\n    _a$1[name$7] = 'fire-fcm',\r\n    _a$1[name$8] = 'fire-perf',\r\n    _a$1[name$9] = 'fire-rc',\r\n    _a$1[name$a] = 'fire-gcs',\r\n    _a$1[name$b] = 'fire-fst',\r\n    _a$1['fire-js'] = 'fire-js',\r\n    _a$1[name$c] = 'fire-js-all',\r\n    _a$1);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logger = new logger$1.Logger('@firebase/app');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n */\r\nvar FirebaseAppImpl = /** @class */ (function () {\r\n    function FirebaseAppImpl(options, config, firebase_) {\r\n        var e_1, _a;\r\n        var _this = this;\r\n        this.firebase_ = firebase_;\r\n        this.isDeleted_ = false;\r\n        this.name_ = config.name;\r\n        this.automaticDataCollectionEnabled_ =\r\n            config.automaticDataCollectionEnabled || false;\r\n        this.options_ = util.deepCopy(options);\r\n        this.container = new component.ComponentContainer(config.name);\r\n        // add itself to container\r\n        this._addComponent(new component.Component('app', function () { return _this; }, \"PUBLIC\" /* PUBLIC */));\r\n        try {\r\n            // populate ComponentContainer with existing components\r\n            for (var _b = tslib.__values(this.firebase_.INTERNAL.components.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var component$1 = _c.value;\r\n                this._addComponent(component$1);\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    }\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"automaticDataCollectionEnabled\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.automaticDataCollectionEnabled_;\r\n        },\r\n        set: function (val) {\r\n            this.checkDestroyed_();\r\n            this.automaticDataCollectionEnabled_ = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.options_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FirebaseAppImpl.prototype.delete = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.checkDestroyed_();\r\n            resolve();\r\n        })\r\n            .then(function () {\r\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\r\n            return Promise.all(_this.container.getProviders().map(function (provider) { return provider.delete(); }));\r\n        })\r\n            .then(function () {\r\n            _this.isDeleted_ = true;\r\n        });\r\n    };\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage and functions are the only ones that are leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\r\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\r\n        this.checkDestroyed_();\r\n        // getImmediate will always succeed because _getService is only called for registered components.\r\n        return this.container.getProvider(name).getImmediate({\r\n            identifier: instanceIdentifier\r\n        });\r\n    };\r\n    /**\r\n     * Remove a service instance from the cache, so we will create a new instance for this service\r\n     * when people try to get this service again.\r\n     *\r\n     * NOTE: currently only firestore is using this functionality to support firestore shutdown.\r\n     *\r\n     * @param name The service name\r\n     * @param instanceIdentifier instance identifier in case multiple instances are allowed\r\n     * @internal\r\n     */\r\n    FirebaseAppImpl.prototype._removeServiceInstance = function (name, instanceIdentifier) {\r\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        this.container.getProvider(name).clearInstance(instanceIdentifier);\r\n    };\r\n    /**\r\n     * @param component the component being added to this app's container\r\n     */\r\n    FirebaseAppImpl.prototype._addComponent = function (component) {\r\n        try {\r\n            this.container.addComponent(component);\r\n        }\r\n        catch (e) {\r\n            logger.debug(\"Component \" + component.name + \" failed to register with FirebaseApp \" + this.name, e);\r\n        }\r\n    };\r\n    FirebaseAppImpl.prototype._addOrOverwriteComponent = function (component) {\r\n        this.container.addOrOverwriteComponent(component);\r\n    };\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\r\n        if (this.isDeleted_) {\r\n            throw ERROR_FACTORY.create(\"app-deleted\" /* APP_DELETED */, { appName: this.name_ });\r\n        }\r\n    };\r\n    return FirebaseAppImpl;\r\n}());\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n    FirebaseAppImpl.prototype.delete ||\r\n    console.log('dc');\n\nvar version$1 = \"7.14.5\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Because auth can't share code with other components, we attach the utility functions\r\n * in an internal namespace to share code.\r\n * This function return a firebase namespace object without\r\n * any utility functions, so it can be shared between the regular firebaseNamespace and\r\n * the lite version.\r\n */\r\nfunction createFirebaseNamespaceCore(firebaseAppImpl) {\r\n    var apps = {};\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    var components = new Map();\r\n    // A namespace is a plain JavaScript Object.\r\n    var namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        // @ts-ignore\r\n        __esModule: true,\r\n        initializeApp: initializeApp,\r\n        // @ts-ignore\r\n        app: app,\r\n        registerVersion: registerVersion,\r\n        setLogLevel: logger$1.setLogLevel,\r\n        onLog: onLog,\r\n        // @ts-ignore\r\n        apps: null,\r\n        SDK_VERSION: version$1,\r\n        INTERNAL: {\r\n            registerComponent: registerComponent,\r\n            removeApp: removeApp,\r\n            components: components,\r\n            useAsService: useAsService\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    namespace['default'] = namespace;\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        delete apps[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || DEFAULT_ENTRY_NAME;\r\n        if (!util.contains(apps, name)) {\r\n            throw ERROR_FACTORY.create(\"no-app\" /* NO_APP */, { appName: name });\r\n        }\r\n        return apps[name];\r\n    }\r\n    // @ts-ignore\r\n    app['App'] = firebaseAppImpl;\r\n    function initializeApp(options, rawConfig) {\r\n        if (rawConfig === void 0) { rawConfig = {}; }\r\n        if (typeof rawConfig !== 'object' || rawConfig === null) {\r\n            var name_1 = rawConfig;\r\n            rawConfig = { name: name_1 };\r\n        }\r\n        var config = rawConfig;\r\n        if (config.name === undefined) {\r\n            config.name = DEFAULT_ENTRY_NAME;\r\n        }\r\n        var name = config.name;\r\n        if (typeof name !== 'string' || !name) {\r\n            throw ERROR_FACTORY.create(\"bad-app-name\" /* BAD_APP_NAME */, {\r\n                appName: String(name)\r\n            });\r\n        }\r\n        if (util.contains(apps, name)) {\r\n            throw ERROR_FACTORY.create(\"duplicate-app\" /* DUPLICATE_APP */, { appName: name });\r\n        }\r\n        var app = new firebaseAppImpl(options, config, namespace);\r\n        apps[name] = app;\r\n        return app;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps).map(function (name) { return apps[name]; });\r\n    }\r\n    function registerComponent(component) {\r\n        var e_1, _a;\r\n        var componentName = component.name;\r\n        if (components.has(componentName)) {\r\n            logger.debug(\"There were multiple attempts to register component \" + componentName + \".\");\r\n            return component.type === \"PUBLIC\" /* PUBLIC */\r\n                ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    namespace[componentName]\r\n                : null;\r\n        }\r\n        components.set(componentName, component);\r\n        // create service namespace for public components\r\n        if (component.type === \"PUBLIC\" /* PUBLIC */) {\r\n            // The Service namespace is an accessor function ...\r\n            var serviceNamespace = function (appArg) {\r\n                if (appArg === void 0) { appArg = app(); }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                if (typeof appArg[componentName] !== 'function') {\r\n                    // Invalid argument.\r\n                    // This happens in the following case: firebase.storage('gs:/')\r\n                    throw ERROR_FACTORY.create(\"invalid-app-argument\" /* INVALID_APP_ARGUMENT */, {\r\n                        appName: componentName\r\n                    });\r\n                }\r\n                // Forward service instance lookup to the FirebaseApp.\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                return appArg[componentName]();\r\n            };\r\n            // ... and a container for service-level properties.\r\n            if (component.serviceProps !== undefined) {\r\n                util.deepExtend(serviceNamespace, component.serviceProps);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            namespace[componentName] = serviceNamespace;\r\n            // Patch the FirebaseAppImpl prototype\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            firebaseAppImpl.prototype[componentName] =\r\n                // TODO: The eslint disable can be removed and the 'ignoreRestArgs'\r\n                // option added to the no-explicit-any rule when ESlint releases it.\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                function () {\r\n                    var args = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        args[_i] = arguments[_i];\r\n                    }\r\n                    var serviceFxn = this._getService.bind(this, componentName);\r\n                    return serviceFxn.apply(this, component.multipleInstances ? args : []);\r\n                };\r\n        }\r\n        try {\r\n            // add the component to existing app instances\r\n            for (var _b = tslib.__values(Object.keys(apps)), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var appName = _c.value;\r\n                apps[appName]._addComponent(component);\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return component.type === \"PUBLIC\" /* PUBLIC */\r\n            ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                namespace[componentName]\r\n            : null;\r\n    }\r\n    function registerVersion(libraryKeyOrName, version, variant) {\r\n        var _a;\r\n        // TODO: We can use this check to whitelist strings when/if we set up\r\n        // a good whitelist system.\r\n        var library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\r\n        if (variant) {\r\n            library += \"-\" + variant;\r\n        }\r\n        var libraryMismatch = library.match(/\\s|\\//);\r\n        var versionMismatch = version.match(/\\s|\\//);\r\n        if (libraryMismatch || versionMismatch) {\r\n            var warning = [\r\n                \"Unable to register library \\\"\" + library + \"\\\" with version \\\"\" + version + \"\\\":\"\r\n            ];\r\n            if (libraryMismatch) {\r\n                warning.push(\"library name \\\"\" + library + \"\\\" contains illegal characters (whitespace or \\\"/\\\")\");\r\n            }\r\n            if (libraryMismatch && versionMismatch) {\r\n                warning.push('and');\r\n            }\r\n            if (versionMismatch) {\r\n                warning.push(\"version name \\\"\" + version + \"\\\" contains illegal characters (whitespace or \\\"/\\\")\");\r\n            }\r\n            logger.warn(warning.join(' '));\r\n            return;\r\n        }\r\n        registerComponent(new component.Component(library + \"-version\", function () { return ({ library: library, version: version }); }, \"VERSION\" /* VERSION */));\r\n    }\r\n    function onLog(logCallback, options) {\r\n        if (logCallback !== null && typeof logCallback !== 'function') {\r\n            throw ERROR_FACTORY.create(\"invalid-log-argument\" /* INVALID_LOG_ARGUMENT */, {\r\n                appName: name\r\n            });\r\n        }\r\n        logger$1.setUserLogHandler(logCallback, options);\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        var useService = name;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    var namespace = createFirebaseNamespaceCore(FirebaseAppImpl);\r\n    namespace.INTERNAL = tslib.__assign(tslib.__assign({}, namespace.INTERNAL), { createFirebaseNamespace: createFirebaseNamespace,\r\n        extendNamespace: extendNamespace,\r\n        createSubscribe: util.createSubscribe,\r\n        ErrorFactory: util.ErrorFactory,\r\n        deepExtend: util.deepExtend });\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        util.deepExtend(namespace, props);\r\n    }\r\n    return namespace;\r\n}\r\nvar firebase = createFirebaseNamespace();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PlatformLoggerService = /** @class */ (function () {\r\n    function PlatformLoggerService(container) {\r\n        this.container = container;\r\n    }\r\n    // In initial implementation, this will be called by installations on\r\n    // auth token refresh, and installations will send this string.\r\n    PlatformLoggerService.prototype.getPlatformInfoString = function () {\r\n        var providers = this.container.getProviders();\r\n        // Loop through providers and get library/version pairs from any that are\r\n        // version components.\r\n        return providers\r\n            .map(function (provider) {\r\n            if (isVersionServiceProvider(provider)) {\r\n                var service = provider.getImmediate();\r\n                return service.library + \"/\" + service.version;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        })\r\n            .filter(function (logString) { return logString; })\r\n            .join(' ');\r\n    };\r\n    return PlatformLoggerService;\r\n}());\r\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\r\nfunction isVersionServiceProvider(provider) {\r\n    var component = provider.getComponent();\r\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* VERSION */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(firebase, variant) {\r\n    firebase.INTERNAL.registerComponent(new component.Component('platform-logger', function (container) { return new PlatformLoggerService(container); }, \"PRIVATE\" /* PRIVATE */));\r\n    // Register `app` package.\r\n    firebase.registerVersion(name$1, version, variant);\r\n    // Register platform SDK identifier (no version).\r\n    firebase.registerVersion('fire-js', '');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Firebase Lite detection test\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nif (util.isBrowser() && self.firebase !== undefined) {\r\n    logger.warn(\"\\n    Warning: Firebase is already defined in the global scope. Please make sure\\n    Firebase library is only loaded once.\\n  \");\r\n    // eslint-disable-next-line\r\n    var sdkVersion = self.firebase.SDK_VERSION;\r\n    if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {\r\n        logger.warn(\"\\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\\n    \");\r\n    }\r\n}\r\nvar initializeApp = firebase.initializeApp;\r\n// TODO: This disable can be removed and the 'ignoreRestArgs' option added to\r\n// the no-explicit-any rule when ESlint releases it.\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nfirebase.initializeApp = function () {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    // Environment check before initializing app\r\n    // Do the check in initializeApp, so people have a chance to disable it by setting logLevel\r\n    // in @firebase/logger\r\n    if (util.isNode()) {\r\n        logger.warn(\"\\n      Warning: This is a browser-targeted Firebase bundle but it appears it is being\\n      run in a Node environment.  If running in a Node environment, make sure you\\n      are using the bundle specified by the \\\"main\\\" field in package.json.\\n      \\n      If you are using Webpack, you can specify \\\"main\\\" as the first item in\\n      \\\"resolve.mainFields\\\":\\n      https://webpack.js.org/configuration/resolve/#resolvemainfields\\n      \\n      If using Rollup, use the rollup-plugin-node-resolve plugin and specify \\\"main\\\"\\n      as the first item in \\\"mainFields\\\", e.g. ['main', 'module'].\\n      https://github.com/rollup/rollup-plugin-node-resolve\\n      \");\r\n    }\r\n    return initializeApp.apply(undefined, args);\r\n};\r\nvar firebase$1 = firebase;\r\nregisterCoreComponents(firebase$1);\n\nexports.default = firebase$1;\nexports.firebase = firebase$1;\n//# sourceMappingURL=index.cjs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@firebase/app/dist/index.cjs.js\n");

/***/ }),

/***/ "./node_modules/@firebase/app/node_modules/tslib/tslib.es6.js":
/*!********************************************************************!*\
  !*** ./node_modules/@firebase/app/node_modules/tslib/tslib.es6.js ***!
  \********************************************************************/
/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __exportStar, __values, __read, __spread, __spreadArrays, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault, __classPrivateFieldGet, __classPrivateFieldSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__extends\", function() { return __extends; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__assign\", function() { return __assign; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__rest\", function() { return __rest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__decorate\", function() { return __decorate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__param\", function() { return __param; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__metadata\", function() { return __metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__awaiter\", function() { return __awaiter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__generator\", function() { return __generator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__exportStar\", function() { return __exportStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__values\", function() { return __values; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__read\", function() { return __read; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__spread\", function() { return __spread; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__spreadArrays\", function() { return __spreadArrays; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__await\", function() { return __await; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncGenerator\", function() { return __asyncGenerator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncDelegator\", function() { return __asyncDelegator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncValues\", function() { return __asyncValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__makeTemplateObject\", function() { return __makeTemplateObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importStar\", function() { return __importStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importDefault\", function() { return __importDefault; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__classPrivateFieldGet\", function() { return __classPrivateFieldGet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__classPrivateFieldSet\", function() { return __classPrivateFieldSet; });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@firebase/app/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "./node_modules/@firebase/auth/dist/auth.esm.js":
/*!******************************************************!*\
  !*** ./node_modules/@firebase/auth/dist/auth.esm.js ***!
  \******************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var _firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/app */ \"./node_modules/@firebase/app/dist/index.cjs.js\");\n/* harmony import */ var _firebase_app__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_firebase_app__WEBPACK_IMPORTED_MODULE_0__);\n(function() {/*\n\n Copyright The Closure Library Authors.\n SPDX-License-Identifier: Apache-2.0\n*/\nvar k,aa=\"function\"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)};function ba(a){a=[\"object\"==typeof window&&window,\"object\"==typeof self&&self,\"object\"==typeof global&&global,a];for(var b=0;b<a.length;++b){var c=a[b];if(c&&c.Math==Math)return c}return globalThis}var ca=ba(this);\nfunction da(a,b){if(b){var c=ca;a=a.split(\".\");for(var d=0;d<a.length-1;d++){var e=a[d];e in c||(c[e]={});c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&aa(c,a,{configurable:!0,writable:!0,value:b})}}function ea(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}}function fa(a){var b=\"undefined\"!=typeof Symbol&&Symbol.iterator&&a[Symbol.iterator];return b?b.call(a):{next:ea(a)}}\nda(\"Promise\",function(a){function b(g){this.b=0;this.c=void 0;this.a=[];var h=this.f();try{g(h.resolve,h.reject)}catch(m){h.reject(m)}}function c(){this.a=null}function d(g){return g instanceof b?g:new b(function(h){h(g)})}if(a)return a;c.prototype.b=function(g){if(null==this.a){this.a=[];var h=this;this.c(function(){h.g()})}this.a.push(g)};var e=ca.setTimeout;c.prototype.c=function(g){e(g,0)};c.prototype.g=function(){for(;this.a&&this.a.length;){var g=this.a;this.a=[];for(var h=0;h<g.length;++h){var m=\ng[h];g[h]=null;try{m()}catch(p){this.f(p)}}}this.a=null};c.prototype.f=function(g){this.c(function(){throw g;})};b.prototype.f=function(){function g(p){return function(v){m||(m=!0,p.call(h,v))}}var h=this,m=!1;return{resolve:g(this.m),reject:g(this.g)}};b.prototype.m=function(g){if(g===this)this.g(new TypeError(\"A Promise cannot resolve to itself\"));else if(g instanceof b)this.s(g);else{a:switch(typeof g){case \"object\":var h=null!=g;break a;case \"function\":h=!0;break a;default:h=!1}h?this.u(g):this.h(g)}};\nb.prototype.u=function(g){var h=void 0;try{h=g.then}catch(m){this.g(m);return}\"function\"==typeof h?this.w(h,g):this.h(g)};b.prototype.g=function(g){this.i(2,g)};b.prototype.h=function(g){this.i(1,g)};b.prototype.i=function(g,h){if(0!=this.b)throw Error(\"Cannot settle(\"+g+\", \"+h+\"): Promise already settled in state\"+this.b);this.b=g;this.c=h;this.l()};b.prototype.l=function(){if(null!=this.a){for(var g=0;g<this.a.length;++g)f.b(this.a[g]);this.a=null}};var f=new c;b.prototype.s=function(g){var h=this.f();\ng.Oa(h.resolve,h.reject)};b.prototype.w=function(g,h){var m=this.f();try{g.call(h,m.resolve,m.reject)}catch(p){m.reject(p)}};b.prototype.then=function(g,h){function m(A,Q){return\"function\"==typeof A?function(xa){try{p(A(xa))}catch(ud){v(ud)}}:Q}var p,v,C=new b(function(A,Q){p=A;v=Q});this.Oa(m(g,p),m(h,v));return C};b.prototype.catch=function(g){return this.then(void 0,g)};b.prototype.Oa=function(g,h){function m(){switch(p.b){case 1:g(p.c);break;case 2:h(p.c);break;default:throw Error(\"Unexpected state: \"+\np.b);}}var p=this;null==this.a?f.b(m):this.a.push(m)};b.resolve=d;b.reject=function(g){return new b(function(h,m){m(g)})};b.race=function(g){return new b(function(h,m){for(var p=fa(g),v=p.next();!v.done;v=p.next())d(v.value).Oa(h,m)})};b.all=function(g){var h=fa(g),m=h.next();return m.done?d([]):new b(function(p,v){function C(xa){return function(ud){A[xa]=ud;Q--;0==Q&&p(A)}}var A=[],Q=0;do A.push(void 0),Q++,d(m.value).Oa(C(A.length-1),v),m=h.next();while(!m.done)})};return b});\nvar ha=ha||{},l=this||self,ia=/^[\\w+/_-]+[=]{0,2}$/,ja=null;function ka(){}\nfunction la(a){var b=typeof a;if(\"object\"==b)if(a){if(a instanceof Array)return\"array\";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if(\"[object Window]\"==c)return\"object\";if(\"[object Array]\"==c||\"number\"==typeof a.length&&\"undefined\"!=typeof a.splice&&\"undefined\"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable(\"splice\"))return\"array\";if(\"[object Function]\"==c||\"undefined\"!=typeof a.call&&\"undefined\"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable(\"call\"))return\"function\"}else return\"null\";\nelse if(\"function\"==b&&\"undefined\"==typeof a.call)return\"object\";return b}function ma(a){var b=la(a);return\"array\"==b||\"object\"==b&&\"number\"==typeof a.length}function n(a){return\"function\"==la(a)}function q(a){var b=typeof a;return\"object\"==b&&null!=a||\"function\"==b}function na(a){return Object.prototype.hasOwnProperty.call(a,oa)&&a[oa]||(a[oa]=++pa)}var oa=\"closure_uid_\"+(1E9*Math.random()>>>0),pa=0;function qa(a,b,c){return a.call.apply(a.bind,arguments)}\nfunction ra(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var e=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(e,d);return a.apply(b,e)}}return function(){return a.apply(b,arguments)}}function r(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?r=qa:r=ra;return r.apply(null,arguments)}\nfunction sa(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var d=c.slice();d.push.apply(d,arguments);return a.apply(this,d)}}var ta=Date.now||function(){return+new Date};function t(a,b){function c(){}c.prototype=b.prototype;a.Za=b.prototype;a.prototype=new c;a.prototype.constructor=a};/*\n\n Copyright 2017 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nfunction u(a,b,c){this.code=ua+a;this.message=b||va[a]||\"\";this.a=c||null}t(u,Error);u.prototype.v=function(){var a={code:this.code,message:this.message};this.a&&(a.serverResponse=this.a);return a};u.prototype.toJSON=function(){return this.v()};function wa(a){var b=a&&a.code;return b?new u(b.substring(ua.length),a.message,a.serverResponse):null}\nvar ua=\"auth/\",va={\"admin-restricted-operation\":\"This operation is restricted to administrators only.\",\"argument-error\":\"\",\"app-not-authorized\":\"This app, identified by the domain where it's hosted, is not authorized to use Firebase Authentication with the provided API key. Review your key configuration in the Google API console.\",\"app-not-installed\":\"The requested mobile application corresponding to the identifier (Android package name or iOS bundle ID) provided is not installed on this device.\",\n\"captcha-check-failed\":\"The reCAPTCHA response token provided is either invalid, expired, already used or the domain associated with it does not match the list of whitelisted domains.\",\"code-expired\":\"The SMS code has expired. Please re-send the verification code to try again.\",\"cordova-not-ready\":\"Cordova framework is not ready.\",\"cors-unsupported\":\"This browser is not supported.\",\"credential-already-in-use\":\"This credential is already associated with a different user account.\",\"custom-token-mismatch\":\"The custom token corresponds to a different audience.\",\n\"requires-recent-login\":\"This operation is sensitive and requires recent authentication. Log in again before retrying this request.\",\"dynamic-link-not-activated\":\"Please activate Dynamic Links in the Firebase Console and agree to the terms and conditions.\",\"email-change-needs-verification\":\"Multi-factor users must always have a verified email.\",\"email-already-in-use\":\"The email address is already in use by another account.\",\"expired-action-code\":\"The action code has expired. \",\"cancelled-popup-request\":\"This operation has been cancelled due to another conflicting popup being opened.\",\n\"internal-error\":\"An internal error has occurred.\",\"invalid-app-credential\":\"The phone verification request contains an invalid application verifier. The reCAPTCHA token response is either invalid or expired.\",\"invalid-app-id\":\"The mobile app identifier is not registed for the current project.\",\"invalid-user-token\":\"This user's credential isn't valid for this project. This can happen if the user's token has been tampered with, or if the user isn't for the project associated with this API key.\",\"invalid-auth-event\":\"An internal error has occurred.\",\n\"invalid-verification-code\":\"The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure use the verification code provided by the user.\",\"invalid-continue-uri\":\"The continue URL provided in the request is invalid.\",\"invalid-cordova-configuration\":\"The following Cordova plugins must be installed to enable OAuth sign-in: cordova-plugin-buildinfo, cordova-universal-links-plugin, cordova-plugin-browsertab, cordova-plugin-inappbrowser and cordova-plugin-customurlscheme.\",\n\"invalid-custom-token\":\"The custom token format is incorrect. Please check the documentation.\",\"invalid-dynamic-link-domain\":\"The provided dynamic link domain is not configured or authorized for the current project.\",\"invalid-email\":\"The email address is badly formatted.\",\"invalid-api-key\":\"Your API key is invalid, please check you have copied it correctly.\",\"invalid-cert-hash\":\"The SHA-1 certificate hash provided is invalid.\",\"invalid-credential\":\"The supplied auth credential is malformed or has expired.\",\n\"invalid-message-payload\":\"The email template corresponding to this action contains invalid characters in its message. Please fix by going to the Auth email templates section in the Firebase Console.\",\"invalid-multi-factor-session\":\"The request does not contain a valid proof of first factor successful sign-in.\",\"invalid-oauth-provider\":\"EmailAuthProvider is not supported for this operation. This operation only supports OAuth providers.\",\"invalid-oauth-client-id\":\"The OAuth client ID provided is either invalid or does not match the specified API key.\",\n\"unauthorized-domain\":\"This domain is not authorized for OAuth operations for your Firebase project. Edit the list of authorized domains from the Firebase console.\",\"invalid-action-code\":\"The action code is invalid. This can happen if the code is malformed, expired, or has already been used.\",\"wrong-password\":\"The password is invalid or the user does not have a password.\",\"invalid-persistence-type\":\"The specified persistence type is invalid. It can only be local, session or none.\",\"invalid-phone-number\":\"The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format. E.164 phone numbers are written in the format [+][country code][subscriber number including area code].\",\n\"invalid-provider-id\":\"The specified provider ID is invalid.\",\"invalid-recipient-email\":\"The email corresponding to this action failed to send as the provided recipient email address is invalid.\",\"invalid-sender\":\"The email template corresponding to this action contains an invalid sender email or name. Please fix by going to the Auth email templates section in the Firebase Console.\",\"invalid-verification-id\":\"The verification ID used to create the phone auth credential is invalid.\",\"invalid-tenant-id\":\"The Auth instance's tenant ID is invalid.\",\n\"multi-factor-info-not-found\":\"The user does not have a second factor matching the identifier provided.\",\"multi-factor-auth-required\":\"Proof of ownership of a second factor is required to complete sign-in.\",\"missing-android-pkg-name\":\"An Android Package Name must be provided if the Android App is required to be installed.\",\"auth-domain-config-required\":\"Be sure to include authDomain when calling firebase.initializeApp(), by following the instructions in the Firebase console.\",\"missing-app-credential\":\"The phone verification request is missing an application verifier assertion. A reCAPTCHA response token needs to be provided.\",\n\"missing-verification-code\":\"The phone auth credential was created with an empty SMS verification code.\",\"missing-continue-uri\":\"A continue URL must be provided in the request.\",\"missing-iframe-start\":\"An internal error has occurred.\",\"missing-ios-bundle-id\":\"An iOS Bundle ID must be provided if an App Store ID is provided.\",\"missing-multi-factor-info\":\"No second factor identifier is provided.\",\"missing-multi-factor-session\":\"The request is missing proof of first factor successful sign-in.\",\"missing-or-invalid-nonce\":\"The request does not contain a valid nonce. This can occur if the SHA-256 hash of the provided raw nonce does not match the hashed nonce in the ID token payload.\",\n\"missing-phone-number\":\"To send verification codes, provide a phone number for the recipient.\",\"missing-verification-id\":\"The phone auth credential was created with an empty verification ID.\",\"app-deleted\":\"This instance of FirebaseApp has been deleted.\",\"account-exists-with-different-credential\":\"An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this email address.\",\"network-request-failed\":\"A network error (such as timeout, interrupted connection or unreachable host) has occurred.\",\n\"no-auth-event\":\"An internal error has occurred.\",\"no-such-provider\":\"User was not linked to an account with the given provider.\",\"null-user\":\"A null user object was provided as the argument for an operation which requires a non-null user object.\",\"operation-not-allowed\":\"The given sign-in provider is disabled for this Firebase project. Enable it in the Firebase console, under the sign-in method tab of the Auth section.\",\"operation-not-supported-in-this-environment\":'This operation is not supported in the environment this application is running on. \"location.protocol\" must be http, https or chrome-extension and web storage must be enabled.',\n\"popup-blocked\":\"Unable to establish a connection with the popup. It may have been blocked by the browser.\",\"popup-closed-by-user\":\"The popup has been closed by the user before finalizing the operation.\",\"provider-already-linked\":\"User can only be linked to one identity for the given provider.\",\"quota-exceeded\":\"The project's quota for this operation has been exceeded.\",\"redirect-cancelled-by-user\":\"The redirect operation has been cancelled by the user before finalizing.\",\"redirect-operation-pending\":\"A redirect sign-in operation is already pending.\",\n\"rejected-credential\":\"The request contains malformed or mismatching credentials.\",\"second-factor-already-in-use\":\"The second factor is already enrolled on this account.\",\"maximum-second-factor-count-exceeded\":\"The maximum allowed number of second factors on a user has been exceeded.\",\"tenant-id-mismatch\":\"The provided tenant ID does not match the Auth instance's tenant ID\",timeout:\"The operation has timed out.\",\"user-token-expired\":\"The user's credential is no longer valid. The user must sign in again.\",\n\"too-many-requests\":\"We have blocked all requests from this device due to unusual activity. Try again later.\",\"unauthorized-continue-uri\":\"The domain of the continue URL is not whitelisted.  Please whitelist the domain in the Firebase console.\",\"unsupported-first-factor\":\"Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.\",\"unsupported-persistence-type\":\"The current environment does not support the specified persistence type.\",\"unsupported-tenant-operation\":\"This operation is not supported in a multi-tenant context.\",\n\"unverified-email\":\"The operation requires a verified email.\",\"user-cancelled\":\"The user did not grant your application the permissions it requested.\",\"user-not-found\":\"There is no user record corresponding to this identifier. The user may have been deleted.\",\"user-disabled\":\"The user account has been disabled by an administrator.\",\"user-mismatch\":\"The supplied credentials do not correspond to the previously signed in user.\",\"user-signed-out\":\"\",\"weak-password\":\"The password must be 6 characters long or more.\",\n\"web-storage-unsupported\":\"This browser is not supported or 3rd party cookies and data may be disabled.\"};var ya={hd:{Ra:\"https://staging-identitytoolkit.sandbox.googleapis.com/identitytoolkit/v3/relyingparty/\",Xa:\"https://staging-securetoken.sandbox.googleapis.com/v1/token\",Ua:\"https://staging-identitytoolkit.sandbox.googleapis.com/v2/\",id:\"b\"},pd:{Ra:\"https://www.googleapis.com/identitytoolkit/v3/relyingparty/\",Xa:\"https://securetoken.googleapis.com/v1/token\",Ua:\"https://identitytoolkit.googleapis.com/v2/\",id:\"p\"},rd:{Ra:\"https://staging-www.sandbox.googleapis.com/identitytoolkit/v3/relyingparty/\",\nXa:\"https://staging-securetoken.sandbox.googleapis.com/v1/token\",Ua:\"https://staging-identitytoolkit.sandbox.googleapis.com/v2/\",id:\"s\"},sd:{Ra:\"https://www-googleapis-test.sandbox.google.com/identitytoolkit/v3/relyingparty/\",Xa:\"https://test-securetoken.sandbox.googleapis.com/v1/token\",Ua:\"https://test-identitytoolkit.sandbox.googleapis.com/v2/\",id:\"t\"}};\nfunction za(a){for(var b in ya)if(ya[b].id===a)return a=ya[b],{firebaseEndpoint:a.Ra,secureTokenEndpoint:a.Xa,identityPlatformEndpoint:a.Ua};return null}var Aa;Aa=za(\"__EID__\")?\"__EID__\":void 0;function Ba(a){if(!a)return!1;try{return!!a.$goog_Thenable}catch(b){return!1}};function w(a){if(Error.captureStackTrace)Error.captureStackTrace(this,w);else{var b=Error().stack;b&&(this.stack=b)}a&&(this.message=String(a))}t(w,Error);w.prototype.name=\"CustomError\";function Ca(a,b){a=a.split(\"%s\");for(var c=\"\",d=a.length-1,e=0;e<d;e++)c+=a[e]+(e<b.length?b[e]:\"%s\");w.call(this,c+a[d])}t(Ca,w);Ca.prototype.name=\"AssertionError\";function Da(a,b){throw new Ca(\"Failure\"+(a?\": \"+a:\"\"),Array.prototype.slice.call(arguments,1));};function Ea(a,b){this.c=a;this.f=b;this.b=0;this.a=null}Ea.prototype.get=function(){if(0<this.b){this.b--;var a=this.a;this.a=a.next;a.next=null}else a=this.c();return a};function Fa(a,b){a.f(b);100>a.b&&(a.b++,b.next=a.a,a.a=b)};function Ga(){this.b=this.a=null}var Ia=new Ea(function(){return new Ha},function(a){a.reset()});Ga.prototype.add=function(a,b){var c=Ia.get();c.set(a,b);this.b?this.b.next=c:this.a=c;this.b=c};function Ja(){var a=Ka,b=null;a.a&&(b=a.a,a.a=a.a.next,a.a||(a.b=null),b.next=null);return b}function Ha(){this.next=this.b=this.a=null}Ha.prototype.set=function(a,b){this.a=a;this.b=b;this.next=null};Ha.prototype.reset=function(){this.next=this.b=this.a=null};var La=Array.prototype.indexOf?function(a,b){return Array.prototype.indexOf.call(a,b,void 0)}:function(a,b){if(\"string\"===typeof a)return\"string\"!==typeof b||1!=b.length?-1:a.indexOf(b,0);for(var c=0;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1},x=Array.prototype.forEach?function(a,b,c){Array.prototype.forEach.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=\"string\"===typeof a?a.split(\"\"):a,f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)};\nfunction Ma(a,b){for(var c=\"string\"===typeof a?a.split(\"\"):a,d=a.length-1;0<=d;--d)d in c&&b.call(void 0,c[d],d,a)}\nvar Na=Array.prototype.filter?function(a,b){return Array.prototype.filter.call(a,b,void 0)}:function(a,b){for(var c=a.length,d=[],e=0,f=\"string\"===typeof a?a.split(\"\"):a,g=0;g<c;g++)if(g in f){var h=f[g];b.call(void 0,h,g,a)&&(d[e++]=h)}return d},Oa=Array.prototype.map?function(a,b){return Array.prototype.map.call(a,b,void 0)}:function(a,b){for(var c=a.length,d=Array(c),e=\"string\"===typeof a?a.split(\"\"):a,f=0;f<c;f++)f in e&&(d[f]=b.call(void 0,e[f],f,a));return d},Pa=Array.prototype.some?function(a,\nb){return Array.prototype.some.call(a,b,void 0)}:function(a,b){for(var c=a.length,d=\"string\"===typeof a?a.split(\"\"):a,e=0;e<c;e++)if(e in d&&b.call(void 0,d[e],e,a))return!0;return!1};function Qa(a){a:{var b=Ra;for(var c=a.length,d=\"string\"===typeof a?a.split(\"\"):a,e=0;e<c;e++)if(e in d&&b.call(void 0,d[e],e,a)){b=e;break a}b=-1}return 0>b?null:\"string\"===typeof a?a.charAt(b):a[b]}function Sa(a,b){return 0<=La(a,b)}\nfunction Ta(a,b){b=La(a,b);var c;(c=0<=b)&&Array.prototype.splice.call(a,b,1);return c}function Ua(a,b){var c=0;Ma(a,function(d,e){b.call(void 0,d,e,a)&&1==Array.prototype.splice.call(a,e,1).length&&c++})}function Va(a){return Array.prototype.concat.apply([],arguments)}function Wa(a){var b=a.length;if(0<b){for(var c=Array(b),d=0;d<b;d++)c[d]=a[d];return c}return[]};var Xa=String.prototype.trim?function(a){return a.trim()}:function(a){return/^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(a)[1]},Ya=/&/g,Za=/</g,$a=/>/g,ab=/\"/g,bb=/'/g,cb=/\\x00/g,db=/[\\x00&<>\"']/;function y(a,b){return-1!=a.indexOf(b)}function eb(a,b){return a<b?-1:a>b?1:0};var fb;a:{var gb=l.navigator;if(gb){var hb=gb.userAgent;if(hb){fb=hb;break a}}fb=\"\"}function z(a){return y(fb,a)};function ib(a,b){for(var c in a)b.call(void 0,a[c],c,a)}function jb(a){for(var b in a)return!1;return!0}function kb(a){var b={},c;for(c in a)b[c]=a[c];return b}var lb=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");function B(a,b){for(var c,d,e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(var f=0;f<lb.length;f++)c=lb[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}};function mb(a,b){a:{try{var c=a&&a.ownerDocument,d=c&&(c.defaultView||c.parentWindow);d=d||l;if(d.Element&&d.Location){var e=d;break a}}catch(g){}e=null}if(e&&\"undefined\"!=typeof e[b]&&(!a||!(a instanceof e[b])&&(a instanceof e.Location||a instanceof e.Element))){if(q(a))try{var f=a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a)}catch(g){f=\"<object could not be stringified>\"}else f=void 0===a?\"undefined\":null===a?\"null\":typeof a;Da(\"Argument is not a %s (or a non-Element, non-Location mock); got: %s\",\nb,f)}};function nb(a,b){this.a=a===ob&&b||\"\";this.b=pb}nb.prototype.ra=!0;nb.prototype.qa=function(){return this.a};nb.prototype.toString=function(){return\"Const{\"+this.a+\"}\"};function qb(a){if(a instanceof nb&&a.constructor===nb&&a.b===pb)return a.a;Da(\"expected object of type Const, got '\"+a+\"'\");return\"type_error:Const\"}var pb={},ob={},rb=new nb(ob,\"\");function sb(a,b){this.a=a===tb&&b||\"\";this.b=ub}sb.prototype.ra=!0;sb.prototype.qa=function(){return this.a.toString()};sb.prototype.toString=function(){return\"TrustedResourceUrl{\"+this.a+\"}\"};function vb(a){if(a instanceof sb&&a.constructor===sb&&a.b===ub)return a.a;Da(\"expected object of type TrustedResourceUrl, got '\"+a+\"' of type \"+la(a));return\"type_error:TrustedResourceUrl\"}\nfunction wb(a,b){var c=qb(a);if(!xb.test(c))throw Error(\"Invalid TrustedResourceUrl format: \"+c);a=c.replace(yb,function(d,e){if(!Object.prototype.hasOwnProperty.call(b,e))throw Error('Found marker, \"'+e+'\", in format string, \"'+c+'\", but no valid label mapping found in args: '+JSON.stringify(b));d=b[e];return d instanceof nb?qb(d):encodeURIComponent(String(d))});return new sb(tb,a)}\nvar yb=/%{(\\w+)}/g,xb=/^((https:)?\\/\\/[0-9a-z.:[\\]-]+\\/|\\/[^/\\\\]|[^:/\\\\%]+\\/|[^:/\\\\%]*[?#]|about:blank#)/i,ub={},tb={};function zb(a,b){this.a=a===Ab&&b||\"\";this.b=Bb}zb.prototype.ra=!0;zb.prototype.qa=function(){return this.a.toString()};zb.prototype.toString=function(){return\"SafeUrl{\"+this.a+\"}\"};function Cb(a){if(a instanceof zb&&a.constructor===zb&&a.b===Bb)return a.a;Da(\"expected object of type SafeUrl, got '\"+a+\"' of type \"+la(a));return\"type_error:SafeUrl\"}var Db=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;\nfunction Eb(a){if(a instanceof zb)return a;a=\"object\"==typeof a&&a.ra?a.qa():String(a);Db.test(a)||(a=\"about:invalid#zClosurez\");return new zb(Ab,a)}var Bb={},Ab={};function Fb(){this.a=\"\";this.b=Gb}Fb.prototype.ra=!0;Fb.prototype.qa=function(){return this.a.toString()};Fb.prototype.toString=function(){return\"SafeHtml{\"+this.a+\"}\"};function Hb(a){if(a instanceof Fb&&a.constructor===Fb&&a.b===Gb)return a.a;Da(\"expected object of type SafeHtml, got '\"+a+\"' of type \"+la(a));return\"type_error:SafeHtml\"}var Gb={};function Ib(a){var b=new Fb;b.a=a;return b}Ib(\"<!DOCTYPE html>\");var Jb=Ib(\"\");Ib(\"<br>\");function Kb(a){var b=new sb(tb,qb(rb));mb(a,\"HTMLIFrameElement\");a.src=vb(b).toString()}function Lb(a,b){mb(a,\"HTMLScriptElement\");a.src=vb(b);if(null===ja)b:{b=l.document;if((b=b.querySelector&&b.querySelector(\"script[nonce]\"))&&(b=b.nonce||b.getAttribute(\"nonce\"))&&ia.test(b)){ja=b;break b}ja=\"\"}b=ja;b&&a.setAttribute(\"nonce\",b)};function Mb(a,b){for(var c=a.split(\"%s\"),d=\"\",e=Array.prototype.slice.call(arguments,1);e.length&&1<c.length;)d+=c.shift()+e.shift();return d+c.join(\"%s\")}function Nb(a){db.test(a)&&(-1!=a.indexOf(\"&\")&&(a=a.replace(Ya,\"&amp;\")),-1!=a.indexOf(\"<\")&&(a=a.replace(Za,\"&lt;\")),-1!=a.indexOf(\">\")&&(a=a.replace($a,\"&gt;\")),-1!=a.indexOf('\"')&&(a=a.replace(ab,\"&quot;\")),-1!=a.indexOf(\"'\")&&(a=a.replace(bb,\"&#39;\")),-1!=a.indexOf(\"\\x00\")&&(a=a.replace(cb,\"&#0;\")));return a};function Ob(a){Ob[\" \"](a);return a}Ob[\" \"]=ka;function Pb(a,b){var c=Qb;return Object.prototype.hasOwnProperty.call(c,a)?c[a]:c[a]=b(a)};var Rb=z(\"Opera\"),Sb=z(\"Trident\")||z(\"MSIE\"),Tb=z(\"Edge\"),Ub=Tb||Sb,Vb=z(\"Gecko\")&&!(y(fb.toLowerCase(),\"webkit\")&&!z(\"Edge\"))&&!(z(\"Trident\")||z(\"MSIE\"))&&!z(\"Edge\"),Wb=y(fb.toLowerCase(),\"webkit\")&&!z(\"Edge\");function Xb(){var a=l.document;return a?a.documentMode:void 0}var Yb;\na:{var Zb=\"\",$b=function(){var a=fb;if(Vb)return/rv:([^\\);]+)(\\)|;)/.exec(a);if(Tb)return/Edge\\/([\\d\\.]+)/.exec(a);if(Sb)return/\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(a);if(Wb)return/WebKit\\/(\\S+)/.exec(a);if(Rb)return/(?:Version)[ \\/]?(\\S+)/.exec(a)}();$b&&(Zb=$b?$b[1]:\"\");if(Sb){var ac=Xb();if(null!=ac&&ac>parseFloat(Zb)){Yb=String(ac);break a}}Yb=Zb}var Qb={};\nfunction bc(a){return Pb(a,function(){for(var b=0,c=Xa(String(Yb)).split(\".\"),d=Xa(String(a)).split(\".\"),e=Math.max(c.length,d.length),f=0;0==b&&f<e;f++){var g=c[f]||\"\",h=d[f]||\"\";do{g=/(\\d*)(\\D*)(.*)/.exec(g)||[\"\",\"\",\"\",\"\"];h=/(\\d*)(\\D*)(.*)/.exec(h)||[\"\",\"\",\"\",\"\"];if(0==g[0].length&&0==h[0].length)break;b=eb(0==g[1].length?0:parseInt(g[1],10),0==h[1].length?0:parseInt(h[1],10))||eb(0==g[2].length,0==h[2].length)||eb(g[2],h[2]);g=g[3];h=h[3]}while(0==b)}return 0<=b})}var cc;\ncc=l.document&&Sb?Xb():void 0;try{(new self.OffscreenCanvas(0,0)).getContext(\"2d\")}catch(a){}var dc=!Sb||9<=Number(cc);function ec(a){var b=document;return\"string\"===typeof a?b.getElementById(a):a}function fc(a,b){ib(b,function(c,d){c&&\"object\"==typeof c&&c.ra&&(c=c.qa());\"style\"==d?a.style.cssText=c:\"class\"==d?a.className=c:\"for\"==d?a.htmlFor=c:gc.hasOwnProperty(d)?a.setAttribute(gc[d],c):0==d.lastIndexOf(\"aria-\",0)||0==d.lastIndexOf(\"data-\",0)?a.setAttribute(d,c):a[d]=c})}\nvar gc={cellpadding:\"cellPadding\",cellspacing:\"cellSpacing\",colspan:\"colSpan\",frameborder:\"frameBorder\",height:\"height\",maxlength:\"maxLength\",nonce:\"nonce\",role:\"role\",rowspan:\"rowSpan\",type:\"type\",usemap:\"useMap\",valign:\"vAlign\",width:\"width\"};\nfunction hc(a,b,c){var d=arguments,e=document,f=String(d[0]),g=d[1];if(!dc&&g&&(g.name||g.type)){f=[\"<\",f];g.name&&f.push(' name=\"',Nb(g.name),'\"');if(g.type){f.push(' type=\"',Nb(g.type),'\"');var h={};B(h,g);delete h.type;g=h}f.push(\">\");f=f.join(\"\")}f=ic(e,f);g&&(\"string\"===typeof g?f.className=g:Array.isArray(g)?f.className=g.join(\" \"):fc(f,g));2<d.length&&jc(e,f,d);return f}\nfunction jc(a,b,c){function d(g){g&&b.appendChild(\"string\"===typeof g?a.createTextNode(g):g)}for(var e=2;e<c.length;e++){var f=c[e];!ma(f)||q(f)&&0<f.nodeType?d(f):x(kc(f)?Wa(f):f,d)}}function ic(a,b){b=String(b);\"application/xhtml+xml\"===a.contentType&&(b=b.toLowerCase());return a.createElement(b)}function kc(a){if(a&&\"number\"==typeof a.length){if(q(a))return\"function\"==typeof a.item||\"string\"==typeof a.item;if(n(a))return\"function\"==typeof a.item}return!1};function lc(a){l.setTimeout(function(){throw a;},0)}var mc;\nfunction nc(){var a=l.MessageChannel;\"undefined\"===typeof a&&\"undefined\"!==typeof window&&window.postMessage&&window.addEventListener&&!z(\"Presto\")&&(a=function(){var e=ic(document,\"IFRAME\");e.style.display=\"none\";Kb(e);document.documentElement.appendChild(e);var f=e.contentWindow;e=f.document;e.open();e.write(Hb(Jb));e.close();var g=\"callImmediate\"+Math.random(),h=\"file:\"==f.location.protocol?\"*\":f.location.protocol+\"//\"+f.location.host;e=r(function(m){if((\"*\"==h||m.origin==h)&&m.data==g)this.port1.onmessage()},\nthis);f.addEventListener(\"message\",e,!1);this.port1={};this.port2={postMessage:function(){f.postMessage(g,h)}}});if(\"undefined\"!==typeof a&&!z(\"Trident\")&&!z(\"MSIE\")){var b=new a,c={},d=c;b.port1.onmessage=function(){if(void 0!==c.next){c=c.next;var e=c.Db;c.Db=null;e()}};return function(e){d.next={Db:e};d=d.next;b.port2.postMessage(0)}}return function(e){l.setTimeout(e,0)}};function oc(a,b){pc||qc();rc||(pc(),rc=!0);Ka.add(a,b)}var pc;function qc(){if(l.Promise&&l.Promise.resolve){var a=l.Promise.resolve(void 0);pc=function(){a.then(sc)}}else pc=function(){var b=sc;!n(l.setImmediate)||l.Window&&l.Window.prototype&&!z(\"Edge\")&&l.Window.prototype.setImmediate==l.setImmediate?(mc||(mc=nc()),mc(b)):l.setImmediate(b)}}var rc=!1,Ka=new Ga;function sc(){for(var a;a=Ja();){try{a.a.call(a.b)}catch(b){lc(b)}Fa(Ia,a)}rc=!1};function D(a,b){this.a=tc;this.i=void 0;this.f=this.b=this.c=null;this.g=this.h=!1;if(a!=ka)try{var c=this;a.call(b,function(d){uc(c,vc,d)},function(d){if(!(d instanceof wc))try{if(d instanceof Error)throw d;throw Error(\"Promise rejected.\");}catch(e){}uc(c,xc,d)})}catch(d){uc(this,xc,d)}}var tc=0,vc=2,xc=3;function yc(){this.next=this.f=this.b=this.g=this.a=null;this.c=!1}yc.prototype.reset=function(){this.f=this.b=this.g=this.a=null;this.c=!1};var zc=new Ea(function(){return new yc},function(a){a.reset()});\nfunction Ac(a,b,c){var d=zc.get();d.g=a;d.b=b;d.f=c;return d}function E(a){if(a instanceof D)return a;var b=new D(ka);uc(b,vc,a);return b}function F(a){return new D(function(b,c){c(a)})}function Bc(a,b,c){Cc(a,b,c,null)||oc(sa(b,a))}function Dc(a){return new D(function(b,c){var d=a.length,e=[];if(d)for(var f=function(p,v){d--;e[p]=v;0==d&&b(e)},g=function(p){c(p)},h=0,m;h<a.length;h++)m=a[h],Bc(m,sa(f,h),g);else b(e)})}\nfunction Ec(a){return new D(function(b){var c=a.length,d=[];if(c)for(var e=function(h,m,p){c--;d[h]=m?{Mb:!0,value:p}:{Mb:!1,reason:p};0==c&&b(d)},f=0,g;f<a.length;f++)g=a[f],Bc(g,sa(e,f,!0),sa(e,f,!1));else b(d)})}D.prototype.then=function(a,b,c){return Fc(this,n(a)?a:null,n(b)?b:null,c)};D.prototype.$goog_Thenable=!0;k=D.prototype;k.ma=function(a,b){a=Ac(a,a,b);a.c=!0;Gc(this,a);return this};k.o=function(a,b){return Fc(this,null,a,b)};\nk.cancel=function(a){if(this.a==tc){var b=new wc(a);oc(function(){Hc(this,b)},this)}};function Hc(a,b){if(a.a==tc)if(a.c){var c=a.c;if(c.b){for(var d=0,e=null,f=null,g=c.b;g&&(g.c||(d++,g.a==a&&(e=g),!(e&&1<d)));g=g.next)e||(f=g);e&&(c.a==tc&&1==d?Hc(c,b):(f?(d=f,d.next==c.f&&(c.f=d),d.next=d.next.next):Ic(c),Jc(c,e,xc,b)))}a.c=null}else uc(a,xc,b)}function Gc(a,b){a.b||a.a!=vc&&a.a!=xc||Kc(a);a.f?a.f.next=b:a.b=b;a.f=b}\nfunction Fc(a,b,c,d){var e=Ac(null,null,null);e.a=new D(function(f,g){e.g=b?function(h){try{var m=b.call(d,h);f(m)}catch(p){g(p)}}:f;e.b=c?function(h){try{var m=c.call(d,h);void 0===m&&h instanceof wc?g(h):f(m)}catch(p){g(p)}}:g});e.a.c=a;Gc(a,e);return e.a}k.Yc=function(a){this.a=tc;uc(this,vc,a)};k.Zc=function(a){this.a=tc;uc(this,xc,a)};\nfunction uc(a,b,c){a.a==tc&&(a===c&&(b=xc,c=new TypeError(\"Promise cannot resolve to itself\")),a.a=1,Cc(c,a.Yc,a.Zc,a)||(a.i=c,a.a=b,a.c=null,Kc(a),b!=xc||c instanceof wc||Lc(a,c)))}function Cc(a,b,c,d){if(a instanceof D)return Gc(a,Ac(b||ka,c||null,d)),!0;if(Ba(a))return a.then(b,c,d),!0;if(q(a))try{var e=a.then;if(n(e))return Mc(a,e,b,c,d),!0}catch(f){return c.call(d,f),!0}return!1}\nfunction Mc(a,b,c,d,e){function f(m){h||(h=!0,d.call(e,m))}function g(m){h||(h=!0,c.call(e,m))}var h=!1;try{b.call(a,g,f)}catch(m){f(m)}}function Kc(a){a.h||(a.h=!0,oc(a.ec,a))}function Ic(a){var b=null;a.b&&(b=a.b,a.b=b.next,b.next=null);a.b||(a.f=null);return b}k.ec=function(){for(var a;a=Ic(this);)Jc(this,a,this.a,this.i);this.h=!1};\nfunction Jc(a,b,c,d){if(c==xc&&b.b&&!b.c)for(;a&&a.g;a=a.c)a.g=!1;if(b.a)b.a.c=null,Nc(b,c,d);else try{b.c?b.g.call(b.f):Nc(b,c,d)}catch(e){Oc.call(null,e)}Fa(zc,b)}function Nc(a,b,c){b==vc?a.g.call(a.f,c):a.b&&a.b.call(a.f,c)}function Lc(a,b){a.g=!0;oc(function(){a.g&&Oc.call(null,b)})}var Oc=lc;function wc(a){w.call(this,a)}t(wc,w);wc.prototype.name=\"cancel\";function Pc(){0!=Qc&&(Rc[na(this)]=this);this.wa=this.wa;this.na=this.na}var Qc=0,Rc={};Pc.prototype.wa=!1;function Sc(a){if(!a.wa&&(a.wa=!0,a.Ba(),0!=Qc)){var b=na(a);if(0!=Qc&&a.na&&0<a.na.length)throw Error(a+\" did not empty its onDisposeCallbacks queue. This probably means it overrode dispose() or disposeInternal() without calling the superclass' method.\");delete Rc[b]}}Pc.prototype.Ba=function(){if(this.na)for(;this.na.length;)this.na.shift()()};var Tc=Object.freeze||function(a){return a};var Uc=!Sb||9<=Number(cc),Vc=Sb&&!bc(\"9\"),Wc=function(){if(!l.addEventListener||!Object.defineProperty)return!1;var a=!1,b=Object.defineProperty({},\"passive\",{get:function(){a=!0}});try{l.addEventListener(\"test\",ka,b),l.removeEventListener(\"test\",ka,b)}catch(c){}return a}();function Xc(a,b){this.type=a;this.b=this.target=b;this.defaultPrevented=!1}Xc.prototype.preventDefault=function(){this.defaultPrevented=!0};function Yc(a,b){Xc.call(this,a?a.type:\"\");this.relatedTarget=this.b=this.target=null;this.button=this.screenY=this.screenX=this.clientY=this.clientX=0;this.key=\"\";this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1;this.pointerId=0;this.pointerType=\"\";this.a=null;if(a){var c=this.type=a.type,d=a.changedTouches&&a.changedTouches.length?a.changedTouches[0]:null;this.target=a.target||a.srcElement;this.b=b;if(b=a.relatedTarget){if(Vb){a:{try{Ob(b.nodeName);var e=!0;break a}catch(f){}e=!1}e||(b=null)}}else\"mouseover\"==\nc?b=a.fromElement:\"mouseout\"==c&&(b=a.toElement);this.relatedTarget=b;d?(this.clientX=void 0!==d.clientX?d.clientX:d.pageX,this.clientY=void 0!==d.clientY?d.clientY:d.pageY,this.screenX=d.screenX||0,this.screenY=d.screenY||0):(this.clientX=void 0!==a.clientX?a.clientX:a.pageX,this.clientY=void 0!==a.clientY?a.clientY:a.pageY,this.screenX=a.screenX||0,this.screenY=a.screenY||0);this.button=a.button;this.key=a.key||\"\";this.ctrlKey=a.ctrlKey;this.altKey=a.altKey;this.shiftKey=a.shiftKey;this.metaKey=\na.metaKey;this.pointerId=a.pointerId||0;this.pointerType=\"string\"===typeof a.pointerType?a.pointerType:Zc[a.pointerType]||\"\";this.a=a;a.defaultPrevented&&this.preventDefault()}}t(Yc,Xc);var Zc=Tc({2:\"touch\",3:\"pen\",4:\"mouse\"});Yc.prototype.preventDefault=function(){Yc.Za.preventDefault.call(this);var a=this.a;if(a.preventDefault)a.preventDefault();else if(a.returnValue=!1,Vc)try{if(a.ctrlKey||112<=a.keyCode&&123>=a.keyCode)a.keyCode=-1}catch(b){}};Yc.prototype.f=function(){return this.a};var $c=\"closure_listenable_\"+(1E6*Math.random()|0),ad=0;function bd(a,b,c,d,e){this.listener=a;this.proxy=null;this.src=b;this.type=c;this.capture=!!d;this.Ta=e;this.key=++ad;this.ua=this.Na=!1}function cd(a){a.ua=!0;a.listener=null;a.proxy=null;a.src=null;a.Ta=null};function dd(a){this.src=a;this.a={};this.b=0}dd.prototype.add=function(a,b,c,d,e){var f=a.toString();a=this.a[f];a||(a=this.a[f]=[],this.b++);var g=ed(a,b,d,e);-1<g?(b=a[g],c||(b.Na=!1)):(b=new bd(b,this.src,f,!!d,e),b.Na=c,a.push(b));return b};function fd(a,b){var c=b.type;c in a.a&&Ta(a.a[c],b)&&(cd(b),0==a.a[c].length&&(delete a.a[c],a.b--))}function ed(a,b,c,d){for(var e=0;e<a.length;++e){var f=a[e];if(!f.ua&&f.listener==b&&f.capture==!!c&&f.Ta==d)return e}return-1};var gd=\"closure_lm_\"+(1E6*Math.random()|0),hd={},id=0;function jd(a,b,c,d,e){if(d&&d.once)kd(a,b,c,d,e);else if(Array.isArray(b))for(var f=0;f<b.length;f++)jd(a,b[f],c,d,e);else c=ld(c),a&&a[$c]?md(a,b,c,q(d)?!!d.capture:!!d,e):nd(a,b,c,!1,d,e)}\nfunction nd(a,b,c,d,e,f){if(!b)throw Error(\"Invalid event type\");var g=q(e)?!!e.capture:!!e,h=od(a);h||(a[gd]=h=new dd(a));c=h.add(b,c,d,g,f);if(!c.proxy){d=pd();c.proxy=d;d.src=a;d.listener=c;if(a.addEventListener)Wc||(e=g),void 0===e&&(e=!1),a.addEventListener(b.toString(),d,e);else if(a.attachEvent)a.attachEvent(qd(b.toString()),d);else if(a.addListener&&a.removeListener)a.addListener(d);else throw Error(\"addEventListener and attachEvent are unavailable.\");id++}}\nfunction pd(){var a=rd,b=Uc?function(c){return a.call(b.src,b.listener,c)}:function(c){c=a.call(b.src,b.listener,c);if(!c)return c};return b}function kd(a,b,c,d,e){if(Array.isArray(b))for(var f=0;f<b.length;f++)kd(a,b[f],c,d,e);else c=ld(c),a&&a[$c]?sd(a,b,c,q(d)?!!d.capture:!!d,e):nd(a,b,c,!0,d,e)}\nfunction td(a,b,c,d,e){if(Array.isArray(b))for(var f=0;f<b.length;f++)td(a,b[f],c,d,e);else(d=q(d)?!!d.capture:!!d,c=ld(c),a&&a[$c])?(a=a.u,b=String(b).toString(),b in a.a&&(f=a.a[b],c=ed(f,c,d,e),-1<c&&(cd(f[c]),Array.prototype.splice.call(f,c,1),0==f.length&&(delete a.a[b],a.b--)))):a&&(a=od(a))&&(b=a.a[b.toString()],a=-1,b&&(a=ed(b,c,d,e)),(c=-1<a?b[a]:null)&&vd(c))}\nfunction vd(a){if(\"number\"!==typeof a&&a&&!a.ua){var b=a.src;if(b&&b[$c])fd(b.u,a);else{var c=a.type,d=a.proxy;b.removeEventListener?b.removeEventListener(c,d,a.capture):b.detachEvent?b.detachEvent(qd(c),d):b.addListener&&b.removeListener&&b.removeListener(d);id--;(c=od(b))?(fd(c,a),0==c.b&&(c.src=null,b[gd]=null)):cd(a)}}}function qd(a){return a in hd?hd[a]:hd[a]=\"on\"+a}\nfunction wd(a,b,c,d){var e=!0;if(a=od(a))if(b=a.a[b.toString()])for(b=b.concat(),a=0;a<b.length;a++){var f=b[a];f&&f.capture==c&&!f.ua&&(f=xd(f,d),e=e&&!1!==f)}return e}function xd(a,b){var c=a.listener,d=a.Ta||a.src;a.Na&&vd(a);return c.call(d,b)}\nfunction rd(a,b){if(a.ua)return!0;if(!Uc){if(!b)a:{b=[\"window\",\"event\"];for(var c=l,d=0;d<b.length;d++)if(c=c[b[d]],null==c){b=null;break a}b=c}d=b;b=new Yc(d,this);c=!0;if(!(0>d.keyCode||void 0!=d.returnValue)){a:{var e=!1;if(0==d.keyCode)try{d.keyCode=-1;break a}catch(g){e=!0}if(e||void 0==d.returnValue)d.returnValue=!0}d=[];for(e=b.b;e;e=e.parentNode)d.push(e);a=a.type;for(e=d.length-1;0<=e;e--){b.b=d[e];var f=wd(d[e],a,!0,b);c=c&&f}for(e=0;e<d.length;e++)b.b=d[e],f=wd(d[e],a,!1,b),c=c&&f}return c}return xd(a,\nnew Yc(b,this))}function od(a){a=a[gd];return a instanceof dd?a:null}var yd=\"__closure_events_fn_\"+(1E9*Math.random()>>>0);function ld(a){if(n(a))return a;a[yd]||(a[yd]=function(b){return a.handleEvent(b)});return a[yd]};function G(){Pc.call(this);this.u=new dd(this);this.Yb=this;this.eb=null}t(G,Pc);G.prototype[$c]=!0;G.prototype.addEventListener=function(a,b,c,d){jd(this,a,b,c,d)};G.prototype.removeEventListener=function(a,b,c,d){td(this,a,b,c,d)};\nG.prototype.dispatchEvent=function(a){var b,c=this.eb;if(c)for(b=[];c;c=c.eb)b.push(c);c=this.Yb;var d=a.type||a;if(\"string\"===typeof a)a=new Xc(a,c);else if(a instanceof Xc)a.target=a.target||c;else{var e=a;a=new Xc(d,c);B(a,e)}e=!0;if(b)for(var f=b.length-1;0<=f;f--){var g=a.b=b[f];e=zd(g,d,!0,a)&&e}g=a.b=c;e=zd(g,d,!0,a)&&e;e=zd(g,d,!1,a)&&e;if(b)for(f=0;f<b.length;f++)g=a.b=b[f],e=zd(g,d,!1,a)&&e;return e};\nG.prototype.Ba=function(){G.Za.Ba.call(this);if(this.u){var a=this.u,b=0,c;for(c in a.a){for(var d=a.a[c],e=0;e<d.length;e++)++b,cd(d[e]);delete a.a[c];a.b--}}this.eb=null};function md(a,b,c,d,e){a.u.add(String(b),c,!1,d,e)}function sd(a,b,c,d,e){a.u.add(String(b),c,!0,d,e)}\nfunction zd(a,b,c,d){b=a.u.a[String(b)];if(!b)return!0;b=b.concat();for(var e=!0,f=0;f<b.length;++f){var g=b[f];if(g&&!g.ua&&g.capture==c){var h=g.listener,m=g.Ta||g.src;g.Na&&fd(a.u,g);e=!1!==h.call(m,d)&&e}}return e&&!d.defaultPrevented};function Ad(a,b,c){if(n(a))c&&(a=r(a,c));else if(a&&\"function\"==typeof a.handleEvent)a=r(a.handleEvent,a);else throw Error(\"Invalid listener argument\");return 2147483647<Number(b)?-1:l.setTimeout(a,b||0)}function Bd(a){var b=null;return(new D(function(c,d){b=Ad(function(){c(void 0)},a);-1==b&&d(Error(\"Failed to schedule timer.\"))})).o(function(c){l.clearTimeout(b);throw c;})};function Cd(a){if(a.V&&\"function\"==typeof a.V)return a.V();if(\"string\"===typeof a)return a.split(\"\");if(ma(a)){for(var b=[],c=a.length,d=0;d<c;d++)b.push(a[d]);return b}b=[];c=0;for(d in a)b[c++]=a[d];return b}function Dd(a){if(a.X&&\"function\"==typeof a.X)return a.X();if(!a.V||\"function\"!=typeof a.V){if(ma(a)||\"string\"===typeof a){var b=[];a=a.length;for(var c=0;c<a;c++)b.push(c);return b}b=[];c=0;for(var d in a)b[c++]=d;return b}}\nfunction Ed(a,b){if(a.forEach&&\"function\"==typeof a.forEach)a.forEach(b,void 0);else if(ma(a)||\"string\"===typeof a)x(a,b,void 0);else for(var c=Dd(a),d=Cd(a),e=d.length,f=0;f<e;f++)b.call(void 0,d[f],c&&c[f],a)};function Fd(a,b){this.b={};this.a=[];this.c=0;var c=arguments.length;if(1<c){if(c%2)throw Error(\"Uneven number of arguments\");for(var d=0;d<c;d+=2)this.set(arguments[d],arguments[d+1])}else if(a)if(a instanceof Fd)for(c=a.X(),d=0;d<c.length;d++)this.set(c[d],a.get(c[d]));else for(d in a)this.set(d,a[d])}k=Fd.prototype;k.V=function(){Gd(this);for(var a=[],b=0;b<this.a.length;b++)a.push(this.b[this.a[b]]);return a};k.X=function(){Gd(this);return this.a.concat()};\nk.clear=function(){this.b={};this.c=this.a.length=0};function Gd(a){if(a.c!=a.a.length){for(var b=0,c=0;b<a.a.length;){var d=a.a[b];Hd(a.b,d)&&(a.a[c++]=d);b++}a.a.length=c}if(a.c!=a.a.length){var e={};for(c=b=0;b<a.a.length;)d=a.a[b],Hd(e,d)||(a.a[c++]=d,e[d]=1),b++;a.a.length=c}}k.get=function(a,b){return Hd(this.b,a)?this.b[a]:b};k.set=function(a,b){Hd(this.b,a)||(this.c++,this.a.push(a));this.b[a]=b};\nk.forEach=function(a,b){for(var c=this.X(),d=0;d<c.length;d++){var e=c[d],f=this.get(e);a.call(b,f,e,this)}};function Hd(a,b){return Object.prototype.hasOwnProperty.call(a,b)};var Id=/^(?:([^:/?#.]+):)?(?:\\/\\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/\\\\#?]|$))?([^?#]+)?(?:\\?([^#]*))?(?:#([\\s\\S]*))?$/;function Jd(a,b){if(a){a=a.split(\"&\");for(var c=0;c<a.length;c++){var d=a[c].indexOf(\"=\"),e=null;if(0<=d){var f=a[c].substring(0,d);e=a[c].substring(d+1)}else f=a[c];b(f,e?decodeURIComponent(e.replace(/\\+/g,\" \")):\"\")}}};function Kd(a,b){this.b=this.i=this.f=\"\";this.l=null;this.g=this.c=\"\";this.h=!1;var c;a instanceof Kd?(this.h=void 0!==b?b:a.h,Ld(this,a.f),this.i=a.i,this.b=a.b,Md(this,a.l),this.c=a.c,Nd(this,Od(a.a)),this.g=a.g):a&&(c=String(a).match(Id))?(this.h=!!b,Ld(this,c[1]||\"\",!0),this.i=Pd(c[2]||\"\"),this.b=Pd(c[3]||\"\",!0),Md(this,c[4]),this.c=Pd(c[5]||\"\",!0),Nd(this,c[6]||\"\",!0),this.g=Pd(c[7]||\"\")):(this.h=!!b,this.a=new Qd(null,this.h))}\nKd.prototype.toString=function(){var a=[],b=this.f;b&&a.push(Rd(b,Sd,!0),\":\");var c=this.b;if(c||\"file\"==b)a.push(\"//\"),(b=this.i)&&a.push(Rd(b,Sd,!0),\"@\"),a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),c=this.l,null!=c&&a.push(\":\",String(c));if(c=this.c)this.b&&\"/\"!=c.charAt(0)&&a.push(\"/\"),a.push(Rd(c,\"/\"==c.charAt(0)?Td:Ud,!0));(c=this.a.toString())&&a.push(\"?\",c);(c=this.g)&&a.push(\"#\",Rd(c,Vd));return a.join(\"\")};\nKd.prototype.resolve=function(a){var b=new Kd(this),c=!!a.f;c?Ld(b,a.f):c=!!a.i;c?b.i=a.i:c=!!a.b;c?b.b=a.b:c=null!=a.l;var d=a.c;if(c)Md(b,a.l);else if(c=!!a.c){if(\"/\"!=d.charAt(0))if(this.b&&!this.c)d=\"/\"+d;else{var e=b.c.lastIndexOf(\"/\");-1!=e&&(d=b.c.substr(0,e+1)+d)}e=d;if(\"..\"==e||\".\"==e)d=\"\";else if(y(e,\"./\")||y(e,\"/.\")){d=0==e.lastIndexOf(\"/\",0);e=e.split(\"/\");for(var f=[],g=0;g<e.length;){var h=e[g++];\".\"==h?d&&g==e.length&&f.push(\"\"):\"..\"==h?((1<f.length||1==f.length&&\"\"!=f[0])&&f.pop(),\nd&&g==e.length&&f.push(\"\")):(f.push(h),d=!0)}d=f.join(\"/\")}else d=e}c?b.c=d:c=\"\"!==a.a.toString();c?Nd(b,Od(a.a)):c=!!a.g;c&&(b.g=a.g);return b};function Ld(a,b,c){a.f=c?Pd(b,!0):b;a.f&&(a.f=a.f.replace(/:$/,\"\"))}function Md(a,b){if(b){b=Number(b);if(isNaN(b)||0>b)throw Error(\"Bad port number \"+b);a.l=b}else a.l=null}function Nd(a,b,c){b instanceof Qd?(a.a=b,Wd(a.a,a.h)):(c||(b=Rd(b,Xd)),a.a=new Qd(b,a.h))}function H(a,b,c){a.a.set(b,c)}function Yd(a,b){return a.a.get(b)}\nfunction Zd(a){return a instanceof Kd?new Kd(a):new Kd(a,void 0)}function $d(a,b){var c=new Kd(null,void 0);Ld(c,\"https\");a&&(c.b=a);b&&(c.c=b);return c}function Pd(a,b){return a?b?decodeURI(a.replace(/%25/g,\"%2525\")):decodeURIComponent(a):\"\"}function Rd(a,b,c){return\"string\"===typeof a?(a=encodeURI(a).replace(b,ae),c&&(a=a.replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),a):null}function ae(a){a=a.charCodeAt(0);return\"%\"+(a>>4&15).toString(16)+(a&15).toString(16)}\nvar Sd=/[#\\/\\?@]/g,Ud=/[#\\?:]/g,Td=/[#\\?]/g,Xd=/[#\\?@]/g,Vd=/#/g;function Qd(a,b){this.b=this.a=null;this.c=a||null;this.f=!!b}function be(a){a.a||(a.a=new Fd,a.b=0,a.c&&Jd(a.c,function(b,c){a.add(decodeURIComponent(b.replace(/\\+/g,\" \")),c)}))}function ce(a){var b=Dd(a);if(\"undefined\"==typeof b)throw Error(\"Keys are undefined\");var c=new Qd(null,void 0);a=Cd(a);for(var d=0;d<b.length;d++){var e=b[d],f=a[d];Array.isArray(f)?de(c,e,f):c.add(e,f)}return c}k=Qd.prototype;\nk.add=function(a,b){be(this);this.c=null;a=ee(this,a);var c=this.a.get(a);c||this.a.set(a,c=[]);c.push(b);this.b+=1;return this};function fe(a,b){be(a);b=ee(a,b);Hd(a.a.b,b)&&(a.c=null,a.b-=a.a.get(b).length,a=a.a,Hd(a.b,b)&&(delete a.b[b],a.c--,a.a.length>2*a.c&&Gd(a)))}k.clear=function(){this.a=this.c=null;this.b=0};function ge(a,b){be(a);b=ee(a,b);return Hd(a.a.b,b)}k.forEach=function(a,b){be(this);this.a.forEach(function(c,d){x(c,function(e){a.call(b,e,d,this)},this)},this)};\nk.X=function(){be(this);for(var a=this.a.V(),b=this.a.X(),c=[],d=0;d<b.length;d++)for(var e=a[d],f=0;f<e.length;f++)c.push(b[d]);return c};k.V=function(a){be(this);var b=[];if(\"string\"===typeof a)ge(this,a)&&(b=Va(b,this.a.get(ee(this,a))));else{a=this.a.V();for(var c=0;c<a.length;c++)b=Va(b,a[c])}return b};k.set=function(a,b){be(this);this.c=null;a=ee(this,a);ge(this,a)&&(this.b-=this.a.get(a).length);this.a.set(a,[b]);this.b+=1;return this};\nk.get=function(a,b){if(!a)return b;a=this.V(a);return 0<a.length?String(a[0]):b};function de(a,b,c){fe(a,b);0<c.length&&(a.c=null,a.a.set(ee(a,b),Wa(c)),a.b+=c.length)}k.toString=function(){if(this.c)return this.c;if(!this.a)return\"\";for(var a=[],b=this.a.X(),c=0;c<b.length;c++){var d=b[c],e=encodeURIComponent(String(d));d=this.V(d);for(var f=0;f<d.length;f++){var g=e;\"\"!==d[f]&&(g+=\"=\"+encodeURIComponent(String(d[f])));a.push(g)}}return this.c=a.join(\"&\")};\nfunction Od(a){var b=new Qd;b.c=a.c;a.a&&(b.a=new Fd(a.a),b.b=a.b);return b}function ee(a,b){b=String(b);a.f&&(b=b.toLowerCase());return b}function Wd(a,b){b&&!a.f&&(be(a),a.c=null,a.a.forEach(function(c,d){var e=d.toLowerCase();d!=e&&(fe(this,d),de(this,e,c))},a));a.f=b};function he(a){var b=[];ie(new je,a,b);return b.join(\"\")}function je(){}\nfunction ie(a,b,c){if(null==b)c.push(\"null\");else{if(\"object\"==typeof b){if(Array.isArray(b)){var d=b;b=d.length;c.push(\"[\");for(var e=\"\",f=0;f<b;f++)c.push(e),ie(a,d[f],c),e=\",\";c.push(\"]\");return}if(b instanceof String||b instanceof Number||b instanceof Boolean)b=b.valueOf();else{c.push(\"{\");e=\"\";for(d in b)Object.prototype.hasOwnProperty.call(b,d)&&(f=b[d],\"function\"!=typeof f&&(c.push(e),ke(d,c),c.push(\":\"),ie(a,f,c),e=\",\"));c.push(\"}\");return}}switch(typeof b){case \"string\":ke(b,c);break;case \"number\":c.push(isFinite(b)&&\n!isNaN(b)?String(b):\"null\");break;case \"boolean\":c.push(String(b));break;case \"function\":c.push(\"null\");break;default:throw Error(\"Unknown type: \"+typeof b);}}}var le={'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"/\":\"\\\\/\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"\\t\":\"\\\\t\",\"\\x0B\":\"\\\\u000b\"},me=/\\uffff/.test(\"\\uffff\")?/[\\\\\"\\x00-\\x1f\\x7f-\\uffff]/g:/[\\\\\"\\x00-\\x1f\\x7f-\\xff]/g;\nfunction ke(a,b){b.push('\"',a.replace(me,function(c){var d=le[c];d||(d=\"\\\\u\"+(c.charCodeAt(0)|65536).toString(16).substr(1),le[c]=d);return d}),'\"')};function ne(){var a=I();return Sb&&!!cc&&11==cc||/Edge\\/\\d+/.test(a)}function oe(){return l.window&&l.window.location.href||self&&self.location&&self.location.href||\"\"}function pe(a,b){b=b||l.window;var c=\"about:blank\";a&&(c=Cb(Eb(a)));b.location.href=c}function qe(a,b){var c=[],d;for(d in a)d in b?typeof a[d]!=typeof b[d]?c.push(d):\"object\"==typeof a[d]&&null!=a[d]&&null!=b[d]?0<qe(a[d],b[d]).length&&c.push(d):a[d]!==b[d]&&c.push(d):c.push(d);for(d in b)d in a||c.push(d);return c}\nfunction re(){var a=I();a=se(a)!=te?null:(a=a.match(/\\sChrome\\/(\\d+)/i))&&2==a.length?parseInt(a[1],10):null;return a&&30>a?!1:!Sb||!cc||9<cc}function ue(a){a=(a||I()).toLowerCase();return a.match(/android/)||a.match(/webos/)||a.match(/iphone|ipad|ipod/)||a.match(/blackberry/)||a.match(/windows phone/)||a.match(/iemobile/)?!0:!1}function ve(a){a=a||l.window;try{a.close()}catch(b){}}\nfunction we(a,b,c){var d=Math.floor(1E9*Math.random()).toString();b=b||500;c=c||600;var e=(window.screen.availHeight-c)/2,f=(window.screen.availWidth-b)/2;b={width:b,height:c,top:0<e?e:0,left:0<f?f:0,location:!0,resizable:!0,statusbar:!0,toolbar:!1};c=I().toLowerCase();d&&(b.target=d,y(c,\"crios/\")&&(b.target=\"_blank\"));se(I())==xe&&(a=a||\"http://localhost\",b.scrollbars=!0);c=a||\"\";(a=b)||(a={});d=window;b=c instanceof zb?c:Eb(\"undefined\"!=typeof c.href?c.href:String(c));c=a.target||c.target;e=[];\nfor(g in a)switch(g){case \"width\":case \"height\":case \"top\":case \"left\":e.push(g+\"=\"+a[g]);break;case \"target\":case \"noopener\":case \"noreferrer\":break;default:e.push(g+\"=\"+(a[g]?1:0))}var g=e.join(\",\");if((z(\"iPhone\")&&!z(\"iPod\")&&!z(\"iPad\")||z(\"iPad\")||z(\"iPod\"))&&d.navigator&&d.navigator.standalone&&c&&\"_self\"!=c)g=ic(document,\"A\"),mb(g,\"HTMLAnchorElement\"),b instanceof zb||b instanceof zb||(b=\"object\"==typeof b&&b.ra?b.qa():String(b),Db.test(b)||(b=\"about:invalid#zClosurez\"),b=new zb(Ab,b)),g.href=\nCb(b),g.setAttribute(\"target\",c),a.noreferrer&&g.setAttribute(\"rel\",\"noreferrer\"),a=document.createEvent(\"MouseEvent\"),a.initMouseEvent(\"click\",!0,!0,d,1),g.dispatchEvent(a),g={};else if(a.noreferrer){if(g=d.open(\"\",c,g),a=Cb(b),g&&(Ub&&y(a,\";\")&&(a=\"'\"+a.replace(/'/g,\"%27\")+\"'\"),g.opener=null,a=Ib('<meta name=\"referrer\" content=\"no-referrer\"><meta http-equiv=\"refresh\" content=\"0; url='+Nb(a)+'\">'),d=g.document))d.write(Hb(a)),d.close()}else(g=d.open(Cb(b),c,g))&&a.noopener&&(g.opener=null);if(g)try{g.focus()}catch(h){}return g}\nfunction ye(a){return new D(function(b){function c(){Bd(2E3).then(function(){if(!a||a.closed)b();else return c()})}return c()})}var ze=/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/,Ae=/^[^@]+@[^@]+$/;function Be(){var a=null;return(new D(function(b){\"complete\"==l.document.readyState?b():(a=function(){b()},kd(window,\"load\",a))})).o(function(b){td(window,\"load\",a);throw b;})}\nfunction Ce(){return De(void 0)?Be().then(function(){return new D(function(a,b){var c=l.document,d=setTimeout(function(){b(Error(\"Cordova framework is not ready.\"))},1E3);c.addEventListener(\"deviceready\",function(){clearTimeout(d);a()},!1)})}):F(Error(\"Cordova must run in an Android or iOS file scheme.\"))}function De(a){a=a||I();return!(\"file:\"!==Ee()&&\"ionic:\"!==Ee()||!a.toLowerCase().match(/iphone|ipad|ipod|android/))}function Fe(){var a=l.window;try{return!(!a||a==a.top)}catch(b){return!1}}\nfunction Ge(){return\"undefined\"!==typeof l.WorkerGlobalScope&&\"function\"===typeof l.importScripts}function He(){return _firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.INTERNAL.hasOwnProperty(\"reactNative\")?\"ReactNative\":_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.INTERNAL.hasOwnProperty(\"node\")?\"Node\":Ge()?\"Worker\":\"Browser\"}function Ie(){var a=He();return\"ReactNative\"===a||\"Node\"===a}function Je(){for(var a=50,b=[];0<a;)b.push(\"1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\".charAt(Math.floor(62*Math.random()))),a--;return b.join(\"\")}\nvar xe=\"Firefox\",te=\"Chrome\";\nfunction se(a){var b=a.toLowerCase();if(y(b,\"opera/\")||y(b,\"opr/\")||y(b,\"opios/\"))return\"Opera\";if(y(b,\"iemobile\"))return\"IEMobile\";if(y(b,\"msie\")||y(b,\"trident/\"))return\"IE\";if(y(b,\"edge/\"))return\"Edge\";if(y(b,\"firefox/\"))return xe;if(y(b,\"silk/\"))return\"Silk\";if(y(b,\"blackberry\"))return\"Blackberry\";if(y(b,\"webos\"))return\"Webos\";if(!y(b,\"safari/\")||y(b,\"chrome/\")||y(b,\"crios/\")||y(b,\"android\"))if(!y(b,\"chrome/\")&&!y(b,\"crios/\")||y(b,\"edge/\")){if(y(b,\"android\"))return\"Android\";if((a=a.match(/([a-zA-Z\\d\\.]+)\\/[a-zA-Z\\d\\.]*$/))&&\n2==a.length)return a[1]}else return te;else return\"Safari\";return\"Other\"}var Ke={jd:\"FirebaseCore-web\",ld:\"FirebaseUI-web\"};function Le(a,b){b=b||[];var c=[],d={},e;for(e in Ke)d[Ke[e]]=!0;for(e=0;e<b.length;e++)\"undefined\"!==typeof d[b[e]]&&(delete d[b[e]],c.push(b[e]));c.sort();b=c;b.length||(b=[\"FirebaseCore-web\"]);c=He();\"Browser\"===c?(d=I(),c=se(d)):\"Worker\"===c&&(d=I(),c=se(d)+\"-\"+c);return c+\"/JsCore/\"+a+\"/\"+b.join(\",\")}function I(){return l.navigator&&l.navigator.userAgent||\"\"}\nfunction J(a,b){a=a.split(\".\");b=b||l;for(var c=0;c<a.length&&\"object\"==typeof b&&null!=b;c++)b=b[a[c]];c!=a.length&&(b=void 0);return b}function Me(){try{var a=l.localStorage,b=Ne();if(a)return a.setItem(b,\"1\"),a.removeItem(b),ne()?!!l.indexedDB:!0}catch(c){return Ge()&&!!l.indexedDB}return!1}function Oe(){return(Pe()||\"chrome-extension:\"===Ee()||De())&&!Ie()&&Me()&&!Ge()}function Pe(){return\"http:\"===Ee()||\"https:\"===Ee()}function Ee(){return l.location&&l.location.protocol||null}\nfunction Qe(a){a=a||I();return ue(a)||se(a)==xe?!1:!0}function Re(a){return\"undefined\"===typeof a?null:he(a)}function Se(a){var b={},c;for(c in a)a.hasOwnProperty(c)&&null!==a[c]&&void 0!==a[c]&&(b[c]=a[c]);return b}function Te(a){if(null!==a)return JSON.parse(a)}function Ne(a){return a?a:Math.floor(1E9*Math.random()).toString()}function Ue(a){a=a||I();return\"Safari\"==se(a)||a.toLowerCase().match(/iphone|ipad|ipod/)?!1:!0}\nfunction Ve(){var a=l.___jsl;if(a&&a.H)for(var b in a.H)if(a.H[b].r=a.H[b].r||[],a.H[b].L=a.H[b].L||[],a.H[b].r=a.H[b].L.concat(),a.CP)for(var c=0;c<a.CP.length;c++)a.CP[c]=null}function We(a,b){if(a>b)throw Error(\"Short delay should be less than long delay!\");this.a=a;this.c=b;a=I();b=He();this.b=ue(a)||\"ReactNative\"===b}\nWe.prototype.get=function(){var a=l.navigator;return(a&&\"boolean\"===typeof a.onLine&&(Pe()||\"chrome-extension:\"===Ee()||\"undefined\"!==typeof a.connection)?a.onLine:1)?this.b?this.c:this.a:Math.min(5E3,this.a)};function Xe(){var a=l.document;return a&&\"undefined\"!==typeof a.visibilityState?\"visible\"==a.visibilityState:!0}\nfunction Ye(){var a=l.document,b=null;return Xe()||!a?E():(new D(function(c){b=function(){Xe()&&(a.removeEventListener(\"visibilitychange\",b,!1),c())};a.addEventListener(\"visibilitychange\",b,!1)})).o(function(c){a.removeEventListener(\"visibilitychange\",b,!1);throw c;})}function Ze(a){try{var b=new Date(parseInt(a,10));if(!isNaN(b.getTime())&&!/[^0-9]/.test(a))return b.toUTCString()}catch(c){}return null}function $e(){return!(!J(\"fireauth.oauthhelper\",l)&&!J(\"fireauth.iframe\",l))}\nfunction af(){var a=l.navigator;return a&&a.serviceWorker&&a.serviceWorker.controller||null}function bf(){var a=l.navigator;return a&&a.serviceWorker?E().then(function(){return a.serviceWorker.ready}).then(function(b){return b.active||null}).o(function(){return null}):E(null)};var cf={};function df(a){cf[a]||(cf[a]=!0,\"undefined\"!==typeof console&&\"function\"===typeof console.warn&&console.warn(a))};var ef;try{var ff={};Object.defineProperty(ff,\"abcd\",{configurable:!0,enumerable:!0,value:1});Object.defineProperty(ff,\"abcd\",{configurable:!0,enumerable:!0,value:2});ef=2==ff.abcd}catch(a){ef=!1}function K(a,b,c){ef?Object.defineProperty(a,b,{configurable:!0,enumerable:!0,value:c}):a[b]=c}function L(a,b){if(b)for(var c in b)b.hasOwnProperty(c)&&K(a,c,b[c])}function gf(a){var b={};L(b,a);return b}function hf(a){var b={},c;for(c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b}\nfunction jf(a,b){if(!b||!b.length)return!0;if(!a)return!1;for(var c=0;c<b.length;c++){var d=a[b[c]];if(void 0===d||null===d||\"\"===d)return!1}return!0}function kf(a){var b=a;if(\"object\"==typeof a&&null!=a){b=\"length\"in a?[]:{};for(var c in a)K(b,c,kf(a[c]))}return b};/*\n\n Copyright 2019 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nfunction lf(a){var b=a&&(a[mf]?\"phone\":null);if(b&&a&&a[nf]){K(this,\"uid\",a[nf]);K(this,\"displayName\",a[of]||null);var c=null;a[pf]&&(c=(new Date(a[pf])).toUTCString());K(this,\"enrollmentTime\",c);K(this,\"factorId\",b)}else throw new u(\"internal-error\",\"Internal assert: invalid MultiFactorInfo object\");}lf.prototype.v=function(){return{uid:this.uid,displayName:this.displayName,factorId:this.factorId,enrollmentTime:this.enrollmentTime}};function qf(a){try{var b=new rf(a)}catch(c){b=null}return b}\nvar of=\"displayName\",pf=\"enrolledAt\",nf=\"mfaEnrollmentId\",mf=\"phoneInfo\";function rf(a){lf.call(this,a);K(this,\"phoneNumber\",a[mf])}t(rf,lf);rf.prototype.v=function(){var a=rf.Za.v.call(this);a.phoneNumber=this.phoneNumber;return a};function sf(a){var b={},c=a[tf],d=a[uf],e=a[vf];a=qf(a[wf]);if(!e||e!=xf&&e!=yf&&!c||e==yf&&!d||e==zf&&!a)throw Error(\"Invalid checkActionCode response!\");e==yf?(b[Af]=c||null,b[Bf]=c||null,b[Cf]=d):(b[Af]=d||null,b[Bf]=d||null,b[Cf]=c||null);b[Df]=a||null;K(this,Ef,e);K(this,Ff,kf(b))}\nvar zf=\"REVERT_SECOND_FACTOR_ADDITION\",xf=\"EMAIL_SIGNIN\",yf=\"VERIFY_AND_CHANGE_EMAIL\",tf=\"email\",wf=\"mfaInfo\",uf=\"newEmail\",vf=\"requestType\",Cf=\"email\",Af=\"fromEmail\",Df=\"multiFactorInfo\",Bf=\"previousEmail\",Ff=\"data\",Ef=\"operation\";function Gf(a){a=Zd(a);var b=Yd(a,Hf)||null,c=Yd(a,If)||null,d=Yd(a,Jf)||null;d=d?Kf[d]||null:null;if(!b||!c||!d)throw new u(\"argument-error\",Hf+\", \"+If+\"and \"+Jf+\" are required in a valid action code URL.\");L(this,{apiKey:b,operation:d,code:c,continueUrl:Yd(a,Lf)||null,languageCode:Yd(a,Mf)||null,tenantId:Yd(a,Nf)||null})}\nvar Hf=\"apiKey\",If=\"oobCode\",Lf=\"continueUrl\",Mf=\"languageCode\",Jf=\"mode\",Nf=\"tenantId\",Kf={recoverEmail:\"RECOVER_EMAIL\",resetPassword:\"PASSWORD_RESET\",revertSecondFactorAddition:zf,signIn:xf,verifyAndChangeEmail:yf,verifyEmail:\"VERIFY_EMAIL\"};function Of(a){try{return new Gf(a)}catch(b){return null}};function Pf(a){var b=a[Qf];if(\"undefined\"===typeof b)throw new u(\"missing-continue-uri\");if(\"string\"!==typeof b||\"string\"===typeof b&&!b.length)throw new u(\"invalid-continue-uri\");this.h=b;this.b=this.a=null;this.g=!1;var c=a[Rf];if(c&&\"object\"===typeof c){b=c[Sf];var d=c[Tf];c=c[Uf];if(\"string\"===typeof b&&b.length){this.a=b;if(\"undefined\"!==typeof d&&\"boolean\"!==typeof d)throw new u(\"argument-error\",Tf+\" property must be a boolean when specified.\");this.g=!!d;if(\"undefined\"!==typeof c&&(\"string\"!==\ntypeof c||\"string\"===typeof c&&!c.length))throw new u(\"argument-error\",Uf+\" property must be a non empty string when specified.\");this.b=c||null}else{if(\"undefined\"!==typeof b)throw new u(\"argument-error\",Sf+\" property must be a non empty string when specified.\");if(\"undefined\"!==typeof d||\"undefined\"!==typeof c)throw new u(\"missing-android-pkg-name\");}}else if(\"undefined\"!==typeof c)throw new u(\"argument-error\",Rf+\" property must be a non null object when specified.\");this.f=null;if((b=a[Vf])&&\"object\"===\ntypeof b)if(b=b[Wf],\"string\"===typeof b&&b.length)this.f=b;else{if(\"undefined\"!==typeof b)throw new u(\"argument-error\",Wf+\" property must be a non empty string when specified.\");}else if(\"undefined\"!==typeof b)throw new u(\"argument-error\",Vf+\" property must be a non null object when specified.\");b=a[Xf];if(\"undefined\"!==typeof b&&\"boolean\"!==typeof b)throw new u(\"argument-error\",Xf+\" property must be a boolean when specified.\");this.c=!!b;a=a[Yf];if(\"undefined\"!==typeof a&&(\"string\"!==typeof a||\"string\"===\ntypeof a&&!a.length))throw new u(\"argument-error\",Yf+\" property must be a non empty string when specified.\");this.i=a||null}var Rf=\"android\",Yf=\"dynamicLinkDomain\",Xf=\"handleCodeInApp\",Vf=\"iOS\",Qf=\"url\",Tf=\"installApp\",Uf=\"minimumVersion\",Sf=\"packageName\",Wf=\"bundleId\";\nfunction Zf(a){var b={};b.continueUrl=a.h;b.canHandleCodeInApp=a.c;if(b.androidPackageName=a.a)b.androidMinimumVersion=a.b,b.androidInstallApp=a.g;b.iOSBundleId=a.f;b.dynamicLinkDomain=a.i;for(var c in b)null===b[c]&&delete b[c];return b};function $f(a){return Oa(a,function(b){b=b.toString(16);return 1<b.length?b:\"0\"+b}).join(\"\")};var ag=null;function bg(a){var b=\"\";cg(a,function(c){b+=String.fromCharCode(c)});return b}function cg(a,b){function c(m){for(;d<a.length;){var p=a.charAt(d++),v=ag[p];if(null!=v)return v;if(!/^[\\s\\xa0]*$/.test(p))throw Error(\"Unknown base64 encoding at char: \"+p);}return m}dg();for(var d=0;;){var e=c(-1),f=c(0),g=c(64),h=c(64);if(64===h&&-1===e)break;b(e<<2|f>>4);64!=g&&(b(f<<4&240|g>>2),64!=h&&b(g<<6&192|h))}}\nfunction dg(){if(!ag){ag={};for(var a=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\".split(\"\"),b=[\"+/=\",\"+/\",\"-_=\",\"-_.\",\"-_\"],c=0;5>c;c++)for(var d=a.concat(b[c].split(\"\")),e=0;e<d.length;e++){var f=d[e];void 0===ag[f]&&(ag[f]=e)}}};function eg(a){var b=fg(a);if(!(b&&b.sub&&b.iss&&b.aud&&b.exp))throw Error(\"Invalid JWT\");this.g=a;this.c=b.exp;this.h=b.sub;ta();this.a=b.provider_id||b.firebase&&b.firebase.sign_in_provider||null;this.f=b.firebase&&b.firebase.tenant||null;this.b=!!b.is_anonymous||\"anonymous\"==this.a}eg.prototype.S=function(){return this.f};eg.prototype.i=function(){return this.b};eg.prototype.toString=function(){return this.g};function gg(a){try{return new eg(a)}catch(b){return null}}\nfunction fg(a){if(!a)return null;a=a.split(\".\");if(3!=a.length)return null;a=a[1];for(var b=(4-a.length%4)%4,c=0;c<b;c++)a+=\".\";try{return JSON.parse(bg(a))}catch(d){}return null};var hg=\"oauth_consumer_key oauth_nonce oauth_signature oauth_signature_method oauth_timestamp oauth_token oauth_version\".split(\" \"),ig=[\"client_id\",\"response_type\",\"scope\",\"redirect_uri\",\"state\"],jg={kd:{Ha:\"locale\",ta:700,sa:600,ea:\"facebook.com\",Va:ig},md:{Ha:null,ta:500,sa:750,ea:\"github.com\",Va:ig},nd:{Ha:\"hl\",ta:515,sa:680,ea:\"google.com\",Va:ig},td:{Ha:\"lang\",ta:485,sa:705,ea:\"twitter.com\",Va:hg},gd:{Ha:\"locale\",ta:640,sa:600,ea:\"apple.com\",Va:[]}};\nfunction kg(a){for(var b in jg)if(jg[b].ea==a)return jg[b];return null};function lg(a){var b={};b[\"facebook.com\"]=mg;b[\"google.com\"]=ng;b[\"github.com\"]=og;b[\"twitter.com\"]=pg;var c=a&&a[qg];try{if(c)return b[c]?new b[c](a):new rg(a);if(\"undefined\"!==typeof a[sg])return new tg(a)}catch(d){}return null}var sg=\"idToken\",qg=\"providerId\";\nfunction tg(a){var b=a[qg];if(!b&&a[sg]){var c=gg(a[sg]);c&&c.a&&(b=c.a)}if(!b)throw Error(\"Invalid additional user info!\");if(\"anonymous\"==b||\"custom\"==b)b=null;c=!1;\"undefined\"!==typeof a.isNewUser?c=!!a.isNewUser:\"identitytoolkit#SignupNewUserResponse\"===a.kind&&(c=!0);K(this,\"providerId\",b);K(this,\"isNewUser\",c)}function rg(a){tg.call(this,a);a=Te(a.rawUserInfo||\"{}\");K(this,\"profile\",kf(a||{}))}t(rg,tg);\nfunction mg(a){rg.call(this,a);if(\"facebook.com\"!=this.providerId)throw Error(\"Invalid provider ID!\");}t(mg,rg);function og(a){rg.call(this,a);if(\"github.com\"!=this.providerId)throw Error(\"Invalid provider ID!\");K(this,\"username\",this.profile&&this.profile.login||null)}t(og,rg);function ng(a){rg.call(this,a);if(\"google.com\"!=this.providerId)throw Error(\"Invalid provider ID!\");}t(ng,rg);\nfunction pg(a){rg.call(this,a);if(\"twitter.com\"!=this.providerId)throw Error(\"Invalid provider ID!\");K(this,\"username\",a.screenName||null)}t(pg,rg);function ug(a){var b=Zd(a),c=Yd(b,\"link\"),d=Yd(Zd(c),\"link\");b=Yd(b,\"deep_link_id\");return Yd(Zd(b),\"link\")||b||d||c||a};function vg(a,b){if(!a&&!b)throw new u(\"internal-error\",\"Internal assert: no raw session string available\");if(a&&b)throw new u(\"internal-error\",\"Internal assert: unable to determine the session type\");this.a=a||null;this.b=b||null;this.type=this.a?wg:xg}var wg=\"enroll\",xg=\"signin\";vg.prototype.Fa=function(){return this.a?E(this.a):E(this.b)};vg.prototype.v=function(){return this.type==wg?{multiFactorSession:{idToken:this.a}}:{multiFactorSession:{pendingCredential:this.b}}};function yg(){}yg.prototype.ia=function(){};yg.prototype.b=function(){};yg.prototype.c=function(){};yg.prototype.v=function(){};function zg(a,b){return a.then(function(c){if(c[Ag]){var d=gg(c[Ag]);if(!d||b!=d.h)throw new u(\"user-mismatch\");return c}throw new u(\"user-mismatch\");}).o(function(c){throw c&&c.code&&c.code==ua+\"user-not-found\"?new u(\"user-mismatch\"):c;})}\nfunction Bg(a,b){if(b)this.a=b;else throw new u(\"internal-error\",\"failed to construct a credential\");K(this,\"providerId\",a);K(this,\"signInMethod\",a)}Bg.prototype.ia=function(a){return Cg(a,Dg(this))};Bg.prototype.b=function(a,b){var c=Dg(this);c.idToken=b;return Eg(a,c)};Bg.prototype.c=function(a,b){return zg(Fg(a,Dg(this)),b)};function Dg(a){return{pendingToken:a.a,requestUri:\"http://localhost\"}}Bg.prototype.v=function(){return{providerId:this.providerId,signInMethod:this.signInMethod,pendingToken:this.a}};\nfunction Gg(a){if(a&&a.providerId&&a.signInMethod&&0==a.providerId.indexOf(\"saml.\")&&a.pendingToken)try{return new Bg(a.providerId,a.pendingToken)}catch(b){}return null}\nfunction Hg(a,b,c){this.a=null;if(b.idToken||b.accessToken)b.idToken&&K(this,\"idToken\",b.idToken),b.accessToken&&K(this,\"accessToken\",b.accessToken),b.nonce&&!b.pendingToken&&K(this,\"nonce\",b.nonce),b.pendingToken&&(this.a=b.pendingToken);else if(b.oauthToken&&b.oauthTokenSecret)K(this,\"accessToken\",b.oauthToken),K(this,\"secret\",b.oauthTokenSecret);else throw new u(\"internal-error\",\"failed to construct a credential\");K(this,\"providerId\",a);K(this,\"signInMethod\",c)}\nHg.prototype.ia=function(a){return Cg(a,Ig(this))};Hg.prototype.b=function(a,b){var c=Ig(this);c.idToken=b;return Eg(a,c)};Hg.prototype.c=function(a,b){var c=Ig(this);return zg(Fg(a,c),b)};\nfunction Ig(a){var b={};a.idToken&&(b.id_token=a.idToken);a.accessToken&&(b.access_token=a.accessToken);a.secret&&(b.oauth_token_secret=a.secret);b.providerId=a.providerId;a.nonce&&!a.a&&(b.nonce=a.nonce);b={postBody:ce(b).toString(),requestUri:\"http://localhost\"};a.a&&(delete b.postBody,b.pendingToken=a.a);return b}\nHg.prototype.v=function(){var a={providerId:this.providerId,signInMethod:this.signInMethod};this.idToken&&(a.oauthIdToken=this.idToken);this.accessToken&&(a.oauthAccessToken=this.accessToken);this.secret&&(a.oauthTokenSecret=this.secret);this.nonce&&(a.nonce=this.nonce);this.a&&(a.pendingToken=this.a);return a};\nfunction Jg(a){if(a&&a.providerId&&a.signInMethod){var b={idToken:a.oauthIdToken,accessToken:a.oauthTokenSecret?null:a.oauthAccessToken,oauthTokenSecret:a.oauthTokenSecret,oauthToken:a.oauthTokenSecret&&a.oauthAccessToken,nonce:a.nonce,pendingToken:a.pendingToken};try{return new Hg(a.providerId,b,a.signInMethod)}catch(c){}}return null}function Kg(a,b){this.Oc=b||[];L(this,{providerId:a,isOAuthProvider:!0});this.Fb={};this.lb=(kg(a)||{}).Ha||null;this.kb=null}\nKg.prototype.Ia=function(a){this.Fb=kb(a);return this};function Lg(a){if(\"string\"!==typeof a||0!=a.indexOf(\"saml.\"))throw new u(\"argument-error\",'SAML provider IDs must be prefixed with \"saml.\"');Kg.call(this,a,[])}t(Lg,Kg);function M(a){Kg.call(this,a,ig);this.a=[]}t(M,Kg);M.prototype.Aa=function(a){Sa(this.a,a)||this.a.push(a);return this};M.prototype.Nb=function(){return Wa(this.a)};\nM.prototype.credential=function(a,b){var c;q(a)?c={idToken:a.idToken||null,accessToken:a.accessToken||null,nonce:a.rawNonce||null}:c={idToken:a||null,accessToken:b||null};if(!c.idToken&&!c.accessToken)throw new u(\"argument-error\",\"credential failed: must provide the ID token and/or the access token.\");return new Hg(this.providerId,c,this.providerId)};function Mg(){M.call(this,\"facebook.com\")}t(Mg,M);K(Mg,\"PROVIDER_ID\",\"facebook.com\");K(Mg,\"FACEBOOK_SIGN_IN_METHOD\",\"facebook.com\");\nfunction Ng(a){if(!a)throw new u(\"argument-error\",\"credential failed: expected 1 argument (the OAuth access token).\");var b=a;q(a)&&(b=a.accessToken);return(new Mg).credential({accessToken:b})}function Og(){M.call(this,\"github.com\")}t(Og,M);K(Og,\"PROVIDER_ID\",\"github.com\");K(Og,\"GITHUB_SIGN_IN_METHOD\",\"github.com\");\nfunction Pg(a){if(!a)throw new u(\"argument-error\",\"credential failed: expected 1 argument (the OAuth access token).\");var b=a;q(a)&&(b=a.accessToken);return(new Og).credential({accessToken:b})}function Qg(){M.call(this,\"google.com\");this.Aa(\"profile\")}t(Qg,M);K(Qg,\"PROVIDER_ID\",\"google.com\");K(Qg,\"GOOGLE_SIGN_IN_METHOD\",\"google.com\");function Rg(a,b){var c=a;q(a)&&(c=a.idToken,b=a.accessToken);return(new Qg).credential({idToken:c,accessToken:b})}function Sg(){Kg.call(this,\"twitter.com\",hg)}t(Sg,Kg);\nK(Sg,\"PROVIDER_ID\",\"twitter.com\");K(Sg,\"TWITTER_SIGN_IN_METHOD\",\"twitter.com\");function Tg(a,b){var c=a;q(c)||(c={oauthToken:a,oauthTokenSecret:b});if(!c.oauthToken||!c.oauthTokenSecret)throw new u(\"argument-error\",\"credential failed: expected 2 arguments (the OAuth access token and secret).\");return new Hg(\"twitter.com\",c,\"twitter.com\")}\nfunction Ug(a,b,c){this.a=a;this.f=b;K(this,\"providerId\",\"password\");K(this,\"signInMethod\",c===Vg.EMAIL_LINK_SIGN_IN_METHOD?Vg.EMAIL_LINK_SIGN_IN_METHOD:Vg.EMAIL_PASSWORD_SIGN_IN_METHOD)}Ug.prototype.ia=function(a){return this.signInMethod==Vg.EMAIL_LINK_SIGN_IN_METHOD?N(a,Wg,{email:this.a,oobCode:this.f}):N(a,Xg,{email:this.a,password:this.f})};\nUg.prototype.b=function(a,b){return this.signInMethod==Vg.EMAIL_LINK_SIGN_IN_METHOD?N(a,Yg,{idToken:b,email:this.a,oobCode:this.f}):N(a,Zg,{idToken:b,email:this.a,password:this.f})};Ug.prototype.c=function(a,b){return zg(this.ia(a),b)};Ug.prototype.v=function(){return{email:this.a,password:this.f,signInMethod:this.signInMethod}};function $g(a){return a&&a.email&&a.password?new Ug(a.email,a.password,a.signInMethod):null}function Vg(){L(this,{providerId:\"password\",isOAuthProvider:!1})}\nfunction ah(a,b){b=bh(b);if(!b)throw new u(\"argument-error\",\"Invalid email link!\");return new Ug(a,b.code,Vg.EMAIL_LINK_SIGN_IN_METHOD)}function bh(a){a=ug(a);return(a=Of(a))&&a.operation===xf?a:null}L(Vg,{PROVIDER_ID:\"password\"});L(Vg,{EMAIL_LINK_SIGN_IN_METHOD:\"emailLink\"});L(Vg,{EMAIL_PASSWORD_SIGN_IN_METHOD:\"password\"});function ch(a){if(!(a.bb&&a.ab||a.Ja&&a.da))throw new u(\"internal-error\");this.a=a;K(this,\"providerId\",\"phone\");this.ea=\"phone\";K(this,\"signInMethod\",\"phone\")}\nch.prototype.ia=function(a){return a.cb(dh(this))};ch.prototype.b=function(a,b){var c=dh(this);c.idToken=b;return N(a,eh,c)};ch.prototype.c=function(a,b){var c=dh(this);c.operation=\"REAUTH\";a=N(a,fh,c);return zg(a,b)};ch.prototype.v=function(){var a={providerId:\"phone\"};this.a.bb&&(a.verificationId=this.a.bb);this.a.ab&&(a.verificationCode=this.a.ab);this.a.Ja&&(a.temporaryProof=this.a.Ja);this.a.da&&(a.phoneNumber=this.a.da);return a};\nfunction gh(a){if(a&&\"phone\"===a.providerId&&(a.verificationId&&a.verificationCode||a.temporaryProof&&a.phoneNumber)){var b={};x([\"verificationId\",\"verificationCode\",\"temporaryProof\",\"phoneNumber\"],function(c){a[c]&&(b[c]=a[c])});return new ch(b)}return null}function dh(a){return a.a.Ja&&a.a.da?{temporaryProof:a.a.Ja,phoneNumber:a.a.da}:{sessionInfo:a.a.bb,code:a.a.ab}}\nfunction hh(a){try{this.a=a||_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.auth()}catch(b){throw new u(\"argument-error\",\"Either an instance of firebase.auth.Auth must be passed as an argument to the firebase.auth.PhoneAuthProvider constructor, or the default firebase App instance must be initialized via firebase.initializeApp().\");}L(this,{providerId:\"phone\",isOAuthProvider:!1})}\nhh.prototype.cb=function(a,b){var c=this.a.b;return E(b.verify()).then(function(d){if(\"string\"!==typeof d)throw new u(\"argument-error\",\"An implementation of firebase.auth.ApplicationVerifier.prototype.verify() must return a firebase.Promise that resolves with a string.\");switch(b.type){case \"recaptcha\":var e=q(a)?a.session:null,f=q(a)?a.phoneNumber:a,g;e&&e.type==wg?g=e.Fa().then(function(h){return ih(c,{idToken:h,phoneEnrollmentInfo:{phoneNumber:f,recaptchaToken:d}})}):e&&e.type==xg?g=e.Fa().then(function(h){return jh(c,\n{mfaPendingCredential:h,mfaEnrollmentId:a.multiFactorHint&&a.multiFactorHint.uid||a.multiFactorUid,phoneSignInInfo:{recaptchaToken:d}})}):g=kh(c,{phoneNumber:f,recaptchaToken:d});return g.then(function(h){\"function\"===typeof b.reset&&b.reset();return h},function(h){\"function\"===typeof b.reset&&b.reset();throw h;});default:throw new u(\"argument-error\",'Only firebase.auth.ApplicationVerifiers with type=\"recaptcha\" are currently supported.');}})};\nfunction lh(a,b){if(!a)throw new u(\"missing-verification-id\");if(!b)throw new u(\"missing-verification-code\");return new ch({bb:a,ab:b})}L(hh,{PROVIDER_ID:\"phone\"});L(hh,{PHONE_SIGN_IN_METHOD:\"phone\"});\nfunction mh(a){if(a.temporaryProof&&a.phoneNumber)return new ch({Ja:a.temporaryProof,da:a.phoneNumber});var b=a&&a.providerId;if(!b||\"password\"===b)return null;var c=a&&a.oauthAccessToken,d=a&&a.oauthTokenSecret,e=a&&a.nonce,f=a&&a.oauthIdToken,g=a&&a.pendingToken;try{switch(b){case \"google.com\":return Rg(f,c);case \"facebook.com\":return Ng(c);case \"github.com\":return Pg(c);case \"twitter.com\":return Tg(c,d);default:return c||d||f||g?g?0==b.indexOf(\"saml.\")?new Bg(b,g):new Hg(b,{pendingToken:g,idToken:a.oauthIdToken,\naccessToken:a.oauthAccessToken},b):(new M(b)).credential({idToken:f,accessToken:c,rawNonce:e}):null}}catch(h){return null}}function nh(a){if(!a.isOAuthProvider)throw new u(\"invalid-oauth-provider\");};function oh(a,b,c,d,e,f,g){this.c=a;this.b=b||null;this.g=c||null;this.f=d||null;this.i=f||null;this.h=g||null;this.a=e||null;if(this.g||this.a){if(this.g&&this.a)throw new u(\"invalid-auth-event\");if(this.g&&!this.f)throw new u(\"invalid-auth-event\");}else throw new u(\"invalid-auth-event\");}oh.prototype.getUid=function(){var a=[];a.push(this.c);this.b&&a.push(this.b);this.f&&a.push(this.f);this.h&&a.push(this.h);return a.join(\"-\")};oh.prototype.S=function(){return this.h};\noh.prototype.v=function(){return{type:this.c,eventId:this.b,urlResponse:this.g,sessionId:this.f,postBody:this.i,tenantId:this.h,error:this.a&&this.a.v()}};function ph(a){a=a||{};return a.type?new oh(a.type,a.eventId,a.urlResponse,a.sessionId,a.error&&wa(a.error),a.postBody,a.tenantId):null};/*\n\n Copyright 2018 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nfunction qh(){this.b=null;this.a=[]}var rh=null;function sh(a){var b=rh;b.a.push(a);b.b||(b.b=function(c){for(var d=0;d<b.a.length;d++)b.a[d](c)},a=J(\"universalLinks.subscribe\",l),\"function\"===typeof a&&a(null,b.b))};function th(a){var b=\"unauthorized-domain\",c=void 0,d=Zd(a);a=d.b;d=d.f;\"chrome-extension\"==d?c=Mb(\"This chrome extension ID (chrome-extension://%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.\",a):\"http\"==d||\"https\"==d?c=Mb(\"This domain (%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.\",a):b=\"operation-not-supported-in-this-environment\";\nu.call(this,b,c)}t(th,u);function uh(a,b,c){u.call(this,a,c);a=b||{};a.Gb&&K(this,\"email\",a.Gb);a.da&&K(this,\"phoneNumber\",a.da);a.credential&&K(this,\"credential\",a.credential);a.Wb&&K(this,\"tenantId\",a.Wb)}t(uh,u);uh.prototype.v=function(){var a={code:this.code,message:this.message};this.email&&(a.email=this.email);this.phoneNumber&&(a.phoneNumber=this.phoneNumber);this.tenantId&&(a.tenantId=this.tenantId);var b=this.credential&&this.credential.v();b&&B(a,b);return a};uh.prototype.toJSON=function(){return this.v()};\nfunction vh(a){if(a.code){var b=a.code||\"\";0==b.indexOf(ua)&&(b=b.substring(ua.length));var c={credential:mh(a),Wb:a.tenantId};if(a.email)c.Gb=a.email;else if(a.phoneNumber)c.da=a.phoneNumber;else if(!c.credential)return new u(b,a.message||void 0);return new uh(b,c,a.message)}return null};function wh(){}wh.prototype.c=null;function xh(a){return a.c||(a.c=a.b())};var yh;function zh(){}t(zh,wh);zh.prototype.a=function(){var a=Ah(this);return a?new ActiveXObject(a):new XMLHttpRequest};zh.prototype.b=function(){var a={};Ah(this)&&(a[0]=!0,a[1]=!0);return a};\nfunction Ah(a){if(!a.f&&\"undefined\"==typeof XMLHttpRequest&&\"undefined\"!=typeof ActiveXObject){for(var b=[\"MSXML2.XMLHTTP.6.0\",\"MSXML2.XMLHTTP.3.0\",\"MSXML2.XMLHTTP\",\"Microsoft.XMLHTTP\"],c=0;c<b.length;c++){var d=b[c];try{return new ActiveXObject(d),a.f=d}catch(e){}}throw Error(\"Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed\");}return a.f}yh=new zh;function Bh(){}t(Bh,wh);Bh.prototype.a=function(){var a=new XMLHttpRequest;if(\"withCredentials\"in a)return a;if(\"undefined\"!=typeof XDomainRequest)return new Ch;throw Error(\"Unsupported browser\");};Bh.prototype.b=function(){return{}};\nfunction Ch(){this.a=new XDomainRequest;this.readyState=0;this.onreadystatechange=null;this.responseType=this.responseText=this.response=\"\";this.status=-1;this.statusText=\"\";this.a.onload=r(this.oc,this);this.a.onerror=r(this.Pb,this);this.a.onprogress=r(this.pc,this);this.a.ontimeout=r(this.tc,this)}k=Ch.prototype;k.open=function(a,b,c){if(null!=c&&!c)throw Error(\"Only async requests are supported.\");this.a.open(a,b)};\nk.send=function(a){if(a)if(\"string\"==typeof a)this.a.send(a);else throw Error(\"Only string data is supported\");else this.a.send()};k.abort=function(){this.a.abort()};k.setRequestHeader=function(){};k.getResponseHeader=function(a){return\"content-type\"==a.toLowerCase()?this.a.contentType:\"\"};k.oc=function(){this.status=200;this.response=this.responseText=this.a.responseText;Dh(this,4)};k.Pb=function(){this.status=500;this.response=this.responseText=\"\";Dh(this,4)};k.tc=function(){this.Pb()};\nk.pc=function(){this.status=200;Dh(this,1)};function Dh(a,b){a.readyState=b;if(a.onreadystatechange)a.onreadystatechange()}k.getAllResponseHeaders=function(){return\"content-type: \"+this.a.contentType};function Eh(a,b,c){this.reset(a,b,c,void 0,void 0)}Eh.prototype.a=null;var Fh=0;Eh.prototype.reset=function(a,b,c,d,e){\"number\"==typeof e||Fh++;d||ta();delete this.a};function Gh(a){this.f=a;this.b=this.c=this.a=null}function Hh(a,b){this.name=a;this.value=b}Hh.prototype.toString=function(){return this.name};var Ih=new Hh(\"SEVERE\",1E3),Jh=new Hh(\"WARNING\",900),Kh=new Hh(\"CONFIG\",700),Lh=new Hh(\"FINE\",500);function Mh(a){if(a.c)return a.c;if(a.a)return Mh(a.a);Da(\"Root logger has no level set.\");return null}Gh.prototype.log=function(a,b,c){if(a.value>=Mh(this).value)for(n(b)&&(b=b()),a=new Eh(a,String(b),this.f),c&&(a.a=c),c=this;c;)c=c.a};var Nh={},Oh=null;\nfunction Ph(a){Oh||(Oh=new Gh(\"\"),Nh[\"\"]=Oh,Oh.c=Kh);var b;if(!(b=Nh[a])){b=new Gh(a);var c=a.lastIndexOf(\".\"),d=a.substr(c+1);c=Ph(a.substr(0,c));c.b||(c.b={});c.b[d]=b;b.a=c;Nh[a]=b}return b};function Qh(a,b){a&&a.log(Lh,b,void 0)};function Rh(a){this.f=a}t(Rh,wh);Rh.prototype.a=function(){return new Sh(this.f)};Rh.prototype.b=function(a){return function(){return a}}({});function Sh(a){G.call(this);this.s=a;this.readyState=Th;this.status=0;this.responseType=this.responseText=this.response=this.statusText=\"\";this.onreadystatechange=null;this.i=new Headers;this.b=null;this.m=\"GET\";this.g=\"\";this.a=!1;this.h=Ph(\"goog.net.FetchXmlHttp\");this.l=this.c=this.f=null}t(Sh,G);var Th=0;k=Sh.prototype;\nk.open=function(a,b){if(this.readyState!=Th)throw this.abort(),Error(\"Error reopening a connection\");this.m=a;this.g=b;this.readyState=1;Uh(this)};k.send=function(a){if(1!=this.readyState)throw this.abort(),Error(\"need to call open() first. \");this.a=!0;var b={headers:this.i,method:this.m,credentials:void 0,cache:void 0};a&&(b.body=a);this.s.fetch(new Request(this.g,b)).then(this.sc.bind(this),this.Sa.bind(this))};\nk.abort=function(){this.response=this.responseText=\"\";this.i=new Headers;this.status=0;this.c&&this.c.cancel(\"Request was aborted.\");1<=this.readyState&&this.a&&4!=this.readyState&&(this.a=!1,Vh(this,!1));this.readyState=Th};\nk.sc=function(a){this.a&&(this.f=a,this.b||(this.b=a.headers,this.readyState=2,Uh(this)),this.a&&(this.readyState=3,Uh(this),this.a&&(\"arraybuffer\"===this.responseType?a.arrayBuffer().then(this.qc.bind(this),this.Sa.bind(this)):\"undefined\"!==typeof l.ReadableStream&&\"body\"in a?(this.response=this.responseText=\"\",this.c=a.body.getReader(),this.l=new TextDecoder,Wh(this)):a.text().then(this.rc.bind(this),this.Sa.bind(this)))))};function Wh(a){a.c.read().then(a.nc.bind(a)).catch(a.Sa.bind(a))}\nk.nc=function(a){if(this.a){var b=this.l.decode(a.value?a.value:new Uint8Array(0),{stream:!a.done});b&&(this.response=this.responseText+=b);a.done?Vh(this,!0):Uh(this);3==this.readyState&&Wh(this)}};k.rc=function(a){this.a&&(this.response=this.responseText=a,Vh(this,!0))};k.qc=function(a){this.a&&(this.response=a,Vh(this,!0))};k.Sa=function(a){var b=this.h;b&&b.log(Jh,\"Failed to fetch url \"+this.g,a instanceof Error?a:Error(a));this.a&&Vh(this,!0)};\nfunction Vh(a,b){b&&a.f&&(a.status=a.f.status,a.statusText=a.f.statusText);a.readyState=4;a.f=null;a.c=null;a.l=null;Uh(a)}k.setRequestHeader=function(a,b){this.i.append(a,b)};k.getResponseHeader=function(a){return this.b?this.b.get(a.toLowerCase())||\"\":((a=this.h)&&a.log(Jh,\"Attempting to get response header but no headers have been received for url: \"+this.g,void 0),\"\")};\nk.getAllResponseHeaders=function(){if(!this.b){var a=this.h;a&&a.log(Jh,\"Attempting to get all response headers but no headers have been received for url: \"+this.g,void 0);return\"\"}a=[];for(var b=this.b.entries(),c=b.next();!c.done;)c=c.value,a.push(c[0]+\": \"+c[1]),c=b.next();return a.join(\"\\r\\n\")};function Uh(a){a.onreadystatechange&&a.onreadystatechange.call(a)};function Xh(a){G.call(this);this.headers=new Fd;this.D=a||null;this.c=!1;this.B=this.a=null;this.h=this.P=this.l=\"\";this.f=this.O=this.i=this.N=!1;this.g=0;this.s=null;this.m=Yh;this.w=this.R=!1}t(Xh,G);var Yh=\"\";Xh.prototype.b=Ph(\"goog.net.XhrIo\");var Zh=/^https?$/i,$h=[\"POST\",\"PUT\"];\nfunction ai(a,b,c,d,e){if(a.a)throw Error(\"[goog.net.XhrIo] Object is active with another request=\"+a.l+\"; newUri=\"+b);c=c?c.toUpperCase():\"GET\";a.l=b;a.h=\"\";a.P=c;a.N=!1;a.c=!0;a.a=a.D?a.D.a():yh.a();a.B=a.D?xh(a.D):xh(yh);a.a.onreadystatechange=r(a.Sb,a);try{Qh(a.b,bi(a,\"Opening Xhr\")),a.O=!0,a.a.open(c,String(b),!0),a.O=!1}catch(g){Qh(a.b,bi(a,\"Error opening Xhr: \"+g.message));ci(a,g);return}b=d||\"\";var f=new Fd(a.headers);e&&Ed(e,function(g,h){f.set(h,g)});e=Qa(f.X());d=l.FormData&&b instanceof\nl.FormData;!Sa($h,c)||e||d||f.set(\"Content-Type\",\"application/x-www-form-urlencoded;charset=utf-8\");f.forEach(function(g,h){this.a.setRequestHeader(h,g)},a);a.m&&(a.a.responseType=a.m);\"withCredentials\"in a.a&&a.a.withCredentials!==a.R&&(a.a.withCredentials=a.R);try{di(a),0<a.g&&(a.w=ei(a.a),Qh(a.b,bi(a,\"Will abort after \"+a.g+\"ms if incomplete, xhr2 \"+a.w)),a.w?(a.a.timeout=a.g,a.a.ontimeout=r(a.Ka,a)):a.s=Ad(a.Ka,a.g,a)),Qh(a.b,bi(a,\"Sending request\")),a.i=!0,a.a.send(b),a.i=!1}catch(g){Qh(a.b,\nbi(a,\"Send error: \"+g.message)),ci(a,g)}}function ei(a){return Sb&&bc(9)&&\"number\"===typeof a.timeout&&void 0!==a.ontimeout}function Ra(a){return\"content-type\"==a.toLowerCase()}k=Xh.prototype;k.Ka=function(){\"undefined\"!=typeof ha&&this.a&&(this.h=\"Timed out after \"+this.g+\"ms, aborting\",Qh(this.b,bi(this,this.h)),this.dispatchEvent(\"timeout\"),this.abort(8))};function ci(a,b){a.c=!1;a.a&&(a.f=!0,a.a.abort(),a.f=!1);a.h=b;fi(a);gi(a)}\nfunction fi(a){a.N||(a.N=!0,a.dispatchEvent(\"complete\"),a.dispatchEvent(\"error\"))}k.abort=function(){this.a&&this.c&&(Qh(this.b,bi(this,\"Aborting\")),this.c=!1,this.f=!0,this.a.abort(),this.f=!1,this.dispatchEvent(\"complete\"),this.dispatchEvent(\"abort\"),gi(this))};k.Ba=function(){this.a&&(this.c&&(this.c=!1,this.f=!0,this.a.abort(),this.f=!1),gi(this,!0));Xh.Za.Ba.call(this)};k.Sb=function(){this.wa||(this.O||this.i||this.f?hi(this):this.Hc())};k.Hc=function(){hi(this)};\nfunction hi(a){if(a.c&&\"undefined\"!=typeof ha)if(a.B[1]&&4==ii(a)&&2==ji(a))Qh(a.b,bi(a,\"Local request error detected and ignored\"));else if(a.i&&4==ii(a))Ad(a.Sb,0,a);else if(a.dispatchEvent(\"readystatechange\"),4==ii(a)){Qh(a.b,bi(a,\"Request complete\"));a.c=!1;try{var b=ji(a);a:switch(b){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var c=!0;break a;default:c=!1}var d;if(!(d=c)){var e;if(e=0===b){var f=String(a.l).match(Id)[1]||null;if(!f&&l.self&&l.self.location){var g=l.self.location.protocol;\nf=g.substr(0,g.length-1)}e=!Zh.test(f?f.toLowerCase():\"\")}d=e}if(d)a.dispatchEvent(\"complete\"),a.dispatchEvent(\"success\");else{try{var h=2<ii(a)?a.a.statusText:\"\"}catch(m){Qh(a.b,\"Can not get status: \"+m.message),h=\"\"}a.h=h+\" [\"+ji(a)+\"]\";fi(a)}}finally{gi(a)}}}function gi(a,b){if(a.a){di(a);var c=a.a,d=a.B[0]?ka:null;a.a=null;a.B=null;b||a.dispatchEvent(\"ready\");try{c.onreadystatechange=d}catch(e){(a=a.b)&&a.log(Ih,\"Problem encountered resetting onreadystatechange: \"+e.message,void 0)}}}\nfunction di(a){a.a&&a.w&&(a.a.ontimeout=null);a.s&&(l.clearTimeout(a.s),a.s=null)}function ii(a){return a.a?a.a.readyState:0}function ji(a){try{return 2<ii(a)?a.a.status:-1}catch(b){return-1}}function ki(a){try{return a.a?a.a.responseText:\"\"}catch(b){return Qh(a.b,\"Can not get responseText: \"+b.message),\"\"}}\nk.getResponse=function(){try{if(!this.a)return null;if(\"response\"in this.a)return this.a.response;switch(this.m){case Yh:case \"text\":return this.a.responseText;case \"arraybuffer\":if(\"mozResponseArrayBuffer\"in this.a)return this.a.mozResponseArrayBuffer}var a=this.b;a&&a.log(Ih,\"Response type \"+this.m+\" is not supported on this browser\",void 0);return null}catch(b){return Qh(this.b,\"Can not get response: \"+b.message),null}};function bi(a,b){return b+\" [\"+a.P+\" \"+a.l+\" \"+ji(a)+\"]\"};/*\n Portions of this code are from MochiKit, received by\n The Closure Authors under the MIT license. All other code is Copyright\n 2005-2009 The Closure Authors. All Rights Reserved.\n*/\nfunction li(a){var b=mi;this.g=[];this.w=b;this.s=a||null;this.f=this.a=!1;this.c=void 0;this.u=this.B=this.i=!1;this.h=0;this.b=null;this.l=0}li.prototype.cancel=function(a){if(this.a)this.c instanceof li&&this.c.cancel();else{if(this.b){var b=this.b;delete this.b;a?b.cancel(a):(b.l--,0>=b.l&&b.cancel())}this.w?this.w.call(this.s,this):this.u=!0;this.a||(a=new ni(this),oi(this),pi(this,!1,a))}};li.prototype.m=function(a,b){this.i=!1;pi(this,a,b)};function pi(a,b,c){a.a=!0;a.c=c;a.f=!b;qi(a)}\nfunction oi(a){if(a.a){if(!a.u)throw new ri(a);a.u=!1}}function si(a,b){ti(a,null,b,void 0)}function ti(a,b,c,d){a.g.push([b,c,d]);a.a&&qi(a)}li.prototype.then=function(a,b,c){var d,e,f=new D(function(g,h){d=g;e=h});ti(this,d,function(g){g instanceof ni?f.cancel():e(g)});return f.then(a,b,c)};li.prototype.$goog_Thenable=!0;function ui(a){return Pa(a.g,function(b){return n(b[1])})}\nfunction qi(a){if(a.h&&a.a&&ui(a)){var b=a.h,c=vi[b];c&&(l.clearTimeout(c.a),delete vi[b]);a.h=0}a.b&&(a.b.l--,delete a.b);b=a.c;for(var d=c=!1;a.g.length&&!a.i;){var e=a.g.shift(),f=e[0],g=e[1];e=e[2];if(f=a.f?g:f)try{var h=f.call(e||a.s,b);void 0!==h&&(a.f=a.f&&(h==b||h instanceof Error),a.c=b=h);if(Ba(b)||\"function\"===typeof l.Promise&&b instanceof l.Promise)d=!0,a.i=!0}catch(m){b=m,a.f=!0,ui(a)||(c=!0)}}a.c=b;d&&(h=r(a.m,a,!0),d=r(a.m,a,!1),b instanceof li?(ti(b,h,d),b.B=!0):b.then(h,d));c&&(b=\nnew wi(b),vi[b.a]=b,a.h=b.a)}function ri(){w.call(this)}t(ri,w);ri.prototype.message=\"Deferred has already fired\";ri.prototype.name=\"AlreadyCalledError\";function ni(){w.call(this)}t(ni,w);ni.prototype.message=\"Deferred was canceled\";ni.prototype.name=\"CanceledError\";function wi(a){this.a=l.setTimeout(r(this.c,this),0);this.b=a}wi.prototype.c=function(){delete vi[this.a];throw this.b;};var vi={};function xi(a){var b={},c=b.document||document,d=vb(a).toString(),e=ic(document,\"SCRIPT\"),f={Tb:e,Ka:void 0},g=new li(f),h=null,m=null!=b.timeout?b.timeout:5E3;0<m&&(h=window.setTimeout(function(){yi(e,!0);var p=new zi(Ai,\"Timeout reached for loading script \"+d);oi(g);pi(g,!1,p)},m),f.Ka=h);e.onload=e.onreadystatechange=function(){e.readyState&&\"loaded\"!=e.readyState&&\"complete\"!=e.readyState||(yi(e,b.ud||!1,h),oi(g),pi(g,!0,null))};e.onerror=function(){yi(e,!0,h);var p=new zi(Bi,\"Error while loading script \"+\nd);oi(g);pi(g,!1,p)};f=b.attributes||{};B(f,{type:\"text/javascript\",charset:\"UTF-8\"});fc(e,f);Lb(e,a);Ci(c).appendChild(e);return g}function Ci(a){var b;return(b=(a||document).getElementsByTagName(\"HEAD\"))&&0!=b.length?b[0]:a.documentElement}function mi(){if(this&&this.Tb){var a=this.Tb;a&&\"SCRIPT\"==a.tagName&&yi(a,!0,this.Ka)}}\nfunction yi(a,b,c){null!=c&&l.clearTimeout(c);a.onload=ka;a.onerror=ka;a.onreadystatechange=ka;b&&window.setTimeout(function(){a&&a.parentNode&&a.parentNode.removeChild(a)},0)}var Bi=0,Ai=1;function zi(a,b){var c=\"Jsloader error (code #\"+a+\")\";b&&(c+=\": \"+b);w.call(this,c);this.code=a}t(zi,w);function Di(a){this.f=a}t(Di,wh);Di.prototype.a=function(){return new this.f};Di.prototype.b=function(){return{}};\nfunction Ei(a,b,c){this.c=a;a=b||{};this.u=a.secureTokenEndpoint||\"https://securetoken.googleapis.com/v1/token\";this.m=a.secureTokenTimeout||Fi;this.g=kb(a.secureTokenHeaders||Gi);this.h=a.firebaseEndpoint||\"https://www.googleapis.com/identitytoolkit/v3/relyingparty/\";this.l=a.identityPlatformEndpoint||\"https://identitytoolkit.googleapis.com/v2/\";this.i=a.firebaseTimeout||Hi;this.a=kb(a.firebaseHeaders||Ii);c&&(this.a[\"X-Client-Version\"]=c,this.g[\"X-Client-Version\"]=c);c=\"Node\"==He();c=l.XMLHttpRequest||\nc&&_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.INTERNAL.node&&_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.INTERNAL.node.XMLHttpRequest;if(!c&&!Ge())throw new u(\"internal-error\",\"The XMLHttpRequest compatibility library was not found.\");this.f=void 0;Ge()?this.f=new Rh(self):Ie()?this.f=new Di(c):this.f=new Bh;this.b=null}var Ji,Ag=\"idToken\",Fi=new We(3E4,6E4),Gi={\"Content-Type\":\"application/x-www-form-urlencoded\"},Hi=new We(3E4,6E4),Ii={\"Content-Type\":\"application/json\"};function Ki(a,b){b?a.a[\"X-Firebase-Locale\"]=b:delete a.a[\"X-Firebase-Locale\"]}\nfunction Li(a,b){b?(a.a[\"X-Client-Version\"]=b,a.g[\"X-Client-Version\"]=b):(delete a.a[\"X-Client-Version\"],delete a.g[\"X-Client-Version\"])}Ei.prototype.S=function(){return this.b};function Mi(a,b,c,d,e,f,g){re()||Ge()?a=r(a.w,a):(Ji||(Ji=new D(function(h,m){Ni(h,m)})),a=r(a.s,a));a(b,c,d,e,f,g)}\nEi.prototype.w=function(a,b,c,d,e,f){if(Ge()&&(\"undefined\"===typeof l.fetch||\"undefined\"===typeof l.Headers||\"undefined\"===typeof l.Request))throw new u(\"operation-not-supported-in-this-environment\",\"fetch, Headers and Request native APIs or equivalent Polyfills must be available to support HTTP requests from a Worker environment.\");var g=new Xh(this.f);if(f){g.g=Math.max(0,f);var h=setTimeout(function(){g.dispatchEvent(\"timeout\")},f)}md(g,\"complete\",function(){h&&clearTimeout(h);var m=null;try{m=\nJSON.parse(ki(this))||null}catch(p){m=null}b&&b(m)});sd(g,\"ready\",function(){h&&clearTimeout(h);Sc(this)});sd(g,\"timeout\",function(){h&&clearTimeout(h);Sc(this);b&&b(null)});ai(g,a,c,d,e)};var Oi=new nb(ob,\"https://apis.google.com/js/client.js?onload=%{onload}\"),Pi=\"__fcb\"+Math.floor(1E6*Math.random()).toString();\nfunction Ni(a,b){if(((window.gapi||{}).client||{}).request)a();else{l[Pi]=function(){((window.gapi||{}).client||{}).request?a():b(Error(\"CORS_UNSUPPORTED\"))};var c=wb(Oi,{onload:Pi});si(xi(c),function(){b(Error(\"CORS_UNSUPPORTED\"))})}}\nEi.prototype.s=function(a,b,c,d,e){var f=this;Ji.then(function(){window.gapi.client.setApiKey(f.c);var g=window.gapi.auth.getToken();window.gapi.auth.setToken(null);window.gapi.client.request({path:a,method:c,body:d,headers:e,authType:\"none\",callback:function(h){window.gapi.auth.setToken(g);b&&b(h)}})}).o(function(g){b&&b({error:{message:g&&g.message||\"CORS_UNSUPPORTED\"}})})};\nfunction Qi(a,b){return new D(function(c,d){\"refresh_token\"==b.grant_type&&b.refresh_token||\"authorization_code\"==b.grant_type&&b.code?Mi(a,a.u+\"?key=\"+encodeURIComponent(a.c),function(e){e?e.error?d(Ri(e)):e.access_token&&e.refresh_token?c(e):d(new u(\"internal-error\")):d(new u(\"network-request-failed\"))},\"POST\",ce(b).toString(),a.g,a.m.get()):d(new u(\"internal-error\"))})}\nfunction Si(a,b,c,d,e,f,g){var h=Zd(b+c);H(h,\"key\",a.c);g&&H(h,\"cb\",ta().toString());var m=\"GET\"==d;if(m)for(var p in e)e.hasOwnProperty(p)&&H(h,p,e[p]);return new D(function(v,C){Mi(a,h.toString(),function(A){A?A.error?C(Ri(A,f||{})):v(A):C(new u(\"network-request-failed\"))},d,m?void 0:he(Se(e)),a.a,a.i.get())})}function Ti(a){a=a.email;if(\"string\"!==typeof a||!Ae.test(a))throw new u(\"invalid-email\");}function Ui(a){\"email\"in a&&Ti(a)}\nfunction Vi(a,b){return N(a,Wi,{identifier:b,continueUri:Pe()?oe():\"http://localhost\"}).then(function(c){return c.signinMethods||[]})}function Xi(a){return N(a,Yi,{}).then(function(b){return b.authorizedDomains||[]})}function O(a){if(!a[Ag]){if(a.mfaPendingCredential)throw new u(\"multi-factor-auth-required\",null,kb(a));throw new u(\"internal-error\");}}\nfunction Zi(a){if(a.phoneNumber||a.temporaryProof){if(!a.phoneNumber||!a.temporaryProof)throw new u(\"internal-error\");}else{if(!a.sessionInfo)throw new u(\"missing-verification-id\");if(!a.code)throw new u(\"missing-verification-code\");}}Ei.prototype.vb=function(){return N(this,$i,{})};Ei.prototype.xb=function(a,b){return N(this,aj,{idToken:a,email:b})};Ei.prototype.yb=function(a,b){return N(this,Zg,{idToken:a,password:b})};var bj={displayName:\"DISPLAY_NAME\",photoUrl:\"PHOTO_URL\"};k=Ei.prototype;\nk.zb=function(a,b){var c={idToken:a},d=[];ib(bj,function(e,f){var g=b[f];null===g?d.push(e):f in b&&(c[f]=g)});d.length&&(c.deleteAttribute=d);return N(this,aj,c)};k.rb=function(a,b){a={requestType:\"PASSWORD_RESET\",email:a};B(a,b);return N(this,cj,a)};k.sb=function(a,b){a={requestType:\"EMAIL_SIGNIN\",email:a};B(a,b);return N(this,dj,a)};k.qb=function(a,b){a={requestType:\"VERIFY_EMAIL\",idToken:a};B(a,b);return N(this,ej,a)};\nk.Ab=function(a,b,c){a={requestType:\"VERIFY_AND_CHANGE_EMAIL\",idToken:a,newEmail:b};B(a,c);return N(this,fj,a)};function kh(a,b){return N(a,gj,b)}k.cb=function(a){return N(this,hj,a)};function ih(a,b){return N(a,ij,b).then(function(c){return c.phoneSessionInfo.sessionInfo})}\nfunction jj(a){if(!a.phoneVerificationInfo)throw new u(\"internal-error\");if(!a.phoneVerificationInfo.sessionInfo)throw new u(\"missing-verification-id\");if(!a.phoneVerificationInfo.code)throw new u(\"missing-verification-code\");}function jh(a,b){return N(a,kj,b).then(function(c){return c.phoneResponseInfo.sessionInfo})}function lj(a,b,c){return N(a,mj,{idToken:b,deleteProvider:c})}function nj(a){if(!a.requestUri||!a.sessionId&&!a.postBody&&!a.pendingToken)throw new u(\"internal-error\");}\nfunction oj(a,b){b.oauthIdToken&&b.providerId&&0==b.providerId.indexOf(\"oidc.\")&&!b.pendingToken&&(a.sessionId?b.nonce=a.sessionId:a.postBody&&(a=new Qd(a.postBody),ge(a,\"nonce\")&&(b.nonce=a.get(\"nonce\"))));return b}\nfunction pj(a){var b=null;a.needConfirmation?(a.code=\"account-exists-with-different-credential\",b=vh(a)):\"FEDERATED_USER_ID_ALREADY_LINKED\"==a.errorMessage?(a.code=\"credential-already-in-use\",b=vh(a)):\"EMAIL_EXISTS\"==a.errorMessage?(a.code=\"email-already-in-use\",b=vh(a)):a.errorMessage&&(b=qj(a.errorMessage));if(b)throw b;O(a)}function Cg(a,b){b.returnIdpCredential=!0;return N(a,rj,b)}function Eg(a,b){b.returnIdpCredential=!0;return N(a,sj,b)}\nfunction Fg(a,b){b.returnIdpCredential=!0;b.autoCreate=!1;return N(a,tj,b)}function uj(a){if(!a.oobCode)throw new u(\"invalid-action-code\");}k.jb=function(a,b){return N(this,vj,{oobCode:a,newPassword:b})};k.Pa=function(a){return N(this,wj,{oobCode:a})};k.fb=function(a){return N(this,xj,{oobCode:a})};\nvar xj={endpoint:\"setAccountInfo\",A:uj,Y:\"email\",C:!0},wj={endpoint:\"resetPassword\",A:uj,G:function(a){var b=a.requestType;if(!b||!a.email&&\"EMAIL_SIGNIN\"!=b&&\"VERIFY_AND_CHANGE_EMAIL\"!=b)throw new u(\"internal-error\");},C:!0},yj={endpoint:\"signupNewUser\",A:function(a){Ti(a);if(!a.password)throw new u(\"weak-password\");},G:O,U:!0,C:!0},Wi={endpoint:\"createAuthUri\",C:!0},zj={endpoint:\"deleteAccount\",M:[\"idToken\"]},mj={endpoint:\"setAccountInfo\",M:[\"idToken\",\"deleteProvider\"],A:function(a){if(\"array\"!=\nla(a.deleteProvider))throw new u(\"internal-error\");}},Wg={endpoint:\"emailLinkSignin\",M:[\"email\",\"oobCode\"],A:Ti,G:O,U:!0,C:!0},Yg={endpoint:\"emailLinkSignin\",M:[\"idToken\",\"email\",\"oobCode\"],A:Ti,G:O,U:!0},Aj={endpoint:\"accounts/mfaEnrollment:finalize\",M:[\"idToken\",\"phoneVerificationInfo\"],A:jj,G:O,C:!0,La:!0},Bj={endpoint:\"accounts/mfaSignIn:finalize\",M:[\"mfaPendingCredential\",\"phoneVerificationInfo\"],A:jj,G:O,C:!0,La:!0},Cj={endpoint:\"getAccountInfo\"},dj={endpoint:\"getOobConfirmationCode\",M:[\"requestType\"],\nA:function(a){if(\"EMAIL_SIGNIN\"!=a.requestType)throw new u(\"internal-error\");Ti(a)},Y:\"email\",C:!0},ej={endpoint:\"getOobConfirmationCode\",M:[\"idToken\",\"requestType\"],A:function(a){if(\"VERIFY_EMAIL\"!=a.requestType)throw new u(\"internal-error\");},Y:\"email\",C:!0},fj={endpoint:\"getOobConfirmationCode\",M:[\"idToken\",\"newEmail\",\"requestType\"],A:function(a){if(\"VERIFY_AND_CHANGE_EMAIL\"!=a.requestType)throw new u(\"internal-error\");},Y:\"email\",C:!0},cj={endpoint:\"getOobConfirmationCode\",M:[\"requestType\"],A:function(a){if(\"PASSWORD_RESET\"!=\na.requestType)throw new u(\"internal-error\");Ti(a)},Y:\"email\",C:!0},Yi={hb:!0,endpoint:\"getProjectConfig\",Rb:\"GET\"},Dj={hb:!0,endpoint:\"getRecaptchaParam\",Rb:\"GET\",G:function(a){if(!a.recaptchaSiteKey)throw new u(\"internal-error\");}},vj={endpoint:\"resetPassword\",A:uj,Y:\"email\",C:!0},gj={endpoint:\"sendVerificationCode\",M:[\"phoneNumber\",\"recaptchaToken\"],Y:\"sessionInfo\",C:!0},aj={endpoint:\"setAccountInfo\",M:[\"idToken\"],A:Ui,U:!0},Zg={endpoint:\"setAccountInfo\",M:[\"idToken\"],A:function(a){Ui(a);if(!a.password)throw new u(\"weak-password\");\n},G:O,U:!0},$i={endpoint:\"signupNewUser\",G:O,U:!0,C:!0},ij={endpoint:\"accounts/mfaEnrollment:start\",M:[\"idToken\",\"phoneEnrollmentInfo\"],A:function(a){if(!a.phoneEnrollmentInfo)throw new u(\"internal-error\");if(!a.phoneEnrollmentInfo.phoneNumber)throw new u(\"missing-phone-number\");if(!a.phoneEnrollmentInfo.recaptchaToken)throw new u(\"missing-app-credential\");},G:function(a){if(!a.phoneSessionInfo||!a.phoneSessionInfo.sessionInfo)throw new u(\"internal-error\");},C:!0,La:!0},kj={endpoint:\"accounts/mfaSignIn:start\",\nM:[\"mfaPendingCredential\",\"mfaEnrollmentId\",\"phoneSignInInfo\"],A:function(a){if(!a.phoneSignInInfo||!a.phoneSignInInfo.recaptchaToken)throw new u(\"missing-app-credential\");},G:function(a){if(!a.phoneResponseInfo||!a.phoneResponseInfo.sessionInfo)throw new u(\"internal-error\");},C:!0,La:!0},rj={endpoint:\"verifyAssertion\",A:nj,Wa:oj,G:pj,U:!0,C:!0},tj={endpoint:\"verifyAssertion\",A:nj,Wa:oj,G:function(a){if(a.errorMessage&&\"USER_NOT_FOUND\"==a.errorMessage)throw new u(\"user-not-found\");if(a.errorMessage)throw qj(a.errorMessage);\nO(a)},U:!0,C:!0},sj={endpoint:\"verifyAssertion\",A:function(a){nj(a);if(!a.idToken)throw new u(\"internal-error\");},Wa:oj,G:pj,U:!0},Ej={endpoint:\"verifyCustomToken\",A:function(a){if(!a.token)throw new u(\"invalid-custom-token\");},G:O,U:!0,C:!0},Xg={endpoint:\"verifyPassword\",A:function(a){Ti(a);if(!a.password)throw new u(\"wrong-password\");},G:O,U:!0,C:!0},hj={endpoint:\"verifyPhoneNumber\",A:Zi,G:O,C:!0},eh={endpoint:\"verifyPhoneNumber\",A:function(a){if(!a.idToken)throw new u(\"internal-error\");Zi(a)},\nG:function(a){if(a.temporaryProof)throw a.code=\"credential-already-in-use\",vh(a);O(a)}},fh={Eb:{USER_NOT_FOUND:\"user-not-found\"},endpoint:\"verifyPhoneNumber\",A:Zi,G:O,C:!0},Fj={endpoint:\"accounts/mfaEnrollment:withdraw\",M:[\"idToken\",\"mfaEnrollmentId\"],G:function(a){if(!!a[Ag]^!!a.refreshToken)throw new u(\"internal-error\");},C:!0,La:!0};\nfunction N(a,b,c){if(!jf(c,b.M))return F(new u(\"internal-error\"));var d=!!b.La,e=b.Rb||\"POST\",f;return E(c).then(b.A).then(function(){b.U&&(c.returnSecureToken=!0);b.C&&a.b&&\"undefined\"===typeof c.tenantId&&(c.tenantId=a.b);return d?Si(a,a.l,b.endpoint,e,c,b.Eb,b.hb||!1):Si(a,a.h,b.endpoint,e,c,b.Eb,b.hb||!1)}).then(function(g){f=g;return b.Wa?b.Wa(c,f):f}).then(b.G).then(function(){if(!b.Y)return f;if(!(b.Y in f))throw new u(\"internal-error\");return f[b.Y]})}\nfunction qj(a){return Ri({error:{errors:[{message:a}],code:400,message:a}})}\nfunction Ri(a,b){var c=(a.error&&a.error.errors&&a.error.errors[0]||{}).reason||\"\";var d={keyInvalid:\"invalid-api-key\",ipRefererBlocked:\"app-not-authorized\"};if(c=d[c]?new u(d[c]):null)return c;c=a.error&&a.error.message||\"\";d={INVALID_CUSTOM_TOKEN:\"invalid-custom-token\",CREDENTIAL_MISMATCH:\"custom-token-mismatch\",MISSING_CUSTOM_TOKEN:\"internal-error\",INVALID_IDENTIFIER:\"invalid-email\",MISSING_CONTINUE_URI:\"internal-error\",INVALID_EMAIL:\"invalid-email\",INVALID_PASSWORD:\"wrong-password\",USER_DISABLED:\"user-disabled\",\nMISSING_PASSWORD:\"internal-error\",EMAIL_EXISTS:\"email-already-in-use\",PASSWORD_LOGIN_DISABLED:\"operation-not-allowed\",INVALID_IDP_RESPONSE:\"invalid-credential\",INVALID_PENDING_TOKEN:\"invalid-credential\",FEDERATED_USER_ID_ALREADY_LINKED:\"credential-already-in-use\",MISSING_OR_INVALID_NONCE:\"missing-or-invalid-nonce\",INVALID_MESSAGE_PAYLOAD:\"invalid-message-payload\",INVALID_RECIPIENT_EMAIL:\"invalid-recipient-email\",INVALID_SENDER:\"invalid-sender\",EMAIL_NOT_FOUND:\"user-not-found\",RESET_PASSWORD_EXCEED_LIMIT:\"too-many-requests\",\nEXPIRED_OOB_CODE:\"expired-action-code\",INVALID_OOB_CODE:\"invalid-action-code\",MISSING_OOB_CODE:\"internal-error\",INVALID_PROVIDER_ID:\"invalid-provider-id\",CREDENTIAL_TOO_OLD_LOGIN_AGAIN:\"requires-recent-login\",INVALID_ID_TOKEN:\"invalid-user-token\",TOKEN_EXPIRED:\"user-token-expired\",USER_NOT_FOUND:\"user-token-expired\",CORS_UNSUPPORTED:\"cors-unsupported\",DYNAMIC_LINK_NOT_ACTIVATED:\"dynamic-link-not-activated\",INVALID_APP_ID:\"invalid-app-id\",TOO_MANY_ATTEMPTS_TRY_LATER:\"too-many-requests\",WEAK_PASSWORD:\"weak-password\",\nOPERATION_NOT_ALLOWED:\"operation-not-allowed\",USER_CANCELLED:\"user-cancelled\",CAPTCHA_CHECK_FAILED:\"captcha-check-failed\",INVALID_APP_CREDENTIAL:\"invalid-app-credential\",INVALID_CODE:\"invalid-verification-code\",INVALID_PHONE_NUMBER:\"invalid-phone-number\",INVALID_SESSION_INFO:\"invalid-verification-id\",INVALID_TEMPORARY_PROOF:\"invalid-credential\",MISSING_APP_CREDENTIAL:\"missing-app-credential\",MISSING_CODE:\"missing-verification-code\",MISSING_PHONE_NUMBER:\"missing-phone-number\",MISSING_SESSION_INFO:\"missing-verification-id\",\nQUOTA_EXCEEDED:\"quota-exceeded\",SESSION_EXPIRED:\"code-expired\",REJECTED_CREDENTIAL:\"rejected-credential\",INVALID_CONTINUE_URI:\"invalid-continue-uri\",MISSING_ANDROID_PACKAGE_NAME:\"missing-android-pkg-name\",MISSING_IOS_BUNDLE_ID:\"missing-ios-bundle-id\",UNAUTHORIZED_DOMAIN:\"unauthorized-continue-uri\",INVALID_DYNAMIC_LINK_DOMAIN:\"invalid-dynamic-link-domain\",INVALID_OAUTH_CLIENT_ID:\"invalid-oauth-client-id\",INVALID_CERT_HASH:\"invalid-cert-hash\",UNSUPPORTED_TENANT_OPERATION:\"unsupported-tenant-operation\",\nINVALID_TENANT_ID:\"invalid-tenant-id\",TENANT_ID_MISMATCH:\"tenant-id-mismatch\",ADMIN_ONLY_OPERATION:\"admin-restricted-operation\",INVALID_MFA_PENDING_CREDENTIAL:\"invalid-multi-factor-session\",MFA_ENROLLMENT_NOT_FOUND:\"multi-factor-info-not-found\",MISSING_MFA_PENDING_CREDENTIAL:\"missing-multi-factor-session\",MISSING_MFA_ENROLLMENT_ID:\"missing-multi-factor-info\",EMAIL_CHANGE_NEEDS_VERIFICATION:\"email-change-needs-verification\",SECOND_FACTOR_EXISTS:\"second-factor-already-in-use\",SECOND_FACTOR_LIMIT_EXCEEDED:\"maximum-second-factor-count-exceeded\",\nUNSUPPORTED_FIRST_FACTOR:\"unsupported-first-factor\",UNVERIFIED_EMAIL:\"unverified-email\"};B(d,b||{});b=(b=c.match(/^[^\\s]+\\s*:\\s*([\\s\\S]*)$/))&&1<b.length?b[1]:void 0;for(var e in d)if(0===c.indexOf(e))return new u(d[e],b);!b&&a&&(b=Re(a));return new u(\"internal-error\",b)};function Gj(a){this.b=a;this.a=null;this.nb=Hj(this)}\nfunction Hj(a){return Ij().then(function(){return new D(function(b,c){J(\"gapi.iframes.getContext\")().open({where:document.body,url:a.b,messageHandlersFilter:J(\"gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\"),attributes:{style:{position:\"absolute\",top:\"-100px\",width:\"1px\",height:\"1px\"}},dontclear:!0},function(d){function e(){clearTimeout(f);b()}a.a=d;a.a.restyle({setHideOnLeave:!1});var f=setTimeout(function(){c(Error(\"Network Error\"))},Jj.get());d.ping(e).then(e,function(){c(Error(\"Network Error\"))})})})})}\nfunction Kj(a,b){return a.nb.then(function(){return new D(function(c){a.a.send(b.type,b,c,J(\"gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\"))})})}function Lj(a,b){a.nb.then(function(){a.a.register(\"authEvent\",b,J(\"gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\"))})}var Mj=new nb(ob,\"https://apis.google.com/js/api.js?onload=%{onload}\"),Nj=new We(3E4,6E4),Jj=new We(5E3,15E3),Oj=null;\nfunction Ij(){return Oj?Oj:Oj=(new D(function(a,b){function c(){Ve();J(\"gapi.load\")(\"gapi.iframes\",{callback:a,ontimeout:function(){Ve();b(Error(\"Network Error\"))},timeout:Nj.get()})}if(J(\"gapi.iframes.Iframe\"))a();else if(J(\"gapi.load\"))c();else{var d=\"__iframefcb\"+Math.floor(1E6*Math.random()).toString();l[d]=function(){J(\"gapi.load\")?c():b(Error(\"Network Error\"))};d=wb(Mj,{onload:d});E(xi(d)).o(function(){b(Error(\"Network Error\"))})}})).o(function(a){Oj=null;throw a;})};function Pj(a,b,c){this.i=a;this.g=b;this.h=c;this.f=null;this.a=$d(this.i,\"/__/auth/iframe\");H(this.a,\"apiKey\",this.g);H(this.a,\"appName\",this.h);this.b=null;this.c=[]}Pj.prototype.toString=function(){this.f?H(this.a,\"v\",this.f):fe(this.a.a,\"v\");this.b?H(this.a,\"eid\",this.b):fe(this.a.a,\"eid\");this.c.length?H(this.a,\"fw\",this.c.join(\",\")):fe(this.a.a,\"fw\");return this.a.toString()};function Qj(a,b,c,d,e){this.s=a;this.m=b;this.c=c;this.u=d;this.i=this.g=this.l=null;this.a=e;this.h=this.f=null}\nQj.prototype.ub=function(a){this.h=a;return this};\nQj.prototype.toString=function(){var a=$d(this.s,\"/__/auth/handler\");H(a,\"apiKey\",this.m);H(a,\"appName\",this.c);H(a,\"authType\",this.u);if(this.a.isOAuthProvider){var b=this.a;try{var c=_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.app(this.c).auth().ja()}catch(h){c=null}b.kb=c;H(a,\"providerId\",this.a.providerId);b=this.a;c=Se(b.Fb);for(var d in c)c[d]=c[d].toString();d=b.Oc;c=kb(c);for(var e=0;e<d.length;e++){var f=d[e];f in c&&delete c[f]}b.lb&&b.kb&&!c[b.lb]&&(c[b.lb]=b.kb);jb(c)||H(a,\"customParameters\",Re(c))}\"function\"===typeof this.a.Nb&&\n(b=this.a.Nb(),b.length&&H(a,\"scopes\",b.join(\",\")));this.l?H(a,\"redirectUrl\",this.l):fe(a.a,\"redirectUrl\");this.g?H(a,\"eventId\",this.g):fe(a.a,\"eventId\");this.i?H(a,\"v\",this.i):fe(a.a,\"v\");if(this.b)for(var g in this.b)this.b.hasOwnProperty(g)&&!Yd(a,g)&&H(a,g,this.b[g]);this.h?H(a,\"tid\",this.h):fe(a.a,\"tid\");this.f?H(a,\"eid\",this.f):fe(a.a,\"eid\");g=Rj(this.c);g.length&&H(a,\"fw\",g.join(\",\"));return a.toString()};function Rj(a){try{return _firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.app(a).auth().Ea()}catch(b){return[]}}\nfunction Sj(a,b,c,d,e){this.u=a;this.f=b;this.b=c;this.c=d||null;this.h=e||null;this.m=this.s=this.w=null;this.g=[];this.l=this.a=null}\nfunction Tj(a){var b=oe();return Xi(a).then(function(c){a:{var d=Zd(b),e=d.f;d=d.b;for(var f=0;f<c.length;f++){var g=c[f];var h=d;var m=e;0==g.indexOf(\"chrome-extension://\")?h=Zd(g).b==h&&\"chrome-extension\"==m:\"http\"!=m&&\"https\"!=m?h=!1:ze.test(g)?h=h==g:(g=g.split(\".\").join(\"\\\\.\"),h=(new RegExp(\"^(.+\\\\.\"+g+\"|\"+g+\")$\",\"i\")).test(h));if(h){c=!0;break a}}c=!1}if(!c)throw new th(oe());})}\nfunction Uj(a){if(a.l)return a.l;a.l=Be().then(function(){if(!a.s){var b=a.c,c=a.h,d=Rj(a.b),e=new Pj(a.u,a.f,a.b);e.f=b;e.b=c;e.c=Wa(d||[]);a.s=e.toString()}a.i=new Gj(a.s);Vj(a)});return a.l}k=Sj.prototype;k.Lb=function(a,b,c){var d=new u(\"popup-closed-by-user\"),e=new u(\"web-storage-unsupported\"),f=this,g=!1;return this.ka().then(function(){Wj(f).then(function(h){h||(a&&ve(a),b(e),g=!0)})}).o(function(){}).then(function(){if(!g)return ye(a)}).then(function(){if(!g)return Bd(c).then(function(){b(d)})})};\nk.Ub=function(){var a=I();return!Qe(a)&&!Ue(a)};k.Qb=function(){return!1};\nk.Jb=function(a,b,c,d,e,f,g,h){if(!a)return F(new u(\"popup-blocked\"));if(g&&!Qe())return this.ka().o(function(p){ve(a);e(p)}),d(),E();this.a||(this.a=Tj(Xj(this)));var m=this;return this.a.then(function(){var p=m.ka().o(function(v){ve(a);e(v);throw v;});d();return p}).then(function(){nh(c);if(!g){var p=Yj(m.u,m.f,m.b,b,c,null,f,m.c,void 0,m.h,h);pe(p,a)}}).o(function(p){\"auth/network-request-failed\"==p.code&&(m.a=null);throw p;})};\nfunction Xj(a){a.m||(a.w=a.c?Le(a.c,Rj(a.b)):null,a.m=new Ei(a.f,za(a.h),a.w));return a.m}k.Kb=function(a,b,c,d){this.a||(this.a=Tj(Xj(this)));var e=this;return this.a.then(function(){nh(b);var f=Yj(e.u,e.f,e.b,a,b,oe(),c,e.c,void 0,e.h,d);pe(f)}).o(function(f){\"auth/network-request-failed\"==f.code&&(e.a=null);throw f;})};k.ka=function(){var a=this;return Uj(this).then(function(){return a.i.nb}).o(function(){a.a=null;throw new u(\"network-request-failed\");})};k.Xb=function(){return!0};\nfunction Yj(a,b,c,d,e,f,g,h,m,p,v){a=new Qj(a,b,c,d,e);a.l=f;a.g=g;a.i=h;a.b=kb(m||null);a.f=p;return a.ub(v).toString()}function Vj(a){if(!a.i)throw Error(\"IfcHandler must be initialized!\");Lj(a.i,function(b){var c={};if(b&&b.authEvent){var d=!1;b=ph(b.authEvent);for(c=0;c<a.g.length;c++)d=a.g[c](b)||d;c={};c.status=d?\"ACK\":\"ERROR\";return E(c)}c.status=\"ERROR\";return E(c)})}\nfunction Wj(a){var b={type:\"webStorageSupport\"};return Uj(a).then(function(){return Kj(a.i,b)}).then(function(c){if(c&&c.length&&\"undefined\"!==typeof c[0].webStorageSupport)return c[0].webStorageSupport;throw Error();})}k.Ca=function(a){this.g.push(a)};k.Qa=function(a){Ua(this.g,function(b){return b==a})};function Zj(a){this.a=a||_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.INTERNAL.reactNative&&_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.INTERNAL.reactNative.AsyncStorage;if(!this.a)throw new u(\"internal-error\",\"The React Native compatibility library was not found.\");this.type=\"asyncStorage\"}k=Zj.prototype;k.get=function(a){return E(this.a.getItem(a)).then(function(b){return b&&Te(b)})};k.set=function(a,b){return E(this.a.setItem(a,Re(b)))};k.T=function(a){return E(this.a.removeItem(a))};k.ba=function(){};k.ha=function(){};function ak(a){this.b=a;this.a={};this.f=r(this.c,this)}var bk=[];function ck(){var a=Ge()?self:null;x(bk,function(c){c.b==a&&(b=c)});if(!b){var b=new ak(a);bk.push(b)}return b}\nak.prototype.c=function(a){var b=a.data.eventType,c=a.data.eventId,d=this.a[b];if(d&&0<d.length){a.ports[0].postMessage({status:\"ack\",eventId:c,eventType:b,response:null});var e=[];x(d,function(f){e.push(E().then(function(){return f(a.origin,a.data.data)}))});Ec(e).then(function(f){var g=[];x(f,function(h){g.push({fulfilled:h.Mb,value:h.value,reason:h.reason?h.reason.message:void 0})});x(g,function(h){for(var m in h)\"undefined\"===typeof h[m]&&delete h[m]});a.ports[0].postMessage({status:\"done\",eventId:c,\neventType:b,response:g})})}};function dk(a,b,c){jb(a.a)&&a.b.addEventListener(\"message\",a.f);\"undefined\"===typeof a.a[b]&&(a.a[b]=[]);a.a[b].push(c)};function ek(a){this.a=a}ek.prototype.postMessage=function(a,b){this.a.postMessage(a,b)};function fk(a){this.c=a;this.b=!1;this.a=[]}\nfunction gk(a,b,c,d){var e,f=c||{},g,h,m,p=null;if(a.b)return F(Error(\"connection_unavailable\"));var v=d?800:50,C=\"undefined\"!==typeof MessageChannel?new MessageChannel:null;return(new D(function(A,Q){C?(e=Math.floor(Math.random()*Math.pow(10,20)).toString(),C.port1.start(),h=setTimeout(function(){Q(Error(\"unsupported_event\"))},v),g=function(xa){xa.data.eventId===e&&(\"ack\"===xa.data.status?(clearTimeout(h),m=setTimeout(function(){Q(Error(\"timeout\"))},3E3)):\"done\"===xa.data.status?(clearTimeout(m),\n\"undefined\"!==typeof xa.data.response?A(xa.data.response):Q(Error(\"unknown_error\"))):(clearTimeout(h),clearTimeout(m),Q(Error(\"invalid_response\"))))},p={messageChannel:C,onMessage:g},a.a.push(p),C.port1.addEventListener(\"message\",g),a.c.postMessage({eventType:b,eventId:e,data:f},[C.port2])):Q(Error(\"connection_unavailable\"))})).then(function(A){hk(a,p);return A}).o(function(A){hk(a,p);throw A;})}\nfunction hk(a,b){if(b){var c=b.messageChannel,d=b.onMessage;c&&(c.port1.removeEventListener(\"message\",d),c.port1.close());Ua(a.a,function(e){return e==b})}}fk.prototype.close=function(){for(;0<this.a.length;)hk(this,this.a[0]);this.b=!0};function ik(){if(!jk())throw new u(\"web-storage-unsupported\");this.c={};this.a=[];this.b=0;this.u=l.indexedDB;this.type=\"indexedDB\";this.g=this.l=this.f=this.i=null;this.s=!1;this.h=null;var a=this;Ge()&&self?(this.l=ck(),dk(this.l,\"keyChanged\",function(b,c){return kk(a).then(function(d){0<d.length&&x(a.a,function(e){e(d)});return{keyProcessed:Sa(d,c.key)}})}),dk(this.l,\"ping\",function(){return E([\"keyChanged\"])})):bf().then(function(b){if(a.h=b)a.g=new fk(new ek(b)),gk(a.g,\"ping\",null,!0).then(function(c){c[0].fulfilled&&\nSa(c[0].value,\"keyChanged\")&&(a.s=!0)}).o(function(){})})}var lk;function mk(a){return new D(function(b,c){var d=a.u.deleteDatabase(\"firebaseLocalStorageDb\");d.onsuccess=function(){b()};d.onerror=function(e){c(Error(e.target.error))}})}\nfunction nk(a){return new D(function(b,c){var d=a.u.open(\"firebaseLocalStorageDb\",1);d.onerror=function(e){try{e.preventDefault()}catch(f){}c(Error(e.target.error))};d.onupgradeneeded=function(e){e=e.target.result;try{e.createObjectStore(\"firebaseLocalStorage\",{keyPath:\"fbase_key\"})}catch(f){c(f)}};d.onsuccess=function(e){e=e.target.result;e.objectStoreNames.contains(\"firebaseLocalStorage\")?b(e):mk(a).then(function(){return nk(a)}).then(function(f){b(f)}).o(function(f){c(f)})}})}\nfunction ok(a){a.m||(a.m=nk(a));return a.m}function jk(){try{return!!l.indexedDB}catch(a){return!1}}function pk(a){return a.objectStore(\"firebaseLocalStorage\")}function qk(a,b){return a.transaction([\"firebaseLocalStorage\"],b?\"readwrite\":\"readonly\")}function rk(a){return new D(function(b,c){a.onsuccess=function(d){d&&d.target?b(d.target.result):b()};a.onerror=function(d){c(d.target.error)}})}k=ik.prototype;\nk.set=function(a,b){var c=!1,d,e=this;return ok(this).then(function(f){d=f;f=pk(qk(d,!0));return rk(f.get(a))}).then(function(f){var g=pk(qk(d,!0));if(f)return f.value=b,rk(g.put(f));e.b++;c=!0;f={};f.fbase_key=a;f.value=b;return rk(g.add(f))}).then(function(){e.c[a]=b;return sk(e,a)}).ma(function(){c&&e.b--})};function sk(a,b){return a.g&&a.h&&af()===a.h?gk(a.g,\"keyChanged\",{key:b},a.s).then(function(){}).o(function(){}):E()}\nk.get=function(a){return ok(this).then(function(b){return rk(pk(qk(b,!1)).get(a))}).then(function(b){return b&&b.value})};k.T=function(a){var b=!1,c=this;return ok(this).then(function(d){b=!0;c.b++;return rk(pk(qk(d,!0))[\"delete\"](a))}).then(function(){delete c.c[a];return sk(c,a)}).ma(function(){b&&c.b--})};\nfunction kk(a){return ok(a).then(function(b){var c=pk(qk(b,!1));return c.getAll?rk(c.getAll()):new D(function(d,e){var f=[],g=c.openCursor();g.onsuccess=function(h){(h=h.target.result)?(f.push(h.value),h[\"continue\"]()):d(f)};g.onerror=function(h){e(h.target.error)}})}).then(function(b){var c={},d=[];if(0==a.b){for(d=0;d<b.length;d++)c[b[d].fbase_key]=b[d].value;d=qe(a.c,c);a.c=c}return d})}k.ba=function(a){0==this.a.length&&tk(this);this.a.push(a)};\nk.ha=function(a){Ua(this.a,function(b){return b==a});0==this.a.length&&uk(this)};function tk(a){function b(){a.f=setTimeout(function(){a.i=kk(a).then(function(c){0<c.length&&x(a.a,function(d){d(c)})}).then(function(){b()}).o(function(c){\"STOP_EVENT\"!=c.message&&b()})},800)}uk(a);b()}function uk(a){a.i&&a.i.cancel(\"STOP_EVENT\");a.f&&(clearTimeout(a.f),a.f=null)};function vk(a){var b=this,c=null;this.a=[];this.type=\"indexedDB\";this.c=a;this.b=E().then(function(){if(jk()){var d=Ne(),e=\"__sak\"+d;lk||(lk=new ik);c=lk;return c.set(e,d).then(function(){return c.get(e)}).then(function(f){if(f!==d)throw Error(\"indexedDB not supported!\");return c.T(e)}).then(function(){return c}).o(function(){return b.c})}return b.c}).then(function(d){b.type=d.type;d.ba(function(e){x(b.a,function(f){f(e)})});return d})}k=vk.prototype;k.get=function(a){return this.b.then(function(b){return b.get(a)})};\nk.set=function(a,b){return this.b.then(function(c){return c.set(a,b)})};k.T=function(a){return this.b.then(function(b){return b.T(a)})};k.ba=function(a){this.a.push(a)};k.ha=function(a){Ua(this.a,function(b){return b==a})};function wk(){this.a={};this.type=\"inMemory\"}k=wk.prototype;k.get=function(a){return E(this.a[a])};k.set=function(a,b){this.a[a]=b;return E()};k.T=function(a){delete this.a[a];return E()};k.ba=function(){};k.ha=function(){};function xk(){if(!yk()){if(\"Node\"==He())throw new u(\"internal-error\",\"The LocalStorage compatibility library was not found.\");throw new u(\"web-storage-unsupported\");}this.a=zk()||_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.INTERNAL.node.localStorage;this.type=\"localStorage\"}function zk(){try{var a=l.localStorage,b=Ne();a&&(a.setItem(b,\"1\"),a.removeItem(b));return a}catch(c){return null}}\nfunction yk(){var a=\"Node\"==He();a=zk()||a&&_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.INTERNAL.node&&_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.INTERNAL.node.localStorage;if(!a)return!1;try{return a.setItem(\"__sak\",\"1\"),a.removeItem(\"__sak\"),!0}catch(b){return!1}}k=xk.prototype;k.get=function(a){var b=this;return E().then(function(){var c=b.a.getItem(a);return Te(c)})};k.set=function(a,b){var c=this;return E().then(function(){var d=Re(b);null===d?c.T(a):c.a.setItem(a,d)})};k.T=function(a){var b=this;return E().then(function(){b.a.removeItem(a)})};\nk.ba=function(a){l.window&&jd(l.window,\"storage\",a)};k.ha=function(a){l.window&&td(l.window,\"storage\",a)};function Ak(){this.type=\"nullStorage\"}k=Ak.prototype;k.get=function(){return E(null)};k.set=function(){return E()};k.T=function(){return E()};k.ba=function(){};k.ha=function(){};function Bk(){if(!Ck()){if(\"Node\"==He())throw new u(\"internal-error\",\"The SessionStorage compatibility library was not found.\");throw new u(\"web-storage-unsupported\");}this.a=Dk()||_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.INTERNAL.node.sessionStorage;this.type=\"sessionStorage\"}function Dk(){try{var a=l.sessionStorage,b=Ne();a&&(a.setItem(b,\"1\"),a.removeItem(b));return a}catch(c){return null}}\nfunction Ck(){var a=\"Node\"==He();a=Dk()||a&&_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.INTERNAL.node&&_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.INTERNAL.node.sessionStorage;if(!a)return!1;try{return a.setItem(\"__sak\",\"1\"),a.removeItem(\"__sak\"),!0}catch(b){return!1}}k=Bk.prototype;k.get=function(a){var b=this;return E().then(function(){var c=b.a.getItem(a);return Te(c)})};k.set=function(a,b){var c=this;return E().then(function(){var d=Re(b);null===d?c.T(a):c.a.setItem(a,d)})};k.T=function(a){var b=this;return E().then(function(){b.a.removeItem(a)})};k.ba=function(){};\nk.ha=function(){};function Ek(){var a={};a.Browser=Fk;a.Node=Gk;a.ReactNative=Hk;a.Worker=Ik;this.a=a[He()]}var Jk,Fk={F:xk,$a:Bk},Gk={F:xk,$a:Bk},Hk={F:Zj,$a:Ak},Ik={F:xk,$a:Ak};/*\n\n Copyright 2017 Google LLC\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nvar Kk={od:\"local\",NONE:\"none\",qd:\"session\"};function Lk(a){var b=new u(\"invalid-persistence-type\"),c=new u(\"unsupported-persistence-type\");a:{for(d in Kk)if(Kk[d]==a){var d=!0;break a}d=!1}if(!d||\"string\"!==typeof a)throw b;switch(He()){case \"ReactNative\":if(\"session\"===a)throw c;break;case \"Node\":if(\"none\"!==a)throw c;break;case \"Worker\":if(\"session\"===a||!jk()&&\"none\"!==a)throw c;break;default:if(!Me()&&\"none\"!==a)throw c;}}\nfunction Mk(){var a=!Ue(I())&&Fe()?!0:!1,b=Qe(),c=Me();this.m=a;this.h=b;this.l=c;this.a={};Jk||(Jk=new Ek);a=Jk;try{this.g=!ne()&&$e()||!l.indexedDB?new a.a.F:new vk(Ge()?new wk:new a.a.F)}catch(d){this.g=new wk,this.h=!0}try{this.i=new a.a.$a}catch(d){this.i=new wk}this.u=new wk;this.f=r(this.Vb,this);this.b={}}var Nk;function Ok(){Nk||(Nk=new Mk);return Nk}function Pk(a,b){switch(b){case \"session\":return a.i;case \"none\":return a.u;default:return a.g}}\nfunction Qk(a,b){return\"firebase:\"+a.name+(b?\":\"+b:\"\")}function Rk(a,b,c){var d=Qk(b,c),e=Pk(a,b.F);return a.get(b,c).then(function(f){var g=null;try{g=Te(l.localStorage.getItem(d))}catch(h){}if(g&&!f)return l.localStorage.removeItem(d),a.set(b,g,c);g&&f&&\"localStorage\"!=e.type&&l.localStorage.removeItem(d)})}k=Mk.prototype;k.get=function(a,b){return Pk(this,a.F).get(Qk(a,b))};function Sk(a,b,c){c=Qk(b,c);\"local\"==b.F&&(a.b[c]=null);return Pk(a,b.F).T(c)}\nk.set=function(a,b,c){var d=Qk(a,c),e=this,f=Pk(this,a.F);return f.set(d,b).then(function(){return f.get(d)}).then(function(g){\"local\"==a.F&&(e.b[d]=g)})};k.addListener=function(a,b,c){a=Qk(a,b);this.l&&(this.b[a]=l.localStorage.getItem(a));jb(this.a)&&(Pk(this,\"local\").ba(this.f),this.h||(ne()||!$e())&&l.indexedDB||!this.l||Tk(this));this.a[a]||(this.a[a]=[]);this.a[a].push(c)};\nk.removeListener=function(a,b,c){a=Qk(a,b);this.a[a]&&(Ua(this.a[a],function(d){return d==c}),0==this.a[a].length&&delete this.a[a]);jb(this.a)&&(Pk(this,\"local\").ha(this.f),Uk(this))};function Tk(a){Uk(a);a.c=setInterval(function(){for(var b in a.a){var c=l.localStorage.getItem(b),d=a.b[b];c!=d&&(a.b[b]=c,c=new Yc({type:\"storage\",key:b,target:window,oldValue:d,newValue:c,a:!0}),a.Vb(c))}},1E3)}function Uk(a){a.c&&(clearInterval(a.c),a.c=null)}\nk.Vb=function(a){if(a&&a.f){var b=a.a.key;if(null==b)for(var c in this.a){var d=this.b[c];\"undefined\"===typeof d&&(d=null);var e=l.localStorage.getItem(c);e!==d&&(this.b[c]=e,this.ib(c))}else if(0==b.indexOf(\"firebase:\")&&this.a[b]){\"undefined\"!==typeof a.a.a?Pk(this,\"local\").ha(this.f):Uk(this);if(this.m)if(c=l.localStorage.getItem(b),d=a.a.newValue,d!==c)null!==d?l.localStorage.setItem(b,d):l.localStorage.removeItem(b);else if(this.b[b]===d&&\"undefined\"===typeof a.a.a)return;var f=this;c=function(){if(\"undefined\"!==\ntypeof a.a.a||f.b[b]!==l.localStorage.getItem(b))f.b[b]=l.localStorage.getItem(b),f.ib(b)};Sb&&cc&&10==cc&&l.localStorage.getItem(b)!==a.a.newValue&&a.a.newValue!==a.a.oldValue?setTimeout(c,10):c()}}else x(a,r(this.ib,this))};k.ib=function(a){this.a[a]&&x(this.a[a],function(b){b()})};function Vk(a){this.a=a;this.b=Ok()}var Wk={name:\"authEvent\",F:\"local\"};function Xk(a){return a.b.get(Wk,a.a).then(function(b){return ph(b)})};function Yk(){this.a=Ok()};function Zk(){this.b=-1};function $k(a,b){this.b=al;this.f=l.Uint8Array?new Uint8Array(this.b):Array(this.b);this.g=this.c=0;this.a=[];this.i=a;this.h=b;this.l=l.Int32Array?new Int32Array(64):Array(64);void 0===bl&&(l.Int32Array?bl=new Int32Array(cl):bl=cl);this.reset()}var bl;t($k,Zk);for(var al=64,dl=al-1,el=[],fl=0;fl<dl;fl++)el[fl]=0;var gl=Va(128,el);$k.prototype.reset=function(){this.g=this.c=0;this.a=l.Int32Array?new Int32Array(this.h):Wa(this.h)};\nfunction hl(a){for(var b=a.f,c=a.l,d=0,e=0;e<b.length;)c[d++]=b[e]<<24|b[e+1]<<16|b[e+2]<<8|b[e+3],e=4*d;for(b=16;64>b;b++){e=c[b-15]|0;d=c[b-2]|0;var f=(c[b-16]|0)+((e>>>7|e<<25)^(e>>>18|e<<14)^e>>>3)|0,g=(c[b-7]|0)+((d>>>17|d<<15)^(d>>>19|d<<13)^d>>>10)|0;c[b]=f+g|0}d=a.a[0]|0;e=a.a[1]|0;var h=a.a[2]|0,m=a.a[3]|0,p=a.a[4]|0,v=a.a[5]|0,C=a.a[6]|0;f=a.a[7]|0;for(b=0;64>b;b++){var A=((d>>>2|d<<30)^(d>>>13|d<<19)^(d>>>22|d<<10))+(d&e^d&h^e&h)|0;g=p&v^~p&C;f=f+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<\n7))|0;g=g+(bl[b]|0)|0;g=f+(g+(c[b]|0)|0)|0;f=C;C=v;v=p;p=m+g|0;m=h;h=e;e=d;d=g+A|0}a.a[0]=a.a[0]+d|0;a.a[1]=a.a[1]+e|0;a.a[2]=a.a[2]+h|0;a.a[3]=a.a[3]+m|0;a.a[4]=a.a[4]+p|0;a.a[5]=a.a[5]+v|0;a.a[6]=a.a[6]+C|0;a.a[7]=a.a[7]+f|0}\nfunction il(a,b,c){void 0===c&&(c=b.length);var d=0,e=a.c;if(\"string\"===typeof b)for(;d<c;)a.f[e++]=b.charCodeAt(d++),e==a.b&&(hl(a),e=0);else if(ma(b))for(;d<c;){var f=b[d++];if(!(\"number\"==typeof f&&0<=f&&255>=f&&f==(f|0)))throw Error(\"message must be a byte array\");a.f[e++]=f;e==a.b&&(hl(a),e=0)}else throw Error(\"message must be string or array\");a.c=e;a.g+=c}\nvar cl=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,\n4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function jl(){$k.call(this,8,kl)}t(jl,$k);var kl=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225];function ll(a,b,c,d,e){this.u=a;this.i=b;this.l=c;this.m=d||null;this.s=e||null;this.h=b+\":\"+c;this.w=new Yk;this.g=new Vk(this.h);this.f=null;this.b=[];this.a=this.c=null}function ml(a){return new u(\"invalid-cordova-configuration\",a)}k=ll.prototype;\nk.ka=function(){return this.Ga?this.Ga:this.Ga=Ce().then(function(){if(\"function\"!==typeof J(\"universalLinks.subscribe\",l))throw ml(\"cordova-universal-links-plugin-fix is not installed\");if(\"undefined\"===typeof J(\"BuildInfo.packageName\",l))throw ml(\"cordova-plugin-buildinfo is not installed\");if(\"function\"!==typeof J(\"cordova.plugins.browsertab.openUrl\",l))throw ml(\"cordova-plugin-browsertab is not installed\");if(\"function\"!==typeof J(\"cordova.InAppBrowser.open\",l))throw ml(\"cordova-plugin-inappbrowser is not installed\");\n},function(){throw new u(\"cordova-not-ready\");})};function nl(){for(var a=20,b=[];0<a;)b.push(\"1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\".charAt(Math.floor(62*Math.random()))),a--;return b.join(\"\")}function ol(a){var b=new jl;il(b,a);a=[];var c=8*b.g;56>b.c?il(b,gl,56-b.c):il(b,gl,b.b-(b.c-56));for(var d=63;56<=d;d--)b.f[d]=c&255,c/=256;hl(b);for(d=c=0;d<b.i;d++)for(var e=24;0<=e;e-=8)a[c++]=b.a[d]>>e&255;return $f(a)}\nk.Lb=function(a,b){b(new u(\"operation-not-supported-in-this-environment\"));return E()};k.Jb=function(){return F(new u(\"operation-not-supported-in-this-environment\"))};k.Xb=function(){return!1};k.Ub=function(){return!0};k.Qb=function(){return!0};\nk.Kb=function(a,b,c,d){if(this.c)return F(new u(\"redirect-operation-pending\"));var e=this,f=l.document,g=null,h=null,m=null,p=null;return this.c=E().then(function(){nh(b);return pl(e)}).then(function(){return ql(e,a,b,c,d)}).then(function(){return(new D(function(v,C){h=function(){var A=J(\"cordova.plugins.browsertab.close\",l);v();\"function\"===typeof A&&A();e.a&&\"function\"===typeof e.a.close&&(e.a.close(),e.a=null);return!1};e.Ca(h);m=function(){g||(g=Bd(2E3).then(function(){C(new u(\"redirect-cancelled-by-user\"))}))};\np=function(){Xe()&&m()};f.addEventListener(\"resume\",m,!1);I().toLowerCase().match(/android/)||f.addEventListener(\"visibilitychange\",p,!1)})).o(function(v){return rl(e).then(function(){throw v;})})}).ma(function(){m&&f.removeEventListener(\"resume\",m,!1);p&&f.removeEventListener(\"visibilitychange\",p,!1);g&&g.cancel();h&&e.Qa(h);e.c=null})};\nfunction ql(a,b,c,d,e){var f=nl(),g=new oh(b,d,null,f,new u(\"no-auth-event\"),null,e),h=J(\"BuildInfo.packageName\",l);if(\"string\"!==typeof h)throw new u(\"invalid-cordova-configuration\");var m=J(\"BuildInfo.displayName\",l),p={};if(I().toLowerCase().match(/iphone|ipad|ipod/))p.ibi=h;else if(I().toLowerCase().match(/android/))p.apn=h;else return F(new u(\"operation-not-supported-in-this-environment\"));m&&(p.appDisplayName=m);f=ol(f);p.sessionId=f;var v=Yj(a.u,a.i,a.l,b,c,null,d,a.m,p,a.s,e);return a.ka().then(function(){var C=\na.h;return a.w.a.set(Wk,g.v(),C)}).then(function(){var C=J(\"cordova.plugins.browsertab.isAvailable\",l);if(\"function\"!==typeof C)throw new u(\"invalid-cordova-configuration\");var A=null;C(function(Q){if(Q){A=J(\"cordova.plugins.browsertab.openUrl\",l);if(\"function\"!==typeof A)throw new u(\"invalid-cordova-configuration\");A(v)}else{A=J(\"cordova.InAppBrowser.open\",l);if(\"function\"!==typeof A)throw new u(\"invalid-cordova-configuration\");Q=I();a.a=A(v,Q.match(/(iPad|iPhone|iPod).*OS 7_\\d/i)||Q.match(/(iPad|iPhone|iPod).*OS 8_\\d/i)?\n\"_blank\":\"_system\",\"location=yes\")}})})}function sl(a,b){for(var c=0;c<a.b.length;c++)try{a.b[c](b)}catch(d){}}function pl(a){a.f||(a.f=a.ka().then(function(){return new D(function(b){function c(d){b(d);a.Qa(c);return!1}a.Ca(c);tl(a)})}));return a.f}function rl(a){var b=null;return Xk(a.g).then(function(c){b=c;c=a.g;return Sk(c.b,Wk,c.a)}).then(function(){return b})}\nfunction tl(a){function b(g){d=!0;e&&e.cancel();rl(a).then(function(h){var m=c;if(h&&g&&g.url){var p=null;m=ug(g.url);-1!=m.indexOf(\"/__/auth/callback\")&&(p=Zd(m),p=Te(Yd(p,\"firebaseError\")||null),p=(p=\"object\"===typeof p?wa(p):null)?new oh(h.c,h.b,null,null,p,null,h.S()):new oh(h.c,h.b,m,h.f,null,null,h.S()));m=p||c}sl(a,m)})}var c=new oh(\"unknown\",null,null,null,new u(\"no-auth-event\")),d=!1,e=Bd(500).then(function(){return rl(a).then(function(){d||sl(a,c)})}),f=l.handleOpenURL;l.handleOpenURL=function(g){0==\ng.toLowerCase().indexOf(J(\"BuildInfo.packageName\",l).toLowerCase()+\"://\")&&b({url:g});if(\"function\"===typeof f)try{f(g)}catch(h){console.error(h)}};rh||(rh=new qh);sh(b)}k.Ca=function(a){this.b.push(a);pl(this).o(function(b){\"auth/invalid-cordova-configuration\"===b.code&&(b=new oh(\"unknown\",null,null,null,new u(\"no-auth-event\")),a(b))})};k.Qa=function(a){Ua(this.b,function(b){return b==a})};function ul(a){this.a=a;this.b=Ok()}var vl={name:\"pendingRedirect\",F:\"session\"};function wl(a){return a.b.set(vl,\"pending\",a.a)}function xl(a){return Sk(a.b,vl,a.a)}function yl(a){return a.b.get(vl,a.a).then(function(b){return\"pending\"==b})};function zl(a,b,c){this.i={};this.w=0;this.D=a;this.u=b;this.m=c;this.h=[];this.f=!1;this.l=r(this.s,this);this.b=new Al;this.B=new Bl;this.g=new ul(this.u+\":\"+this.m);this.c={};this.c.unknown=this.b;this.c.signInViaRedirect=this.b;this.c.linkViaRedirect=this.b;this.c.reauthViaRedirect=this.b;this.c.signInViaPopup=this.B;this.c.linkViaPopup=this.B;this.c.reauthViaPopup=this.B;this.a=Cl(this.D,this.u,this.m,Aa)}\nfunction Cl(a,b,c,d){var e=_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.SDK_VERSION||null;return De()?new ll(a,b,c,e,d):new Sj(a,b,c,e,d)}zl.prototype.reset=function(){this.f=!1;this.a.Qa(this.l);this.a=Cl(this.D,this.u,this.m);this.i={}};function Dl(a){a.f||(a.f=!0,a.a.Ca(a.l));var b=a.a;return a.a.ka().o(function(c){a.a==b&&a.reset();throw c;})}function El(a){a.a.Ub()&&Dl(a).o(function(b){var c=new oh(\"unknown\",null,null,null,new u(\"operation-not-supported-in-this-environment\"));Fl(b)&&a.s(c)});a.a.Qb()||Gl(a.b)}\nfunction Hl(a,b){Sa(a.h,b)||a.h.push(b);a.f||yl(a.g).then(function(c){c?xl(a.g).then(function(){Dl(a).o(function(d){var e=new oh(\"unknown\",null,null,null,new u(\"operation-not-supported-in-this-environment\"));Fl(d)&&a.s(e)})}):El(a)}).o(function(){El(a)})}function Il(a,b){Ua(a.h,function(c){return c==b})}\nzl.prototype.s=function(a){if(!a)throw new u(\"invalid-auth-event\");6E5<=ta()-this.w&&(this.i={},this.w=0);if(a&&a.getUid()&&this.i.hasOwnProperty(a.getUid()))return!1;for(var b=!1,c=0;c<this.h.length;c++){var d=this.h[c];if(d.Cb(a.c,a.b)){if(b=this.c[a.c])b.h(a,d),a&&(a.f||a.b)&&(this.i[a.getUid()]=!0,this.w=ta());b=!0;break}}Gl(this.b);return b};var Jl=new We(2E3,1E4),Kl=new We(3E4,6E4);zl.prototype.pa=function(){return this.b.pa()};\nfunction Ll(a,b,c,d,e,f,g){return a.a.Jb(b,c,d,function(){a.f||(a.f=!0,a.a.Ca(a.l))},function(){a.reset()},e,f,g)}function Fl(a){return a&&\"auth/cordova-not-ready\"==a.code?!0:!1}\nfunction Ml(a,b,c,d,e){var f;return wl(a.g).then(function(){return a.a.Kb(b,c,d,e).o(function(g){if(Fl(g))throw new u(\"operation-not-supported-in-this-environment\");f=g;return xl(a.g).then(function(){throw f;})}).then(function(){return a.a.Xb()?new D(function(){}):xl(a.g).then(function(){return a.pa()}).then(function(){}).o(function(){})})})}function Nl(a,b,c,d,e){return a.a.Lb(d,function(f){b.la(c,null,f,e)},Jl.get())}var Ol={};\nfunction Pl(a,b,c){var d=b+\":\"+c;Ol[d]||(Ol[d]=new zl(a,b,c));return Ol[d]}function Al(){this.b=null;this.f=[];this.c=[];this.a=null;this.i=this.g=!1}Al.prototype.reset=function(){this.b=null;this.a&&(this.a.cancel(),this.a=null)};\nAl.prototype.h=function(a,b){if(a){this.reset();this.g=!0;var c=a.c,d=a.b,e=a.a&&\"auth/web-storage-unsupported\"==a.a.code,f=a.a&&\"auth/operation-not-supported-in-this-environment\"==a.a.code;this.i=!(!e&&!f);\"unknown\"!=c||e||f?a.a?(Ql(this,!0,null,a.a),E()):b.Da(c,d)?Rl(this,a,b):F(new u(\"invalid-auth-event\")):(Ql(this,!1,null,null),E())}else F(new u(\"invalid-auth-event\"))};function Gl(a){a.g||(a.g=!0,Ql(a,!1,null,null))}function Sl(a){a.g&&!a.i&&Ql(a,!1,null,null)}\nfunction Rl(a,b,c){c=c.Da(b.c,b.b);var d=b.g,e=b.f,f=b.i,g=b.S(),h=!!b.c.match(/Redirect$/);c(d,e,g,f).then(function(m){Ql(a,h,m,null)}).o(function(m){Ql(a,h,null,m)})}function Tl(a,b){a.b=function(){return F(b)};if(a.c.length)for(var c=0;c<a.c.length;c++)a.c[c](b)}function Ul(a,b){a.b=function(){return E(b)};if(a.f.length)for(var c=0;c<a.f.length;c++)a.f[c](b)}function Ql(a,b,c,d){b?d?Tl(a,d):Ul(a,c):Ul(a,{user:null});a.f=[];a.c=[]}\nAl.prototype.pa=function(){var a=this;return new D(function(b,c){a.b?a.b().then(b,c):(a.f.push(b),a.c.push(c),Vl(a))})};function Vl(a){var b=new u(\"timeout\");a.a&&a.a.cancel();a.a=Bd(Kl.get()).then(function(){a.b||(a.g=!0,Ql(a,!0,null,b))})}function Bl(){}Bl.prototype.h=function(a,b){if(a){var c=a.c,d=a.b;a.a?(b.la(a.c,null,a.a,a.b),E()):b.Da(c,d)?Wl(a,b):F(new u(\"invalid-auth-event\"))}else F(new u(\"invalid-auth-event\"))};\nfunction Wl(a,b){var c=a.b,d=a.c;b.Da(d,c)(a.g,a.f,a.S(),a.i).then(function(e){b.la(d,e,null,c)}).o(function(e){b.la(d,null,e,c)})};function Xl(){this.Bb=!1;Object.defineProperty(this,\"appVerificationDisabled\",{get:function(){return this.Bb},set:function(a){this.Bb=a},enumerable:!1})};function Yl(a,b){this.a=b;K(this,\"verificationId\",a)}Yl.prototype.confirm=function(a){a=lh(this.verificationId,a);return this.a(a)};function Zl(a,b,c,d){return(new hh(a)).cb(b,c).then(function(e){return new Yl(e,d)})};function $l(a){var b=fg(a);if(!(b&&b.exp&&b.auth_time&&b.iat))throw new u(\"internal-error\",\"An internal error occurred. The token obtained by Firebase appears to be malformed. Please retry the operation.\");L(this,{token:a,expirationTime:Ze(1E3*b.exp),authTime:Ze(1E3*b.auth_time),issuedAtTime:Ze(1E3*b.iat),signInProvider:b.firebase&&b.firebase.sign_in_provider?b.firebase.sign_in_provider:null,signInSecondFactor:b.firebase&&b.firebase.sign_in_second_factor?b.firebase.sign_in_second_factor:null,claims:b})}\n;function am(a,b,c){var d=b&&b[bm];if(!d)throw new u(\"argument-error\",\"Internal assert: Invalid MultiFactorResolver\");this.a=a;this.f=kb(b);this.g=c;this.c=new vg(null,d);this.b=[];var e=this;x(b[cm]||[],function(f){(f=qf(f))&&e.b.push(f)});K(this,\"auth\",this.a);K(this,\"session\",this.c);K(this,\"hints\",this.b)}var cm=\"mfaInfo\",bm=\"mfaPendingCredential\";am.prototype.Pc=function(a){var b=this;return a.ob(this.a.b,this.c).then(function(c){var d=kb(b.f);delete d[cm];delete d[bm];B(d,c);return b.g(d)})};function dm(a,b,c,d){u.call(this,\"multi-factor-auth-required\",d,b);this.b=new am(a,b,c);K(this,\"resolver\",this.b)}t(dm,u);function em(a,b,c){if(a&&q(a.serverResponse)&&\"auth/multi-factor-auth-required\"===a.code)try{return new dm(b,a.serverResponse,c,a.message)}catch(d){}return null};function fm(){}fm.prototype.ob=function(a,b,c){return b.type==wg?gm(this,a,b,c):hm(this,a,b)};function gm(a,b,c,d){return c.Fa().then(function(e){e={idToken:e};\"undefined\"!==typeof d&&(e.displayName=d);B(e,{phoneVerificationInfo:dh(a.a)});return N(b,Aj,e)})}function hm(a,b,c){return c.Fa().then(function(d){d={mfaPendingCredential:d};B(d,{phoneVerificationInfo:dh(a.a)});return N(b,Bj,d)})}function im(a){K(this,\"factorId\",a.ea);this.a=a}t(im,fm);\nfunction jm(a){im.call(this,a);if(this.a.ea!=hh.PROVIDER_ID)throw new u(\"argument-error\",\"firebase.auth.PhoneMultiFactorAssertion requires a valid firebase.auth.PhoneAuthCredential\");}t(jm,im);function km(a,b){Xc.call(this,a);for(var c in b)this[c]=b[c]}t(km,Xc);function lm(a,b){this.a=a;this.b=[];this.c=r(this.wc,this);jd(this.a,\"userReloaded\",this.c);var c=[];b&&b.multiFactor&&b.multiFactor.enrolledFactors&&x(b.multiFactor.enrolledFactors,function(d){var e=null,f={};if(d){d.uid&&(f[nf]=d.uid);d.displayName&&(f[of]=d.displayName);d.enrollmentTime&&(f[pf]=(new Date(d.enrollmentTime)).toISOString());d.phoneNumber&&(f[mf]=d.phoneNumber);try{e=new rf(f)}catch(g){}d=e}else d=null;d&&c.push(d)});mm(this,c)}\nfunction nm(a){var b=[];x(a.mfaInfo||[],function(c){(c=qf(c))&&b.push(c)});return b}k=lm.prototype;k.wc=function(a){mm(this,nm(a.ed))};function mm(a,b){a.b=b;K(a,\"enrolledFactors\",b)}k.Ob=function(){return this.a.I().then(function(a){return new vg(a,null)})};k.dc=function(a,b){var c=this,d=this.a.a;return this.Ob().then(function(e){return a.ob(d,e,b)}).then(function(e){om(c.a,e);return c.a.reload()})};\nk.$c=function(a){var b=this,c=\"string\"===typeof a?a:a.uid,d=this.a.a;return this.a.I().then(function(e){return N(d,Fj,{idToken:e,mfaEnrollmentId:c})}).then(function(e){var f=Na(b.b,function(g){return g.uid!=c});mm(b,f);om(b.a,e);return b.a.reload().o(function(g){if(\"auth/user-token-expired\"!=g.code)throw g;})})};k.v=function(){return{multiFactor:{enrolledFactors:Oa(this.b,function(a){return a.v()})}}};function pm(a,b,c){this.h=a;this.i=b;this.g=c;this.c=3E4;this.f=96E4;this.b=null;this.a=this.c;if(this.f<this.c)throw Error(\"Proactive refresh lower bound greater than upper bound!\");}pm.prototype.start=function(){this.a=this.c;qm(this,!0)};function rm(a,b){if(b)return a.a=a.c,a.g();b=a.a;a.a*=2;a.a>a.f&&(a.a=a.f);return b}function qm(a,b){a.stop();a.b=Bd(rm(a,b)).then(function(){return Ye()}).then(function(){return a.h()}).then(function(){qm(a,!0)}).o(function(c){a.i(c)&&qm(a,!1)})}\npm.prototype.stop=function(){this.b&&(this.b.cancel(),this.b=null)};function sm(a){this.c=a;this.b=this.a=null}sm.prototype.v=function(){return{apiKey:this.c.c,refreshToken:this.a,accessToken:this.b&&this.b.toString(),expirationTime:tm(this)}};function tm(a){return a.b&&1E3*a.b.c||0}function um(a,b){var c=b.refreshToken;a.b=gg(b[Ag]||\"\");a.a=c}function vm(a,b){a.b=b.b;a.a=b.a}\nfunction wm(a,b){return Qi(a.c,b).then(function(c){a.b=gg(c.access_token);a.a=c.refresh_token;return{accessToken:a.b.toString(),refreshToken:a.a}}).o(function(c){\"auth/user-token-expired\"==c.code&&(a.a=null);throw c;})}sm.prototype.getToken=function(a){a=!!a;return this.b&&!this.a?F(new u(\"user-token-expired\")):a||!this.b||ta()>tm(this)-3E4?this.a?wm(this,{grant_type:\"refresh_token\",refresh_token:this.a}):E(null):E({accessToken:this.b.toString(),refreshToken:this.a})};function xm(a,b){this.a=a||null;this.b=b||null;L(this,{lastSignInTime:Ze(b||null),creationTime:Ze(a||null)})}function ym(a){return new xm(a.a,a.b)}xm.prototype.v=function(){return{lastLoginAt:this.b,createdAt:this.a}};function zm(a,b,c,d,e,f){L(this,{uid:a,displayName:d||null,photoURL:e||null,email:c||null,phoneNumber:f||null,providerId:b})}\nfunction P(a,b,c){this.N=[];this.l=a.apiKey;this.m=a.appName;this.s=a.authDomain||null;a=_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.SDK_VERSION?Le(_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.SDK_VERSION):null;this.a=new Ei(this.l,za(Aa),a);this.b=new sm(this.a);Am(this,b[Ag]);um(this.b,b);K(this,\"refreshToken\",this.b.a);Bm(this,c||{});G.call(this);this.P=!1;this.s&&Oe()&&(this.i=Pl(this.s,this.l,this.m));this.R=[];this.h=null;this.B=Cm(this);this.Z=r(this.Ma,this);var d=this;this.oa=null;this.za=function(e){d.va(e.g)};this.aa=null;this.W=[];this.ya=function(e){Dm(d,\ne.c)};this.$=null;this.O=new lm(this,c);K(this,\"multiFactor\",this.O)}t(P,G);P.prototype.va=function(a){this.oa=a;Ki(this.a,a)};P.prototype.ja=function(){return this.oa};function Em(a,b){a.aa&&td(a.aa,\"languageCodeChanged\",a.za);(a.aa=b)&&jd(b,\"languageCodeChanged\",a.za)}function Dm(a,b){a.W=b;Li(a.a,_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.SDK_VERSION?Le(_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.SDK_VERSION,a.W):null)}P.prototype.Ea=function(){return Wa(this.W)};function Fm(a,b){a.$&&td(a.$,\"frameworkChanged\",a.ya);(a.$=b)&&jd(b,\"frameworkChanged\",a.ya)}\nP.prototype.Ma=function(){this.B.b&&(this.B.stop(),this.B.start())};function Gm(a){try{return _firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.app(a.m).auth()}catch(b){throw new u(\"internal-error\",\"No firebase.auth.Auth instance is available for the Firebase App '\"+a.m+\"'!\");}}function Cm(a){return new pm(function(){return a.I(!0)},function(b){return b&&\"auth/network-request-failed\"==b.code?!0:!1},function(){var b=tm(a.b)-ta()-3E5;return 0<b?b:0})}\nfunction Hm(a){a.D||a.B.b||(a.B.start(),td(a,\"tokenChanged\",a.Z),jd(a,\"tokenChanged\",a.Z))}function Im(a){td(a,\"tokenChanged\",a.Z);a.B.stop()}function Am(a,b){a.xa=b;K(a,\"_lat\",b)}function Jm(a,b){Ua(a.R,function(c){return c==b})}function Km(a){for(var b=[],c=0;c<a.R.length;c++)b.push(a.R[c](a));return Ec(b).then(function(){return a})}function Lm(a){a.i&&!a.P&&(a.P=!0,Hl(a.i,a))}\nfunction Bm(a,b){L(a,{uid:b.uid,displayName:b.displayName||null,photoURL:b.photoURL||null,email:b.email||null,emailVerified:b.emailVerified||!1,phoneNumber:b.phoneNumber||null,isAnonymous:b.isAnonymous||!1,tenantId:b.tenantId||null,metadata:new xm(b.createdAt,b.lastLoginAt),providerData:[]});a.a.b=a.tenantId}K(P.prototype,\"providerId\",\"firebase\");function Mm(){}function Nm(a){return E().then(function(){if(a.D)throw new u(\"app-deleted\");})}\nfunction Om(a){return Oa(a.providerData,function(b){return b.providerId})}function Pm(a,b){b&&(Qm(a,b.providerId),a.providerData.push(b))}function Qm(a,b){Ua(a.providerData,function(c){return c.providerId==b})}function Rm(a,b,c){(\"uid\"!=b||c)&&a.hasOwnProperty(b)&&K(a,b,c)}\nfunction Sm(a,b){a!=b&&(L(a,{uid:b.uid,displayName:b.displayName,photoURL:b.photoURL,email:b.email,emailVerified:b.emailVerified,phoneNumber:b.phoneNumber,isAnonymous:b.isAnonymous,tenantId:b.tenantId,providerData:[]}),b.metadata?K(a,\"metadata\",ym(b.metadata)):K(a,\"metadata\",new xm),x(b.providerData,function(c){Pm(a,c)}),vm(a.b,b.b),K(a,\"refreshToken\",a.b.a),mm(a.O,b.O.b))}k=P.prototype;k.reload=function(){var a=this;return R(this,Nm(this).then(function(){return Tm(a).then(function(){return Km(a)}).then(Mm)}))};\nfunction Tm(a){return a.I().then(function(b){var c=a.isAnonymous;return Um(a,b).then(function(){c||Rm(a,\"isAnonymous\",!1);return b})})}k.mc=function(a){return this.I(a).then(function(b){return new $l(b)})};k.I=function(a){var b=this;return R(this,Nm(this).then(function(){return b.b.getToken(a)}).then(function(c){if(!c)throw new u(\"internal-error\");c.accessToken!=b.xa&&(Am(b,c.accessToken),b.dispatchEvent(new km(\"tokenChanged\")));Rm(b,\"refreshToken\",c.refreshToken);return c.accessToken}))};\nfunction om(a,b){b[Ag]&&a.xa!=b[Ag]&&(um(a.b,b),a.dispatchEvent(new km(\"tokenChanged\")),Am(a,b[Ag]),Rm(a,\"refreshToken\",a.b.a))}function Um(a,b){return N(a.a,Cj,{idToken:b}).then(r(a.Ic,a))}\nk.Ic=function(a){a=a.users;if(!a||!a.length)throw new u(\"internal-error\");a=a[0];Bm(this,{uid:a.localId,displayName:a.displayName,photoURL:a.photoUrl,email:a.email,emailVerified:!!a.emailVerified,phoneNumber:a.phoneNumber,lastLoginAt:a.lastLoginAt,createdAt:a.createdAt,tenantId:a.tenantId});for(var b=Vm(a),c=0;c<b.length;c++)Pm(this,b[c]);Rm(this,\"isAnonymous\",!(this.email&&a.passwordHash)&&!(this.providerData&&this.providerData.length));this.dispatchEvent(new km(\"userReloaded\",{ed:a}))};\nfunction Vm(a){return(a=a.providerUserInfo)&&a.length?Oa(a,function(b){return new zm(b.rawId,b.providerId,b.email,b.displayName,b.photoUrl,b.phoneNumber)}):[]}k.Jc=function(a){df(\"firebase.User.prototype.reauthenticateAndRetrieveDataWithCredential is deprecated. Please use firebase.User.prototype.reauthenticateWithCredential instead.\");return this.pb(a)};\nk.pb=function(a){var b=this,c=null;return R(this,a.c(this.a,this.uid).then(function(d){om(b,d);c=Wm(b,d,\"reauthenticate\");b.h=null;return b.reload()}).then(function(){return c}),!0)};function Xm(a,b){return Tm(a).then(function(){if(Sa(Om(a),b))return Km(a).then(function(){throw new u(\"provider-already-linked\");})})}k.Ac=function(a){df(\"firebase.User.prototype.linkAndRetrieveDataWithCredential is deprecated. Please use firebase.User.prototype.linkWithCredential instead.\");return this.mb(a)};\nk.mb=function(a){var b=this,c=null;return R(this,Xm(this,a.providerId).then(function(){return b.I()}).then(function(d){return a.b(b.a,d)}).then(function(d){c=Wm(b,d,\"link\");return Ym(b,d)}).then(function(){return c}))};k.Bc=function(a,b){var c=this;return R(this,Xm(this,\"phone\").then(function(){return Zl(Gm(c),a,b,r(c.mb,c))}))};k.Kc=function(a,b){var c=this;return R(this,E().then(function(){return Zl(Gm(c),a,b,r(c.pb,c))}),!0)};\nfunction Wm(a,b,c){var d=mh(b);b=lg(b);return gf({user:a,credential:d,additionalUserInfo:b,operationType:c})}function Ym(a,b){om(a,b);return a.reload().then(function(){return a})}k.xb=function(a){var b=this;return R(this,this.I().then(function(c){return b.a.xb(c,a)}).then(function(c){om(b,c);return b.reload()}))};k.cd=function(a){var b=this;return R(this,this.I().then(function(c){return a.b(b.a,c)}).then(function(c){om(b,c);return b.reload()}))};\nk.yb=function(a){var b=this;return R(this,this.I().then(function(c){return b.a.yb(c,a)}).then(function(c){om(b,c);return b.reload()}))};\nk.zb=function(a){if(void 0===a.displayName&&void 0===a.photoURL)return Nm(this);var b=this;return R(this,this.I().then(function(c){return b.a.zb(c,{displayName:a.displayName,photoUrl:a.photoURL})}).then(function(c){om(b,c);Rm(b,\"displayName\",c.displayName||null);Rm(b,\"photoURL\",c.photoUrl||null);x(b.providerData,function(d){\"password\"===d.providerId&&(K(d,\"displayName\",b.displayName),K(d,\"photoURL\",b.photoURL))});return Km(b)}).then(Mm))};\nk.ad=function(a){var b=this;return R(this,Tm(this).then(function(c){return Sa(Om(b),a)?lj(b.a,c,[a]).then(function(d){var e={};x(d.providerUserInfo||[],function(f){e[f.providerId]=!0});x(Om(b),function(f){e[f]||Qm(b,f)});e[hh.PROVIDER_ID]||K(b,\"phoneNumber\",null);return Km(b)}):Km(b).then(function(){throw new u(\"no-such-provider\");})}))};\nk.delete=function(){var a=this;return R(this,this.I().then(function(b){return N(a.a,zj,{idToken:b})}).then(function(){a.dispatchEvent(new km(\"userDeleted\"))})).then(function(){for(var b=0;b<a.N.length;b++)a.N[b].cancel(\"app-deleted\");Em(a,null);Fm(a,null);a.N=[];a.D=!0;Im(a);K(a,\"refreshToken\",null);a.i&&Il(a.i,a)})};\nk.Cb=function(a,b){return\"linkViaPopup\"==a&&(this.g||null)==b&&this.f||\"reauthViaPopup\"==a&&(this.g||null)==b&&this.f||\"linkViaRedirect\"==a&&(this.fa||null)==b||\"reauthViaRedirect\"==a&&(this.fa||null)==b?!0:!1};k.la=function(a,b,c,d){\"linkViaPopup\"!=a&&\"reauthViaPopup\"!=a||d!=(this.g||null)||(c&&this.w?this.w(c):b&&!c&&this.f&&this.f(b),this.c&&(this.c.cancel(),this.c=null),delete this.f,delete this.w)};\nk.Da=function(a,b){return\"linkViaPopup\"==a&&b==(this.g||null)?r(this.Hb,this):\"reauthViaPopup\"==a&&b==(this.g||null)?r(this.Ib,this):\"linkViaRedirect\"==a&&(this.fa||null)==b?r(this.Hb,this):\"reauthViaRedirect\"==a&&(this.fa||null)==b?r(this.Ib,this):null};k.Cc=function(a){var b=this;return Zm(this,\"linkViaPopup\",a,function(){return Xm(b,a.providerId).then(function(){return Km(b)})},!1)};k.Lc=function(a){return Zm(this,\"reauthViaPopup\",a,function(){return E()},!0)};\nfunction Zm(a,b,c,d,e){if(!Oe())return F(new u(\"operation-not-supported-in-this-environment\"));if(a.h&&!e)return F(a.h);var f=kg(c.providerId),g=Ne(a.uid+\":::\"),h=null;(!Qe()||Fe())&&a.s&&c.isOAuthProvider&&(h=Yj(a.s,a.l,a.m,b,c,null,g,_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.SDK_VERSION||null,null,null,a.tenantId));var m=we(h,f&&f.ta,f&&f.sa);d=d().then(function(){$m(a);if(!e)return a.I().then(function(){})}).then(function(){return Ll(a.i,m,b,c,g,!!h,a.tenantId)}).then(function(){return new D(function(p,v){a.la(b,null,new u(\"cancelled-popup-request\"),\na.g||null);a.f=p;a.w=v;a.g=g;a.c=Nl(a.i,a,b,m,g)})}).then(function(p){m&&ve(m);return p?gf(p):null}).o(function(p){m&&ve(m);throw p;});return R(a,d,e)}k.Dc=function(a){var b=this;return an(this,\"linkViaRedirect\",a,function(){return Xm(b,a.providerId)},!1)};k.Mc=function(a){return an(this,\"reauthViaRedirect\",a,function(){return E()},!0)};\nfunction an(a,b,c,d,e){if(!Oe())return F(new u(\"operation-not-supported-in-this-environment\"));if(a.h&&!e)return F(a.h);var f=null,g=Ne(a.uid+\":::\");d=d().then(function(){$m(a);if(!e)return a.I().then(function(){})}).then(function(){a.fa=g;return Km(a)}).then(function(h){a.ga&&(h=a.ga,h=h.b.set(bn,a.v(),h.a));return h}).then(function(){return Ml(a.i,b,c,g,a.tenantId)}).o(function(h){f=h;if(a.ga)return cn(a.ga);throw f;}).then(function(){if(f)throw f;});return R(a,d,e)}\nfunction $m(a){if(!a.i||!a.P){if(a.i&&!a.P)throw new u(\"internal-error\");throw new u(\"auth-domain-config-required\");}}k.Hb=function(a,b,c,d){var e=this;this.c&&(this.c.cancel(),this.c=null);var f=null;c=this.I().then(function(g){return Eg(e.a,{requestUri:a,postBody:d,sessionId:b,idToken:g})}).then(function(g){f=Wm(e,g,\"link\");return Ym(e,g)}).then(function(){return f});return R(this,c)};\nk.Ib=function(a,b,c,d){var e=this;this.c&&(this.c.cancel(),this.c=null);var f=null,g=E().then(function(){return zg(Fg(e.a,{requestUri:a,sessionId:b,postBody:d,tenantId:c}),e.uid)}).then(function(h){f=Wm(e,h,\"reauthenticate\");om(e,h);e.h=null;return e.reload()}).then(function(){return f});return R(this,g,!0)};\nk.qb=function(a){var b=this,c=null;return R(this,this.I().then(function(d){c=d;return\"undefined\"===typeof a||jb(a)?{}:Zf(new Pf(a))}).then(function(d){return b.a.qb(c,d)}).then(function(d){if(b.email!=d)return b.reload()}).then(function(){}))};k.Ab=function(a,b){var c=this,d=null;return R(this,this.I().then(function(e){d=e;return\"undefined\"===typeof b||jb(b)?{}:Zf(new Pf(b))}).then(function(e){return c.a.Ab(d,a,e)}).then(function(e){if(c.email!=e)return c.reload()}).then(function(){}))};\nfunction R(a,b,c){var d=dn(a,b,c);a.N.push(d);d.ma(function(){Ta(a.N,d)});return d.o(function(e){var f=null;e&&\"auth/multi-factor-auth-required\"===e.code&&(f=em(e.v(),Gm(a),r(a.hc,a)));throw f||e;})}k.hc=function(a){var b=null,c=this;a=zg(E(a),c.uid).then(function(d){b=Wm(c,d,\"reauthenticate\");om(c,d);c.h=null;return c.reload()}).then(function(){return b});return R(this,a,!0)};\nfunction dn(a,b,c){return a.h&&!c?(b.cancel(),F(a.h)):b.o(function(d){!d||\"auth/user-disabled\"!=d.code&&\"auth/user-token-expired\"!=d.code||(a.h||a.dispatchEvent(new km(\"userInvalidated\")),a.h=d);throw d;})}k.toJSON=function(){return this.v()};\nk.v=function(){var a={uid:this.uid,displayName:this.displayName,photoURL:this.photoURL,email:this.email,emailVerified:this.emailVerified,phoneNumber:this.phoneNumber,isAnonymous:this.isAnonymous,tenantId:this.tenantId,providerData:[],apiKey:this.l,appName:this.m,authDomain:this.s,stsTokenManager:this.b.v(),redirectEventId:this.fa||null};this.metadata&&B(a,this.metadata.v());x(this.providerData,function(b){a.providerData.push(hf(b))});B(a,this.O.v());return a};\nfunction en(a){if(!a.apiKey)return null;var b={apiKey:a.apiKey,authDomain:a.authDomain,appName:a.appName},c={};if(a.stsTokenManager&&a.stsTokenManager.accessToken)c[Ag]=a.stsTokenManager.accessToken,c.refreshToken=a.stsTokenManager.refreshToken||null;else return null;var d=new P(b,c,a);a.providerData&&x(a.providerData,function(e){e&&Pm(d,gf(e))});a.redirectEventId&&(d.fa=a.redirectEventId);return d}\nfunction fn(a,b,c,d){var e=new P(a,b);c&&(e.ga=c);d&&Dm(e,d);return e.reload().then(function(){return e})}function gn(a,b,c,d){var e=a.b,f={};f[Ag]=e.b&&e.b.toString();f.refreshToken=e.a;b=new P(b||{apiKey:a.l,authDomain:a.s,appName:a.m},f);c&&(b.ga=c);d&&Dm(b,d);Sm(b,a);return b};function hn(a){this.a=a;this.b=Ok()}var bn={name:\"redirectUser\",F:\"session\"};function cn(a){return Sk(a.b,bn,a.a)}function jn(a,b){return a.b.get(bn,a.a).then(function(c){c&&b&&(c.authDomain=b);return en(c||{})})};function kn(a){this.a=a;this.b=Ok();this.c=null;this.f=ln(this);this.b.addListener(mn(\"local\"),this.a,r(this.g,this))}kn.prototype.g=function(){var a=this,b=mn(\"local\");nn(this,function(){return E().then(function(){return a.c&&\"local\"!=a.c.F?a.b.get(b,a.a):null}).then(function(c){if(c)return on(a,\"local\").then(function(){a.c=b})})})};function on(a,b){var c=[],d;for(d in Kk)Kk[d]!==b&&c.push(Sk(a.b,mn(Kk[d]),a.a));c.push(Sk(a.b,pn,a.a));return Dc(c)}\nfunction ln(a){var b=mn(\"local\"),c=mn(\"session\"),d=mn(\"none\");return Rk(a.b,b,a.a).then(function(){return a.b.get(c,a.a)}).then(function(e){return e?c:a.b.get(d,a.a).then(function(f){return f?d:a.b.get(b,a.a).then(function(g){return g?b:a.b.get(pn,a.a).then(function(h){return h?mn(h):b})})})}).then(function(e){a.c=e;return on(a,e.F)}).o(function(){a.c||(a.c=b)})}var pn={name:\"persistence\",F:\"session\"};function mn(a){return{name:\"authUser\",F:a}}\nkn.prototype.tb=function(a){var b=null,c=this;Lk(a);return nn(this,function(){return a!=c.c.F?c.b.get(c.c,c.a).then(function(d){b=d;return on(c,a)}).then(function(){c.c=mn(a);if(b)return c.b.set(c.c,b,c.a)}):E()})};function qn(a){return nn(a,function(){return a.b.set(pn,a.c.F,a.a)})}function rn(a,b){return nn(a,function(){return a.b.set(a.c,b.v(),a.a)})}function sn(a){return nn(a,function(){return Sk(a.b,a.c,a.a)})}\nfunction tn(a,b){return nn(a,function(){return a.b.get(a.c,a.a).then(function(c){c&&b&&(c.authDomain=b);return en(c||{})})})}function nn(a,b){a.f=a.f.then(b,b);return a.f};function un(a){this.l=!1;K(this,\"settings\",new Xl);K(this,\"app\",a);if(S(this).options&&S(this).options.apiKey)a=_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.SDK_VERSION?Le(_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.SDK_VERSION):null,this.b=new Ei(S(this).options&&S(this).options.apiKey,za(Aa),a);else throw new u(\"invalid-api-key\");this.P=[];this.m=[];this.O=[];this.$b=_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.INTERNAL.createSubscribe(r(this.xc,this));this.W=void 0;this.ac=_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.INTERNAL.createSubscribe(r(this.yc,this));vn(this,null);this.i=new kn(S(this).options.apiKey+\":\"+S(this).name);this.B=\nnew hn(S(this).options.apiKey+\":\"+S(this).name);this.Z=T(this,wn(this));this.h=T(this,xn(this));this.aa=!1;this.oa=r(this.Xc,this);this.Ma=r(this.ca,this);this.xa=r(this.jc,this);this.ya=r(this.uc,this);this.za=r(this.vc,this);this.a=null;yn(this);this.INTERNAL={};this.INTERNAL[\"delete\"]=r(this.delete,this);this.INTERNAL.logFramework=r(this.Ec,this);this.s=0;G.call(this);zn(this);this.N=[]}t(un,G);function An(a){Xc.call(this,\"languageCodeChanged\");this.g=a}t(An,Xc);\nfunction Bn(a){Xc.call(this,\"frameworkChanged\");this.c=a}t(Bn,Xc);k=un.prototype;k.tb=function(a){a=this.i.tb(a);return T(this,a)};k.va=function(a){this.$===a||this.l||(this.$=a,Ki(this.b,this.$),this.dispatchEvent(new An(this.ja())))};k.ja=function(){return this.$};k.dd=function(){var a=l.navigator;this.va(a?a.languages&&a.languages[0]||a.language||a.userLanguage||null:null)};k.Ec=function(a){this.N.push(a);Li(this.b,_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.SDK_VERSION?Le(_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.SDK_VERSION,this.N):null);this.dispatchEvent(new Bn(this.N))};\nk.Ea=function(){return Wa(this.N)};k.ub=function(a){this.R===a||this.l||(this.R=a,this.b.b=this.R)};k.S=function(){return this.R};function zn(a){Object.defineProperty(a,\"lc\",{get:function(){return this.ja()},set:function(b){this.va(b)},enumerable:!1});a.$=null;Object.defineProperty(a,\"ti\",{get:function(){return this.S()},set:function(b){this.ub(b)},enumerable:!1});a.R=null}\nk.toJSON=function(){return{apiKey:S(this).options.apiKey,authDomain:S(this).options.authDomain,appName:S(this).name,currentUser:U(this)&&U(this).v()}};function Cn(a){return a.Zb||F(new u(\"auth-domain-config-required\"))}function yn(a){var b=S(a).options.authDomain,c=S(a).options.apiKey;b&&Oe()&&(a.Zb=a.Z.then(function(){if(!a.l){a.a=Pl(b,c,S(a).name);Hl(a.a,a);U(a)&&Lm(U(a));if(a.D){Lm(a.D);var d=a.D;d.va(a.ja());Em(d,a);d=a.D;Dm(d,a.N);Fm(d,a);a.D=null}return a.a}}))}\nk.Cb=function(a,b){switch(a){case \"unknown\":case \"signInViaRedirect\":return!0;case \"signInViaPopup\":return this.g==b&&!!this.f;default:return!1}};k.la=function(a,b,c,d){\"signInViaPopup\"==a&&this.g==d&&(c&&this.w?this.w(c):b&&!c&&this.f&&this.f(b),this.c&&(this.c.cancel(),this.c=null),delete this.f,delete this.w)};k.Da=function(a,b){return\"signInViaRedirect\"==a||\"signInViaPopup\"==a&&this.g==b&&this.f?r(this.gc,this):null};\nk.gc=function(a,b,c,d){var e=this,f={requestUri:a,postBody:d,sessionId:b,tenantId:c};this.c&&(this.c.cancel(),this.c=null);return e.Z.then(function(){return Dn(e,Cg(e.b,f))})};\nk.Vc=function(a){if(!Oe())return F(new u(\"operation-not-supported-in-this-environment\"));var b=this,c=kg(a.providerId),d=Ne(),e=null;(!Qe()||Fe())&&S(this).options.authDomain&&a.isOAuthProvider&&(e=Yj(S(this).options.authDomain,S(this).options.apiKey,S(this).name,\"signInViaPopup\",a,null,d,_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.SDK_VERSION||null,null,null,this.S()));var f=we(e,c&&c.ta,c&&c.sa);c=Cn(this).then(function(g){return Ll(g,f,\"signInViaPopup\",a,d,!!e,b.S())}).then(function(){return new D(function(g,h){b.la(\"signInViaPopup\",\nnull,new u(\"cancelled-popup-request\"),b.g);b.f=g;b.w=h;b.g=d;b.c=Nl(b.a,b,\"signInViaPopup\",f,d)})}).then(function(g){f&&ve(f);return g?gf(g):null}).o(function(g){f&&ve(f);throw g;});return T(this,c)};k.Wc=function(a){if(!Oe())return F(new u(\"operation-not-supported-in-this-environment\"));var b=this,c=Cn(this).then(function(){return qn(b.i)}).then(function(){return Ml(b.a,\"signInViaRedirect\",a,void 0,b.S())});return T(this,c)};\nfunction En(a){if(!Oe())return F(new u(\"operation-not-supported-in-this-environment\"));var b=Cn(a).then(function(){return a.a.pa()}).then(function(c){return c?gf(c):null});return T(a,b)}k.pa=function(){var a=this;return En(this).then(function(b){a.a&&Sl(a.a.b);return b}).o(function(b){a.a&&Sl(a.a.b);throw b;})};\nk.bd=function(a){if(!a)return F(new u(\"null-user\"));if(this.R!=a.tenantId)return F(new u(\"tenant-id-mismatch\"));var b=this,c={};c.apiKey=S(this).options.apiKey;c.authDomain=S(this).options.authDomain;c.appName=S(this).name;var d=gn(a,c,b.B,b.Ea());return T(this,this.h.then(function(){if(S(b).options.apiKey!=a.l)return d.reload()}).then(function(){if(U(b)&&a.uid==U(b).uid)return Sm(U(b),a),b.ca(a);vn(b,d);Lm(d);return b.ca(d)}).then(function(){Fn(b)}))};\nfunction Gn(a,b){var c={};c.apiKey=S(a).options.apiKey;c.authDomain=S(a).options.authDomain;c.appName=S(a).name;return a.Z.then(function(){return fn(c,b,a.B,a.Ea())}).then(function(d){if(U(a)&&d.uid==U(a).uid)return Sm(U(a),d),a.ca(d);vn(a,d);Lm(d);return a.ca(d)}).then(function(){Fn(a)})}\nfunction vn(a,b){U(a)&&(Jm(U(a),a.Ma),td(U(a),\"tokenChanged\",a.xa),td(U(a),\"userDeleted\",a.ya),td(U(a),\"userInvalidated\",a.za),Im(U(a)));b&&(b.R.push(a.Ma),jd(b,\"tokenChanged\",a.xa),jd(b,\"userDeleted\",a.ya),jd(b,\"userInvalidated\",a.za),0<a.s&&Hm(b));K(a,\"currentUser\",b);b&&(b.va(a.ja()),Em(b,a),Dm(b,a.N),Fm(b,a))}k.wb=function(){var a=this,b=this.h.then(function(){a.a&&Sl(a.a.b);if(!U(a))return E();vn(a,null);return sn(a.i).then(function(){Fn(a)})});return T(this,b)};\nfunction Hn(a){var b=jn(a.B,S(a).options.authDomain).then(function(c){if(a.D=c)c.ga=a.B;return cn(a.B)});return T(a,b)}function wn(a){var b=S(a).options.authDomain,c=Hn(a).then(function(){return tn(a.i,b)}).then(function(d){return d?(d.ga=a.B,a.D&&(a.D.fa||null)==(d.fa||null)?d:d.reload().then(function(){return rn(a.i,d).then(function(){return d})}).o(function(e){return\"auth/network-request-failed\"==e.code?d:sn(a.i)})):null}).then(function(d){vn(a,d||null)});return T(a,c)}\nfunction xn(a){return a.Z.then(function(){return En(a)}).o(function(){}).then(function(){if(!a.l)return a.oa()}).o(function(){}).then(function(){if(!a.l){a.aa=!0;var b=a.i;b.b.addListener(mn(\"local\"),b.a,a.oa)}})}\nk.Xc=function(){var a=this;return tn(this.i,S(this).options.authDomain).then(function(b){if(!a.l){var c;if(c=U(a)&&b){c=U(a).uid;var d=b.uid;c=void 0===c||null===c||\"\"===c||void 0===d||null===d||\"\"===d?!1:c==d}if(c)return Sm(U(a),b),U(a).I();if(U(a)||b)vn(a,b),b&&(Lm(b),b.ga=a.B),a.a&&Hl(a.a,a),Fn(a)}})};k.ca=function(a){return rn(this.i,a)};k.jc=function(){Fn(this);this.ca(U(this))};k.uc=function(){this.wb()};k.vc=function(){this.wb()};\nfunction Dn(a,b){var c=null,d=null;return T(a,b.then(function(e){c=mh(e);d=lg(e);return Gn(a,e)},function(e){var f=null;e&&\"auth/multi-factor-auth-required\"===e.code&&(f=em(e.v(),a,r(a.ic,a)));throw f||e;}).then(function(){return gf({user:U(a),credential:c,additionalUserInfo:d,operationType:\"signIn\"})}))}k.ic=function(a){var b=this;return this.h.then(function(){return Dn(b,E(a))})};k.xc=function(a){var b=this;this.addAuthTokenListener(function(){a.next(U(b))})};\nk.yc=function(a){var b=this;In(this,function(){a.next(U(b))})};k.Gc=function(a,b,c){var d=this;this.aa&&Promise.resolve().then(function(){n(a)?a(U(d)):n(a.next)&&a.next(U(d))});return this.$b(a,b,c)};k.Fc=function(a,b,c){var d=this;this.aa&&Promise.resolve().then(function(){d.W=d.getUid();n(a)?a(U(d)):n(a.next)&&a.next(U(d))});return this.ac(a,b,c)};k.kc=function(a){var b=this,c=this.h.then(function(){return U(b)?U(b).I(a).then(function(d){return{accessToken:d}}):null});return T(this,c)};\nk.Rc=function(a){var b=this;return this.h.then(function(){return Dn(b,N(b.b,Ej,{token:a}))}).then(function(c){var d=c.user;Rm(d,\"isAnonymous\",!1);b.ca(d);return c})};k.Sc=function(a,b){var c=this;return this.h.then(function(){return Dn(c,N(c.b,Xg,{email:a,password:b}))})};k.cc=function(a,b){var c=this;return this.h.then(function(){return Dn(c,N(c.b,yj,{email:a,password:b}))})};k.Ya=function(a){var b=this;return this.h.then(function(){return Dn(b,a.ia(b.b))})};\nk.Qc=function(a){df(\"firebase.auth.Auth.prototype.signInAndRetrieveDataWithCredential is deprecated. Please use firebase.auth.Auth.prototype.signInWithCredential instead.\");return this.Ya(a)};k.vb=function(){var a=this;return this.h.then(function(){var b=U(a);if(b&&b.isAnonymous){var c=gf({providerId:null,isNewUser:!1});return gf({user:b,credential:null,additionalUserInfo:c,operationType:\"signIn\"})}return Dn(a,a.b.vb()).then(function(d){var e=d.user;Rm(e,\"isAnonymous\",!0);a.ca(e);return d})})};\nfunction S(a){return a.app}function U(a){return a.currentUser}k.getUid=function(){return U(this)&&U(this).uid||null};function Jn(a){return U(a)&&U(a)._lat||null}function Fn(a){if(a.aa){for(var b=0;b<a.m.length;b++)if(a.m[b])a.m[b](Jn(a));if(a.W!==a.getUid()&&a.O.length)for(a.W=a.getUid(),b=0;b<a.O.length;b++)if(a.O[b])a.O[b](Jn(a))}}k.bc=function(a){this.addAuthTokenListener(a);this.s++;0<this.s&&U(this)&&Hm(U(this))};\nk.Nc=function(a){var b=this;x(this.m,function(c){c==a&&b.s--});0>this.s&&(this.s=0);0==this.s&&U(this)&&Im(U(this));this.removeAuthTokenListener(a)};k.addAuthTokenListener=function(a){var b=this;this.m.push(a);T(this,this.h.then(function(){b.l||Sa(b.m,a)&&a(Jn(b))}))};k.removeAuthTokenListener=function(a){Ua(this.m,function(b){return b==a})};function In(a,b){a.O.push(b);T(a,a.h.then(function(){!a.l&&Sa(a.O,b)&&a.W!==a.getUid()&&(a.W=a.getUid(),b(Jn(a)))}))}\nk.delete=function(){this.l=!0;for(var a=0;a<this.P.length;a++)this.P[a].cancel(\"app-deleted\");this.P=[];this.i&&(a=this.i,a.b.removeListener(mn(\"local\"),a.a,this.oa));this.a&&(Il(this.a,this),Sl(this.a.b));return Promise.resolve()};function T(a,b){a.P.push(b);b.ma(function(){Ta(a.P,b)});return b}k.fc=function(a){return T(this,Vi(this.b,a))};k.zc=function(a){return!!bh(a)};\nk.sb=function(a,b){var c=this;return T(this,E().then(function(){var d=new Pf(b);if(!d.c)throw new u(\"argument-error\",Xf+\" must be true when sending sign in link to email\");return Zf(d)}).then(function(d){return c.b.sb(a,d)}).then(function(){}))};k.fd=function(a){return this.Pa(a).then(function(b){return b.data.email})};k.jb=function(a,b){return T(this,this.b.jb(a,b).then(function(){}))};k.Pa=function(a){return T(this,this.b.Pa(a).then(function(b){return new sf(b)}))};\nk.fb=function(a){return T(this,this.b.fb(a).then(function(){}))};k.rb=function(a,b){var c=this;return T(this,E().then(function(){return\"undefined\"===typeof b||jb(b)?{}:Zf(new Pf(b))}).then(function(d){return c.b.rb(a,d)}).then(function(){}))};k.Uc=function(a,b){return T(this,Zl(this,a,b,r(this.Ya,this)))};\nk.Tc=function(a,b){var c=this;return T(this,E().then(function(){var d=b||oe(),e=ah(a,d);d=bh(d);if(!d)throw new u(\"argument-error\",\"Invalid email link!\");if(d.tenantId!==c.S())throw new u(\"tenant-id-mismatch\");return c.Ya(e)}))};function Kn(){}Kn.prototype.render=function(){};Kn.prototype.reset=function(){};Kn.prototype.getResponse=function(){};Kn.prototype.execute=function(){};function Ln(){this.a={};this.b=1E12}var Mn=null;Ln.prototype.render=function(a,b){this.a[this.b.toString()]=new Nn(a,b);return this.b++};Ln.prototype.reset=function(a){var b=On(this,a);a=Pn(a);b&&a&&(b.delete(),delete this.a[a])};Ln.prototype.getResponse=function(a){return(a=On(this,a))?a.getResponse():null};Ln.prototype.execute=function(a){(a=On(this,a))&&a.execute()};function On(a,b){return(b=Pn(b))?a.a[b]||null:null}function Pn(a){return(a=\"undefined\"===typeof a?1E12:a)?a.toString():null}\nfunction Nn(a,b){this.g=!1;this.c=b;this.a=this.b=null;this.h=\"invisible\"!==this.c.size;this.f=ec(a);var c=this;this.i=function(){c.execute()};this.h?this.execute():jd(this.f,\"click\",this.i)}Nn.prototype.getResponse=function(){Qn(this);return this.b};\nNn.prototype.execute=function(){Qn(this);var a=this;this.a||(this.a=setTimeout(function(){a.b=Je();var b=a.c.callback,c=a.c[\"expired-callback\"];if(b)try{b(a.b)}catch(d){}a.a=setTimeout(function(){a.a=null;a.b=null;if(c)try{c()}catch(d){}a.h&&a.execute()},6E4)},500))};Nn.prototype.delete=function(){Qn(this);this.g=!0;clearTimeout(this.a);this.a=null;td(this.f,\"click\",this.i)};function Qn(a){if(a.g)throw Error(\"reCAPTCHA mock was already deleted!\");};function Rn(){}K(Rn,\"FACTOR_ID\",\"phone\");function Sn(){}Sn.prototype.g=function(){Mn||(Mn=new Ln);return E(Mn)};Sn.prototype.c=function(){};var Tn=null;function Un(){this.b=l.grecaptcha?Infinity:0;this.f=null;this.a=\"__rcb\"+Math.floor(1E6*Math.random()).toString()}var Vn=new nb(ob,\"https://www.google.com/recaptcha/api.js?onload=%{onload}&render=explicit&hl=%{hl}\"),Wn=new We(3E4,6E4);\nUn.prototype.g=function(a){var b=this;return new D(function(c,d){var e=setTimeout(function(){d(new u(\"network-request-failed\"))},Wn.get());if(!l.grecaptcha||a!==b.f&&!b.b){l[b.a]=function(){if(l.grecaptcha){b.f=a;var g=l.grecaptcha.render;l.grecaptcha.render=function(h,m){h=g(h,m);b.b++;return h};clearTimeout(e);c(l.grecaptcha)}else clearTimeout(e),d(new u(\"internal-error\"));delete l[b.a]};var f=wb(Vn,{onload:b.a,hl:a||\"\"});E(xi(f)).o(function(){clearTimeout(e);d(new u(\"internal-error\",\"Unable to load external reCAPTCHA dependencies!\"))})}else clearTimeout(e),\nc(l.grecaptcha)})};Un.prototype.c=function(){this.b--};var Xn=null;function Yn(a,b,c,d,e,f,g){K(this,\"type\",\"recaptcha\");this.c=this.f=null;this.D=!1;this.u=b;this.g=null;g?(Tn||(Tn=new Sn),g=Tn):(Xn||(Xn=new Un),g=Xn);this.m=g;this.a=c||{theme:\"light\",type:\"image\"};this.h=[];if(this.a[Zn])throw new u(\"argument-error\",\"sitekey should not be provided for reCAPTCHA as one is automatically provisioned for the current project.\");this.i=\"invisible\"===this.a[$n];if(!l.document)throw new u(\"operation-not-supported-in-this-environment\",\"RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment with DOM support.\");\nif(!ec(b)||!this.i&&ec(b).hasChildNodes())throw new u(\"argument-error\",\"reCAPTCHA container is either not found or already contains inner elements!\");this.s=new Ei(a,f||null,e||null);this.w=d||function(){return null};var h=this;this.l=[];var m=this.a[ao];this.a[ao]=function(v){bo(h,v);if(\"function\"===typeof m)m(v);else if(\"string\"===typeof m){var C=J(m,l);\"function\"===typeof C&&C(v)}};var p=this.a[co];this.a[co]=function(){bo(h,null);if(\"function\"===typeof p)p();else if(\"string\"===typeof p){var v=\nJ(p,l);\"function\"===typeof v&&v()}}}var ao=\"callback\",co=\"expired-callback\",Zn=\"sitekey\",$n=\"size\";function bo(a,b){for(var c=0;c<a.l.length;c++)try{a.l[c](b)}catch(d){}}function eo(a,b){Ua(a.l,function(c){return c==b})}function fo(a,b){a.h.push(b);b.ma(function(){Ta(a.h,b)});return b}k=Yn.prototype;\nk.Ga=function(){var a=this;return this.f?this.f:this.f=fo(this,E().then(function(){if(Pe()&&!Ge())return Be();throw new u(\"operation-not-supported-in-this-environment\",\"RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment.\");}).then(function(){return a.m.g(a.w())}).then(function(b){a.g=b;return N(a.s,Dj,{})}).then(function(b){a.a[Zn]=b.recaptchaSiteKey}).o(function(b){a.f=null;throw b;}))};\nk.render=function(){go(this);var a=this;return fo(this,this.Ga().then(function(){if(null===a.c){var b=a.u;if(!a.i){var c=ec(b);b=hc(\"DIV\");c.appendChild(b)}a.c=a.g.render(b,a.a)}return a.c}))};k.verify=function(){go(this);var a=this;return fo(this,this.render().then(function(b){return new D(function(c){var d=a.g.getResponse(b);if(d)c(d);else{var e=function(f){f&&(eo(a,e),c(f))};a.l.push(e);a.i&&a.g.execute(a.c)}})}))};k.reset=function(){go(this);null!==this.c&&this.g.reset(this.c)};\nfunction go(a){if(a.D)throw new u(\"internal-error\",\"RecaptchaVerifier instance has been destroyed.\");}k.clear=function(){go(this);this.D=!0;this.m.c();for(var a=0;a<this.h.length;a++)this.h[a].cancel(\"RecaptchaVerifier instance has been destroyed.\");if(!this.i){a=ec(this.u);for(var b;b=a.firstChild;)a.removeChild(b)}};\nfunction ho(a,b,c){var d=!1;try{this.b=c||_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.app()}catch(g){throw new u(\"argument-error\",\"No firebase.app.App instance is currently initialized.\");}if(this.b.options&&this.b.options.apiKey)c=this.b.options.apiKey;else throw new u(\"invalid-api-key\");var e=this,f=null;try{f=this.b.auth().Ea()}catch(g){}try{d=this.b.auth().settings.appVerificationDisabledForTesting}catch(g){}f=_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.SDK_VERSION?Le(_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.SDK_VERSION,f):null;Yn.call(this,c,a,b,function(){try{var g=e.b.auth().ja()}catch(h){g=\nnull}return g},f,za(Aa),d)}t(ho,Yn);function io(a,b,c,d){a:{c=Array.prototype.slice.call(c);var e=0;for(var f=!1,g=0;g<b.length;g++)if(b[g].optional)f=!0;else{if(f)throw new u(\"internal-error\",\"Argument validator encountered a required argument after an optional argument.\");e++}f=b.length;if(c.length<e||f<c.length)d=\"Expected \"+(e==f?1==e?\"1 argument\":e+\" arguments\":e+\"-\"+f+\" arguments\")+\" but got \"+c.length+\".\";else{for(e=0;e<c.length;e++)if(f=b[e].optional&&void 0===c[e],!b[e].K(c[e])&&!f){b=b[e];if(0>e||e>=jo.length)throw new u(\"internal-error\",\n\"Argument validator received an unsupported number of arguments.\");c=jo[e];d=(d?\"\":c+\" argument \")+(b.name?'\"'+b.name+'\" ':\"\")+\"must be \"+b.J+\".\";break a}d=null}}if(d)throw new u(\"argument-error\",a+\" failed: \"+d);}var jo=\"First Second Third Fourth Fifth Sixth Seventh Eighth Ninth\".split(\" \");function V(a,b){return{name:a||\"\",J:\"a valid string\",optional:!!b,K:function(c){return\"string\"===typeof c}}}\nfunction ko(a,b){return{name:a||\"\",J:\"a boolean\",optional:!!b,K:function(c){return\"boolean\"===typeof c}}}function W(a,b){return{name:a||\"\",J:\"a valid object\",optional:!!b,K:q}}function lo(a,b){return{name:a||\"\",J:\"a function\",optional:!!b,K:n}}function mo(a,b){return{name:a||\"\",J:\"null\",optional:!!b,K:function(c){return null===c}}}function no(){return{name:\"\",J:\"an HTML element\",optional:!1,K:function(a){return!!(a&&a instanceof Element)}}}\nfunction oo(){return{name:\"auth\",J:\"an instance of Firebase Auth\",optional:!0,K:function(a){return!!(a&&a instanceof un)}}}function po(){return{name:\"app\",J:\"an instance of Firebase App\",optional:!0,K:function(a){return!!(a&&a instanceof _firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.app.App)}}}function qo(a){return{name:a?a+\"Credential\":\"credential\",J:a?\"a valid \"+a+\" credential\":\"a valid credential\",optional:!1,K:function(b){if(!b)return!1;var c=!a||b.providerId===a;return!(!b.ia||!c)}}}\nfunction ro(){return{name:\"multiFactorAssertion\",J:\"a valid multiFactorAssertion\",optional:!1,K:function(a){return a?!!a.ob:!1}}}function so(){return{name:\"authProvider\",J:\"a valid Auth provider\",optional:!1,K:function(a){return!!(a&&a.providerId&&a.hasOwnProperty&&a.hasOwnProperty(\"isOAuthProvider\"))}}}function to(a,b){return q(a)&&\"string\"===typeof a.type&&a.type===b&&n(a.Fa)}function uo(a){return q(a)&&\"string\"===typeof a.uid}\nfunction vo(){return{name:\"applicationVerifier\",J:\"an implementation of firebase.auth.ApplicationVerifier\",optional:!1,K:function(a){return!(!a||\"string\"!==typeof a.type||!n(a.verify))}}}function X(a,b,c,d){return{name:c||\"\",J:a.J+\" or \"+b.J,optional:!!d,K:function(e){return a.K(e)||b.K(e)}}};function Y(a,b){for(var c in b){var d=b[c].name;a[d]=wo(d,a[c],b[c].j)}}function xo(a,b){for(var c in b){var d=b[c].name;d!==c&&Object.defineProperty(a,d,{get:sa(function(e){return this[e]},c),set:sa(function(e,f,g,h){io(e,[g],[h],!0);this[f]=h},d,c,b[c].gb),enumerable:!0})}}function Z(a,b,c,d){a[b]=wo(b,c,d)}\nfunction wo(a,b,c){function d(){var g=Array.prototype.slice.call(arguments);io(e,c,g);return b.apply(this,g)}if(!c)return b;var e=yo(a),f;for(f in b)d[f]=b[f];for(f in b.prototype)d.prototype[f]=b.prototype[f];return d}function yo(a){a=a.split(\".\");return a[a.length-1]};Y(un.prototype,{fb:{name:\"applyActionCode\",j:[V(\"code\")]},Pa:{name:\"checkActionCode\",j:[V(\"code\")]},jb:{name:\"confirmPasswordReset\",j:[V(\"code\"),V(\"newPassword\")]},cc:{name:\"createUserWithEmailAndPassword\",j:[V(\"email\"),V(\"password\")]},fc:{name:\"fetchSignInMethodsForEmail\",j:[V(\"email\")]},pa:{name:\"getRedirectResult\",j:[]},zc:{name:\"isSignInWithEmailLink\",j:[V(\"emailLink\")]},Fc:{name:\"onAuthStateChanged\",j:[X(W(),lo(),\"nextOrObserver\"),lo(\"opt_error\",!0),lo(\"opt_completed\",!0)]},Gc:{name:\"onIdTokenChanged\",\nj:[X(W(),lo(),\"nextOrObserver\"),lo(\"opt_error\",!0),lo(\"opt_completed\",!0)]},rb:{name:\"sendPasswordResetEmail\",j:[V(\"email\"),X(W(\"opt_actionCodeSettings\",!0),mo(null,!0),\"opt_actionCodeSettings\",!0)]},sb:{name:\"sendSignInLinkToEmail\",j:[V(\"email\"),W(\"actionCodeSettings\")]},tb:{name:\"setPersistence\",j:[V(\"persistence\")]},Qc:{name:\"signInAndRetrieveDataWithCredential\",j:[qo()]},vb:{name:\"signInAnonymously\",j:[]},Ya:{name:\"signInWithCredential\",j:[qo()]},Rc:{name:\"signInWithCustomToken\",j:[V(\"token\")]},\nSc:{name:\"signInWithEmailAndPassword\",j:[V(\"email\"),V(\"password\")]},Tc:{name:\"signInWithEmailLink\",j:[V(\"email\"),V(\"emailLink\",!0)]},Uc:{name:\"signInWithPhoneNumber\",j:[V(\"phoneNumber\"),vo()]},Vc:{name:\"signInWithPopup\",j:[so()]},Wc:{name:\"signInWithRedirect\",j:[so()]},bd:{name:\"updateCurrentUser\",j:[X(function(a){return{name:\"user\",J:\"an instance of Firebase User\",optional:!!a,K:function(b){return!!(b&&b instanceof P)}}}(),mo(),\"user\")]},wb:{name:\"signOut\",j:[]},toJSON:{name:\"toJSON\",j:[V(null,!0)]},\ndd:{name:\"useDeviceLanguage\",j:[]},fd:{name:\"verifyPasswordResetCode\",j:[V(\"code\")]}});xo(un.prototype,{lc:{name:\"languageCode\",gb:X(V(),mo(),\"languageCode\")},ti:{name:\"tenantId\",gb:X(V(),mo(),\"tenantId\")}});un.Persistence=Kk;un.Persistence.LOCAL=\"local\";un.Persistence.SESSION=\"session\";un.Persistence.NONE=\"none\";\nY(P.prototype,{\"delete\":{name:\"delete\",j:[]},mc:{name:\"getIdTokenResult\",j:[ko(\"opt_forceRefresh\",!0)]},I:{name:\"getIdToken\",j:[ko(\"opt_forceRefresh\",!0)]},Ac:{name:\"linkAndRetrieveDataWithCredential\",j:[qo()]},mb:{name:\"linkWithCredential\",j:[qo()]},Bc:{name:\"linkWithPhoneNumber\",j:[V(\"phoneNumber\"),vo()]},Cc:{name:\"linkWithPopup\",j:[so()]},Dc:{name:\"linkWithRedirect\",j:[so()]},Jc:{name:\"reauthenticateAndRetrieveDataWithCredential\",j:[qo()]},pb:{name:\"reauthenticateWithCredential\",j:[qo()]},Kc:{name:\"reauthenticateWithPhoneNumber\",\nj:[V(\"phoneNumber\"),vo()]},Lc:{name:\"reauthenticateWithPopup\",j:[so()]},Mc:{name:\"reauthenticateWithRedirect\",j:[so()]},reload:{name:\"reload\",j:[]},qb:{name:\"sendEmailVerification\",j:[X(W(\"opt_actionCodeSettings\",!0),mo(null,!0),\"opt_actionCodeSettings\",!0)]},toJSON:{name:\"toJSON\",j:[V(null,!0)]},ad:{name:\"unlink\",j:[V(\"provider\")]},xb:{name:\"updateEmail\",j:[V(\"email\")]},yb:{name:\"updatePassword\",j:[V(\"password\")]},cd:{name:\"updatePhoneNumber\",j:[qo(\"phone\")]},zb:{name:\"updateProfile\",j:[W(\"profile\")]},\nAb:{name:\"verifyBeforeUpdateEmail\",j:[V(\"email\"),X(W(\"opt_actionCodeSettings\",!0),mo(null,!0),\"opt_actionCodeSettings\",!0)]}});Y(Ln.prototype,{execute:{name:\"execute\"},render:{name:\"render\"},reset:{name:\"reset\"},getResponse:{name:\"getResponse\"}});Y(Kn.prototype,{execute:{name:\"execute\"},render:{name:\"render\"},reset:{name:\"reset\"},getResponse:{name:\"getResponse\"}});Y(D.prototype,{ma:{name:\"finally\"},o:{name:\"catch\"},then:{name:\"then\"}});\nxo(Xl.prototype,{appVerificationDisabled:{name:\"appVerificationDisabledForTesting\",gb:ko(\"appVerificationDisabledForTesting\")}});Y(Yl.prototype,{confirm:{name:\"confirm\",j:[V(\"verificationCode\")]}});Z(yg,\"fromJSON\",function(a){a=\"string\"===typeof a?JSON.parse(a):a;for(var b,c=[Jg,$g,gh,Gg],d=0;d<c.length;d++)if(b=c[d](a))return b;return null},[X(V(),W(),\"json\")]);Z(Vg,\"credential\",function(a,b){return new Ug(a,b)},[V(\"email\"),V(\"password\")]);Y(Ug.prototype,{v:{name:\"toJSON\",j:[V(null,!0)]}});\nY(Mg.prototype,{Aa:{name:\"addScope\",j:[V(\"scope\")]},Ia:{name:\"setCustomParameters\",j:[W(\"customOAuthParameters\")]}});Z(Mg,\"credential\",Ng,[X(V(),W(),\"token\")]);Z(Vg,\"credentialWithLink\",ah,[V(\"email\"),V(\"emailLink\")]);Y(Og.prototype,{Aa:{name:\"addScope\",j:[V(\"scope\")]},Ia:{name:\"setCustomParameters\",j:[W(\"customOAuthParameters\")]}});Z(Og,\"credential\",Pg,[X(V(),W(),\"token\")]);Y(Qg.prototype,{Aa:{name:\"addScope\",j:[V(\"scope\")]},Ia:{name:\"setCustomParameters\",j:[W(\"customOAuthParameters\")]}});\nZ(Qg,\"credential\",Rg,[X(V(),X(W(),mo()),\"idToken\"),X(V(),mo(),\"accessToken\",!0)]);Y(Sg.prototype,{Ia:{name:\"setCustomParameters\",j:[W(\"customOAuthParameters\")]}});Z(Sg,\"credential\",Tg,[X(V(),W(),\"token\"),V(\"secret\",!0)]);Y(M.prototype,{Aa:{name:\"addScope\",j:[V(\"scope\")]},credential:{name:\"credential\",j:[X(V(),X(W(),mo()),\"optionsOrIdToken\"),X(V(),mo(),\"accessToken\",!0)]},Ia:{name:\"setCustomParameters\",j:[W(\"customOAuthParameters\")]}});Y(Hg.prototype,{v:{name:\"toJSON\",j:[V(null,!0)]}});\nY(Bg.prototype,{v:{name:\"toJSON\",j:[V(null,!0)]}});Z(hh,\"credential\",lh,[V(\"verificationId\"),V(\"verificationCode\")]);\nY(hh.prototype,{cb:{name:\"verifyPhoneNumber\",j:[X(V(),function(a,b){return{name:a||\"phoneInfoOptions\",J:\"valid phone info options\",optional:!!b,K:function(c){return c?c.session&&c.phoneNumber?to(c.session,wg)&&\"string\"===typeof c.phoneNumber:c.session&&c.multiFactorHint?to(c.session,xg)&&uo(c.multiFactorHint):c.session&&c.multiFactorUid?to(c.session,xg)&&\"string\"===typeof c.multiFactorUid:c.phoneNumber?\"string\"===typeof c.phoneNumber:!1:!1}}}(),\"phoneInfoOptions\"),vo()]}});\nY(ch.prototype,{v:{name:\"toJSON\",j:[V(null,!0)]}});Y(u.prototype,{toJSON:{name:\"toJSON\",j:[V(null,!0)]}});Y(uh.prototype,{toJSON:{name:\"toJSON\",j:[V(null,!0)]}});Y(th.prototype,{toJSON:{name:\"toJSON\",j:[V(null,!0)]}});Y(dm.prototype,{toJSON:{name:\"toJSON\",j:[V(null,!0)]}});Y(am.prototype,{Pc:{name:\"resolveSignIn\",j:[ro()]}});\nY(lm.prototype,{Ob:{name:\"getSession\",j:[]},dc:{name:\"enroll\",j:[ro(),V(\"displayName\",!0)]},$c:{name:\"unenroll\",j:[X({name:\"multiFactorInfo\",J:\"a valid multiFactorInfo\",optional:!1,K:uo},V(),\"multiFactorInfoIdentifier\")]}});Y(ho.prototype,{clear:{name:\"clear\",j:[]},render:{name:\"render\",j:[]},verify:{name:\"verify\",j:[]}});Z(Gf,\"parseLink\",Of,[V(\"link\")]);Z(Rn,\"assertion\",function(a){return new jm(a)},[qo(\"phone\")]);\n(function(){if(\"undefined\"!==typeof _firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a&&_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.INTERNAL&&_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.INTERNAL.registerComponent){var a={ActionCodeInfo:{Operation:{EMAIL_SIGNIN:xf,PASSWORD_RESET:\"PASSWORD_RESET\",RECOVER_EMAIL:\"RECOVER_EMAIL\",REVERT_SECOND_FACTOR_ADDITION:zf,VERIFY_AND_CHANGE_EMAIL:yf,VERIFY_EMAIL:\"VERIFY_EMAIL\"}},Auth:un,AuthCredential:yg,Error:u};Z(a,\"EmailAuthProvider\",Vg,[]);Z(a,\"FacebookAuthProvider\",Mg,[]);Z(a,\"GithubAuthProvider\",Og,[]);Z(a,\"GoogleAuthProvider\",Qg,[]);Z(a,\"TwitterAuthProvider\",Sg,[]);\nZ(a,\"OAuthProvider\",M,[V(\"providerId\")]);Z(a,\"SAMLAuthProvider\",Lg,[V(\"providerId\")]);Z(a,\"PhoneAuthProvider\",hh,[oo()]);Z(a,\"RecaptchaVerifier\",ho,[X(V(),no(),\"recaptchaContainer\"),W(\"recaptchaParameters\",!0),po()]);Z(a,\"ActionCodeURL\",Gf,[]);Z(a,\"PhoneMultiFactorGenerator\",Rn,[]);_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.INTERNAL.registerComponent({name:\"auth\",instanceFactory:function(b){b=b.getProvider(\"app\").getImmediate();return new un(b)},multipleInstances:!1,serviceProps:a,instantiationMode:\"LAZY\",type:\"PUBLIC\"});_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.INTERNAL.registerComponent({name:\"auth-internal\",\ninstanceFactory:function(b){b=b.getProvider(\"auth\").getImmediate();return{getUid:r(b.getUid,b),getToken:r(b.kc,b),addAuthTokenListener:r(b.bc,b),removeAuthTokenListener:r(b.Nc,b)}},multipleInstances:!1,instantiationMode:\"LAZY\",type:\"PRIVATE\"});_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.registerVersion(\"@firebase/auth\",\"0.14.6\");_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.INTERNAL.extendNamespace({User:P})}else throw Error(\"Cannot find the firebase namespace; be sure to include firebase-app.js before this library.\");})();}).apply(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {});\n\n//# sourceMappingURL=auth.esm.js.map\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGZpcmViYXNlL2F1dGgvZGlzdC9hdXRoLmVzbS5qcz9iN2FhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFxQyxhQUFhOztBQUVsRDtBQUNBO0FBQ0E7QUFDQSwwRkFBMEYseURBQXlELGVBQWUsa0dBQWtHLFlBQVksV0FBVyxLQUFLLFdBQVcsNEJBQTRCLGtCQUFrQjtBQUN6VixpQkFBaUIsTUFBTSxTQUFTLGVBQWUsWUFBWSxhQUFhLEtBQUssV0FBVyxnQkFBZ0IsRUFBRSxPQUFPLGdCQUFnQixPQUFPLE9BQU8sdUJBQXVCLG9DQUFvQyxHQUFHLGVBQWUsUUFBUSxrQkFBa0IsbUJBQW1CLHFCQUFxQixFQUFFLFVBQVUsZUFBZSxzRUFBc0Usb0JBQW9CO0FBQ25aLHlCQUF5QixjQUFjLFNBQVMsY0FBYyxVQUFVLGVBQWUsSUFBSSxzQkFBc0IsU0FBUyxhQUFhLGFBQWEsWUFBWSxjQUFjLDBDQUEwQyxLQUFLLEVBQUUsY0FBYywwQkFBMEIsaUJBQWlCLFVBQVUsV0FBVyxrQkFBa0IsTUFBTSxFQUFFLGdCQUFnQixvQkFBb0IsMEJBQTBCLFFBQVEseUJBQXlCLEtBQUssc0JBQXNCLEVBQUUsYUFBYSxVQUFVLFlBQVksV0FBVyxLQUFLO0FBQ3RmLEtBQUssVUFBVSxJQUFJLElBQUksU0FBUyxZQUFZLGFBQWEsMEJBQTBCLGtCQUFrQixTQUFTLEdBQUcseUJBQXlCLGNBQWMsbUJBQW1CLHVCQUF1QixnQkFBZ0IsT0FBTyxxQ0FBcUMsMEJBQTBCLHdFQUF3RSxpQ0FBaUMsS0FBSyxtQkFBbUIsNEJBQTRCLFFBQVEscUJBQXFCLFFBQVEsYUFBYTtBQUN2ZSwwQkFBMEIsYUFBYSxJQUFJLFNBQVMsU0FBUyxVQUFVLE9BQU8sNENBQTRDLDBCQUEwQixhQUFhLDBCQUEwQixhQUFhLDRCQUE0QixpR0FBaUcsU0FBUyxTQUFTLFVBQVUseUJBQXlCLGlCQUFpQixZQUFZLGdCQUFnQixtQkFB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NWQsZ0JBQWdCLEdBQUcsOEJBQThCLEVBQUUsZUFBZSxRQUFRLDhCQUE4QixFQUFFLGdCQUFnQixRQUFRLDhCQUE4QixFQUFFLGdCQUFnQixRQUFRLDhCQUE4QixFQUFFLGdCQUFnQixRQUFRLDhCQUE4QixFQUFFLGdCQUFnQixJQUFJLCtCQUErQjtBQUNyVSxnQkFBZ0IsSUFBSSx1QkFBdUIsS0FBSywyQ0FBMkMsS0FBSyxzQkFBc0Isb0VBQW9FLG9DQUFvQyxFQUFFLGdCQUFnQixPQUFPLGtCQUFrQixTQUFTLG1CQUFtQixTQUFTLG9CQUFvQixFQUFFLGlDQUFpQyw2QkFBNkIsaUJBQWlCO0FBQ25aLFlBQVksd0JBQXdCLG9EQUFRLEVBQUUsb0RBQVEsV0FBVyxvREFBUSw2QkFBNkIsT0FBTyxnQkFBZ0IsV0FBVyx1S0FBdUssb0NBQW9DLCtCQUErQixrQ0FBa0MsZ0NBQWdDLGdDQUFnQztBQUNwZCx5Q0FBeUMsNkNBQTZDLG1DQUFtQyxnR0FBZ0csMkJBQTJCLHVDQUF1QyxvREFBUSw2QkFBNkIsd0NBQXdDLHNDQUFzQyxpQkFBaUIsNEVBQTRFLEVBQUUsb0RBQVEsNkJBQTZCO0FBQ2xoQiw0QkFBNEIsdUNBQXVDLE9BQU8sMEdBQTBHLDhEQUE4RCxFQUFFLG9EQUFRLDRDQUE0QyxvREFBUSwyQkFBMkIsT0FBTyxFQUFFLHFEQUFxRCw0REFBNEQsS0FBSyxpSUFBaUk7O0FBRTNrQiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AZmlyZWJhc2UvYXV0aC9kaXN0L2F1dGguZXNtLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZpcmViYXNlIGZyb20gJ0BmaXJlYmFzZS9hcHAnOyhmdW5jdGlvbigpIHsvKlxuXG4gQ29weXJpZ2h0IFRoZSBDbG9zdXJlIExpYnJhcnkgQXV0aG9ycy5cbiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuKi9cbnZhciBrLGFhPVwiZnVuY3Rpb25cIj09dHlwZW9mIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzP09iamVjdC5kZWZpbmVQcm9wZXJ0eTpmdW5jdGlvbihhLGIsYyl7YSE9QXJyYXkucHJvdG90eXBlJiZhIT1PYmplY3QucHJvdG90eXBlJiYoYVtiXT1jLnZhbHVlKX07ZnVuY3Rpb24gYmEoYSl7YT1bXCJvYmplY3RcIj09dHlwZW9mIHdpbmRvdyYmd2luZG93LFwib2JqZWN0XCI9PXR5cGVvZiBzZWxmJiZzZWxmLFwib2JqZWN0XCI9PXR5cGVvZiBnbG9iYWwmJmdsb2JhbCxhXTtmb3IodmFyIGI9MDtiPGEubGVuZ3RoOysrYil7dmFyIGM9YVtiXTtpZihjJiZjLk1hdGg9PU1hdGgpcmV0dXJuIGN9cmV0dXJuIGdsb2JhbFRoaXN9dmFyIGNhPWJhKHRoaXMpO1xuZnVuY3Rpb24gZGEoYSxiKXtpZihiKXt2YXIgYz1jYTthPWEuc3BsaXQoXCIuXCIpO2Zvcih2YXIgZD0wO2Q8YS5sZW5ndGgtMTtkKyspe3ZhciBlPWFbZF07ZSBpbiBjfHwoY1tlXT17fSk7Yz1jW2VdfWE9YVthLmxlbmd0aC0xXTtkPWNbYV07Yj1iKGQpO2IhPWQmJm51bGwhPWImJmFhKGMsYSx7Y29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLHZhbHVlOmJ9KX19ZnVuY3Rpb24gZWEoYSl7dmFyIGI9MDtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gYjxhLmxlbmd0aD97ZG9uZTohMSx2YWx1ZTphW2IrK119Ontkb25lOiEwfX19ZnVuY3Rpb24gZmEoYSl7dmFyIGI9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yJiZhW1N5bWJvbC5pdGVyYXRvcl07cmV0dXJuIGI/Yi5jYWxsKGEpOntuZXh0OmVhKGEpfX1cbmRhKFwiUHJvbWlzZVwiLGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoZyl7dGhpcy5iPTA7dGhpcy5jPXZvaWQgMDt0aGlzLmE9W107dmFyIGg9dGhpcy5mKCk7dHJ5e2coaC5yZXNvbHZlLGgucmVqZWN0KX1jYXRjaChtKXtoLnJlamVjdChtKX19ZnVuY3Rpb24gYygpe3RoaXMuYT1udWxsfWZ1bmN0aW9uIGQoZyl7cmV0dXJuIGcgaW5zdGFuY2VvZiBiP2c6bmV3IGIoZnVuY3Rpb24oaCl7aChnKX0pfWlmKGEpcmV0dXJuIGE7Yy5wcm90b3R5cGUuYj1mdW5jdGlvbihnKXtpZihudWxsPT10aGlzLmEpe3RoaXMuYT1bXTt2YXIgaD10aGlzO3RoaXMuYyhmdW5jdGlvbigpe2guZygpfSl9dGhpcy5hLnB1c2goZyl9O3ZhciBlPWNhLnNldFRpbWVvdXQ7Yy5wcm90b3R5cGUuYz1mdW5jdGlvbihnKXtlKGcsMCl9O2MucHJvdG90eXBlLmc9ZnVuY3Rpb24oKXtmb3IoO3RoaXMuYSYmdGhpcy5hLmxlbmd0aDspe3ZhciBnPXRoaXMuYTt0aGlzLmE9W107Zm9yKHZhciBoPTA7aDxnLmxlbmd0aDsrK2gpe3ZhciBtPVxuZ1toXTtnW2hdPW51bGw7dHJ5e20oKX1jYXRjaChwKXt0aGlzLmYocCl9fX10aGlzLmE9bnVsbH07Yy5wcm90b3R5cGUuZj1mdW5jdGlvbihnKXt0aGlzLmMoZnVuY3Rpb24oKXt0aHJvdyBnO30pfTtiLnByb3RvdHlwZS5mPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZyhwKXtyZXR1cm4gZnVuY3Rpb24odil7bXx8KG09ITAscC5jYWxsKGgsdikpfX12YXIgaD10aGlzLG09ITE7cmV0dXJue3Jlc29sdmU6Zyh0aGlzLm0pLHJlamVjdDpnKHRoaXMuZyl9fTtiLnByb3RvdHlwZS5tPWZ1bmN0aW9uKGcpe2lmKGc9PT10aGlzKXRoaXMuZyhuZXcgVHlwZUVycm9yKFwiQSBQcm9taXNlIGNhbm5vdCByZXNvbHZlIHRvIGl0c2VsZlwiKSk7ZWxzZSBpZihnIGluc3RhbmNlb2YgYil0aGlzLnMoZyk7ZWxzZXthOnN3aXRjaCh0eXBlb2YgZyl7Y2FzZSBcIm9iamVjdFwiOnZhciBoPW51bGwhPWc7YnJlYWsgYTtjYXNlIFwiZnVuY3Rpb25cIjpoPSEwO2JyZWFrIGE7ZGVmYXVsdDpoPSExfWg/dGhpcy51KGcpOnRoaXMuaChnKX19O1xuYi5wcm90b3R5cGUudT1mdW5jdGlvbihnKXt2YXIgaD12b2lkIDA7dHJ5e2g9Zy50aGVufWNhdGNoKG0pe3RoaXMuZyhtKTtyZXR1cm59XCJmdW5jdGlvblwiPT10eXBlb2YgaD90aGlzLncoaCxnKTp0aGlzLmgoZyl9O2IucHJvdG90eXBlLmc9ZnVuY3Rpb24oZyl7dGhpcy5pKDIsZyl9O2IucHJvdG90eXBlLmg9ZnVuY3Rpb24oZyl7dGhpcy5pKDEsZyl9O2IucHJvdG90eXBlLmk9ZnVuY3Rpb24oZyxoKXtpZigwIT10aGlzLmIpdGhyb3cgRXJyb3IoXCJDYW5ub3Qgc2V0dGxlKFwiK2crXCIsIFwiK2grXCIpOiBQcm9taXNlIGFscmVhZHkgc2V0dGxlZCBpbiBzdGF0ZVwiK3RoaXMuYik7dGhpcy5iPWc7dGhpcy5jPWg7dGhpcy5sKCl9O2IucHJvdG90eXBlLmw9ZnVuY3Rpb24oKXtpZihudWxsIT10aGlzLmEpe2Zvcih2YXIgZz0wO2c8dGhpcy5hLmxlbmd0aDsrK2cpZi5iKHRoaXMuYVtnXSk7dGhpcy5hPW51bGx9fTt2YXIgZj1uZXcgYztiLnByb3RvdHlwZS5zPWZ1bmN0aW9uKGcpe3ZhciBoPXRoaXMuZigpO1xuZy5PYShoLnJlc29sdmUsaC5yZWplY3QpfTtiLnByb3RvdHlwZS53PWZ1bmN0aW9uKGcsaCl7dmFyIG09dGhpcy5mKCk7dHJ5e2cuY2FsbChoLG0ucmVzb2x2ZSxtLnJlamVjdCl9Y2F0Y2gocCl7bS5yZWplY3QocCl9fTtiLnByb3RvdHlwZS50aGVuPWZ1bmN0aW9uKGcsaCl7ZnVuY3Rpb24gbShBLFEpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIEE/ZnVuY3Rpb24oeGEpe3RyeXtwKEEoeGEpKX1jYXRjaCh1ZCl7dih1ZCl9fTpRfXZhciBwLHYsQz1uZXcgYihmdW5jdGlvbihBLFEpe3A9QTt2PVF9KTt0aGlzLk9hKG0oZyxwKSxtKGgsdikpO3JldHVybiBDfTtiLnByb3RvdHlwZS5jYXRjaD1mdW5jdGlvbihnKXtyZXR1cm4gdGhpcy50aGVuKHZvaWQgMCxnKX07Yi5wcm90b3R5cGUuT2E9ZnVuY3Rpb24oZyxoKXtmdW5jdGlvbiBtKCl7c3dpdGNoKHAuYil7Y2FzZSAxOmcocC5jKTticmVhaztjYXNlIDI6aChwLmMpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IoXCJVbmV4cGVjdGVkIHN0YXRlOiBcIitcbnAuYik7fX12YXIgcD10aGlzO251bGw9PXRoaXMuYT9mLmIobSk6dGhpcy5hLnB1c2gobSl9O2IucmVzb2x2ZT1kO2IucmVqZWN0PWZ1bmN0aW9uKGcpe3JldHVybiBuZXcgYihmdW5jdGlvbihoLG0pe20oZyl9KX07Yi5yYWNlPWZ1bmN0aW9uKGcpe3JldHVybiBuZXcgYihmdW5jdGlvbihoLG0pe2Zvcih2YXIgcD1mYShnKSx2PXAubmV4dCgpOyF2LmRvbmU7dj1wLm5leHQoKSlkKHYudmFsdWUpLk9hKGgsbSl9KX07Yi5hbGw9ZnVuY3Rpb24oZyl7dmFyIGg9ZmEoZyksbT1oLm5leHQoKTtyZXR1cm4gbS5kb25lP2QoW10pOm5ldyBiKGZ1bmN0aW9uKHAsdil7ZnVuY3Rpb24gQyh4YSl7cmV0dXJuIGZ1bmN0aW9uKHVkKXtBW3hhXT11ZDtRLS07MD09USYmcChBKX19dmFyIEE9W10sUT0wO2RvIEEucHVzaCh2b2lkIDApLFErKyxkKG0udmFsdWUpLk9hKEMoQS5sZW5ndGgtMSksdiksbT1oLm5leHQoKTt3aGlsZSghbS5kb25lKX0pfTtyZXR1cm4gYn0pO1xudmFyIGhhPWhhfHx7fSxsPXRoaXN8fHNlbGYsaWE9L15bXFx3Ky9fLV0rWz1dezAsMn0kLyxqYT1udWxsO2Z1bmN0aW9uIGthKCl7fVxuZnVuY3Rpb24gbGEoYSl7dmFyIGI9dHlwZW9mIGE7aWYoXCJvYmplY3RcIj09YilpZihhKXtpZihhIGluc3RhbmNlb2YgQXJyYXkpcmV0dXJuXCJhcnJheVwiO2lmKGEgaW5zdGFuY2VvZiBPYmplY3QpcmV0dXJuIGI7dmFyIGM9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGEpO2lmKFwiW29iamVjdCBXaW5kb3ddXCI9PWMpcmV0dXJuXCJvYmplY3RcIjtpZihcIltvYmplY3QgQXJyYXldXCI9PWN8fFwibnVtYmVyXCI9PXR5cGVvZiBhLmxlbmd0aCYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGEuc3BsaWNlJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgYS5wcm9wZXJ0eUlzRW51bWVyYWJsZSYmIWEucHJvcGVydHlJc0VudW1lcmFibGUoXCJzcGxpY2VcIikpcmV0dXJuXCJhcnJheVwiO2lmKFwiW29iamVjdCBGdW5jdGlvbl1cIj09Y3x8XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGEuY2FsbCYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGEucHJvcGVydHlJc0VudW1lcmFibGUmJiFhLnByb3BlcnR5SXNFbnVtZXJhYmxlKFwiY2FsbFwiKSlyZXR1cm5cImZ1bmN0aW9uXCJ9ZWxzZSByZXR1cm5cIm51bGxcIjtcbmVsc2UgaWYoXCJmdW5jdGlvblwiPT1iJiZcInVuZGVmaW5lZFwiPT10eXBlb2YgYS5jYWxsKXJldHVyblwib2JqZWN0XCI7cmV0dXJuIGJ9ZnVuY3Rpb24gbWEoYSl7dmFyIGI9bGEoYSk7cmV0dXJuXCJhcnJheVwiPT1ifHxcIm9iamVjdFwiPT1iJiZcIm51bWJlclwiPT10eXBlb2YgYS5sZW5ndGh9ZnVuY3Rpb24gbihhKXtyZXR1cm5cImZ1bmN0aW9uXCI9PWxhKGEpfWZ1bmN0aW9uIHEoYSl7dmFyIGI9dHlwZW9mIGE7cmV0dXJuXCJvYmplY3RcIj09YiYmbnVsbCE9YXx8XCJmdW5jdGlvblwiPT1ifWZ1bmN0aW9uIG5hKGEpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYSxvYSkmJmFbb2FdfHwoYVtvYV09KytwYSl9dmFyIG9hPVwiY2xvc3VyZV91aWRfXCIrKDFFOSpNYXRoLnJhbmRvbSgpPj4+MCkscGE9MDtmdW5jdGlvbiBxYShhLGIsYyl7cmV0dXJuIGEuY2FsbC5hcHBseShhLmJpbmQsYXJndW1lbnRzKX1cbmZ1bmN0aW9uIHJhKGEsYixjKXtpZighYSl0aHJvdyBFcnJvcigpO2lmKDI8YXJndW1lbnRzLmxlbmd0aCl7dmFyIGQ9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDIpO3JldHVybiBmdW5jdGlvbigpe3ZhciBlPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7QXJyYXkucHJvdG90eXBlLnVuc2hpZnQuYXBwbHkoZSxkKTtyZXR1cm4gYS5hcHBseShiLGUpfX1yZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gYS5hcHBseShiLGFyZ3VtZW50cyl9fWZ1bmN0aW9uIHIoYSxiLGMpe0Z1bmN0aW9uLnByb3RvdHlwZS5iaW5kJiYtMSE9RnVuY3Rpb24ucHJvdG90eXBlLmJpbmQudG9TdHJpbmcoKS5pbmRleE9mKFwibmF0aXZlIGNvZGVcIik/cj1xYTpyPXJhO3JldHVybiByLmFwcGx5KG51bGwsYXJndW1lbnRzKX1cbmZ1bmN0aW9uIHNhKGEsYil7dmFyIGM9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpO3JldHVybiBmdW5jdGlvbigpe3ZhciBkPWMuc2xpY2UoKTtkLnB1c2guYXBwbHkoZCxhcmd1bWVudHMpO3JldHVybiBhLmFwcGx5KHRoaXMsZCl9fXZhciB0YT1EYXRlLm5vd3x8ZnVuY3Rpb24oKXtyZXR1cm4rbmV3IERhdGV9O2Z1bmN0aW9uIHQoYSxiKXtmdW5jdGlvbiBjKCl7fWMucHJvdG90eXBlPWIucHJvdG90eXBlO2EuWmE9Yi5wcm90b3R5cGU7YS5wcm90b3R5cGU9bmV3IGM7YS5wcm90b3R5cGUuY29uc3RydWN0b3I9YX07LypcblxuIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuXG5cbiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cbiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5mdW5jdGlvbiB1KGEsYixjKXt0aGlzLmNvZGU9dWErYTt0aGlzLm1lc3NhZ2U9Ynx8dmFbYV18fFwiXCI7dGhpcy5hPWN8fG51bGx9dCh1LEVycm9yKTt1LnByb3RvdHlwZS52PWZ1bmN0aW9uKCl7dmFyIGE9e2NvZGU6dGhpcy5jb2RlLG1lc3NhZ2U6dGhpcy5tZXNzYWdlfTt0aGlzLmEmJihhLnNlcnZlclJlc3BvbnNlPXRoaXMuYSk7cmV0dXJuIGF9O3UucHJvdG90eXBlLnRvSlNPTj1mdW5jdGlvbigpe3JldHVybiB0aGlzLnYoKX07ZnVuY3Rpb24gd2EoYSl7dmFyIGI9YSYmYS5jb2RlO3JldHVybiBiP25ldyB1KGIuc3Vic3RyaW5nKHVhLmxlbmd0aCksYS5tZXNzYWdlLGEuc2VydmVyUmVzcG9uc2UpOm51bGx9XG52YXIgdWE9XCJhdXRoL1wiLHZhPXtcImFkbWluLXJlc3RyaWN0ZWQtb3BlcmF0aW9uXCI6XCJUaGlzIG9wZXJhdGlvbiBpcyByZXN0cmljdGVkIHRvIGFkbWluaXN0cmF0b3JzIG9ubHkuXCIsXCJhcmd1bWVudC1lcnJvclwiOlwiXCIsXCJhcHAtbm90LWF1dGhvcml6ZWRcIjpcIlRoaXMgYXBwLCBpZGVudGlmaWVkIGJ5IHRoZSBkb21haW4gd2hlcmUgaXQncyBob3N0ZWQsIGlzIG5vdCBhdXRob3JpemVkIHRvIHVzZSBGaXJlYmFzZSBBdXRoZW50aWNhdGlvbiB3aXRoIHRoZSBwcm92aWRlZCBBUEkga2V5LiBSZXZpZXcgeW91ciBrZXkgY29uZmlndXJhdGlvbiBpbiB0aGUgR29vZ2xlIEFQSSBjb25zb2xlLlwiLFwiYXBwLW5vdC1pbnN0YWxsZWRcIjpcIlRoZSByZXF1ZXN0ZWQgbW9iaWxlIGFwcGxpY2F0aW9uIGNvcnJlc3BvbmRpbmcgdG8gdGhlIGlkZW50aWZpZXIgKEFuZHJvaWQgcGFja2FnZSBuYW1lIG9yIGlPUyBidW5kbGUgSUQpIHByb3ZpZGVkIGlzIG5vdCBpbnN0YWxsZWQgb24gdGhpcyBkZXZpY2UuXCIsXG5cImNhcHRjaGEtY2hlY2stZmFpbGVkXCI6XCJUaGUgcmVDQVBUQ0hBIHJlc3BvbnNlIHRva2VuIHByb3ZpZGVkIGlzIGVpdGhlciBpbnZhbGlkLCBleHBpcmVkLCBhbHJlYWR5IHVzZWQgb3IgdGhlIGRvbWFpbiBhc3NvY2lhdGVkIHdpdGggaXQgZG9lcyBub3QgbWF0Y2ggdGhlIGxpc3Qgb2Ygd2hpdGVsaXN0ZWQgZG9tYWlucy5cIixcImNvZGUtZXhwaXJlZFwiOlwiVGhlIFNNUyBjb2RlIGhhcyBleHBpcmVkLiBQbGVhc2UgcmUtc2VuZCB0aGUgdmVyaWZpY2F0aW9uIGNvZGUgdG8gdHJ5IGFnYWluLlwiLFwiY29yZG92YS1ub3QtcmVhZHlcIjpcIkNvcmRvdmEgZnJhbWV3b3JrIGlzIG5vdCByZWFkeS5cIixcImNvcnMtdW5zdXBwb3J0ZWRcIjpcIlRoaXMgYnJvd3NlciBpcyBub3Qgc3VwcG9ydGVkLlwiLFwiY3JlZGVudGlhbC1hbHJlYWR5LWluLXVzZVwiOlwiVGhpcyBjcmVkZW50aWFsIGlzIGFscmVhZHkgYXNzb2NpYXRlZCB3aXRoIGEgZGlmZmVyZW50IHVzZXIgYWNjb3VudC5cIixcImN1c3RvbS10b2tlbi1taXNtYXRjaFwiOlwiVGhlIGN1c3RvbSB0b2tlbiBjb3JyZXNwb25kcyB0byBhIGRpZmZlcmVudCBhdWRpZW5jZS5cIixcblwicmVxdWlyZXMtcmVjZW50LWxvZ2luXCI6XCJUaGlzIG9wZXJhdGlvbiBpcyBzZW5zaXRpdmUgYW5kIHJlcXVpcmVzIHJlY2VudCBhdXRoZW50aWNhdGlvbi4gTG9nIGluIGFnYWluIGJlZm9yZSByZXRyeWluZyB0aGlzIHJlcXVlc3QuXCIsXCJkeW5hbWljLWxpbmstbm90LWFjdGl2YXRlZFwiOlwiUGxlYXNlIGFjdGl2YXRlIER5bmFtaWMgTGlua3MgaW4gdGhlIEZpcmViYXNlIENvbnNvbGUgYW5kIGFncmVlIHRvIHRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucy5cIixcImVtYWlsLWNoYW5nZS1uZWVkcy12ZXJpZmljYXRpb25cIjpcIk11bHRpLWZhY3RvciB1c2VycyBtdXN0IGFsd2F5cyBoYXZlIGEgdmVyaWZpZWQgZW1haWwuXCIsXCJlbWFpbC1hbHJlYWR5LWluLXVzZVwiOlwiVGhlIGVtYWlsIGFkZHJlc3MgaXMgYWxyZWFkeSBpbiB1c2UgYnkgYW5vdGhlciBhY2NvdW50LlwiLFwiZXhwaXJlZC1hY3Rpb24tY29kZVwiOlwiVGhlIGFjdGlvbiBjb2RlIGhhcyBleHBpcmVkLiBcIixcImNhbmNlbGxlZC1wb3B1cC1yZXF1ZXN0XCI6XCJUaGlzIG9wZXJhdGlvbiBoYXMgYmVlbiBjYW5jZWxsZWQgZHVlIHRvIGFub3RoZXIgY29uZmxpY3RpbmcgcG9wdXAgYmVpbmcgb3BlbmVkLlwiLFxuXCJpbnRlcm5hbC1lcnJvclwiOlwiQW4gaW50ZXJuYWwgZXJyb3IgaGFzIG9jY3VycmVkLlwiLFwiaW52YWxpZC1hcHAtY3JlZGVudGlhbFwiOlwiVGhlIHBob25lIHZlcmlmaWNhdGlvbiByZXF1ZXN0IGNvbnRhaW5zIGFuIGludmFsaWQgYXBwbGljYXRpb24gdmVyaWZpZXIuIFRoZSByZUNBUFRDSEEgdG9rZW4gcmVzcG9uc2UgaXMgZWl0aGVyIGludmFsaWQgb3IgZXhwaXJlZC5cIixcImludmFsaWQtYXBwLWlkXCI6XCJUaGUgbW9iaWxlIGFwcCBpZGVudGlmaWVyIGlzIG5vdCByZWdpc3RlZCBmb3IgdGhlIGN1cnJlbnQgcHJvamVjdC5cIixcImludmFsaWQtdXNlci10b2tlblwiOlwiVGhpcyB1c2VyJ3MgY3JlZGVudGlhbCBpc24ndCB2YWxpZCBmb3IgdGhpcyBwcm9qZWN0LiBUaGlzIGNhbiBoYXBwZW4gaWYgdGhlIHVzZXIncyB0b2tlbiBoYXMgYmVlbiB0YW1wZXJlZCB3aXRoLCBvciBpZiB0aGUgdXNlciBpc24ndCBmb3IgdGhlIHByb2plY3QgYXNzb2NpYXRlZCB3aXRoIHRoaXMgQVBJIGtleS5cIixcImludmFsaWQtYXV0aC1ldmVudFwiOlwiQW4gaW50ZXJuYWwgZXJyb3IgaGFzIG9jY3VycmVkLlwiLFxuXCJpbnZhbGlkLXZlcmlmaWNhdGlvbi1jb2RlXCI6XCJUaGUgU01TIHZlcmlmaWNhdGlvbiBjb2RlIHVzZWQgdG8gY3JlYXRlIHRoZSBwaG9uZSBhdXRoIGNyZWRlbnRpYWwgaXMgaW52YWxpZC4gUGxlYXNlIHJlc2VuZCB0aGUgdmVyaWZpY2F0aW9uIGNvZGUgc21zIGFuZCBiZSBzdXJlIHVzZSB0aGUgdmVyaWZpY2F0aW9uIGNvZGUgcHJvdmlkZWQgYnkgdGhlIHVzZXIuXCIsXCJpbnZhbGlkLWNvbnRpbnVlLXVyaVwiOlwiVGhlIGNvbnRpbnVlIFVSTCBwcm92aWRlZCBpbiB0aGUgcmVxdWVzdCBpcyBpbnZhbGlkLlwiLFwiaW52YWxpZC1jb3Jkb3ZhLWNvbmZpZ3VyYXRpb25cIjpcIlRoZSBmb2xsb3dpbmcgQ29yZG92YSBwbHVnaW5zIG11c3QgYmUgaW5zdGFsbGVkIHRvIGVuYWJsZSBPQXV0aCBzaWduLWluOiBjb3Jkb3ZhLXBsdWdpbi1idWlsZGluZm8sIGNvcmRvdmEtdW5pdmVyc2FsLWxpbmtzLXBsdWdpbiwgY29yZG92YS1wbHVnaW4tYnJvd3NlcnRhYiwgY29yZG92YS1wbHVnaW4taW5hcHBicm93c2VyIGFuZCBjb3Jkb3ZhLXBsdWdpbi1jdXN0b211cmxzY2hlbWUuXCIsXG5cImludmFsaWQtY3VzdG9tLXRva2VuXCI6XCJUaGUgY3VzdG9tIHRva2VuIGZvcm1hdCBpcyBpbmNvcnJlY3QuIFBsZWFzZSBjaGVjayB0aGUgZG9jdW1lbnRhdGlvbi5cIixcImludmFsaWQtZHluYW1pYy1saW5rLWRvbWFpblwiOlwiVGhlIHByb3ZpZGVkIGR5bmFtaWMgbGluayBkb21haW4gaXMgbm90IGNvbmZpZ3VyZWQgb3IgYXV0aG9yaXplZCBmb3IgdGhlIGN1cnJlbnQgcHJvamVjdC5cIixcImludmFsaWQtZW1haWxcIjpcIlRoZSBlbWFpbCBhZGRyZXNzIGlzIGJhZGx5IGZvcm1hdHRlZC5cIixcImludmFsaWQtYXBpLWtleVwiOlwiWW91ciBBUEkga2V5IGlzIGludmFsaWQsIHBsZWFzZSBjaGVjayB5b3UgaGF2ZSBjb3BpZWQgaXQgY29ycmVjdGx5LlwiLFwiaW52YWxpZC1jZXJ0LWhhc2hcIjpcIlRoZSBTSEEtMSBjZXJ0aWZpY2F0ZSBoYXNoIHByb3ZpZGVkIGlzIGludmFsaWQuXCIsXCJpbnZhbGlkLWNyZWRlbnRpYWxcIjpcIlRoZSBzdXBwbGllZCBhdXRoIGNyZWRlbnRpYWwgaXMgbWFsZm9ybWVkIG9yIGhhcyBleHBpcmVkLlwiLFxuXCJpbnZhbGlkLW1lc3NhZ2UtcGF5bG9hZFwiOlwiVGhlIGVtYWlsIHRlbXBsYXRlIGNvcnJlc3BvbmRpbmcgdG8gdGhpcyBhY3Rpb24gY29udGFpbnMgaW52YWxpZCBjaGFyYWN0ZXJzIGluIGl0cyBtZXNzYWdlLiBQbGVhc2UgZml4IGJ5IGdvaW5nIHRvIHRoZSBBdXRoIGVtYWlsIHRlbXBsYXRlcyBzZWN0aW9uIGluIHRoZSBGaXJlYmFzZSBDb25zb2xlLlwiLFwiaW52YWxpZC1tdWx0aS1mYWN0b3Itc2Vzc2lvblwiOlwiVGhlIHJlcXVlc3QgZG9lcyBub3QgY29udGFpbiBhIHZhbGlkIHByb29mIG9mIGZpcnN0IGZhY3RvciBzdWNjZXNzZnVsIHNpZ24taW4uXCIsXCJpbnZhbGlkLW9hdXRoLXByb3ZpZGVyXCI6XCJFbWFpbEF1dGhQcm92aWRlciBpcyBub3Qgc3VwcG9ydGVkIGZvciB0aGlzIG9wZXJhdGlvbi4gVGhpcyBvcGVyYXRpb24gb25seSBzdXBwb3J0cyBPQXV0aCBwcm92aWRlcnMuXCIsXCJpbnZhbGlkLW9hdXRoLWNsaWVudC1pZFwiOlwiVGhlIE9BdXRoIGNsaWVudCBJRCBwcm92aWRlZCBpcyBlaXRoZXIgaW52YWxpZCBvciBkb2VzIG5vdCBtYXRjaCB0aGUgc3BlY2lmaWVkIEFQSSBrZXkuXCIsXG5cInVuYXV0aG9yaXplZC1kb21haW5cIjpcIlRoaXMgZG9tYWluIGlzIG5vdCBhdXRob3JpemVkIGZvciBPQXV0aCBvcGVyYXRpb25zIGZvciB5b3VyIEZpcmViYXNlIHByb2plY3QuIEVkaXQgdGhlIGxpc3Qgb2YgYXV0aG9yaXplZCBkb21haW5zIGZyb20gdGhlIEZpcmViYXNlIGNvbnNvbGUuXCIsXCJpbnZhbGlkLWFjdGlvbi1jb2RlXCI6XCJUaGUgYWN0aW9uIGNvZGUgaXMgaW52YWxpZC4gVGhpcyBjYW4gaGFwcGVuIGlmIHRoZSBjb2RlIGlzIG1hbGZvcm1lZCwgZXhwaXJlZCwgb3IgaGFzIGFscmVhZHkgYmVlbiB1c2VkLlwiLFwid3JvbmctcGFzc3dvcmRcIjpcIlRoZSBwYXNzd29yZCBpcyBpbnZhbGlkIG9yIHRoZSB1c2VyIGRvZXMgbm90IGhhdmUgYSBwYXNzd29yZC5cIixcImludmFsaWQtcGVyc2lzdGVuY2UtdHlwZVwiOlwiVGhlIHNwZWNpZmllZCBwZXJzaXN0ZW5jZSB0eXBlIGlzIGludmFsaWQuIEl0IGNhbiBvbmx5IGJlIGxvY2FsLCBzZXNzaW9uIG9yIG5vbmUuXCIsXCJpbnZhbGlkLXBob25lLW51bWJlclwiOlwiVGhlIGZvcm1hdCBvZiB0aGUgcGhvbmUgbnVtYmVyIHByb3ZpZGVkIGlzIGluY29ycmVjdC4gUGxlYXNlIGVudGVyIHRoZSBwaG9uZSBudW1iZXIgaW4gYSBmb3JtYXQgdGhhdCBjYW4gYmUgcGFyc2VkIGludG8gRS4xNjQgZm9ybWF0LiBFLjE2NCBwaG9uZSBudW1iZXJzIGFyZSB3cml0dGVuIGluIHRoZSBmb3JtYXQgWytdW2NvdW50cnkgY29kZV1bc3Vic2NyaWJlciBudW1iZXIgaW5jbHVkaW5nIGFyZWEgY29kZV0uXCIsXG5cImludmFsaWQtcHJvdmlkZXItaWRcIjpcIlRoZSBzcGVjaWZpZWQgcHJvdmlkZXIgSUQgaXMgaW52YWxpZC5cIixcImludmFsaWQtcmVjaXBpZW50LWVtYWlsXCI6XCJUaGUgZW1haWwgY29ycmVzcG9uZGluZyB0byB0aGlzIGFjdGlvbiBmYWlsZWQgdG8gc2VuZCBhcyB0aGUgcHJvdmlkZWQgcmVjaXBpZW50IGVtYWlsIGFkZHJlc3MgaXMgaW52YWxpZC5cIixcImludmFsaWQtc2VuZGVyXCI6XCJUaGUgZW1haWwgdGVtcGxhdGUgY29ycmVzcG9uZGluZyB0byB0aGlzIGFjdGlvbiBjb250YWlucyBhbiBpbnZhbGlkIHNlbmRlciBlbWFpbCBvciBuYW1lLiBQbGVhc2UgZml4IGJ5IGdvaW5nIHRvIHRoZSBBdXRoIGVtYWlsIHRlbXBsYXRlcyBzZWN0aW9uIGluIHRoZSBGaXJlYmFzZSBDb25zb2xlLlwiLFwiaW52YWxpZC12ZXJpZmljYXRpb24taWRcIjpcIlRoZSB2ZXJpZmljYXRpb24gSUQgdXNlZCB0byBjcmVhdGUgdGhlIHBob25lIGF1dGggY3JlZGVudGlhbCBpcyBpbnZhbGlkLlwiLFwiaW52YWxpZC10ZW5hbnQtaWRcIjpcIlRoZSBBdXRoIGluc3RhbmNlJ3MgdGVuYW50IElEIGlzIGludmFsaWQuXCIsXG5cIm11bHRpLWZhY3Rvci1pbmZvLW5vdC1mb3VuZFwiOlwiVGhlIHVzZXIgZG9lcyBub3QgaGF2ZSBhIHNlY29uZCBmYWN0b3IgbWF0Y2hpbmcgdGhlIGlkZW50aWZpZXIgcHJvdmlkZWQuXCIsXCJtdWx0aS1mYWN0b3ItYXV0aC1yZXF1aXJlZFwiOlwiUHJvb2Ygb2Ygb3duZXJzaGlwIG9mIGEgc2Vjb25kIGZhY3RvciBpcyByZXF1aXJlZCB0byBjb21wbGV0ZSBzaWduLWluLlwiLFwibWlzc2luZy1hbmRyb2lkLXBrZy1uYW1lXCI6XCJBbiBBbmRyb2lkIFBhY2thZ2UgTmFtZSBtdXN0IGJlIHByb3ZpZGVkIGlmIHRoZSBBbmRyb2lkIEFwcCBpcyByZXF1aXJlZCB0byBiZSBpbnN0YWxsZWQuXCIsXCJhdXRoLWRvbWFpbi1jb25maWctcmVxdWlyZWRcIjpcIkJlIHN1cmUgdG8gaW5jbHVkZSBhdXRoRG9tYWluIHdoZW4gY2FsbGluZyBmaXJlYmFzZS5pbml0aWFsaXplQXBwKCksIGJ5IGZvbGxvd2luZyB0aGUgaW5zdHJ1Y3Rpb25zIGluIHRoZSBGaXJlYmFzZSBjb25zb2xlLlwiLFwibWlzc2luZy1hcHAtY3JlZGVudGlhbFwiOlwiVGhlIHBob25lIHZlcmlmaWNhdGlvbiByZXF1ZXN0IGlzIG1pc3NpbmcgYW4gYXBwbGljYXRpb24gdmVyaWZpZXIgYXNzZXJ0aW9uLiBBIHJlQ0FQVENIQSByZXNwb25zZSB0b2tlbiBuZWVkcyB0byBiZSBwcm92aWRlZC5cIixcblwibWlzc2luZy12ZXJpZmljYXRpb24tY29kZVwiOlwiVGhlIHBob25lIGF1dGggY3JlZGVudGlhbCB3YXMgY3JlYXRlZCB3aXRoIGFuIGVtcHR5IFNNUyB2ZXJpZmljYXRpb24gY29kZS5cIixcIm1pc3NpbmctY29udGludWUtdXJpXCI6XCJBIGNvbnRpbnVlIFVSTCBtdXN0IGJlIHByb3ZpZGVkIGluIHRoZSByZXF1ZXN0LlwiLFwibWlzc2luZy1pZnJhbWUtc3RhcnRcIjpcIkFuIGludGVybmFsIGVycm9yIGhhcyBvY2N1cnJlZC5cIixcIm1pc3NpbmctaW9zLWJ1bmRsZS1pZFwiOlwiQW4gaU9TIEJ1bmRsZSBJRCBtdXN0IGJlIHByb3ZpZGVkIGlmIGFuIEFwcCBTdG9yZSBJRCBpcyBwcm92aWRlZC5cIixcIm1pc3NpbmctbXVsdGktZmFjdG9yLWluZm9cIjpcIk5vIHNlY29uZCBmYWN0b3IgaWRlbnRpZmllciBpcyBwcm92aWRlZC5cIixcIm1pc3NpbmctbXVsdGktZmFjdG9yLXNlc3Npb25cIjpcIlRoZSByZXF1ZXN0IGlzIG1pc3NpbmcgcHJvb2Ygb2YgZmlyc3QgZmFjdG9yIHN1Y2Nlc3NmdWwgc2lnbi1pbi5cIixcIm1pc3Npbmctb3ItaW52YWxpZC1ub25jZVwiOlwiVGhlIHJlcXVlc3QgZG9lcyBub3QgY29udGFpbiBhIHZhbGlkIG5vbmNlLiBUaGlzIGNhbiBvY2N1ciBpZiB0aGUgU0hBLTI1NiBoYXNoIG9mIHRoZSBwcm92aWRlZCByYXcgbm9uY2UgZG9lcyBub3QgbWF0Y2ggdGhlIGhhc2hlZCBub25jZSBpbiB0aGUgSUQgdG9rZW4gcGF5bG9hZC5cIixcblwibWlzc2luZy1waG9uZS1udW1iZXJcIjpcIlRvIHNlbmQgdmVyaWZpY2F0aW9uIGNvZGVzLCBwcm92aWRlIGEgcGhvbmUgbnVtYmVyIGZvciB0aGUgcmVjaXBpZW50LlwiLFwibWlzc2luZy12ZXJpZmljYXRpb24taWRcIjpcIlRoZSBwaG9uZSBhdXRoIGNyZWRlbnRpYWwgd2FzIGNyZWF0ZWQgd2l0aCBhbiBlbXB0eSB2ZXJpZmljYXRpb24gSUQuXCIsXCJhcHAtZGVsZXRlZFwiOlwiVGhpcyBpbnN0YW5jZSBvZiBGaXJlYmFzZUFwcCBoYXMgYmVlbiBkZWxldGVkLlwiLFwiYWNjb3VudC1leGlzdHMtd2l0aC1kaWZmZXJlbnQtY3JlZGVudGlhbFwiOlwiQW4gYWNjb3VudCBhbHJlYWR5IGV4aXN0cyB3aXRoIHRoZSBzYW1lIGVtYWlsIGFkZHJlc3MgYnV0IGRpZmZlcmVudCBzaWduLWluIGNyZWRlbnRpYWxzLiBTaWduIGluIHVzaW5nIGEgcHJvdmlkZXIgYXNzb2NpYXRlZCB3aXRoIHRoaXMgZW1haWwgYWRkcmVzcy5cIixcIm5ldHdvcmstcmVxdWVzdC1mYWlsZWRcIjpcIkEgbmV0d29yayBlcnJvciAoc3VjaCBhcyB0aW1lb3V0LCBpbnRlcnJ1cHRlZCBjb25uZWN0aW9uIG9yIHVucmVhY2hhYmxlIGhvc3QpIGhhcyBvY2N1cnJlZC5cIixcblwibm8tYXV0aC1ldmVudFwiOlwiQW4gaW50ZXJuYWwgZXJyb3IgaGFzIG9jY3VycmVkLlwiLFwibm8tc3VjaC1wcm92aWRlclwiOlwiVXNlciB3YXMgbm90IGxpbmtlZCB0byBhbiBhY2NvdW50IHdpdGggdGhlIGdpdmVuIHByb3ZpZGVyLlwiLFwibnVsbC11c2VyXCI6XCJBIG51bGwgdXNlciBvYmplY3Qgd2FzIHByb3ZpZGVkIGFzIHRoZSBhcmd1bWVudCBmb3IgYW4gb3BlcmF0aW9uIHdoaWNoIHJlcXVpcmVzIGEgbm9uLW51bGwgdXNlciBvYmplY3QuXCIsXCJvcGVyYXRpb24tbm90LWFsbG93ZWRcIjpcIlRoZSBnaXZlbiBzaWduLWluIHByb3ZpZGVyIGlzIGRpc2FibGVkIGZvciB0aGlzIEZpcmViYXNlIHByb2plY3QuIEVuYWJsZSBpdCBpbiB0aGUgRmlyZWJhc2UgY29uc29sZSwgdW5kZXIgdGhlIHNpZ24taW4gbWV0aG9kIHRhYiBvZiB0aGUgQXV0aCBzZWN0aW9uLlwiLFwib3BlcmF0aW9uLW5vdC1zdXBwb3J0ZWQtaW4tdGhpcy1lbnZpcm9ubWVudFwiOidUaGlzIG9wZXJhdGlvbiBpcyBub3Qgc3VwcG9ydGVkIGluIHRoZSBlbnZpcm9ubWVudCB0aGlzIGFwcGxpY2F0aW9uIGlzIHJ1bm5pbmcgb24uIFwibG9jYXRpb24ucHJvdG9jb2xcIiBtdXN0IGJlIGh0dHAsIGh0dHBzIG9yIGNocm9tZS1leHRlbnNpb24gYW5kIHdlYiBzdG9yYWdlIG11c3QgYmUgZW5hYmxlZC4nLFxuXCJwb3B1cC1ibG9ja2VkXCI6XCJVbmFibGUgdG8gZXN0YWJsaXNoIGEgY29ubmVjdGlvbiB3aXRoIHRoZSBwb3B1cC4gSXQgbWF5IGhhdmUgYmVlbiBibG9ja2VkIGJ5IHRoZSBicm93c2VyLlwiLFwicG9wdXAtY2xvc2VkLWJ5LXVzZXJcIjpcIlRoZSBwb3B1cCBoYXMgYmVlbiBjbG9zZWQgYnkgdGhlIHVzZXIgYmVmb3JlIGZpbmFsaXppbmcgdGhlIG9wZXJhdGlvbi5cIixcInByb3ZpZGVyLWFscmVhZHktbGlua2VkXCI6XCJVc2VyIGNhbiBvbmx5IGJlIGxpbmtlZCB0byBvbmUgaWRlbnRpdHkgZm9yIHRoZSBnaXZlbiBwcm92aWRlci5cIixcInF1b3RhLWV4Y2VlZGVkXCI6XCJUaGUgcHJvamVjdCdzIHF1b3RhIGZvciB0aGlzIG9wZXJhdGlvbiBoYXMgYmVlbiBleGNlZWRlZC5cIixcInJlZGlyZWN0LWNhbmNlbGxlZC1ieS11c2VyXCI6XCJUaGUgcmVkaXJlY3Qgb3BlcmF0aW9uIGhhcyBiZWVuIGNhbmNlbGxlZCBieSB0aGUgdXNlciBiZWZvcmUgZmluYWxpemluZy5cIixcInJlZGlyZWN0LW9wZXJhdGlvbi1wZW5kaW5nXCI6XCJBIHJlZGlyZWN0IHNpZ24taW4gb3BlcmF0aW9uIGlzIGFscmVhZHkgcGVuZGluZy5cIixcblwicmVqZWN0ZWQtY3JlZGVudGlhbFwiOlwiVGhlIHJlcXVlc3QgY29udGFpbnMgbWFsZm9ybWVkIG9yIG1pc21hdGNoaW5nIGNyZWRlbnRpYWxzLlwiLFwic2Vjb25kLWZhY3Rvci1hbHJlYWR5LWluLXVzZVwiOlwiVGhlIHNlY29uZCBmYWN0b3IgaXMgYWxyZWFkeSBlbnJvbGxlZCBvbiB0aGlzIGFjY291bnQuXCIsXCJtYXhpbXVtLXNlY29uZC1mYWN0b3ItY291bnQtZXhjZWVkZWRcIjpcIlRoZSBtYXhpbXVtIGFsbG93ZWQgbnVtYmVyIG9mIHNlY29uZCBmYWN0b3JzIG9uIGEgdXNlciBoYXMgYmVlbiBleGNlZWRlZC5cIixcInRlbmFudC1pZC1taXNtYXRjaFwiOlwiVGhlIHByb3ZpZGVkIHRlbmFudCBJRCBkb2VzIG5vdCBtYXRjaCB0aGUgQXV0aCBpbnN0YW5jZSdzIHRlbmFudCBJRFwiLHRpbWVvdXQ6XCJUaGUgb3BlcmF0aW9uIGhhcyB0aW1lZCBvdXQuXCIsXCJ1c2VyLXRva2VuLWV4cGlyZWRcIjpcIlRoZSB1c2VyJ3MgY3JlZGVudGlhbCBpcyBubyBsb25nZXIgdmFsaWQuIFRoZSB1c2VyIG11c3Qgc2lnbiBpbiBhZ2Fpbi5cIixcblwidG9vLW1hbnktcmVxdWVzdHNcIjpcIldlIGhhdmUgYmxvY2tlZCBhbGwgcmVxdWVzdHMgZnJvbSB0aGlzIGRldmljZSBkdWUgdG8gdW51c3VhbCBhY3Rpdml0eS4gVHJ5IGFnYWluIGxhdGVyLlwiLFwidW5hdXRob3JpemVkLWNvbnRpbnVlLXVyaVwiOlwiVGhlIGRvbWFpbiBvZiB0aGUgY29udGludWUgVVJMIGlzIG5vdCB3aGl0ZWxpc3RlZC4gIFBsZWFzZSB3aGl0ZWxpc3QgdGhlIGRvbWFpbiBpbiB0aGUgRmlyZWJhc2UgY29uc29sZS5cIixcInVuc3VwcG9ydGVkLWZpcnN0LWZhY3RvclwiOlwiRW5yb2xsaW5nIGEgc2Vjb25kIGZhY3RvciBvciBzaWduaW5nIGluIHdpdGggYSBtdWx0aS1mYWN0b3IgYWNjb3VudCByZXF1aXJlcyBzaWduLWluIHdpdGggYSBzdXBwb3J0ZWQgZmlyc3QgZmFjdG9yLlwiLFwidW5zdXBwb3J0ZWQtcGVyc2lzdGVuY2UtdHlwZVwiOlwiVGhlIGN1cnJlbnQgZW52aXJvbm1lbnQgZG9lcyBub3Qgc3VwcG9ydCB0aGUgc3BlY2lmaWVkIHBlcnNpc3RlbmNlIHR5cGUuXCIsXCJ1bnN1cHBvcnRlZC10ZW5hbnQtb3BlcmF0aW9uXCI6XCJUaGlzIG9wZXJhdGlvbiBpcyBub3Qgc3VwcG9ydGVkIGluIGEgbXVsdGktdGVuYW50IGNvbnRleHQuXCIsXG5cInVudmVyaWZpZWQtZW1haWxcIjpcIlRoZSBvcGVyYXRpb24gcmVxdWlyZXMgYSB2ZXJpZmllZCBlbWFpbC5cIixcInVzZXItY2FuY2VsbGVkXCI6XCJUaGUgdXNlciBkaWQgbm90IGdyYW50IHlvdXIgYXBwbGljYXRpb24gdGhlIHBlcm1pc3Npb25zIGl0IHJlcXVlc3RlZC5cIixcInVzZXItbm90LWZvdW5kXCI6XCJUaGVyZSBpcyBubyB1c2VyIHJlY29yZCBjb3JyZXNwb25kaW5nIHRvIHRoaXMgaWRlbnRpZmllci4gVGhlIHVzZXIgbWF5IGhhdmUgYmVlbiBkZWxldGVkLlwiLFwidXNlci1kaXNhYmxlZFwiOlwiVGhlIHVzZXIgYWNjb3VudCBoYXMgYmVlbiBkaXNhYmxlZCBieSBhbiBhZG1pbmlzdHJhdG9yLlwiLFwidXNlci1taXNtYXRjaFwiOlwiVGhlIHN1cHBsaWVkIGNyZWRlbnRpYWxzIGRvIG5vdCBjb3JyZXNwb25kIHRvIHRoZSBwcmV2aW91c2x5IHNpZ25lZCBpbiB1c2VyLlwiLFwidXNlci1zaWduZWQtb3V0XCI6XCJcIixcIndlYWstcGFzc3dvcmRcIjpcIlRoZSBwYXNzd29yZCBtdXN0IGJlIDYgY2hhcmFjdGVycyBsb25nIG9yIG1vcmUuXCIsXG5cIndlYi1zdG9yYWdlLXVuc3VwcG9ydGVkXCI6XCJUaGlzIGJyb3dzZXIgaXMgbm90IHN1cHBvcnRlZCBvciAzcmQgcGFydHkgY29va2llcyBhbmQgZGF0YSBtYXkgYmUgZGlzYWJsZWQuXCJ9O3ZhciB5YT17aGQ6e1JhOlwiaHR0cHM6Ly9zdGFnaW5nLWlkZW50aXR5dG9vbGtpdC5zYW5kYm94Lmdvb2dsZWFwaXMuY29tL2lkZW50aXR5dG9vbGtpdC92My9yZWx5aW5ncGFydHkvXCIsWGE6XCJodHRwczovL3N0YWdpbmctc2VjdXJldG9rZW4uc2FuZGJveC5nb29nbGVhcGlzLmNvbS92MS90b2tlblwiLFVhOlwiaHR0cHM6Ly9zdGFnaW5nLWlkZW50aXR5dG9vbGtpdC5zYW5kYm94Lmdvb2dsZWFwaXMuY29tL3YyL1wiLGlkOlwiYlwifSxwZDp7UmE6XCJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9pZGVudGl0eXRvb2xraXQvdjMvcmVseWluZ3BhcnR5L1wiLFhhOlwiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGVhcGlzLmNvbS92MS90b2tlblwiLFVhOlwiaHR0cHM6Ly9pZGVudGl0eXRvb2xraXQuZ29vZ2xlYXBpcy5jb20vdjIvXCIsaWQ6XCJwXCJ9LHJkOntSYTpcImh0dHBzOi8vc3RhZ2luZy13d3cuc2FuZGJveC5nb29nbGVhcGlzLmNvbS9pZGVudGl0eXRvb2xraXQvdjMvcmVseWluZ3BhcnR5L1wiLFxuWGE6XCJodHRwczovL3N0YWdpbmctc2VjdXJldG9rZW4uc2FuZGJveC5nb29nbGVhcGlzLmNvbS92MS90b2tlblwiLFVhOlwiaHR0cHM6Ly9zdGFnaW5nLWlkZW50aXR5dG9vbGtpdC5zYW5kYm94Lmdvb2dsZWFwaXMuY29tL3YyL1wiLGlkOlwic1wifSxzZDp7UmE6XCJodHRwczovL3d3dy1nb29nbGVhcGlzLXRlc3Quc2FuZGJveC5nb29nbGUuY29tL2lkZW50aXR5dG9vbGtpdC92My9yZWx5aW5ncGFydHkvXCIsWGE6XCJodHRwczovL3Rlc3Qtc2VjdXJldG9rZW4uc2FuZGJveC5nb29nbGVhcGlzLmNvbS92MS90b2tlblwiLFVhOlwiaHR0cHM6Ly90ZXN0LWlkZW50aXR5dG9vbGtpdC5zYW5kYm94Lmdvb2dsZWFwaXMuY29tL3YyL1wiLGlkOlwidFwifX07XG5mdW5jdGlvbiB6YShhKXtmb3IodmFyIGIgaW4geWEpaWYoeWFbYl0uaWQ9PT1hKXJldHVybiBhPXlhW2JdLHtmaXJlYmFzZUVuZHBvaW50OmEuUmEsc2VjdXJlVG9rZW5FbmRwb2ludDphLlhhLGlkZW50aXR5UGxhdGZvcm1FbmRwb2ludDphLlVhfTtyZXR1cm4gbnVsbH12YXIgQWE7QWE9emEoXCJfX0VJRF9fXCIpP1wiX19FSURfX1wiOnZvaWQgMDtmdW5jdGlvbiBCYShhKXtpZighYSlyZXR1cm4hMTt0cnl7cmV0dXJuISFhLiRnb29nX1RoZW5hYmxlfWNhdGNoKGIpe3JldHVybiExfX07ZnVuY3Rpb24gdyhhKXtpZihFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSlFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLHcpO2Vsc2V7dmFyIGI9RXJyb3IoKS5zdGFjaztiJiYodGhpcy5zdGFjaz1iKX1hJiYodGhpcy5tZXNzYWdlPVN0cmluZyhhKSl9dCh3LEVycm9yKTt3LnByb3RvdHlwZS5uYW1lPVwiQ3VzdG9tRXJyb3JcIjtmdW5jdGlvbiBDYShhLGIpe2E9YS5zcGxpdChcIiVzXCIpO2Zvcih2YXIgYz1cIlwiLGQ9YS5sZW5ndGgtMSxlPTA7ZTxkO2UrKyljKz1hW2VdKyhlPGIubGVuZ3RoP2JbZV06XCIlc1wiKTt3LmNhbGwodGhpcyxjK2FbZF0pfXQoQ2Esdyk7Q2EucHJvdG90eXBlLm5hbWU9XCJBc3NlcnRpb25FcnJvclwiO2Z1bmN0aW9uIERhKGEsYil7dGhyb3cgbmV3IENhKFwiRmFpbHVyZVwiKyhhP1wiOiBcIithOlwiXCIpLEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKSk7fTtmdW5jdGlvbiBFYShhLGIpe3RoaXMuYz1hO3RoaXMuZj1iO3RoaXMuYj0wO3RoaXMuYT1udWxsfUVhLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oKXtpZigwPHRoaXMuYil7dGhpcy5iLS07dmFyIGE9dGhpcy5hO3RoaXMuYT1hLm5leHQ7YS5uZXh0PW51bGx9ZWxzZSBhPXRoaXMuYygpO3JldHVybiBhfTtmdW5jdGlvbiBGYShhLGIpe2EuZihiKTsxMDA+YS5iJiYoYS5iKyssYi5uZXh0PWEuYSxhLmE9Yil9O2Z1bmN0aW9uIEdhKCl7dGhpcy5iPXRoaXMuYT1udWxsfXZhciBJYT1uZXcgRWEoZnVuY3Rpb24oKXtyZXR1cm4gbmV3IEhhfSxmdW5jdGlvbihhKXthLnJlc2V0KCl9KTtHYS5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKGEsYil7dmFyIGM9SWEuZ2V0KCk7Yy5zZXQoYSxiKTt0aGlzLmI/dGhpcy5iLm5leHQ9Yzp0aGlzLmE9Yzt0aGlzLmI9Y307ZnVuY3Rpb24gSmEoKXt2YXIgYT1LYSxiPW51bGw7YS5hJiYoYj1hLmEsYS5hPWEuYS5uZXh0LGEuYXx8KGEuYj1udWxsKSxiLm5leHQ9bnVsbCk7cmV0dXJuIGJ9ZnVuY3Rpb24gSGEoKXt0aGlzLm5leHQ9dGhpcy5iPXRoaXMuYT1udWxsfUhhLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24oYSxiKXt0aGlzLmE9YTt0aGlzLmI9Yjt0aGlzLm5leHQ9bnVsbH07SGEucHJvdG90eXBlLnJlc2V0PWZ1bmN0aW9uKCl7dGhpcy5uZXh0PXRoaXMuYj10aGlzLmE9bnVsbH07dmFyIExhPUFycmF5LnByb3RvdHlwZS5pbmRleE9mP2Z1bmN0aW9uKGEsYil7cmV0dXJuIEFycmF5LnByb3RvdHlwZS5pbmRleE9mLmNhbGwoYSxiLHZvaWQgMCl9OmZ1bmN0aW9uKGEsYil7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVyblwic3RyaW5nXCIhPT10eXBlb2YgYnx8MSE9Yi5sZW5ndGg/LTE6YS5pbmRleE9mKGIsMCk7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKyspaWYoYyBpbiBhJiZhW2NdPT09YilyZXR1cm4gYztyZXR1cm4tMX0seD1BcnJheS5wcm90b3R5cGUuZm9yRWFjaD9mdW5jdGlvbihhLGIsYyl7QXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChhLGIsYyl9OmZ1bmN0aW9uKGEsYixjKXtmb3IodmFyIGQ9YS5sZW5ndGgsZT1cInN0cmluZ1wiPT09dHlwZW9mIGE/YS5zcGxpdChcIlwiKTphLGY9MDtmPGQ7ZisrKWYgaW4gZSYmYi5jYWxsKGMsZVtmXSxmLGEpfTtcbmZ1bmN0aW9uIE1hKGEsYil7Zm9yKHZhciBjPVwic3RyaW5nXCI9PT10eXBlb2YgYT9hLnNwbGl0KFwiXCIpOmEsZD1hLmxlbmd0aC0xOzA8PWQ7LS1kKWQgaW4gYyYmYi5jYWxsKHZvaWQgMCxjW2RdLGQsYSl9XG52YXIgTmE9QXJyYXkucHJvdG90eXBlLmZpbHRlcj9mdW5jdGlvbihhLGIpe3JldHVybiBBcnJheS5wcm90b3R5cGUuZmlsdGVyLmNhbGwoYSxiLHZvaWQgMCl9OmZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWEubGVuZ3RoLGQ9W10sZT0wLGY9XCJzdHJpbmdcIj09PXR5cGVvZiBhP2Euc3BsaXQoXCJcIik6YSxnPTA7ZzxjO2crKylpZihnIGluIGYpe3ZhciBoPWZbZ107Yi5jYWxsKHZvaWQgMCxoLGcsYSkmJihkW2UrK109aCl9cmV0dXJuIGR9LE9hPUFycmF5LnByb3RvdHlwZS5tYXA/ZnVuY3Rpb24oYSxiKXtyZXR1cm4gQXJyYXkucHJvdG90eXBlLm1hcC5jYWxsKGEsYix2b2lkIDApfTpmdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1hLmxlbmd0aCxkPUFycmF5KGMpLGU9XCJzdHJpbmdcIj09PXR5cGVvZiBhP2Euc3BsaXQoXCJcIik6YSxmPTA7ZjxjO2YrKylmIGluIGUmJihkW2ZdPWIuY2FsbCh2b2lkIDAsZVtmXSxmLGEpKTtyZXR1cm4gZH0sUGE9QXJyYXkucHJvdG90eXBlLnNvbWU/ZnVuY3Rpb24oYSxcbmIpe3JldHVybiBBcnJheS5wcm90b3R5cGUuc29tZS5jYWxsKGEsYix2b2lkIDApfTpmdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1hLmxlbmd0aCxkPVwic3RyaW5nXCI9PT10eXBlb2YgYT9hLnNwbGl0KFwiXCIpOmEsZT0wO2U8YztlKyspaWYoZSBpbiBkJiZiLmNhbGwodm9pZCAwLGRbZV0sZSxhKSlyZXR1cm4hMDtyZXR1cm4hMX07ZnVuY3Rpb24gUWEoYSl7YTp7dmFyIGI9UmE7Zm9yKHZhciBjPWEubGVuZ3RoLGQ9XCJzdHJpbmdcIj09PXR5cGVvZiBhP2Euc3BsaXQoXCJcIik6YSxlPTA7ZTxjO2UrKylpZihlIGluIGQmJmIuY2FsbCh2b2lkIDAsZFtlXSxlLGEpKXtiPWU7YnJlYWsgYX1iPS0xfXJldHVybiAwPmI/bnVsbDpcInN0cmluZ1wiPT09dHlwZW9mIGE/YS5jaGFyQXQoYik6YVtiXX1mdW5jdGlvbiBTYShhLGIpe3JldHVybiAwPD1MYShhLGIpfVxuZnVuY3Rpb24gVGEoYSxiKXtiPUxhKGEsYik7dmFyIGM7KGM9MDw9YikmJkFycmF5LnByb3RvdHlwZS5zcGxpY2UuY2FsbChhLGIsMSk7cmV0dXJuIGN9ZnVuY3Rpb24gVWEoYSxiKXt2YXIgYz0wO01hKGEsZnVuY3Rpb24oZCxlKXtiLmNhbGwodm9pZCAwLGQsZSxhKSYmMT09QXJyYXkucHJvdG90eXBlLnNwbGljZS5jYWxsKGEsZSwxKS5sZW5ndGgmJmMrK30pfWZ1bmN0aW9uIFZhKGEpe3JldHVybiBBcnJheS5wcm90b3R5cGUuY29uY2F0LmFwcGx5KFtdLGFyZ3VtZW50cyl9ZnVuY3Rpb24gV2EoYSl7dmFyIGI9YS5sZW5ndGg7aWYoMDxiKXtmb3IodmFyIGM9QXJyYXkoYiksZD0wO2Q8YjtkKyspY1tkXT1hW2RdO3JldHVybiBjfXJldHVybltdfTt2YXIgWGE9U3RyaW5nLnByb3RvdHlwZS50cmltP2Z1bmN0aW9uKGEpe3JldHVybiBhLnRyaW0oKX06ZnVuY3Rpb24oYSl7cmV0dXJuL15bXFxzXFx4YTBdKihbXFxzXFxTXSo/KVtcXHNcXHhhMF0qJC8uZXhlYyhhKVsxXX0sWWE9LyYvZyxaYT0vPC9nLCRhPS8+L2csYWI9L1wiL2csYmI9LycvZyxjYj0vXFx4MDAvZyxkYj0vW1xceDAwJjw+XCInXS87ZnVuY3Rpb24geShhLGIpe3JldHVybi0xIT1hLmluZGV4T2YoYil9ZnVuY3Rpb24gZWIoYSxiKXtyZXR1cm4gYTxiPy0xOmE+Yj8xOjB9O3ZhciBmYjthOnt2YXIgZ2I9bC5uYXZpZ2F0b3I7aWYoZ2Ipe3ZhciBoYj1nYi51c2VyQWdlbnQ7aWYoaGIpe2ZiPWhiO2JyZWFrIGF9fWZiPVwiXCJ9ZnVuY3Rpb24geihhKXtyZXR1cm4geShmYixhKX07ZnVuY3Rpb24gaWIoYSxiKXtmb3IodmFyIGMgaW4gYSliLmNhbGwodm9pZCAwLGFbY10sYyxhKX1mdW5jdGlvbiBqYihhKXtmb3IodmFyIGIgaW4gYSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBrYihhKXt2YXIgYj17fSxjO2ZvcihjIGluIGEpYltjXT1hW2NdO3JldHVybiBifXZhciBsYj1cImNvbnN0cnVjdG9yIGhhc093blByb3BlcnR5IGlzUHJvdG90eXBlT2YgcHJvcGVydHlJc0VudW1lcmFibGUgdG9Mb2NhbGVTdHJpbmcgdG9TdHJpbmcgdmFsdWVPZlwiLnNwbGl0KFwiIFwiKTtmdW5jdGlvbiBCKGEsYil7Zm9yKHZhciBjLGQsZT0xO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspe2Q9YXJndW1lbnRzW2VdO2ZvcihjIGluIGQpYVtjXT1kW2NdO2Zvcih2YXIgZj0wO2Y8bGIubGVuZ3RoO2YrKyljPWxiW2ZdLE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChkLGMpJiYoYVtjXT1kW2NdKX19O2Z1bmN0aW9uIG1iKGEsYil7YTp7dHJ5e3ZhciBjPWEmJmEub3duZXJEb2N1bWVudCxkPWMmJihjLmRlZmF1bHRWaWV3fHxjLnBhcmVudFdpbmRvdyk7ZD1kfHxsO2lmKGQuRWxlbWVudCYmZC5Mb2NhdGlvbil7dmFyIGU9ZDticmVhayBhfX1jYXRjaChnKXt9ZT1udWxsfWlmKGUmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBlW2JdJiYoIWF8fCEoYSBpbnN0YW5jZW9mIGVbYl0pJiYoYSBpbnN0YW5jZW9mIGUuTG9jYXRpb258fGEgaW5zdGFuY2VvZiBlLkVsZW1lbnQpKSl7aWYocShhKSl0cnl7dmFyIGY9YS5jb25zdHJ1Y3Rvci5kaXNwbGF5TmFtZXx8YS5jb25zdHJ1Y3Rvci5uYW1lfHxPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYSl9Y2F0Y2goZyl7Zj1cIjxvYmplY3QgY291bGQgbm90IGJlIHN0cmluZ2lmaWVkPlwifWVsc2UgZj12b2lkIDA9PT1hP1widW5kZWZpbmVkXCI6bnVsbD09PWE/XCJudWxsXCI6dHlwZW9mIGE7RGEoXCJBcmd1bWVudCBpcyBub3QgYSAlcyAob3IgYSBub24tRWxlbWVudCwgbm9uLUxvY2F0aW9uIG1vY2spOyBnb3Q6ICVzXCIsXG5iLGYpfX07ZnVuY3Rpb24gbmIoYSxiKXt0aGlzLmE9YT09PW9iJiZifHxcIlwiO3RoaXMuYj1wYn1uYi5wcm90b3R5cGUucmE9ITA7bmIucHJvdG90eXBlLnFhPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYX07bmIucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuXCJDb25zdHtcIit0aGlzLmErXCJ9XCJ9O2Z1bmN0aW9uIHFiKGEpe2lmKGEgaW5zdGFuY2VvZiBuYiYmYS5jb25zdHJ1Y3Rvcj09PW5iJiZhLmI9PT1wYilyZXR1cm4gYS5hO0RhKFwiZXhwZWN0ZWQgb2JqZWN0IG9mIHR5cGUgQ29uc3QsIGdvdCAnXCIrYStcIidcIik7cmV0dXJuXCJ0eXBlX2Vycm9yOkNvbnN0XCJ9dmFyIHBiPXt9LG9iPXt9LHJiPW5ldyBuYihvYixcIlwiKTtmdW5jdGlvbiBzYihhLGIpe3RoaXMuYT1hPT09dGImJmJ8fFwiXCI7dGhpcy5iPXVifXNiLnByb3RvdHlwZS5yYT0hMDtzYi5wcm90b3R5cGUucWE9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hLnRvU3RyaW5nKCl9O3NiLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVyblwiVHJ1c3RlZFJlc291cmNlVXJse1wiK3RoaXMuYStcIn1cIn07ZnVuY3Rpb24gdmIoYSl7aWYoYSBpbnN0YW5jZW9mIHNiJiZhLmNvbnN0cnVjdG9yPT09c2ImJmEuYj09PXViKXJldHVybiBhLmE7RGEoXCJleHBlY3RlZCBvYmplY3Qgb2YgdHlwZSBUcnVzdGVkUmVzb3VyY2VVcmwsIGdvdCAnXCIrYStcIicgb2YgdHlwZSBcIitsYShhKSk7cmV0dXJuXCJ0eXBlX2Vycm9yOlRydXN0ZWRSZXNvdXJjZVVybFwifVxuZnVuY3Rpb24gd2IoYSxiKXt2YXIgYz1xYihhKTtpZigheGIudGVzdChjKSl0aHJvdyBFcnJvcihcIkludmFsaWQgVHJ1c3RlZFJlc291cmNlVXJsIGZvcm1hdDogXCIrYyk7YT1jLnJlcGxhY2UoeWIsZnVuY3Rpb24oZCxlKXtpZighT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsZSkpdGhyb3cgRXJyb3IoJ0ZvdW5kIG1hcmtlciwgXCInK2UrJ1wiLCBpbiBmb3JtYXQgc3RyaW5nLCBcIicrYysnXCIsIGJ1dCBubyB2YWxpZCBsYWJlbCBtYXBwaW5nIGZvdW5kIGluIGFyZ3M6ICcrSlNPTi5zdHJpbmdpZnkoYikpO2Q9YltlXTtyZXR1cm4gZCBpbnN0YW5jZW9mIG5iP3FiKGQpOmVuY29kZVVSSUNvbXBvbmVudChTdHJpbmcoZCkpfSk7cmV0dXJuIG5ldyBzYih0YixhKX1cbnZhciB5Yj0vJXsoXFx3Kyl9L2cseGI9L14oKGh0dHBzOik/XFwvXFwvWzAtOWEtei46W1xcXS1dK1xcL3xcXC9bXi9cXFxcXXxbXjovXFxcXCVdK1xcL3xbXjovXFxcXCVdKls/I118YWJvdXQ6YmxhbmsjKS9pLHViPXt9LHRiPXt9O2Z1bmN0aW9uIHpiKGEsYil7dGhpcy5hPWE9PT1BYiYmYnx8XCJcIjt0aGlzLmI9QmJ9emIucHJvdG90eXBlLnJhPSEwO3piLnByb3RvdHlwZS5xYT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmEudG9TdHJpbmcoKX07emIucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuXCJTYWZlVXJse1wiK3RoaXMuYStcIn1cIn07ZnVuY3Rpb24gQ2IoYSl7aWYoYSBpbnN0YW5jZW9mIHpiJiZhLmNvbnN0cnVjdG9yPT09emImJmEuYj09PUJiKXJldHVybiBhLmE7RGEoXCJleHBlY3RlZCBvYmplY3Qgb2YgdHlwZSBTYWZlVXJsLCBnb3QgJ1wiK2ErXCInIG9mIHR5cGUgXCIrbGEoYSkpO3JldHVyblwidHlwZV9lcnJvcjpTYWZlVXJsXCJ9dmFyIERiPS9eKD86KD86aHR0cHM/fG1haWx0b3xmdHApOnxbXjovPyNdKig/OlsvPyNdfCQpKS9pO1xuZnVuY3Rpb24gRWIoYSl7aWYoYSBpbnN0YW5jZW9mIHpiKXJldHVybiBhO2E9XCJvYmplY3RcIj09dHlwZW9mIGEmJmEucmE/YS5xYSgpOlN0cmluZyhhKTtEYi50ZXN0KGEpfHwoYT1cImFib3V0OmludmFsaWQjekNsb3N1cmV6XCIpO3JldHVybiBuZXcgemIoQWIsYSl9dmFyIEJiPXt9LEFiPXt9O2Z1bmN0aW9uIEZiKCl7dGhpcy5hPVwiXCI7dGhpcy5iPUdifUZiLnByb3RvdHlwZS5yYT0hMDtGYi5wcm90b3R5cGUucWE9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hLnRvU3RyaW5nKCl9O0ZiLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVyblwiU2FmZUh0bWx7XCIrdGhpcy5hK1wifVwifTtmdW5jdGlvbiBIYihhKXtpZihhIGluc3RhbmNlb2YgRmImJmEuY29uc3RydWN0b3I9PT1GYiYmYS5iPT09R2IpcmV0dXJuIGEuYTtEYShcImV4cGVjdGVkIG9iamVjdCBvZiB0eXBlIFNhZmVIdG1sLCBnb3QgJ1wiK2ErXCInIG9mIHR5cGUgXCIrbGEoYSkpO3JldHVyblwidHlwZV9lcnJvcjpTYWZlSHRtbFwifXZhciBHYj17fTtmdW5jdGlvbiBJYihhKXt2YXIgYj1uZXcgRmI7Yi5hPWE7cmV0dXJuIGJ9SWIoXCI8IURPQ1RZUEUgaHRtbD5cIik7dmFyIEpiPUliKFwiXCIpO0liKFwiPGJyPlwiKTtmdW5jdGlvbiBLYihhKXt2YXIgYj1uZXcgc2IodGIscWIocmIpKTttYihhLFwiSFRNTElGcmFtZUVsZW1lbnRcIik7YS5zcmM9dmIoYikudG9TdHJpbmcoKX1mdW5jdGlvbiBMYihhLGIpe21iKGEsXCJIVE1MU2NyaXB0RWxlbWVudFwiKTthLnNyYz12YihiKTtpZihudWxsPT09amEpYjp7Yj1sLmRvY3VtZW50O2lmKChiPWIucXVlcnlTZWxlY3RvciYmYi5xdWVyeVNlbGVjdG9yKFwic2NyaXB0W25vbmNlXVwiKSkmJihiPWIubm9uY2V8fGIuZ2V0QXR0cmlidXRlKFwibm9uY2VcIikpJiZpYS50ZXN0KGIpKXtqYT1iO2JyZWFrIGJ9amE9XCJcIn1iPWphO2ImJmEuc2V0QXR0cmlidXRlKFwibm9uY2VcIixiKX07ZnVuY3Rpb24gTWIoYSxiKXtmb3IodmFyIGM9YS5zcGxpdChcIiVzXCIpLGQ9XCJcIixlPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKTtlLmxlbmd0aCYmMTxjLmxlbmd0aDspZCs9Yy5zaGlmdCgpK2Uuc2hpZnQoKTtyZXR1cm4gZCtjLmpvaW4oXCIlc1wiKX1mdW5jdGlvbiBOYihhKXtkYi50ZXN0KGEpJiYoLTEhPWEuaW5kZXhPZihcIiZcIikmJihhPWEucmVwbGFjZShZYSxcIiZhbXA7XCIpKSwtMSE9YS5pbmRleE9mKFwiPFwiKSYmKGE9YS5yZXBsYWNlKFphLFwiJmx0O1wiKSksLTEhPWEuaW5kZXhPZihcIj5cIikmJihhPWEucmVwbGFjZSgkYSxcIiZndDtcIikpLC0xIT1hLmluZGV4T2YoJ1wiJykmJihhPWEucmVwbGFjZShhYixcIiZxdW90O1wiKSksLTEhPWEuaW5kZXhPZihcIidcIikmJihhPWEucmVwbGFjZShiYixcIiYjMzk7XCIpKSwtMSE9YS5pbmRleE9mKFwiXFx4MDBcIikmJihhPWEucmVwbGFjZShjYixcIiYjMDtcIikpKTtyZXR1cm4gYX07ZnVuY3Rpb24gT2IoYSl7T2JbXCIgXCJdKGEpO3JldHVybiBhfU9iW1wiIFwiXT1rYTtmdW5jdGlvbiBQYihhLGIpe3ZhciBjPVFiO3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYyxhKT9jW2FdOmNbYV09YihhKX07dmFyIFJiPXooXCJPcGVyYVwiKSxTYj16KFwiVHJpZGVudFwiKXx8eihcIk1TSUVcIiksVGI9eihcIkVkZ2VcIiksVWI9VGJ8fFNiLFZiPXooXCJHZWNrb1wiKSYmISh5KGZiLnRvTG93ZXJDYXNlKCksXCJ3ZWJraXRcIikmJiF6KFwiRWRnZVwiKSkmJiEoeihcIlRyaWRlbnRcIil8fHooXCJNU0lFXCIpKSYmIXooXCJFZGdlXCIpLFdiPXkoZmIudG9Mb3dlckNhc2UoKSxcIndlYmtpdFwiKSYmIXooXCJFZGdlXCIpO2Z1bmN0aW9uIFhiKCl7dmFyIGE9bC5kb2N1bWVudDtyZXR1cm4gYT9hLmRvY3VtZW50TW9kZTp2b2lkIDB9dmFyIFliO1xuYTp7dmFyIFpiPVwiXCIsJGI9ZnVuY3Rpb24oKXt2YXIgYT1mYjtpZihWYilyZXR1cm4vcnY6KFteXFwpO10rKShcXCl8OykvLmV4ZWMoYSk7aWYoVGIpcmV0dXJuL0VkZ2VcXC8oW1xcZFxcLl0rKS8uZXhlYyhhKTtpZihTYilyZXR1cm4vXFxiKD86TVNJRXxydilbOiBdKFteXFwpO10rKShcXCl8OykvLmV4ZWMoYSk7aWYoV2IpcmV0dXJuL1dlYktpdFxcLyhcXFMrKS8uZXhlYyhhKTtpZihSYilyZXR1cm4vKD86VmVyc2lvbilbIFxcL10/KFxcUyspLy5leGVjKGEpfSgpOyRiJiYoWmI9JGI/JGJbMV06XCJcIik7aWYoU2Ipe3ZhciBhYz1YYigpO2lmKG51bGwhPWFjJiZhYz5wYXJzZUZsb2F0KFpiKSl7WWI9U3RyaW5nKGFjKTticmVhayBhfX1ZYj1aYn12YXIgUWI9e307XG5mdW5jdGlvbiBiYyhhKXtyZXR1cm4gUGIoYSxmdW5jdGlvbigpe2Zvcih2YXIgYj0wLGM9WGEoU3RyaW5nKFliKSkuc3BsaXQoXCIuXCIpLGQ9WGEoU3RyaW5nKGEpKS5zcGxpdChcIi5cIiksZT1NYXRoLm1heChjLmxlbmd0aCxkLmxlbmd0aCksZj0wOzA9PWImJmY8ZTtmKyspe3ZhciBnPWNbZl18fFwiXCIsaD1kW2ZdfHxcIlwiO2Rve2c9LyhcXGQqKShcXEQqKSguKikvLmV4ZWMoZyl8fFtcIlwiLFwiXCIsXCJcIixcIlwiXTtoPS8oXFxkKikoXFxEKikoLiopLy5leGVjKGgpfHxbXCJcIixcIlwiLFwiXCIsXCJcIl07aWYoMD09Z1swXS5sZW5ndGgmJjA9PWhbMF0ubGVuZ3RoKWJyZWFrO2I9ZWIoMD09Z1sxXS5sZW5ndGg/MDpwYXJzZUludChnWzFdLDEwKSwwPT1oWzFdLmxlbmd0aD8wOnBhcnNlSW50KGhbMV0sMTApKXx8ZWIoMD09Z1syXS5sZW5ndGgsMD09aFsyXS5sZW5ndGgpfHxlYihnWzJdLGhbMl0pO2c9Z1szXTtoPWhbM119d2hpbGUoMD09Yil9cmV0dXJuIDA8PWJ9KX12YXIgY2M7XG5jYz1sLmRvY3VtZW50JiZTYj9YYigpOnZvaWQgMDt0cnl7KG5ldyBzZWxmLk9mZnNjcmVlbkNhbnZhcygwLDApKS5nZXRDb250ZXh0KFwiMmRcIil9Y2F0Y2goYSl7fXZhciBkYz0hU2J8fDk8PU51bWJlcihjYyk7ZnVuY3Rpb24gZWMoYSl7dmFyIGI9ZG9jdW1lbnQ7cmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBhP2IuZ2V0RWxlbWVudEJ5SWQoYSk6YX1mdW5jdGlvbiBmYyhhLGIpe2liKGIsZnVuY3Rpb24oYyxkKXtjJiZcIm9iamVjdFwiPT10eXBlb2YgYyYmYy5yYSYmKGM9Yy5xYSgpKTtcInN0eWxlXCI9PWQ/YS5zdHlsZS5jc3NUZXh0PWM6XCJjbGFzc1wiPT1kP2EuY2xhc3NOYW1lPWM6XCJmb3JcIj09ZD9hLmh0bWxGb3I9YzpnYy5oYXNPd25Qcm9wZXJ0eShkKT9hLnNldEF0dHJpYnV0ZShnY1tkXSxjKTowPT1kLmxhc3RJbmRleE9mKFwiYXJpYS1cIiwwKXx8MD09ZC5sYXN0SW5kZXhPZihcImRhdGEtXCIsMCk/YS5zZXRBdHRyaWJ1dGUoZCxjKTphW2RdPWN9KX1cbnZhciBnYz17Y2VsbHBhZGRpbmc6XCJjZWxsUGFkZGluZ1wiLGNlbGxzcGFjaW5nOlwiY2VsbFNwYWNpbmdcIixjb2xzcGFuOlwiY29sU3BhblwiLGZyYW1lYm9yZGVyOlwiZnJhbWVCb3JkZXJcIixoZWlnaHQ6XCJoZWlnaHRcIixtYXhsZW5ndGg6XCJtYXhMZW5ndGhcIixub25jZTpcIm5vbmNlXCIscm9sZTpcInJvbGVcIixyb3dzcGFuOlwicm93U3BhblwiLHR5cGU6XCJ0eXBlXCIsdXNlbWFwOlwidXNlTWFwXCIsdmFsaWduOlwidkFsaWduXCIsd2lkdGg6XCJ3aWR0aFwifTtcbmZ1bmN0aW9uIGhjKGEsYixjKXt2YXIgZD1hcmd1bWVudHMsZT1kb2N1bWVudCxmPVN0cmluZyhkWzBdKSxnPWRbMV07aWYoIWRjJiZnJiYoZy5uYW1lfHxnLnR5cGUpKXtmPVtcIjxcIixmXTtnLm5hbWUmJmYucHVzaCgnIG5hbWU9XCInLE5iKGcubmFtZSksJ1wiJyk7aWYoZy50eXBlKXtmLnB1c2goJyB0eXBlPVwiJyxOYihnLnR5cGUpLCdcIicpO3ZhciBoPXt9O0IoaCxnKTtkZWxldGUgaC50eXBlO2c9aH1mLnB1c2goXCI+XCIpO2Y9Zi5qb2luKFwiXCIpfWY9aWMoZSxmKTtnJiYoXCJzdHJpbmdcIj09PXR5cGVvZiBnP2YuY2xhc3NOYW1lPWc6QXJyYXkuaXNBcnJheShnKT9mLmNsYXNzTmFtZT1nLmpvaW4oXCIgXCIpOmZjKGYsZykpOzI8ZC5sZW5ndGgmJmpjKGUsZixkKTtyZXR1cm4gZn1cbmZ1bmN0aW9uIGpjKGEsYixjKXtmdW5jdGlvbiBkKGcpe2cmJmIuYXBwZW5kQ2hpbGQoXCJzdHJpbmdcIj09PXR5cGVvZiBnP2EuY3JlYXRlVGV4dE5vZGUoZyk6Zyl9Zm9yKHZhciBlPTI7ZTxjLmxlbmd0aDtlKyspe3ZhciBmPWNbZV07IW1hKGYpfHxxKGYpJiYwPGYubm9kZVR5cGU/ZChmKTp4KGtjKGYpP1dhKGYpOmYsZCl9fWZ1bmN0aW9uIGljKGEsYil7Yj1TdHJpbmcoYik7XCJhcHBsaWNhdGlvbi94aHRtbCt4bWxcIj09PWEuY29udGVudFR5cGUmJihiPWIudG9Mb3dlckNhc2UoKSk7cmV0dXJuIGEuY3JlYXRlRWxlbWVudChiKX1mdW5jdGlvbiBrYyhhKXtpZihhJiZcIm51bWJlclwiPT10eXBlb2YgYS5sZW5ndGgpe2lmKHEoYSkpcmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgYS5pdGVtfHxcInN0cmluZ1wiPT10eXBlb2YgYS5pdGVtO2lmKG4oYSkpcmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgYS5pdGVtfXJldHVybiExfTtmdW5jdGlvbiBsYyhhKXtsLnNldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBhO30sMCl9dmFyIG1jO1xuZnVuY3Rpb24gbmMoKXt2YXIgYT1sLk1lc3NhZ2VDaGFubmVsO1widW5kZWZpbmVkXCI9PT10eXBlb2YgYSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiB3aW5kb3cmJndpbmRvdy5wb3N0TWVzc2FnZSYmd2luZG93LmFkZEV2ZW50TGlzdGVuZXImJiF6KFwiUHJlc3RvXCIpJiYoYT1mdW5jdGlvbigpe3ZhciBlPWljKGRvY3VtZW50LFwiSUZSQU1FXCIpO2Uuc3R5bGUuZGlzcGxheT1cIm5vbmVcIjtLYihlKTtkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoZSk7dmFyIGY9ZS5jb250ZW50V2luZG93O2U9Zi5kb2N1bWVudDtlLm9wZW4oKTtlLndyaXRlKEhiKEpiKSk7ZS5jbG9zZSgpO3ZhciBnPVwiY2FsbEltbWVkaWF0ZVwiK01hdGgucmFuZG9tKCksaD1cImZpbGU6XCI9PWYubG9jYXRpb24ucHJvdG9jb2w/XCIqXCI6Zi5sb2NhdGlvbi5wcm90b2NvbCtcIi8vXCIrZi5sb2NhdGlvbi5ob3N0O2U9cihmdW5jdGlvbihtKXtpZigoXCIqXCI9PWh8fG0ub3JpZ2luPT1oKSYmbS5kYXRhPT1nKXRoaXMucG9ydDEub25tZXNzYWdlKCl9LFxudGhpcyk7Zi5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLGUsITEpO3RoaXMucG9ydDE9e307dGhpcy5wb3J0Mj17cG9zdE1lc3NhZ2U6ZnVuY3Rpb24oKXtmLnBvc3RNZXNzYWdlKGcsaCl9fX0pO2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgYSYmIXooXCJUcmlkZW50XCIpJiYheihcIk1TSUVcIikpe3ZhciBiPW5ldyBhLGM9e30sZD1jO2IucG9ydDEub25tZXNzYWdlPWZ1bmN0aW9uKCl7aWYodm9pZCAwIT09Yy5uZXh0KXtjPWMubmV4dDt2YXIgZT1jLkRiO2MuRGI9bnVsbDtlKCl9fTtyZXR1cm4gZnVuY3Rpb24oZSl7ZC5uZXh0PXtEYjplfTtkPWQubmV4dDtiLnBvcnQyLnBvc3RNZXNzYWdlKDApfX1yZXR1cm4gZnVuY3Rpb24oZSl7bC5zZXRUaW1lb3V0KGUsMCl9fTtmdW5jdGlvbiBvYyhhLGIpe3BjfHxxYygpO3JjfHwocGMoKSxyYz0hMCk7S2EuYWRkKGEsYil9dmFyIHBjO2Z1bmN0aW9uIHFjKCl7aWYobC5Qcm9taXNlJiZsLlByb21pc2UucmVzb2x2ZSl7dmFyIGE9bC5Qcm9taXNlLnJlc29sdmUodm9pZCAwKTtwYz1mdW5jdGlvbigpe2EudGhlbihzYyl9fWVsc2UgcGM9ZnVuY3Rpb24oKXt2YXIgYj1zYzshbihsLnNldEltbWVkaWF0ZSl8fGwuV2luZG93JiZsLldpbmRvdy5wcm90b3R5cGUmJiF6KFwiRWRnZVwiKSYmbC5XaW5kb3cucHJvdG90eXBlLnNldEltbWVkaWF0ZT09bC5zZXRJbW1lZGlhdGU/KG1jfHwobWM9bmMoKSksbWMoYikpOmwuc2V0SW1tZWRpYXRlKGIpfX12YXIgcmM9ITEsS2E9bmV3IEdhO2Z1bmN0aW9uIHNjKCl7Zm9yKHZhciBhO2E9SmEoKTspe3RyeXthLmEuY2FsbChhLmIpfWNhdGNoKGIpe2xjKGIpfUZhKElhLGEpfXJjPSExfTtmdW5jdGlvbiBEKGEsYil7dGhpcy5hPXRjO3RoaXMuaT12b2lkIDA7dGhpcy5mPXRoaXMuYj10aGlzLmM9bnVsbDt0aGlzLmc9dGhpcy5oPSExO2lmKGEhPWthKXRyeXt2YXIgYz10aGlzO2EuY2FsbChiLGZ1bmN0aW9uKGQpe3VjKGMsdmMsZCl9LGZ1bmN0aW9uKGQpe2lmKCEoZCBpbnN0YW5jZW9mIHdjKSl0cnl7aWYoZCBpbnN0YW5jZW9mIEVycm9yKXRocm93IGQ7dGhyb3cgRXJyb3IoXCJQcm9taXNlIHJlamVjdGVkLlwiKTt9Y2F0Y2goZSl7fXVjKGMseGMsZCl9KX1jYXRjaChkKXt1Yyh0aGlzLHhjLGQpfX12YXIgdGM9MCx2Yz0yLHhjPTM7ZnVuY3Rpb24geWMoKXt0aGlzLm5leHQ9dGhpcy5mPXRoaXMuYj10aGlzLmc9dGhpcy5hPW51bGw7dGhpcy5jPSExfXljLnByb3RvdHlwZS5yZXNldD1mdW5jdGlvbigpe3RoaXMuZj10aGlzLmI9dGhpcy5nPXRoaXMuYT1udWxsO3RoaXMuYz0hMX07dmFyIHpjPW5ldyBFYShmdW5jdGlvbigpe3JldHVybiBuZXcgeWN9LGZ1bmN0aW9uKGEpe2EucmVzZXQoKX0pO1xuZnVuY3Rpb24gQWMoYSxiLGMpe3ZhciBkPXpjLmdldCgpO2QuZz1hO2QuYj1iO2QuZj1jO3JldHVybiBkfWZ1bmN0aW9uIEUoYSl7aWYoYSBpbnN0YW5jZW9mIEQpcmV0dXJuIGE7dmFyIGI9bmV3IEQoa2EpO3VjKGIsdmMsYSk7cmV0dXJuIGJ9ZnVuY3Rpb24gRihhKXtyZXR1cm4gbmV3IEQoZnVuY3Rpb24oYixjKXtjKGEpfSl9ZnVuY3Rpb24gQmMoYSxiLGMpe0NjKGEsYixjLG51bGwpfHxvYyhzYShiLGEpKX1mdW5jdGlvbiBEYyhhKXtyZXR1cm4gbmV3IEQoZnVuY3Rpb24oYixjKXt2YXIgZD1hLmxlbmd0aCxlPVtdO2lmKGQpZm9yKHZhciBmPWZ1bmN0aW9uKHAsdil7ZC0tO2VbcF09djswPT1kJiZiKGUpfSxnPWZ1bmN0aW9uKHApe2MocCl9LGg9MCxtO2g8YS5sZW5ndGg7aCsrKW09YVtoXSxCYyhtLHNhKGYsaCksZyk7ZWxzZSBiKGUpfSl9XG5mdW5jdGlvbiBFYyhhKXtyZXR1cm4gbmV3IEQoZnVuY3Rpb24oYil7dmFyIGM9YS5sZW5ndGgsZD1bXTtpZihjKWZvcih2YXIgZT1mdW5jdGlvbihoLG0scCl7Yy0tO2RbaF09bT97TWI6ITAsdmFsdWU6cH06e01iOiExLHJlYXNvbjpwfTswPT1jJiZiKGQpfSxmPTAsZztmPGEubGVuZ3RoO2YrKylnPWFbZl0sQmMoZyxzYShlLGYsITApLHNhKGUsZiwhMSkpO2Vsc2UgYihkKX0pfUQucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBGYyh0aGlzLG4oYSk/YTpudWxsLG4oYik/YjpudWxsLGMpfTtELnByb3RvdHlwZS4kZ29vZ19UaGVuYWJsZT0hMDtrPUQucHJvdG90eXBlO2subWE9ZnVuY3Rpb24oYSxiKXthPUFjKGEsYSxiKTthLmM9ITA7R2ModGhpcyxhKTtyZXR1cm4gdGhpc307ay5vPWZ1bmN0aW9uKGEsYil7cmV0dXJuIEZjKHRoaXMsbnVsbCxhLGIpfTtcbmsuY2FuY2VsPWZ1bmN0aW9uKGEpe2lmKHRoaXMuYT09dGMpe3ZhciBiPW5ldyB3YyhhKTtvYyhmdW5jdGlvbigpe0hjKHRoaXMsYil9LHRoaXMpfX07ZnVuY3Rpb24gSGMoYSxiKXtpZihhLmE9PXRjKWlmKGEuYyl7dmFyIGM9YS5jO2lmKGMuYil7Zm9yKHZhciBkPTAsZT1udWxsLGY9bnVsbCxnPWMuYjtnJiYoZy5jfHwoZCsrLGcuYT09YSYmKGU9ZyksIShlJiYxPGQpKSk7Zz1nLm5leHQpZXx8KGY9Zyk7ZSYmKGMuYT09dGMmJjE9PWQ/SGMoYyxiKTooZj8oZD1mLGQubmV4dD09Yy5mJiYoYy5mPWQpLGQubmV4dD1kLm5leHQubmV4dCk6SWMoYyksSmMoYyxlLHhjLGIpKSl9YS5jPW51bGx9ZWxzZSB1YyhhLHhjLGIpfWZ1bmN0aW9uIEdjKGEsYil7YS5ifHxhLmEhPXZjJiZhLmEhPXhjfHxLYyhhKTthLmY/YS5mLm5leHQ9YjphLmI9YjthLmY9Yn1cbmZ1bmN0aW9uIEZjKGEsYixjLGQpe3ZhciBlPUFjKG51bGwsbnVsbCxudWxsKTtlLmE9bmV3IEQoZnVuY3Rpb24oZixnKXtlLmc9Yj9mdW5jdGlvbihoKXt0cnl7dmFyIG09Yi5jYWxsKGQsaCk7ZihtKX1jYXRjaChwKXtnKHApfX06ZjtlLmI9Yz9mdW5jdGlvbihoKXt0cnl7dmFyIG09Yy5jYWxsKGQsaCk7dm9pZCAwPT09bSYmaCBpbnN0YW5jZW9mIHdjP2coaCk6ZihtKX1jYXRjaChwKXtnKHApfX06Z30pO2UuYS5jPWE7R2MoYSxlKTtyZXR1cm4gZS5hfWsuWWM9ZnVuY3Rpb24oYSl7dGhpcy5hPXRjO3VjKHRoaXMsdmMsYSl9O2suWmM9ZnVuY3Rpb24oYSl7dGhpcy5hPXRjO3VjKHRoaXMseGMsYSl9O1xuZnVuY3Rpb24gdWMoYSxiLGMpe2EuYT09dGMmJihhPT09YyYmKGI9eGMsYz1uZXcgVHlwZUVycm9yKFwiUHJvbWlzZSBjYW5ub3QgcmVzb2x2ZSB0byBpdHNlbGZcIikpLGEuYT0xLENjKGMsYS5ZYyxhLlpjLGEpfHwoYS5pPWMsYS5hPWIsYS5jPW51bGwsS2MoYSksYiE9eGN8fGMgaW5zdGFuY2VvZiB3Y3x8TGMoYSxjKSkpfWZ1bmN0aW9uIENjKGEsYixjLGQpe2lmKGEgaW5zdGFuY2VvZiBEKXJldHVybiBHYyhhLEFjKGJ8fGthLGN8fG51bGwsZCkpLCEwO2lmKEJhKGEpKXJldHVybiBhLnRoZW4oYixjLGQpLCEwO2lmKHEoYSkpdHJ5e3ZhciBlPWEudGhlbjtpZihuKGUpKXJldHVybiBNYyhhLGUsYixjLGQpLCEwfWNhdGNoKGYpe3JldHVybiBjLmNhbGwoZCxmKSwhMH1yZXR1cm4hMX1cbmZ1bmN0aW9uIE1jKGEsYixjLGQsZSl7ZnVuY3Rpb24gZihtKXtofHwoaD0hMCxkLmNhbGwoZSxtKSl9ZnVuY3Rpb24gZyhtKXtofHwoaD0hMCxjLmNhbGwoZSxtKSl9dmFyIGg9ITE7dHJ5e2IuY2FsbChhLGcsZil9Y2F0Y2gobSl7ZihtKX19ZnVuY3Rpb24gS2MoYSl7YS5ofHwoYS5oPSEwLG9jKGEuZWMsYSkpfWZ1bmN0aW9uIEljKGEpe3ZhciBiPW51bGw7YS5iJiYoYj1hLmIsYS5iPWIubmV4dCxiLm5leHQ9bnVsbCk7YS5ifHwoYS5mPW51bGwpO3JldHVybiBifWsuZWM9ZnVuY3Rpb24oKXtmb3IodmFyIGE7YT1JYyh0aGlzKTspSmModGhpcyxhLHRoaXMuYSx0aGlzLmkpO3RoaXMuaD0hMX07XG5mdW5jdGlvbiBKYyhhLGIsYyxkKXtpZihjPT14YyYmYi5iJiYhYi5jKWZvcig7YSYmYS5nO2E9YS5jKWEuZz0hMTtpZihiLmEpYi5hLmM9bnVsbCxOYyhiLGMsZCk7ZWxzZSB0cnl7Yi5jP2IuZy5jYWxsKGIuZik6TmMoYixjLGQpfWNhdGNoKGUpe09jLmNhbGwobnVsbCxlKX1GYSh6YyxiKX1mdW5jdGlvbiBOYyhhLGIsYyl7Yj09dmM/YS5nLmNhbGwoYS5mLGMpOmEuYiYmYS5iLmNhbGwoYS5mLGMpfWZ1bmN0aW9uIExjKGEsYil7YS5nPSEwO29jKGZ1bmN0aW9uKCl7YS5nJiZPYy5jYWxsKG51bGwsYil9KX12YXIgT2M9bGM7ZnVuY3Rpb24gd2MoYSl7dy5jYWxsKHRoaXMsYSl9dCh3Yyx3KTt3Yy5wcm90b3R5cGUubmFtZT1cImNhbmNlbFwiO2Z1bmN0aW9uIFBjKCl7MCE9UWMmJihSY1tuYSh0aGlzKV09dGhpcyk7dGhpcy53YT10aGlzLndhO3RoaXMubmE9dGhpcy5uYX12YXIgUWM9MCxSYz17fTtQYy5wcm90b3R5cGUud2E9ITE7ZnVuY3Rpb24gU2MoYSl7aWYoIWEud2EmJihhLndhPSEwLGEuQmEoKSwwIT1RYykpe3ZhciBiPW5hKGEpO2lmKDAhPVFjJiZhLm5hJiYwPGEubmEubGVuZ3RoKXRocm93IEVycm9yKGErXCIgZGlkIG5vdCBlbXB0eSBpdHMgb25EaXNwb3NlQ2FsbGJhY2tzIHF1ZXVlLiBUaGlzIHByb2JhYmx5IG1lYW5zIGl0IG92ZXJyb2RlIGRpc3Bvc2UoKSBvciBkaXNwb3NlSW50ZXJuYWwoKSB3aXRob3V0IGNhbGxpbmcgdGhlIHN1cGVyY2xhc3MnIG1ldGhvZC5cIik7ZGVsZXRlIFJjW2JdfX1QYy5wcm90b3R5cGUuQmE9ZnVuY3Rpb24oKXtpZih0aGlzLm5hKWZvcig7dGhpcy5uYS5sZW5ndGg7KXRoaXMubmEuc2hpZnQoKSgpfTt2YXIgVGM9T2JqZWN0LmZyZWV6ZXx8ZnVuY3Rpb24oYSl7cmV0dXJuIGF9O3ZhciBVYz0hU2J8fDk8PU51bWJlcihjYyksVmM9U2ImJiFiYyhcIjlcIiksV2M9ZnVuY3Rpb24oKXtpZighbC5hZGRFdmVudExpc3RlbmVyfHwhT2JqZWN0LmRlZmluZVByb3BlcnR5KXJldHVybiExO3ZhciBhPSExLGI9T2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LFwicGFzc2l2ZVwiLHtnZXQ6ZnVuY3Rpb24oKXthPSEwfX0pO3RyeXtsLmFkZEV2ZW50TGlzdGVuZXIoXCJ0ZXN0XCIsa2EsYiksbC5yZW1vdmVFdmVudExpc3RlbmVyKFwidGVzdFwiLGthLGIpfWNhdGNoKGMpe31yZXR1cm4gYX0oKTtmdW5jdGlvbiBYYyhhLGIpe3RoaXMudHlwZT1hO3RoaXMuYj10aGlzLnRhcmdldD1iO3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMX1YYy5wcm90b3R5cGUucHJldmVudERlZmF1bHQ9ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITB9O2Z1bmN0aW9uIFljKGEsYil7WGMuY2FsbCh0aGlzLGE/YS50eXBlOlwiXCIpO3RoaXMucmVsYXRlZFRhcmdldD10aGlzLmI9dGhpcy50YXJnZXQ9bnVsbDt0aGlzLmJ1dHRvbj10aGlzLnNjcmVlblk9dGhpcy5zY3JlZW5YPXRoaXMuY2xpZW50WT10aGlzLmNsaWVudFg9MDt0aGlzLmtleT1cIlwiO3RoaXMubWV0YUtleT10aGlzLnNoaWZ0S2V5PXRoaXMuYWx0S2V5PXRoaXMuY3RybEtleT0hMTt0aGlzLnBvaW50ZXJJZD0wO3RoaXMucG9pbnRlclR5cGU9XCJcIjt0aGlzLmE9bnVsbDtpZihhKXt2YXIgYz10aGlzLnR5cGU9YS50eXBlLGQ9YS5jaGFuZ2VkVG91Y2hlcyYmYS5jaGFuZ2VkVG91Y2hlcy5sZW5ndGg/YS5jaGFuZ2VkVG91Y2hlc1swXTpudWxsO3RoaXMudGFyZ2V0PWEudGFyZ2V0fHxhLnNyY0VsZW1lbnQ7dGhpcy5iPWI7aWYoYj1hLnJlbGF0ZWRUYXJnZXQpe2lmKFZiKXthOnt0cnl7T2IoYi5ub2RlTmFtZSk7dmFyIGU9ITA7YnJlYWsgYX1jYXRjaChmKXt9ZT0hMX1lfHwoYj1udWxsKX19ZWxzZVwibW91c2VvdmVyXCI9PVxuYz9iPWEuZnJvbUVsZW1lbnQ6XCJtb3VzZW91dFwiPT1jJiYoYj1hLnRvRWxlbWVudCk7dGhpcy5yZWxhdGVkVGFyZ2V0PWI7ZD8odGhpcy5jbGllbnRYPXZvaWQgMCE9PWQuY2xpZW50WD9kLmNsaWVudFg6ZC5wYWdlWCx0aGlzLmNsaWVudFk9dm9pZCAwIT09ZC5jbGllbnRZP2QuY2xpZW50WTpkLnBhZ2VZLHRoaXMuc2NyZWVuWD1kLnNjcmVlblh8fDAsdGhpcy5zY3JlZW5ZPWQuc2NyZWVuWXx8MCk6KHRoaXMuY2xpZW50WD12b2lkIDAhPT1hLmNsaWVudFg/YS5jbGllbnRYOmEucGFnZVgsdGhpcy5jbGllbnRZPXZvaWQgMCE9PWEuY2xpZW50WT9hLmNsaWVudFk6YS5wYWdlWSx0aGlzLnNjcmVlblg9YS5zY3JlZW5YfHwwLHRoaXMuc2NyZWVuWT1hLnNjcmVlbll8fDApO3RoaXMuYnV0dG9uPWEuYnV0dG9uO3RoaXMua2V5PWEua2V5fHxcIlwiO3RoaXMuY3RybEtleT1hLmN0cmxLZXk7dGhpcy5hbHRLZXk9YS5hbHRLZXk7dGhpcy5zaGlmdEtleT1hLnNoaWZ0S2V5O3RoaXMubWV0YUtleT1cbmEubWV0YUtleTt0aGlzLnBvaW50ZXJJZD1hLnBvaW50ZXJJZHx8MDt0aGlzLnBvaW50ZXJUeXBlPVwic3RyaW5nXCI9PT10eXBlb2YgYS5wb2ludGVyVHlwZT9hLnBvaW50ZXJUeXBlOlpjW2EucG9pbnRlclR5cGVdfHxcIlwiO3RoaXMuYT1hO2EuZGVmYXVsdFByZXZlbnRlZCYmdGhpcy5wcmV2ZW50RGVmYXVsdCgpfX10KFljLFhjKTt2YXIgWmM9VGMoezI6XCJ0b3VjaFwiLDM6XCJwZW5cIiw0OlwibW91c2VcIn0pO1ljLnByb3RvdHlwZS5wcmV2ZW50RGVmYXVsdD1mdW5jdGlvbigpe1ljLlphLnByZXZlbnREZWZhdWx0LmNhbGwodGhpcyk7dmFyIGE9dGhpcy5hO2lmKGEucHJldmVudERlZmF1bHQpYS5wcmV2ZW50RGVmYXVsdCgpO2Vsc2UgaWYoYS5yZXR1cm5WYWx1ZT0hMSxWYyl0cnl7aWYoYS5jdHJsS2V5fHwxMTI8PWEua2V5Q29kZSYmMTIzPj1hLmtleUNvZGUpYS5rZXlDb2RlPS0xfWNhdGNoKGIpe319O1ljLnByb3RvdHlwZS5mPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYX07dmFyICRjPVwiY2xvc3VyZV9saXN0ZW5hYmxlX1wiKygxRTYqTWF0aC5yYW5kb20oKXwwKSxhZD0wO2Z1bmN0aW9uIGJkKGEsYixjLGQsZSl7dGhpcy5saXN0ZW5lcj1hO3RoaXMucHJveHk9bnVsbDt0aGlzLnNyYz1iO3RoaXMudHlwZT1jO3RoaXMuY2FwdHVyZT0hIWQ7dGhpcy5UYT1lO3RoaXMua2V5PSsrYWQ7dGhpcy51YT10aGlzLk5hPSExfWZ1bmN0aW9uIGNkKGEpe2EudWE9ITA7YS5saXN0ZW5lcj1udWxsO2EucHJveHk9bnVsbDthLnNyYz1udWxsO2EuVGE9bnVsbH07ZnVuY3Rpb24gZGQoYSl7dGhpcy5zcmM9YTt0aGlzLmE9e307dGhpcy5iPTB9ZGQucHJvdG90eXBlLmFkZD1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPWEudG9TdHJpbmcoKTthPXRoaXMuYVtmXTthfHwoYT10aGlzLmFbZl09W10sdGhpcy5iKyspO3ZhciBnPWVkKGEsYixkLGUpOy0xPGc/KGI9YVtnXSxjfHwoYi5OYT0hMSkpOihiPW5ldyBiZChiLHRoaXMuc3JjLGYsISFkLGUpLGIuTmE9YyxhLnB1c2goYikpO3JldHVybiBifTtmdW5jdGlvbiBmZChhLGIpe3ZhciBjPWIudHlwZTtjIGluIGEuYSYmVGEoYS5hW2NdLGIpJiYoY2QoYiksMD09YS5hW2NdLmxlbmd0aCYmKGRlbGV0ZSBhLmFbY10sYS5iLS0pKX1mdW5jdGlvbiBlZChhLGIsYyxkKXtmb3IodmFyIGU9MDtlPGEubGVuZ3RoOysrZSl7dmFyIGY9YVtlXTtpZighZi51YSYmZi5saXN0ZW5lcj09YiYmZi5jYXB0dXJlPT0hIWMmJmYuVGE9PWQpcmV0dXJuIGV9cmV0dXJuLTF9O3ZhciBnZD1cImNsb3N1cmVfbG1fXCIrKDFFNipNYXRoLnJhbmRvbSgpfDApLGhkPXt9LGlkPTA7ZnVuY3Rpb24gamQoYSxiLGMsZCxlKXtpZihkJiZkLm9uY2Upa2QoYSxiLGMsZCxlKTtlbHNlIGlmKEFycmF5LmlzQXJyYXkoYikpZm9yKHZhciBmPTA7ZjxiLmxlbmd0aDtmKyspamQoYSxiW2ZdLGMsZCxlKTtlbHNlIGM9bGQoYyksYSYmYVskY10/bWQoYSxiLGMscShkKT8hIWQuY2FwdHVyZTohIWQsZSk6bmQoYSxiLGMsITEsZCxlKX1cbmZ1bmN0aW9uIG5kKGEsYixjLGQsZSxmKXtpZighYil0aHJvdyBFcnJvcihcIkludmFsaWQgZXZlbnQgdHlwZVwiKTt2YXIgZz1xKGUpPyEhZS5jYXB0dXJlOiEhZSxoPW9kKGEpO2h8fChhW2dkXT1oPW5ldyBkZChhKSk7Yz1oLmFkZChiLGMsZCxnLGYpO2lmKCFjLnByb3h5KXtkPXBkKCk7Yy5wcm94eT1kO2Quc3JjPWE7ZC5saXN0ZW5lcj1jO2lmKGEuYWRkRXZlbnRMaXN0ZW5lcilXY3x8KGU9Zyksdm9pZCAwPT09ZSYmKGU9ITEpLGEuYWRkRXZlbnRMaXN0ZW5lcihiLnRvU3RyaW5nKCksZCxlKTtlbHNlIGlmKGEuYXR0YWNoRXZlbnQpYS5hdHRhY2hFdmVudChxZChiLnRvU3RyaW5nKCkpLGQpO2Vsc2UgaWYoYS5hZGRMaXN0ZW5lciYmYS5yZW1vdmVMaXN0ZW5lcilhLmFkZExpc3RlbmVyKGQpO2Vsc2UgdGhyb3cgRXJyb3IoXCJhZGRFdmVudExpc3RlbmVyIGFuZCBhdHRhY2hFdmVudCBhcmUgdW5hdmFpbGFibGUuXCIpO2lkKyt9fVxuZnVuY3Rpb24gcGQoKXt2YXIgYT1yZCxiPVVjP2Z1bmN0aW9uKGMpe3JldHVybiBhLmNhbGwoYi5zcmMsYi5saXN0ZW5lcixjKX06ZnVuY3Rpb24oYyl7Yz1hLmNhbGwoYi5zcmMsYi5saXN0ZW5lcixjKTtpZighYylyZXR1cm4gY307cmV0dXJuIGJ9ZnVuY3Rpb24ga2QoYSxiLGMsZCxlKXtpZihBcnJheS5pc0FycmF5KGIpKWZvcih2YXIgZj0wO2Y8Yi5sZW5ndGg7ZisrKWtkKGEsYltmXSxjLGQsZSk7ZWxzZSBjPWxkKGMpLGEmJmFbJGNdP3NkKGEsYixjLHEoZCk/ISFkLmNhcHR1cmU6ISFkLGUpOm5kKGEsYixjLCEwLGQsZSl9XG5mdW5jdGlvbiB0ZChhLGIsYyxkLGUpe2lmKEFycmF5LmlzQXJyYXkoYikpZm9yKHZhciBmPTA7ZjxiLmxlbmd0aDtmKyspdGQoYSxiW2ZdLGMsZCxlKTtlbHNlKGQ9cShkKT8hIWQuY2FwdHVyZTohIWQsYz1sZChjKSxhJiZhWyRjXSk/KGE9YS51LGI9U3RyaW5nKGIpLnRvU3RyaW5nKCksYiBpbiBhLmEmJihmPWEuYVtiXSxjPWVkKGYsYyxkLGUpLC0xPGMmJihjZChmW2NdKSxBcnJheS5wcm90b3R5cGUuc3BsaWNlLmNhbGwoZixjLDEpLDA9PWYubGVuZ3RoJiYoZGVsZXRlIGEuYVtiXSxhLmItLSkpKSk6YSYmKGE9b2QoYSkpJiYoYj1hLmFbYi50b1N0cmluZygpXSxhPS0xLGImJihhPWVkKGIsYyxkLGUpKSwoYz0tMTxhP2JbYV06bnVsbCkmJnZkKGMpKX1cbmZ1bmN0aW9uIHZkKGEpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYSYmYSYmIWEudWEpe3ZhciBiPWEuc3JjO2lmKGImJmJbJGNdKWZkKGIudSxhKTtlbHNle3ZhciBjPWEudHlwZSxkPWEucHJveHk7Yi5yZW1vdmVFdmVudExpc3RlbmVyP2IucmVtb3ZlRXZlbnRMaXN0ZW5lcihjLGQsYS5jYXB0dXJlKTpiLmRldGFjaEV2ZW50P2IuZGV0YWNoRXZlbnQocWQoYyksZCk6Yi5hZGRMaXN0ZW5lciYmYi5yZW1vdmVMaXN0ZW5lciYmYi5yZW1vdmVMaXN0ZW5lcihkKTtpZC0tOyhjPW9kKGIpKT8oZmQoYyxhKSwwPT1jLmImJihjLnNyYz1udWxsLGJbZ2RdPW51bGwpKTpjZChhKX19fWZ1bmN0aW9uIHFkKGEpe3JldHVybiBhIGluIGhkP2hkW2FdOmhkW2FdPVwib25cIithfVxuZnVuY3Rpb24gd2QoYSxiLGMsZCl7dmFyIGU9ITA7aWYoYT1vZChhKSlpZihiPWEuYVtiLnRvU3RyaW5nKCldKWZvcihiPWIuY29uY2F0KCksYT0wO2E8Yi5sZW5ndGg7YSsrKXt2YXIgZj1iW2FdO2YmJmYuY2FwdHVyZT09YyYmIWYudWEmJihmPXhkKGYsZCksZT1lJiYhMSE9PWYpfXJldHVybiBlfWZ1bmN0aW9uIHhkKGEsYil7dmFyIGM9YS5saXN0ZW5lcixkPWEuVGF8fGEuc3JjO2EuTmEmJnZkKGEpO3JldHVybiBjLmNhbGwoZCxiKX1cbmZ1bmN0aW9uIHJkKGEsYil7aWYoYS51YSlyZXR1cm4hMDtpZighVWMpe2lmKCFiKWE6e2I9W1wid2luZG93XCIsXCJldmVudFwiXTtmb3IodmFyIGM9bCxkPTA7ZDxiLmxlbmd0aDtkKyspaWYoYz1jW2JbZF1dLG51bGw9PWMpe2I9bnVsbDticmVhayBhfWI9Y31kPWI7Yj1uZXcgWWMoZCx0aGlzKTtjPSEwO2lmKCEoMD5kLmtleUNvZGV8fHZvaWQgMCE9ZC5yZXR1cm5WYWx1ZSkpe2E6e3ZhciBlPSExO2lmKDA9PWQua2V5Q29kZSl0cnl7ZC5rZXlDb2RlPS0xO2JyZWFrIGF9Y2F0Y2goZyl7ZT0hMH1pZihlfHx2b2lkIDA9PWQucmV0dXJuVmFsdWUpZC5yZXR1cm5WYWx1ZT0hMH1kPVtdO2ZvcihlPWIuYjtlO2U9ZS5wYXJlbnROb2RlKWQucHVzaChlKTthPWEudHlwZTtmb3IoZT1kLmxlbmd0aC0xOzA8PWU7ZS0tKXtiLmI9ZFtlXTt2YXIgZj13ZChkW2VdLGEsITAsYik7Yz1jJiZmfWZvcihlPTA7ZTxkLmxlbmd0aDtlKyspYi5iPWRbZV0sZj13ZChkW2VdLGEsITEsYiksYz1jJiZmfXJldHVybiBjfXJldHVybiB4ZChhLFxubmV3IFljKGIsdGhpcykpfWZ1bmN0aW9uIG9kKGEpe2E9YVtnZF07cmV0dXJuIGEgaW5zdGFuY2VvZiBkZD9hOm51bGx9dmFyIHlkPVwiX19jbG9zdXJlX2V2ZW50c19mbl9cIisoMUU5Kk1hdGgucmFuZG9tKCk+Pj4wKTtmdW5jdGlvbiBsZChhKXtpZihuKGEpKXJldHVybiBhO2FbeWRdfHwoYVt5ZF09ZnVuY3Rpb24oYil7cmV0dXJuIGEuaGFuZGxlRXZlbnQoYil9KTtyZXR1cm4gYVt5ZF19O2Z1bmN0aW9uIEcoKXtQYy5jYWxsKHRoaXMpO3RoaXMudT1uZXcgZGQodGhpcyk7dGhpcy5ZYj10aGlzO3RoaXMuZWI9bnVsbH10KEcsUGMpO0cucHJvdG90eXBlWyRjXT0hMDtHLnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVyPWZ1bmN0aW9uKGEsYixjLGQpe2pkKHRoaXMsYSxiLGMsZCl9O0cucHJvdG90eXBlLnJlbW92ZUV2ZW50TGlzdGVuZXI9ZnVuY3Rpb24oYSxiLGMsZCl7dGQodGhpcyxhLGIsYyxkKX07XG5HLnByb3RvdHlwZS5kaXNwYXRjaEV2ZW50PWZ1bmN0aW9uKGEpe3ZhciBiLGM9dGhpcy5lYjtpZihjKWZvcihiPVtdO2M7Yz1jLmViKWIucHVzaChjKTtjPXRoaXMuWWI7dmFyIGQ9YS50eXBlfHxhO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlhPW5ldyBYYyhhLGMpO2Vsc2UgaWYoYSBpbnN0YW5jZW9mIFhjKWEudGFyZ2V0PWEudGFyZ2V0fHxjO2Vsc2V7dmFyIGU9YTthPW5ldyBYYyhkLGMpO0IoYSxlKX1lPSEwO2lmKGIpZm9yKHZhciBmPWIubGVuZ3RoLTE7MDw9ZjtmLS0pe3ZhciBnPWEuYj1iW2ZdO2U9emQoZyxkLCEwLGEpJiZlfWc9YS5iPWM7ZT16ZChnLGQsITAsYSkmJmU7ZT16ZChnLGQsITEsYSkmJmU7aWYoYilmb3IoZj0wO2Y8Yi5sZW5ndGg7ZisrKWc9YS5iPWJbZl0sZT16ZChnLGQsITEsYSkmJmU7cmV0dXJuIGV9O1xuRy5wcm90b3R5cGUuQmE9ZnVuY3Rpb24oKXtHLlphLkJhLmNhbGwodGhpcyk7aWYodGhpcy51KXt2YXIgYT10aGlzLnUsYj0wLGM7Zm9yKGMgaW4gYS5hKXtmb3IodmFyIGQ9YS5hW2NdLGU9MDtlPGQubGVuZ3RoO2UrKykrK2IsY2QoZFtlXSk7ZGVsZXRlIGEuYVtjXTthLmItLX19dGhpcy5lYj1udWxsfTtmdW5jdGlvbiBtZChhLGIsYyxkLGUpe2EudS5hZGQoU3RyaW5nKGIpLGMsITEsZCxlKX1mdW5jdGlvbiBzZChhLGIsYyxkLGUpe2EudS5hZGQoU3RyaW5nKGIpLGMsITAsZCxlKX1cbmZ1bmN0aW9uIHpkKGEsYixjLGQpe2I9YS51LmFbU3RyaW5nKGIpXTtpZighYilyZXR1cm4hMDtiPWIuY29uY2F0KCk7Zm9yKHZhciBlPSEwLGY9MDtmPGIubGVuZ3RoOysrZil7dmFyIGc9YltmXTtpZihnJiYhZy51YSYmZy5jYXB0dXJlPT1jKXt2YXIgaD1nLmxpc3RlbmVyLG09Zy5UYXx8Zy5zcmM7Zy5OYSYmZmQoYS51LGcpO2U9ITEhPT1oLmNhbGwobSxkKSYmZX19cmV0dXJuIGUmJiFkLmRlZmF1bHRQcmV2ZW50ZWR9O2Z1bmN0aW9uIEFkKGEsYixjKXtpZihuKGEpKWMmJihhPXIoYSxjKSk7ZWxzZSBpZihhJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLmhhbmRsZUV2ZW50KWE9cihhLmhhbmRsZUV2ZW50LGEpO2Vsc2UgdGhyb3cgRXJyb3IoXCJJbnZhbGlkIGxpc3RlbmVyIGFyZ3VtZW50XCIpO3JldHVybiAyMTQ3NDgzNjQ3PE51bWJlcihiKT8tMTpsLnNldFRpbWVvdXQoYSxifHwwKX1mdW5jdGlvbiBCZChhKXt2YXIgYj1udWxsO3JldHVybihuZXcgRChmdW5jdGlvbihjLGQpe2I9QWQoZnVuY3Rpb24oKXtjKHZvaWQgMCl9LGEpOy0xPT1iJiZkKEVycm9yKFwiRmFpbGVkIHRvIHNjaGVkdWxlIHRpbWVyLlwiKSl9KSkubyhmdW5jdGlvbihjKXtsLmNsZWFyVGltZW91dChiKTt0aHJvdyBjO30pfTtmdW5jdGlvbiBDZChhKXtpZihhLlYmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGEuVilyZXR1cm4gYS5WKCk7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhLnNwbGl0KFwiXCIpO2lmKG1hKGEpKXtmb3IodmFyIGI9W10sYz1hLmxlbmd0aCxkPTA7ZDxjO2QrKyliLnB1c2goYVtkXSk7cmV0dXJuIGJ9Yj1bXTtjPTA7Zm9yKGQgaW4gYSliW2MrK109YVtkXTtyZXR1cm4gYn1mdW5jdGlvbiBEZChhKXtpZihhLlgmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGEuWClyZXR1cm4gYS5YKCk7aWYoIWEuVnx8XCJmdW5jdGlvblwiIT10eXBlb2YgYS5WKXtpZihtYShhKXx8XCJzdHJpbmdcIj09PXR5cGVvZiBhKXt2YXIgYj1bXTthPWEubGVuZ3RoO2Zvcih2YXIgYz0wO2M8YTtjKyspYi5wdXNoKGMpO3JldHVybiBifWI9W107Yz0wO2Zvcih2YXIgZCBpbiBhKWJbYysrXT1kO3JldHVybiBifX1cbmZ1bmN0aW9uIEVkKGEsYil7aWYoYS5mb3JFYWNoJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLmZvckVhY2gpYS5mb3JFYWNoKGIsdm9pZCAwKTtlbHNlIGlmKG1hKGEpfHxcInN0cmluZ1wiPT09dHlwZW9mIGEpeChhLGIsdm9pZCAwKTtlbHNlIGZvcih2YXIgYz1EZChhKSxkPUNkKGEpLGU9ZC5sZW5ndGgsZj0wO2Y8ZTtmKyspYi5jYWxsKHZvaWQgMCxkW2ZdLGMmJmNbZl0sYSl9O2Z1bmN0aW9uIEZkKGEsYil7dGhpcy5iPXt9O3RoaXMuYT1bXTt0aGlzLmM9MDt2YXIgYz1hcmd1bWVudHMubGVuZ3RoO2lmKDE8Yyl7aWYoYyUyKXRocm93IEVycm9yKFwiVW5ldmVuIG51bWJlciBvZiBhcmd1bWVudHNcIik7Zm9yKHZhciBkPTA7ZDxjO2QrPTIpdGhpcy5zZXQoYXJndW1lbnRzW2RdLGFyZ3VtZW50c1tkKzFdKX1lbHNlIGlmKGEpaWYoYSBpbnN0YW5jZW9mIEZkKWZvcihjPWEuWCgpLGQ9MDtkPGMubGVuZ3RoO2QrKyl0aGlzLnNldChjW2RdLGEuZ2V0KGNbZF0pKTtlbHNlIGZvcihkIGluIGEpdGhpcy5zZXQoZCxhW2RdKX1rPUZkLnByb3RvdHlwZTtrLlY9ZnVuY3Rpb24oKXtHZCh0aGlzKTtmb3IodmFyIGE9W10sYj0wO2I8dGhpcy5hLmxlbmd0aDtiKyspYS5wdXNoKHRoaXMuYlt0aGlzLmFbYl1dKTtyZXR1cm4gYX07ay5YPWZ1bmN0aW9uKCl7R2QodGhpcyk7cmV0dXJuIHRoaXMuYS5jb25jYXQoKX07XG5rLmNsZWFyPWZ1bmN0aW9uKCl7dGhpcy5iPXt9O3RoaXMuYz10aGlzLmEubGVuZ3RoPTB9O2Z1bmN0aW9uIEdkKGEpe2lmKGEuYyE9YS5hLmxlbmd0aCl7Zm9yKHZhciBiPTAsYz0wO2I8YS5hLmxlbmd0aDspe3ZhciBkPWEuYVtiXTtIZChhLmIsZCkmJihhLmFbYysrXT1kKTtiKyt9YS5hLmxlbmd0aD1jfWlmKGEuYyE9YS5hLmxlbmd0aCl7dmFyIGU9e307Zm9yKGM9Yj0wO2I8YS5hLmxlbmd0aDspZD1hLmFbYl0sSGQoZSxkKXx8KGEuYVtjKytdPWQsZVtkXT0xKSxiKys7YS5hLmxlbmd0aD1jfX1rLmdldD1mdW5jdGlvbihhLGIpe3JldHVybiBIZCh0aGlzLmIsYSk/dGhpcy5iW2FdOmJ9O2suc2V0PWZ1bmN0aW9uKGEsYil7SGQodGhpcy5iLGEpfHwodGhpcy5jKyssdGhpcy5hLnB1c2goYSkpO3RoaXMuYlthXT1ifTtcbmsuZm9yRWFjaD1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz10aGlzLlgoKSxkPTA7ZDxjLmxlbmd0aDtkKyspe3ZhciBlPWNbZF0sZj10aGlzLmdldChlKTthLmNhbGwoYixmLGUsdGhpcyl9fTtmdW5jdGlvbiBIZChhLGIpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYSxiKX07dmFyIElkPS9eKD86KFteOi8/Iy5dKyk6KT8oPzpcXC9cXC8oPzooW14vPyNdKilAKT8oW14vIz9dKj8pKD86OihbMC05XSspKT8oPz1bL1xcXFwjP118JCkpPyhbXj8jXSspPyg/OlxcPyhbXiNdKikpPyg/OiMoW1xcc1xcU10qKSk/JC87ZnVuY3Rpb24gSmQoYSxiKXtpZihhKXthPWEuc3BsaXQoXCImXCIpO2Zvcih2YXIgYz0wO2M8YS5sZW5ndGg7YysrKXt2YXIgZD1hW2NdLmluZGV4T2YoXCI9XCIpLGU9bnVsbDtpZigwPD1kKXt2YXIgZj1hW2NdLnN1YnN0cmluZygwLGQpO2U9YVtjXS5zdWJzdHJpbmcoZCsxKX1lbHNlIGY9YVtjXTtiKGYsZT9kZWNvZGVVUklDb21wb25lbnQoZS5yZXBsYWNlKC9cXCsvZyxcIiBcIikpOlwiXCIpfX19O2Z1bmN0aW9uIEtkKGEsYil7dGhpcy5iPXRoaXMuaT10aGlzLmY9XCJcIjt0aGlzLmw9bnVsbDt0aGlzLmc9dGhpcy5jPVwiXCI7dGhpcy5oPSExO3ZhciBjO2EgaW5zdGFuY2VvZiBLZD8odGhpcy5oPXZvaWQgMCE9PWI/YjphLmgsTGQodGhpcyxhLmYpLHRoaXMuaT1hLmksdGhpcy5iPWEuYixNZCh0aGlzLGEubCksdGhpcy5jPWEuYyxOZCh0aGlzLE9kKGEuYSkpLHRoaXMuZz1hLmcpOmEmJihjPVN0cmluZyhhKS5tYXRjaChJZCkpPyh0aGlzLmg9ISFiLExkKHRoaXMsY1sxXXx8XCJcIiwhMCksdGhpcy5pPVBkKGNbMl18fFwiXCIpLHRoaXMuYj1QZChjWzNdfHxcIlwiLCEwKSxNZCh0aGlzLGNbNF0pLHRoaXMuYz1QZChjWzVdfHxcIlwiLCEwKSxOZCh0aGlzLGNbNl18fFwiXCIsITApLHRoaXMuZz1QZChjWzddfHxcIlwiKSk6KHRoaXMuaD0hIWIsdGhpcy5hPW5ldyBRZChudWxsLHRoaXMuaCkpfVxuS2QucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7dmFyIGE9W10sYj10aGlzLmY7YiYmYS5wdXNoKFJkKGIsU2QsITApLFwiOlwiKTt2YXIgYz10aGlzLmI7aWYoY3x8XCJmaWxlXCI9PWIpYS5wdXNoKFwiLy9cIiksKGI9dGhpcy5pKSYmYS5wdXNoKFJkKGIsU2QsITApLFwiQFwiKSxhLnB1c2goZW5jb2RlVVJJQ29tcG9uZW50KFN0cmluZyhjKSkucmVwbGFjZSgvJTI1KFswLTlhLWZBLUZdezJ9KS9nLFwiJSQxXCIpKSxjPXRoaXMubCxudWxsIT1jJiZhLnB1c2goXCI6XCIsU3RyaW5nKGMpKTtpZihjPXRoaXMuYyl0aGlzLmImJlwiL1wiIT1jLmNoYXJBdCgwKSYmYS5wdXNoKFwiL1wiKSxhLnB1c2goUmQoYyxcIi9cIj09Yy5jaGFyQXQoMCk/VGQ6VWQsITApKTsoYz10aGlzLmEudG9TdHJpbmcoKSkmJmEucHVzaChcIj9cIixjKTsoYz10aGlzLmcpJiZhLnB1c2goXCIjXCIsUmQoYyxWZCkpO3JldHVybiBhLmpvaW4oXCJcIil9O1xuS2QucHJvdG90eXBlLnJlc29sdmU9ZnVuY3Rpb24oYSl7dmFyIGI9bmV3IEtkKHRoaXMpLGM9ISFhLmY7Yz9MZChiLGEuZik6Yz0hIWEuaTtjP2IuaT1hLmk6Yz0hIWEuYjtjP2IuYj1hLmI6Yz1udWxsIT1hLmw7dmFyIGQ9YS5jO2lmKGMpTWQoYixhLmwpO2Vsc2UgaWYoYz0hIWEuYyl7aWYoXCIvXCIhPWQuY2hhckF0KDApKWlmKHRoaXMuYiYmIXRoaXMuYylkPVwiL1wiK2Q7ZWxzZXt2YXIgZT1iLmMubGFzdEluZGV4T2YoXCIvXCIpOy0xIT1lJiYoZD1iLmMuc3Vic3RyKDAsZSsxKStkKX1lPWQ7aWYoXCIuLlwiPT1lfHxcIi5cIj09ZSlkPVwiXCI7ZWxzZSBpZih5KGUsXCIuL1wiKXx8eShlLFwiLy5cIikpe2Q9MD09ZS5sYXN0SW5kZXhPZihcIi9cIiwwKTtlPWUuc3BsaXQoXCIvXCIpO2Zvcih2YXIgZj1bXSxnPTA7ZzxlLmxlbmd0aDspe3ZhciBoPWVbZysrXTtcIi5cIj09aD9kJiZnPT1lLmxlbmd0aCYmZi5wdXNoKFwiXCIpOlwiLi5cIj09aD8oKDE8Zi5sZW5ndGh8fDE9PWYubGVuZ3RoJiZcIlwiIT1mWzBdKSYmZi5wb3AoKSxcbmQmJmc9PWUubGVuZ3RoJiZmLnB1c2goXCJcIikpOihmLnB1c2goaCksZD0hMCl9ZD1mLmpvaW4oXCIvXCIpfWVsc2UgZD1lfWM/Yi5jPWQ6Yz1cIlwiIT09YS5hLnRvU3RyaW5nKCk7Yz9OZChiLE9kKGEuYSkpOmM9ISFhLmc7YyYmKGIuZz1hLmcpO3JldHVybiBifTtmdW5jdGlvbiBMZChhLGIsYyl7YS5mPWM/UGQoYiwhMCk6YjthLmYmJihhLmY9YS5mLnJlcGxhY2UoLzokLyxcIlwiKSl9ZnVuY3Rpb24gTWQoYSxiKXtpZihiKXtiPU51bWJlcihiKTtpZihpc05hTihiKXx8MD5iKXRocm93IEVycm9yKFwiQmFkIHBvcnQgbnVtYmVyIFwiK2IpO2EubD1ifWVsc2UgYS5sPW51bGx9ZnVuY3Rpb24gTmQoYSxiLGMpe2IgaW5zdGFuY2VvZiBRZD8oYS5hPWIsV2QoYS5hLGEuaCkpOihjfHwoYj1SZChiLFhkKSksYS5hPW5ldyBRZChiLGEuaCkpfWZ1bmN0aW9uIEgoYSxiLGMpe2EuYS5zZXQoYixjKX1mdW5jdGlvbiBZZChhLGIpe3JldHVybiBhLmEuZ2V0KGIpfVxuZnVuY3Rpb24gWmQoYSl7cmV0dXJuIGEgaW5zdGFuY2VvZiBLZD9uZXcgS2QoYSk6bmV3IEtkKGEsdm9pZCAwKX1mdW5jdGlvbiAkZChhLGIpe3ZhciBjPW5ldyBLZChudWxsLHZvaWQgMCk7TGQoYyxcImh0dHBzXCIpO2EmJihjLmI9YSk7YiYmKGMuYz1iKTtyZXR1cm4gY31mdW5jdGlvbiBQZChhLGIpe3JldHVybiBhP2I/ZGVjb2RlVVJJKGEucmVwbGFjZSgvJTI1L2csXCIlMjUyNVwiKSk6ZGVjb2RlVVJJQ29tcG9uZW50KGEpOlwiXCJ9ZnVuY3Rpb24gUmQoYSxiLGMpe3JldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYT8oYT1lbmNvZGVVUkkoYSkucmVwbGFjZShiLGFlKSxjJiYoYT1hLnJlcGxhY2UoLyUyNShbMC05YS1mQS1GXXsyfSkvZyxcIiUkMVwiKSksYSk6bnVsbH1mdW5jdGlvbiBhZShhKXthPWEuY2hhckNvZGVBdCgwKTtyZXR1cm5cIiVcIisoYT4+NCYxNSkudG9TdHJpbmcoMTYpKyhhJjE1KS50b1N0cmluZygxNil9XG52YXIgU2Q9L1sjXFwvXFw/QF0vZyxVZD0vWyNcXD86XS9nLFRkPS9bI1xcP10vZyxYZD0vWyNcXD9AXS9nLFZkPS8jL2c7ZnVuY3Rpb24gUWQoYSxiKXt0aGlzLmI9dGhpcy5hPW51bGw7dGhpcy5jPWF8fG51bGw7dGhpcy5mPSEhYn1mdW5jdGlvbiBiZShhKXthLmF8fChhLmE9bmV3IEZkLGEuYj0wLGEuYyYmSmQoYS5jLGZ1bmN0aW9uKGIsYyl7YS5hZGQoZGVjb2RlVVJJQ29tcG9uZW50KGIucmVwbGFjZSgvXFwrL2csXCIgXCIpKSxjKX0pKX1mdW5jdGlvbiBjZShhKXt2YXIgYj1EZChhKTtpZihcInVuZGVmaW5lZFwiPT10eXBlb2YgYil0aHJvdyBFcnJvcihcIktleXMgYXJlIHVuZGVmaW5lZFwiKTt2YXIgYz1uZXcgUWQobnVsbCx2b2lkIDApO2E9Q2QoYSk7Zm9yKHZhciBkPTA7ZDxiLmxlbmd0aDtkKyspe3ZhciBlPWJbZF0sZj1hW2RdO0FycmF5LmlzQXJyYXkoZik/ZGUoYyxlLGYpOmMuYWRkKGUsZil9cmV0dXJuIGN9az1RZC5wcm90b3R5cGU7XG5rLmFkZD1mdW5jdGlvbihhLGIpe2JlKHRoaXMpO3RoaXMuYz1udWxsO2E9ZWUodGhpcyxhKTt2YXIgYz10aGlzLmEuZ2V0KGEpO2N8fHRoaXMuYS5zZXQoYSxjPVtdKTtjLnB1c2goYik7dGhpcy5iKz0xO3JldHVybiB0aGlzfTtmdW5jdGlvbiBmZShhLGIpe2JlKGEpO2I9ZWUoYSxiKTtIZChhLmEuYixiKSYmKGEuYz1udWxsLGEuYi09YS5hLmdldChiKS5sZW5ndGgsYT1hLmEsSGQoYS5iLGIpJiYoZGVsZXRlIGEuYltiXSxhLmMtLSxhLmEubGVuZ3RoPjIqYS5jJiZHZChhKSkpfWsuY2xlYXI9ZnVuY3Rpb24oKXt0aGlzLmE9dGhpcy5jPW51bGw7dGhpcy5iPTB9O2Z1bmN0aW9uIGdlKGEsYil7YmUoYSk7Yj1lZShhLGIpO3JldHVybiBIZChhLmEuYixiKX1rLmZvckVhY2g9ZnVuY3Rpb24oYSxiKXtiZSh0aGlzKTt0aGlzLmEuZm9yRWFjaChmdW5jdGlvbihjLGQpe3goYyxmdW5jdGlvbihlKXthLmNhbGwoYixlLGQsdGhpcyl9LHRoaXMpfSx0aGlzKX07XG5rLlg9ZnVuY3Rpb24oKXtiZSh0aGlzKTtmb3IodmFyIGE9dGhpcy5hLlYoKSxiPXRoaXMuYS5YKCksYz1bXSxkPTA7ZDxiLmxlbmd0aDtkKyspZm9yKHZhciBlPWFbZF0sZj0wO2Y8ZS5sZW5ndGg7ZisrKWMucHVzaChiW2RdKTtyZXR1cm4gY307ay5WPWZ1bmN0aW9uKGEpe2JlKHRoaXMpO3ZhciBiPVtdO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlnZSh0aGlzLGEpJiYoYj1WYShiLHRoaXMuYS5nZXQoZWUodGhpcyxhKSkpKTtlbHNle2E9dGhpcy5hLlYoKTtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrKyliPVZhKGIsYVtjXSl9cmV0dXJuIGJ9O2suc2V0PWZ1bmN0aW9uKGEsYil7YmUodGhpcyk7dGhpcy5jPW51bGw7YT1lZSh0aGlzLGEpO2dlKHRoaXMsYSkmJih0aGlzLmItPXRoaXMuYS5nZXQoYSkubGVuZ3RoKTt0aGlzLmEuc2V0KGEsW2JdKTt0aGlzLmIrPTE7cmV0dXJuIHRoaXN9O1xuay5nZXQ9ZnVuY3Rpb24oYSxiKXtpZighYSlyZXR1cm4gYjthPXRoaXMuVihhKTtyZXR1cm4gMDxhLmxlbmd0aD9TdHJpbmcoYVswXSk6Yn07ZnVuY3Rpb24gZGUoYSxiLGMpe2ZlKGEsYik7MDxjLmxlbmd0aCYmKGEuYz1udWxsLGEuYS5zZXQoZWUoYSxiKSxXYShjKSksYS5iKz1jLmxlbmd0aCl9ay50b1N0cmluZz1mdW5jdGlvbigpe2lmKHRoaXMuYylyZXR1cm4gdGhpcy5jO2lmKCF0aGlzLmEpcmV0dXJuXCJcIjtmb3IodmFyIGE9W10sYj10aGlzLmEuWCgpLGM9MDtjPGIubGVuZ3RoO2MrKyl7dmFyIGQ9YltjXSxlPWVuY29kZVVSSUNvbXBvbmVudChTdHJpbmcoZCkpO2Q9dGhpcy5WKGQpO2Zvcih2YXIgZj0wO2Y8ZC5sZW5ndGg7ZisrKXt2YXIgZz1lO1wiXCIhPT1kW2ZdJiYoZys9XCI9XCIrZW5jb2RlVVJJQ29tcG9uZW50KFN0cmluZyhkW2ZdKSkpO2EucHVzaChnKX19cmV0dXJuIHRoaXMuYz1hLmpvaW4oXCImXCIpfTtcbmZ1bmN0aW9uIE9kKGEpe3ZhciBiPW5ldyBRZDtiLmM9YS5jO2EuYSYmKGIuYT1uZXcgRmQoYS5hKSxiLmI9YS5iKTtyZXR1cm4gYn1mdW5jdGlvbiBlZShhLGIpe2I9U3RyaW5nKGIpO2EuZiYmKGI9Yi50b0xvd2VyQ2FzZSgpKTtyZXR1cm4gYn1mdW5jdGlvbiBXZChhLGIpe2ImJiFhLmYmJihiZShhKSxhLmM9bnVsbCxhLmEuZm9yRWFjaChmdW5jdGlvbihjLGQpe3ZhciBlPWQudG9Mb3dlckNhc2UoKTtkIT1lJiYoZmUodGhpcyxkKSxkZSh0aGlzLGUsYykpfSxhKSk7YS5mPWJ9O2Z1bmN0aW9uIGhlKGEpe3ZhciBiPVtdO2llKG5ldyBqZSxhLGIpO3JldHVybiBiLmpvaW4oXCJcIil9ZnVuY3Rpb24gamUoKXt9XG5mdW5jdGlvbiBpZShhLGIsYyl7aWYobnVsbD09YiljLnB1c2goXCJudWxsXCIpO2Vsc2V7aWYoXCJvYmplY3RcIj09dHlwZW9mIGIpe2lmKEFycmF5LmlzQXJyYXkoYikpe3ZhciBkPWI7Yj1kLmxlbmd0aDtjLnB1c2goXCJbXCIpO2Zvcih2YXIgZT1cIlwiLGY9MDtmPGI7ZisrKWMucHVzaChlKSxpZShhLGRbZl0sYyksZT1cIixcIjtjLnB1c2goXCJdXCIpO3JldHVybn1pZihiIGluc3RhbmNlb2YgU3RyaW5nfHxiIGluc3RhbmNlb2YgTnVtYmVyfHxiIGluc3RhbmNlb2YgQm9vbGVhbiliPWIudmFsdWVPZigpO2Vsc2V7Yy5wdXNoKFwie1wiKTtlPVwiXCI7Zm9yKGQgaW4gYilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYixkKSYmKGY9YltkXSxcImZ1bmN0aW9uXCIhPXR5cGVvZiBmJiYoYy5wdXNoKGUpLGtlKGQsYyksYy5wdXNoKFwiOlwiKSxpZShhLGYsYyksZT1cIixcIikpO2MucHVzaChcIn1cIik7cmV0dXJufX1zd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJzdHJpbmdcIjprZShiLGMpO2JyZWFrO2Nhc2UgXCJudW1iZXJcIjpjLnB1c2goaXNGaW5pdGUoYikmJlxuIWlzTmFOKGIpP1N0cmluZyhiKTpcIm51bGxcIik7YnJlYWs7Y2FzZSBcImJvb2xlYW5cIjpjLnB1c2goU3RyaW5nKGIpKTticmVhaztjYXNlIFwiZnVuY3Rpb25cIjpjLnB1c2goXCJudWxsXCIpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IoXCJVbmtub3duIHR5cGU6IFwiK3R5cGVvZiBiKTt9fX12YXIgbGU9eydcIic6J1xcXFxcIicsXCJcXFxcXCI6XCJcXFxcXFxcXFwiLFwiL1wiOlwiXFxcXC9cIixcIlxcYlwiOlwiXFxcXGJcIixcIlxcZlwiOlwiXFxcXGZcIixcIlxcblwiOlwiXFxcXG5cIixcIlxcclwiOlwiXFxcXHJcIixcIlxcdFwiOlwiXFxcXHRcIixcIlxceDBCXCI6XCJcXFxcdTAwMGJcIn0sbWU9L1xcdWZmZmYvLnRlc3QoXCJcXHVmZmZmXCIpPy9bXFxcXFwiXFx4MDAtXFx4MWZcXHg3Zi1cXHVmZmZmXS9nOi9bXFxcXFwiXFx4MDAtXFx4MWZcXHg3Zi1cXHhmZl0vZztcbmZ1bmN0aW9uIGtlKGEsYil7Yi5wdXNoKCdcIicsYS5yZXBsYWNlKG1lLGZ1bmN0aW9uKGMpe3ZhciBkPWxlW2NdO2R8fChkPVwiXFxcXHVcIisoYy5jaGFyQ29kZUF0KDApfDY1NTM2KS50b1N0cmluZygxNikuc3Vic3RyKDEpLGxlW2NdPWQpO3JldHVybiBkfSksJ1wiJyl9O2Z1bmN0aW9uIG5lKCl7dmFyIGE9SSgpO3JldHVybiBTYiYmISFjYyYmMTE9PWNjfHwvRWRnZVxcL1xcZCsvLnRlc3QoYSl9ZnVuY3Rpb24gb2UoKXtyZXR1cm4gbC53aW5kb3cmJmwud2luZG93LmxvY2F0aW9uLmhyZWZ8fHNlbGYmJnNlbGYubG9jYXRpb24mJnNlbGYubG9jYXRpb24uaHJlZnx8XCJcIn1mdW5jdGlvbiBwZShhLGIpe2I9Ynx8bC53aW5kb3c7dmFyIGM9XCJhYm91dDpibGFua1wiO2EmJihjPUNiKEViKGEpKSk7Yi5sb2NhdGlvbi5ocmVmPWN9ZnVuY3Rpb24gcWUoYSxiKXt2YXIgYz1bXSxkO2ZvcihkIGluIGEpZCBpbiBiP3R5cGVvZiBhW2RdIT10eXBlb2YgYltkXT9jLnB1c2goZCk6XCJvYmplY3RcIj09dHlwZW9mIGFbZF0mJm51bGwhPWFbZF0mJm51bGwhPWJbZF0/MDxxZShhW2RdLGJbZF0pLmxlbmd0aCYmYy5wdXNoKGQpOmFbZF0hPT1iW2RdJiZjLnB1c2goZCk6Yy5wdXNoKGQpO2ZvcihkIGluIGIpZCBpbiBhfHxjLnB1c2goZCk7cmV0dXJuIGN9XG5mdW5jdGlvbiByZSgpe3ZhciBhPUkoKTthPXNlKGEpIT10ZT9udWxsOihhPWEubWF0Y2goL1xcc0Nocm9tZVxcLyhcXGQrKS9pKSkmJjI9PWEubGVuZ3RoP3BhcnNlSW50KGFbMV0sMTApOm51bGw7cmV0dXJuIGEmJjMwPmE/ITE6IVNifHwhY2N8fDk8Y2N9ZnVuY3Rpb24gdWUoYSl7YT0oYXx8SSgpKS50b0xvd2VyQ2FzZSgpO3JldHVybiBhLm1hdGNoKC9hbmRyb2lkLyl8fGEubWF0Y2goL3dlYm9zLyl8fGEubWF0Y2goL2lwaG9uZXxpcGFkfGlwb2QvKXx8YS5tYXRjaCgvYmxhY2tiZXJyeS8pfHxhLm1hdGNoKC93aW5kb3dzIHBob25lLyl8fGEubWF0Y2goL2llbW9iaWxlLyk/ITA6ITF9ZnVuY3Rpb24gdmUoYSl7YT1hfHxsLndpbmRvdzt0cnl7YS5jbG9zZSgpfWNhdGNoKGIpe319XG5mdW5jdGlvbiB3ZShhLGIsYyl7dmFyIGQ9TWF0aC5mbG9vcigxRTkqTWF0aC5yYW5kb20oKSkudG9TdHJpbmcoKTtiPWJ8fDUwMDtjPWN8fDYwMDt2YXIgZT0od2luZG93LnNjcmVlbi5hdmFpbEhlaWdodC1jKS8yLGY9KHdpbmRvdy5zY3JlZW4uYXZhaWxXaWR0aC1iKS8yO2I9e3dpZHRoOmIsaGVpZ2h0OmMsdG9wOjA8ZT9lOjAsbGVmdDowPGY/ZjowLGxvY2F0aW9uOiEwLHJlc2l6YWJsZTohMCxzdGF0dXNiYXI6ITAsdG9vbGJhcjohMX07Yz1JKCkudG9Mb3dlckNhc2UoKTtkJiYoYi50YXJnZXQ9ZCx5KGMsXCJjcmlvcy9cIikmJihiLnRhcmdldD1cIl9ibGFua1wiKSk7c2UoSSgpKT09eGUmJihhPWF8fFwiaHR0cDovL2xvY2FsaG9zdFwiLGIuc2Nyb2xsYmFycz0hMCk7Yz1hfHxcIlwiOyhhPWIpfHwoYT17fSk7ZD13aW5kb3c7Yj1jIGluc3RhbmNlb2YgemI/YzpFYihcInVuZGVmaW5lZFwiIT10eXBlb2YgYy5ocmVmP2MuaHJlZjpTdHJpbmcoYykpO2M9YS50YXJnZXR8fGMudGFyZ2V0O2U9W107XG5mb3IoZyBpbiBhKXN3aXRjaChnKXtjYXNlIFwid2lkdGhcIjpjYXNlIFwiaGVpZ2h0XCI6Y2FzZSBcInRvcFwiOmNhc2UgXCJsZWZ0XCI6ZS5wdXNoKGcrXCI9XCIrYVtnXSk7YnJlYWs7Y2FzZSBcInRhcmdldFwiOmNhc2UgXCJub29wZW5lclwiOmNhc2UgXCJub3JlZmVycmVyXCI6YnJlYWs7ZGVmYXVsdDplLnB1c2goZytcIj1cIisoYVtnXT8xOjApKX12YXIgZz1lLmpvaW4oXCIsXCIpO2lmKCh6KFwiaVBob25lXCIpJiYheihcImlQb2RcIikmJiF6KFwiaVBhZFwiKXx8eihcImlQYWRcIil8fHooXCJpUG9kXCIpKSYmZC5uYXZpZ2F0b3ImJmQubmF2aWdhdG9yLnN0YW5kYWxvbmUmJmMmJlwiX3NlbGZcIiE9YylnPWljKGRvY3VtZW50LFwiQVwiKSxtYihnLFwiSFRNTEFuY2hvckVsZW1lbnRcIiksYiBpbnN0YW5jZW9mIHpifHxiIGluc3RhbmNlb2YgemJ8fChiPVwib2JqZWN0XCI9PXR5cGVvZiBiJiZiLnJhP2IucWEoKTpTdHJpbmcoYiksRGIudGVzdChiKXx8KGI9XCJhYm91dDppbnZhbGlkI3pDbG9zdXJlelwiKSxiPW5ldyB6YihBYixiKSksZy5ocmVmPVxuQ2IoYiksZy5zZXRBdHRyaWJ1dGUoXCJ0YXJnZXRcIixjKSxhLm5vcmVmZXJyZXImJmcuc2V0QXR0cmlidXRlKFwicmVsXCIsXCJub3JlZmVycmVyXCIpLGE9ZG9jdW1lbnQuY3JlYXRlRXZlbnQoXCJNb3VzZUV2ZW50XCIpLGEuaW5pdE1vdXNlRXZlbnQoXCJjbGlja1wiLCEwLCEwLGQsMSksZy5kaXNwYXRjaEV2ZW50KGEpLGc9e307ZWxzZSBpZihhLm5vcmVmZXJyZXIpe2lmKGc9ZC5vcGVuKFwiXCIsYyxnKSxhPUNiKGIpLGcmJihVYiYmeShhLFwiO1wiKSYmKGE9XCInXCIrYS5yZXBsYWNlKC8nL2csXCIlMjdcIikrXCInXCIpLGcub3BlbmVyPW51bGwsYT1JYignPG1ldGEgbmFtZT1cInJlZmVycmVyXCIgY29udGVudD1cIm5vLXJlZmVycmVyXCI+PG1ldGEgaHR0cC1lcXVpdj1cInJlZnJlc2hcIiBjb250ZW50PVwiMDsgdXJsPScrTmIoYSkrJ1wiPicpLGQ9Zy5kb2N1bWVudCkpZC53cml0ZShIYihhKSksZC5jbG9zZSgpfWVsc2UoZz1kLm9wZW4oQ2IoYiksYyxnKSkmJmEubm9vcGVuZXImJihnLm9wZW5lcj1udWxsKTtpZihnKXRyeXtnLmZvY3VzKCl9Y2F0Y2goaCl7fXJldHVybiBnfVxuZnVuY3Rpb24geWUoYSl7cmV0dXJuIG5ldyBEKGZ1bmN0aW9uKGIpe2Z1bmN0aW9uIGMoKXtCZCgyRTMpLnRoZW4oZnVuY3Rpb24oKXtpZighYXx8YS5jbG9zZWQpYigpO2Vsc2UgcmV0dXJuIGMoKX0pfXJldHVybiBjKCl9KX12YXIgemU9L15cXGR7MSwzfVxcLlxcZHsxLDN9XFwuXFxkezEsM31cXC5cXGR7MSwzfSQvLEFlPS9eW15AXStAW15AXSskLztmdW5jdGlvbiBCZSgpe3ZhciBhPW51bGw7cmV0dXJuKG5ldyBEKGZ1bmN0aW9uKGIpe1wiY29tcGxldGVcIj09bC5kb2N1bWVudC5yZWFkeVN0YXRlP2IoKTooYT1mdW5jdGlvbigpe2IoKX0sa2Qod2luZG93LFwibG9hZFwiLGEpKX0pKS5vKGZ1bmN0aW9uKGIpe3RkKHdpbmRvdyxcImxvYWRcIixhKTt0aHJvdyBiO30pfVxuZnVuY3Rpb24gQ2UoKXtyZXR1cm4gRGUodm9pZCAwKT9CZSgpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gbmV3IEQoZnVuY3Rpb24oYSxiKXt2YXIgYz1sLmRvY3VtZW50LGQ9c2V0VGltZW91dChmdW5jdGlvbigpe2IoRXJyb3IoXCJDb3Jkb3ZhIGZyYW1ld29yayBpcyBub3QgcmVhZHkuXCIpKX0sMUUzKTtjLmFkZEV2ZW50TGlzdGVuZXIoXCJkZXZpY2VyZWFkeVwiLGZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KGQpO2EoKX0sITEpfSl9KTpGKEVycm9yKFwiQ29yZG92YSBtdXN0IHJ1biBpbiBhbiBBbmRyb2lkIG9yIGlPUyBmaWxlIHNjaGVtZS5cIikpfWZ1bmN0aW9uIERlKGEpe2E9YXx8SSgpO3JldHVybiEoXCJmaWxlOlwiIT09RWUoKSYmXCJpb25pYzpcIiE9PUVlKCl8fCFhLnRvTG93ZXJDYXNlKCkubWF0Y2goL2lwaG9uZXxpcGFkfGlwb2R8YW5kcm9pZC8pKX1mdW5jdGlvbiBGZSgpe3ZhciBhPWwud2luZG93O3RyeXtyZXR1cm4hKCFhfHxhPT1hLnRvcCl9Y2F0Y2goYil7cmV0dXJuITF9fVxuZnVuY3Rpb24gR2UoKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIGwuV29ya2VyR2xvYmFsU2NvcGUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBsLmltcG9ydFNjcmlwdHN9ZnVuY3Rpb24gSGUoKXtyZXR1cm4gZmlyZWJhc2UuSU5URVJOQUwuaGFzT3duUHJvcGVydHkoXCJyZWFjdE5hdGl2ZVwiKT9cIlJlYWN0TmF0aXZlXCI6ZmlyZWJhc2UuSU5URVJOQUwuaGFzT3duUHJvcGVydHkoXCJub2RlXCIpP1wiTm9kZVwiOkdlKCk/XCJXb3JrZXJcIjpcIkJyb3dzZXJcIn1mdW5jdGlvbiBJZSgpe3ZhciBhPUhlKCk7cmV0dXJuXCJSZWFjdE5hdGl2ZVwiPT09YXx8XCJOb2RlXCI9PT1hfWZ1bmN0aW9uIEplKCl7Zm9yKHZhciBhPTUwLGI9W107MDxhOyliLnB1c2goXCIxMjM0NTY3ODkwYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXpBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWlwiLmNoYXJBdChNYXRoLmZsb29yKDYyKk1hdGgucmFuZG9tKCkpKSksYS0tO3JldHVybiBiLmpvaW4oXCJcIil9XG52YXIgeGU9XCJGaXJlZm94XCIsdGU9XCJDaHJvbWVcIjtcbmZ1bmN0aW9uIHNlKGEpe3ZhciBiPWEudG9Mb3dlckNhc2UoKTtpZih5KGIsXCJvcGVyYS9cIil8fHkoYixcIm9wci9cIil8fHkoYixcIm9waW9zL1wiKSlyZXR1cm5cIk9wZXJhXCI7aWYoeShiLFwiaWVtb2JpbGVcIikpcmV0dXJuXCJJRU1vYmlsZVwiO2lmKHkoYixcIm1zaWVcIil8fHkoYixcInRyaWRlbnQvXCIpKXJldHVyblwiSUVcIjtpZih5KGIsXCJlZGdlL1wiKSlyZXR1cm5cIkVkZ2VcIjtpZih5KGIsXCJmaXJlZm94L1wiKSlyZXR1cm4geGU7aWYoeShiLFwic2lsay9cIikpcmV0dXJuXCJTaWxrXCI7aWYoeShiLFwiYmxhY2tiZXJyeVwiKSlyZXR1cm5cIkJsYWNrYmVycnlcIjtpZih5KGIsXCJ3ZWJvc1wiKSlyZXR1cm5cIldlYm9zXCI7aWYoIXkoYixcInNhZmFyaS9cIil8fHkoYixcImNocm9tZS9cIil8fHkoYixcImNyaW9zL1wiKXx8eShiLFwiYW5kcm9pZFwiKSlpZigheShiLFwiY2hyb21lL1wiKSYmIXkoYixcImNyaW9zL1wiKXx8eShiLFwiZWRnZS9cIikpe2lmKHkoYixcImFuZHJvaWRcIikpcmV0dXJuXCJBbmRyb2lkXCI7aWYoKGE9YS5tYXRjaCgvKFthLXpBLVpcXGRcXC5dKylcXC9bYS16QS1aXFxkXFwuXSokLykpJiZcbjI9PWEubGVuZ3RoKXJldHVybiBhWzFdfWVsc2UgcmV0dXJuIHRlO2Vsc2UgcmV0dXJuXCJTYWZhcmlcIjtyZXR1cm5cIk90aGVyXCJ9dmFyIEtlPXtqZDpcIkZpcmViYXNlQ29yZS13ZWJcIixsZDpcIkZpcmViYXNlVUktd2ViXCJ9O2Z1bmN0aW9uIExlKGEsYil7Yj1ifHxbXTt2YXIgYz1bXSxkPXt9LGU7Zm9yKGUgaW4gS2UpZFtLZVtlXV09ITA7Zm9yKGU9MDtlPGIubGVuZ3RoO2UrKylcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRbYltlXV0mJihkZWxldGUgZFtiW2VdXSxjLnB1c2goYltlXSkpO2Muc29ydCgpO2I9YztiLmxlbmd0aHx8KGI9W1wiRmlyZWJhc2VDb3JlLXdlYlwiXSk7Yz1IZSgpO1wiQnJvd3NlclwiPT09Yz8oZD1JKCksYz1zZShkKSk6XCJXb3JrZXJcIj09PWMmJihkPUkoKSxjPXNlKGQpK1wiLVwiK2MpO3JldHVybiBjK1wiL0pzQ29yZS9cIithK1wiL1wiK2Iuam9pbihcIixcIil9ZnVuY3Rpb24gSSgpe3JldHVybiBsLm5hdmlnYXRvciYmbC5uYXZpZ2F0b3IudXNlckFnZW50fHxcIlwifVxuZnVuY3Rpb24gSihhLGIpe2E9YS5zcGxpdChcIi5cIik7Yj1ifHxsO2Zvcih2YXIgYz0wO2M8YS5sZW5ndGgmJlwib2JqZWN0XCI9PXR5cGVvZiBiJiZudWxsIT1iO2MrKyliPWJbYVtjXV07YyE9YS5sZW5ndGgmJihiPXZvaWQgMCk7cmV0dXJuIGJ9ZnVuY3Rpb24gTWUoKXt0cnl7dmFyIGE9bC5sb2NhbFN0b3JhZ2UsYj1OZSgpO2lmKGEpcmV0dXJuIGEuc2V0SXRlbShiLFwiMVwiKSxhLnJlbW92ZUl0ZW0oYiksbmUoKT8hIWwuaW5kZXhlZERCOiEwfWNhdGNoKGMpe3JldHVybiBHZSgpJiYhIWwuaW5kZXhlZERCfXJldHVybiExfWZ1bmN0aW9uIE9lKCl7cmV0dXJuKFBlKCl8fFwiY2hyb21lLWV4dGVuc2lvbjpcIj09PUVlKCl8fERlKCkpJiYhSWUoKSYmTWUoKSYmIUdlKCl9ZnVuY3Rpb24gUGUoKXtyZXR1cm5cImh0dHA6XCI9PT1FZSgpfHxcImh0dHBzOlwiPT09RWUoKX1mdW5jdGlvbiBFZSgpe3JldHVybiBsLmxvY2F0aW9uJiZsLmxvY2F0aW9uLnByb3RvY29sfHxudWxsfVxuZnVuY3Rpb24gUWUoYSl7YT1hfHxJKCk7cmV0dXJuIHVlKGEpfHxzZShhKT09eGU/ITE6ITB9ZnVuY3Rpb24gUmUoYSl7cmV0dXJuXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhP251bGw6aGUoYSl9ZnVuY3Rpb24gU2UoYSl7dmFyIGI9e30sYztmb3IoYyBpbiBhKWEuaGFzT3duUHJvcGVydHkoYykmJm51bGwhPT1hW2NdJiZ2b2lkIDAhPT1hW2NdJiYoYltjXT1hW2NdKTtyZXR1cm4gYn1mdW5jdGlvbiBUZShhKXtpZihudWxsIT09YSlyZXR1cm4gSlNPTi5wYXJzZShhKX1mdW5jdGlvbiBOZShhKXtyZXR1cm4gYT9hOk1hdGguZmxvb3IoMUU5Kk1hdGgucmFuZG9tKCkpLnRvU3RyaW5nKCl9ZnVuY3Rpb24gVWUoYSl7YT1hfHxJKCk7cmV0dXJuXCJTYWZhcmlcIj09c2UoYSl8fGEudG9Mb3dlckNhc2UoKS5tYXRjaCgvaXBob25lfGlwYWR8aXBvZC8pPyExOiEwfVxuZnVuY3Rpb24gVmUoKXt2YXIgYT1sLl9fX2pzbDtpZihhJiZhLkgpZm9yKHZhciBiIGluIGEuSClpZihhLkhbYl0ucj1hLkhbYl0ucnx8W10sYS5IW2JdLkw9YS5IW2JdLkx8fFtdLGEuSFtiXS5yPWEuSFtiXS5MLmNvbmNhdCgpLGEuQ1ApZm9yKHZhciBjPTA7YzxhLkNQLmxlbmd0aDtjKyspYS5DUFtjXT1udWxsfWZ1bmN0aW9uIFdlKGEsYil7aWYoYT5iKXRocm93IEVycm9yKFwiU2hvcnQgZGVsYXkgc2hvdWxkIGJlIGxlc3MgdGhhbiBsb25nIGRlbGF5IVwiKTt0aGlzLmE9YTt0aGlzLmM9YjthPUkoKTtiPUhlKCk7dGhpcy5iPXVlKGEpfHxcIlJlYWN0TmF0aXZlXCI9PT1ifVxuV2UucHJvdG90eXBlLmdldD1mdW5jdGlvbigpe3ZhciBhPWwubmF2aWdhdG9yO3JldHVybihhJiZcImJvb2xlYW5cIj09PXR5cGVvZiBhLm9uTGluZSYmKFBlKCl8fFwiY2hyb21lLWV4dGVuc2lvbjpcIj09PUVlKCl8fFwidW5kZWZpbmVkXCIhPT10eXBlb2YgYS5jb25uZWN0aW9uKT9hLm9uTGluZToxKT90aGlzLmI/dGhpcy5jOnRoaXMuYTpNYXRoLm1pbig1RTMsdGhpcy5hKX07ZnVuY3Rpb24gWGUoKXt2YXIgYT1sLmRvY3VtZW50O3JldHVybiBhJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGEudmlzaWJpbGl0eVN0YXRlP1widmlzaWJsZVwiPT1hLnZpc2liaWxpdHlTdGF0ZTohMH1cbmZ1bmN0aW9uIFllKCl7dmFyIGE9bC5kb2N1bWVudCxiPW51bGw7cmV0dXJuIFhlKCl8fCFhP0UoKToobmV3IEQoZnVuY3Rpb24oYyl7Yj1mdW5jdGlvbigpe1hlKCkmJihhLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ2aXNpYmlsaXR5Y2hhbmdlXCIsYiwhMSksYygpKX07YS5hZGRFdmVudExpc3RlbmVyKFwidmlzaWJpbGl0eWNoYW5nZVwiLGIsITEpfSkpLm8oZnVuY3Rpb24oYyl7YS5yZW1vdmVFdmVudExpc3RlbmVyKFwidmlzaWJpbGl0eWNoYW5nZVwiLGIsITEpO3Rocm93IGM7fSl9ZnVuY3Rpb24gWmUoYSl7dHJ5e3ZhciBiPW5ldyBEYXRlKHBhcnNlSW50KGEsMTApKTtpZighaXNOYU4oYi5nZXRUaW1lKCkpJiYhL1teMC05XS8udGVzdChhKSlyZXR1cm4gYi50b1VUQ1N0cmluZygpfWNhdGNoKGMpe31yZXR1cm4gbnVsbH1mdW5jdGlvbiAkZSgpe3JldHVybiEoIUooXCJmaXJlYXV0aC5vYXV0aGhlbHBlclwiLGwpJiYhSihcImZpcmVhdXRoLmlmcmFtZVwiLGwpKX1cbmZ1bmN0aW9uIGFmKCl7dmFyIGE9bC5uYXZpZ2F0b3I7cmV0dXJuIGEmJmEuc2VydmljZVdvcmtlciYmYS5zZXJ2aWNlV29ya2VyLmNvbnRyb2xsZXJ8fG51bGx9ZnVuY3Rpb24gYmYoKXt2YXIgYT1sLm5hdmlnYXRvcjtyZXR1cm4gYSYmYS5zZXJ2aWNlV29ya2VyP0UoKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIGEuc2VydmljZVdvcmtlci5yZWFkeX0pLnRoZW4oZnVuY3Rpb24oYil7cmV0dXJuIGIuYWN0aXZlfHxudWxsfSkubyhmdW5jdGlvbigpe3JldHVybiBudWxsfSk6RShudWxsKX07dmFyIGNmPXt9O2Z1bmN0aW9uIGRmKGEpe2NmW2FdfHwoY2ZbYV09ITAsXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjb25zb2xlJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgY29uc29sZS53YXJuJiZjb25zb2xlLndhcm4oYSkpfTt2YXIgZWY7dHJ5e3ZhciBmZj17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZmYsXCJhYmNkXCIse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiEwLHZhbHVlOjF9KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZmYsXCJhYmNkXCIse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiEwLHZhbHVlOjJ9KTtlZj0yPT1mZi5hYmNkfWNhdGNoKGEpe2VmPSExfWZ1bmN0aW9uIEsoYSxiLGMpe2VmP09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiEwLHZhbHVlOmN9KTphW2JdPWN9ZnVuY3Rpb24gTChhLGIpe2lmKGIpZm9yKHZhciBjIGluIGIpYi5oYXNPd25Qcm9wZXJ0eShjKSYmSyhhLGMsYltjXSl9ZnVuY3Rpb24gZ2YoYSl7dmFyIGI9e307TChiLGEpO3JldHVybiBifWZ1bmN0aW9uIGhmKGEpe3ZhciBiPXt9LGM7Zm9yKGMgaW4gYSlhLmhhc093blByb3BlcnR5KGMpJiYoYltjXT1hW2NdKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGpmKGEsYil7aWYoIWJ8fCFiLmxlbmd0aClyZXR1cm4hMDtpZighYSlyZXR1cm4hMTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoO2MrKyl7dmFyIGQ9YVtiW2NdXTtpZih2b2lkIDA9PT1kfHxudWxsPT09ZHx8XCJcIj09PWQpcmV0dXJuITF9cmV0dXJuITB9ZnVuY3Rpb24ga2YoYSl7dmFyIGI9YTtpZihcIm9iamVjdFwiPT10eXBlb2YgYSYmbnVsbCE9YSl7Yj1cImxlbmd0aFwiaW4gYT9bXTp7fTtmb3IodmFyIGMgaW4gYSlLKGIsYyxrZihhW2NdKSl9cmV0dXJuIGJ9Oy8qXG5cbiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgSW5jLlxuXG4gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG4gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuZnVuY3Rpb24gbGYoYSl7dmFyIGI9YSYmKGFbbWZdP1wicGhvbmVcIjpudWxsKTtpZihiJiZhJiZhW25mXSl7Syh0aGlzLFwidWlkXCIsYVtuZl0pO0sodGhpcyxcImRpc3BsYXlOYW1lXCIsYVtvZl18fG51bGwpO3ZhciBjPW51bGw7YVtwZl0mJihjPShuZXcgRGF0ZShhW3BmXSkpLnRvVVRDU3RyaW5nKCkpO0sodGhpcyxcImVucm9sbG1lbnRUaW1lXCIsYyk7Syh0aGlzLFwiZmFjdG9ySWRcIixiKX1lbHNlIHRocm93IG5ldyB1KFwiaW50ZXJuYWwtZXJyb3JcIixcIkludGVybmFsIGFzc2VydDogaW52YWxpZCBNdWx0aUZhY3RvckluZm8gb2JqZWN0XCIpO31sZi5wcm90b3R5cGUudj1mdW5jdGlvbigpe3JldHVybnt1aWQ6dGhpcy51aWQsZGlzcGxheU5hbWU6dGhpcy5kaXNwbGF5TmFtZSxmYWN0b3JJZDp0aGlzLmZhY3RvcklkLGVucm9sbG1lbnRUaW1lOnRoaXMuZW5yb2xsbWVudFRpbWV9fTtmdW5jdGlvbiBxZihhKXt0cnl7dmFyIGI9bmV3IHJmKGEpfWNhdGNoKGMpe2I9bnVsbH1yZXR1cm4gYn1cbnZhciBvZj1cImRpc3BsYXlOYW1lXCIscGY9XCJlbnJvbGxlZEF0XCIsbmY9XCJtZmFFbnJvbGxtZW50SWRcIixtZj1cInBob25lSW5mb1wiO2Z1bmN0aW9uIHJmKGEpe2xmLmNhbGwodGhpcyxhKTtLKHRoaXMsXCJwaG9uZU51bWJlclwiLGFbbWZdKX10KHJmLGxmKTtyZi5wcm90b3R5cGUudj1mdW5jdGlvbigpe3ZhciBhPXJmLlphLnYuY2FsbCh0aGlzKTthLnBob25lTnVtYmVyPXRoaXMucGhvbmVOdW1iZXI7cmV0dXJuIGF9O2Z1bmN0aW9uIHNmKGEpe3ZhciBiPXt9LGM9YVt0Zl0sZD1hW3VmXSxlPWFbdmZdO2E9cWYoYVt3Zl0pO2lmKCFlfHxlIT14ZiYmZSE9eWYmJiFjfHxlPT15ZiYmIWR8fGU9PXpmJiYhYSl0aHJvdyBFcnJvcihcIkludmFsaWQgY2hlY2tBY3Rpb25Db2RlIHJlc3BvbnNlIVwiKTtlPT15Zj8oYltBZl09Y3x8bnVsbCxiW0JmXT1jfHxudWxsLGJbQ2ZdPWQpOihiW0FmXT1kfHxudWxsLGJbQmZdPWR8fG51bGwsYltDZl09Y3x8bnVsbCk7YltEZl09YXx8bnVsbDtLKHRoaXMsRWYsZSk7Syh0aGlzLEZmLGtmKGIpKX1cbnZhciB6Zj1cIlJFVkVSVF9TRUNPTkRfRkFDVE9SX0FERElUSU9OXCIseGY9XCJFTUFJTF9TSUdOSU5cIix5Zj1cIlZFUklGWV9BTkRfQ0hBTkdFX0VNQUlMXCIsdGY9XCJlbWFpbFwiLHdmPVwibWZhSW5mb1wiLHVmPVwibmV3RW1haWxcIix2Zj1cInJlcXVlc3RUeXBlXCIsQ2Y9XCJlbWFpbFwiLEFmPVwiZnJvbUVtYWlsXCIsRGY9XCJtdWx0aUZhY3RvckluZm9cIixCZj1cInByZXZpb3VzRW1haWxcIixGZj1cImRhdGFcIixFZj1cIm9wZXJhdGlvblwiO2Z1bmN0aW9uIEdmKGEpe2E9WmQoYSk7dmFyIGI9WWQoYSxIZil8fG51bGwsYz1ZZChhLElmKXx8bnVsbCxkPVlkKGEsSmYpfHxudWxsO2Q9ZD9LZltkXXx8bnVsbDpudWxsO2lmKCFifHwhY3x8IWQpdGhyb3cgbmV3IHUoXCJhcmd1bWVudC1lcnJvclwiLEhmK1wiLCBcIitJZitcImFuZCBcIitKZitcIiBhcmUgcmVxdWlyZWQgaW4gYSB2YWxpZCBhY3Rpb24gY29kZSBVUkwuXCIpO0wodGhpcyx7YXBpS2V5OmIsb3BlcmF0aW9uOmQsY29kZTpjLGNvbnRpbnVlVXJsOllkKGEsTGYpfHxudWxsLGxhbmd1YWdlQ29kZTpZZChhLE1mKXx8bnVsbCx0ZW5hbnRJZDpZZChhLE5mKXx8bnVsbH0pfVxudmFyIEhmPVwiYXBpS2V5XCIsSWY9XCJvb2JDb2RlXCIsTGY9XCJjb250aW51ZVVybFwiLE1mPVwibGFuZ3VhZ2VDb2RlXCIsSmY9XCJtb2RlXCIsTmY9XCJ0ZW5hbnRJZFwiLEtmPXtyZWNvdmVyRW1haWw6XCJSRUNPVkVSX0VNQUlMXCIscmVzZXRQYXNzd29yZDpcIlBBU1NXT1JEX1JFU0VUXCIscmV2ZXJ0U2Vjb25kRmFjdG9yQWRkaXRpb246emYsc2lnbkluOnhmLHZlcmlmeUFuZENoYW5nZUVtYWlsOnlmLHZlcmlmeUVtYWlsOlwiVkVSSUZZX0VNQUlMXCJ9O2Z1bmN0aW9uIE9mKGEpe3RyeXtyZXR1cm4gbmV3IEdmKGEpfWNhdGNoKGIpe3JldHVybiBudWxsfX07ZnVuY3Rpb24gUGYoYSl7dmFyIGI9YVtRZl07aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBiKXRocm93IG5ldyB1KFwibWlzc2luZy1jb250aW51ZS11cmlcIik7aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBifHxcInN0cmluZ1wiPT09dHlwZW9mIGImJiFiLmxlbmd0aCl0aHJvdyBuZXcgdShcImludmFsaWQtY29udGludWUtdXJpXCIpO3RoaXMuaD1iO3RoaXMuYj10aGlzLmE9bnVsbDt0aGlzLmc9ITE7dmFyIGM9YVtSZl07aWYoYyYmXCJvYmplY3RcIj09PXR5cGVvZiBjKXtiPWNbU2ZdO3ZhciBkPWNbVGZdO2M9Y1tVZl07aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBiJiZiLmxlbmd0aCl7dGhpcy5hPWI7aWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkJiZcImJvb2xlYW5cIiE9PXR5cGVvZiBkKXRocm93IG5ldyB1KFwiYXJndW1lbnQtZXJyb3JcIixUZitcIiBwcm9wZXJ0eSBtdXN0IGJlIGEgYm9vbGVhbiB3aGVuIHNwZWNpZmllZC5cIik7dGhpcy5nPSEhZDtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJihcInN0cmluZ1wiIT09XG50eXBlb2YgY3x8XCJzdHJpbmdcIj09PXR5cGVvZiBjJiYhYy5sZW5ndGgpKXRocm93IG5ldyB1KFwiYXJndW1lbnQtZXJyb3JcIixVZitcIiBwcm9wZXJ0eSBtdXN0IGJlIGEgbm9uIGVtcHR5IHN0cmluZyB3aGVuIHNwZWNpZmllZC5cIik7dGhpcy5iPWN8fG51bGx9ZWxzZXtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIGIpdGhyb3cgbmV3IHUoXCJhcmd1bWVudC1lcnJvclwiLFNmK1wiIHByb3BlcnR5IG11c3QgYmUgYSBub24gZW1wdHkgc3RyaW5nIHdoZW4gc3BlY2lmaWVkLlwiKTtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIGR8fFwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyl0aHJvdyBuZXcgdShcIm1pc3NpbmctYW5kcm9pZC1wa2ctbmFtZVwiKTt9fWVsc2UgaWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjKXRocm93IG5ldyB1KFwiYXJndW1lbnQtZXJyb3JcIixSZitcIiBwcm9wZXJ0eSBtdXN0IGJlIGEgbm9uIG51bGwgb2JqZWN0IHdoZW4gc3BlY2lmaWVkLlwiKTt0aGlzLmY9bnVsbDtpZigoYj1hW1ZmXSkmJlwib2JqZWN0XCI9PT1cbnR5cGVvZiBiKWlmKGI9YltXZl0sXCJzdHJpbmdcIj09PXR5cGVvZiBiJiZiLmxlbmd0aCl0aGlzLmY9YjtlbHNle2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgYil0aHJvdyBuZXcgdShcImFyZ3VtZW50LWVycm9yXCIsV2YrXCIgcHJvcGVydHkgbXVzdCBiZSBhIG5vbiBlbXB0eSBzdHJpbmcgd2hlbiBzcGVjaWZpZWQuXCIpO31lbHNlIGlmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgYil0aHJvdyBuZXcgdShcImFyZ3VtZW50LWVycm9yXCIsVmYrXCIgcHJvcGVydHkgbXVzdCBiZSBhIG5vbiBudWxsIG9iamVjdCB3aGVuIHNwZWNpZmllZC5cIik7Yj1hW1hmXTtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIGImJlwiYm9vbGVhblwiIT09dHlwZW9mIGIpdGhyb3cgbmV3IHUoXCJhcmd1bWVudC1lcnJvclwiLFhmK1wiIHByb3BlcnR5IG11c3QgYmUgYSBib29sZWFuIHdoZW4gc3BlY2lmaWVkLlwiKTt0aGlzLmM9ISFiO2E9YVtZZl07aWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBhJiYoXCJzdHJpbmdcIiE9PXR5cGVvZiBhfHxcInN0cmluZ1wiPT09XG50eXBlb2YgYSYmIWEubGVuZ3RoKSl0aHJvdyBuZXcgdShcImFyZ3VtZW50LWVycm9yXCIsWWYrXCIgcHJvcGVydHkgbXVzdCBiZSBhIG5vbiBlbXB0eSBzdHJpbmcgd2hlbiBzcGVjaWZpZWQuXCIpO3RoaXMuaT1hfHxudWxsfXZhciBSZj1cImFuZHJvaWRcIixZZj1cImR5bmFtaWNMaW5rRG9tYWluXCIsWGY9XCJoYW5kbGVDb2RlSW5BcHBcIixWZj1cImlPU1wiLFFmPVwidXJsXCIsVGY9XCJpbnN0YWxsQXBwXCIsVWY9XCJtaW5pbXVtVmVyc2lvblwiLFNmPVwicGFja2FnZU5hbWVcIixXZj1cImJ1bmRsZUlkXCI7XG5mdW5jdGlvbiBaZihhKXt2YXIgYj17fTtiLmNvbnRpbnVlVXJsPWEuaDtiLmNhbkhhbmRsZUNvZGVJbkFwcD1hLmM7aWYoYi5hbmRyb2lkUGFja2FnZU5hbWU9YS5hKWIuYW5kcm9pZE1pbmltdW1WZXJzaW9uPWEuYixiLmFuZHJvaWRJbnN0YWxsQXBwPWEuZztiLmlPU0J1bmRsZUlkPWEuZjtiLmR5bmFtaWNMaW5rRG9tYWluPWEuaTtmb3IodmFyIGMgaW4gYiludWxsPT09YltjXSYmZGVsZXRlIGJbY107cmV0dXJuIGJ9O2Z1bmN0aW9uICRmKGEpe3JldHVybiBPYShhLGZ1bmN0aW9uKGIpe2I9Yi50b1N0cmluZygxNik7cmV0dXJuIDE8Yi5sZW5ndGg/YjpcIjBcIitifSkuam9pbihcIlwiKX07dmFyIGFnPW51bGw7ZnVuY3Rpb24gYmcoYSl7dmFyIGI9XCJcIjtjZyhhLGZ1bmN0aW9uKGMpe2IrPVN0cmluZy5mcm9tQ2hhckNvZGUoYyl9KTtyZXR1cm4gYn1mdW5jdGlvbiBjZyhhLGIpe2Z1bmN0aW9uIGMobSl7Zm9yKDtkPGEubGVuZ3RoOyl7dmFyIHA9YS5jaGFyQXQoZCsrKSx2PWFnW3BdO2lmKG51bGwhPXYpcmV0dXJuIHY7aWYoIS9eW1xcc1xceGEwXSokLy50ZXN0KHApKXRocm93IEVycm9yKFwiVW5rbm93biBiYXNlNjQgZW5jb2RpbmcgYXQgY2hhcjogXCIrcCk7fXJldHVybiBtfWRnKCk7Zm9yKHZhciBkPTA7Oyl7dmFyIGU9YygtMSksZj1jKDApLGc9Yyg2NCksaD1jKDY0KTtpZig2ND09PWgmJi0xPT09ZSlicmVhaztiKGU8PDJ8Zj4+NCk7NjQhPWcmJihiKGY8PDQmMjQwfGc+PjIpLDY0IT1oJiZiKGc8PDYmMTkyfGgpKX19XG5mdW5jdGlvbiBkZygpe2lmKCFhZyl7YWc9e307Zm9yKHZhciBhPVwiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODlcIi5zcGxpdChcIlwiKSxiPVtcIisvPVwiLFwiKy9cIixcIi1fPVwiLFwiLV8uXCIsXCItX1wiXSxjPTA7NT5jO2MrKylmb3IodmFyIGQ9YS5jb25jYXQoYltjXS5zcGxpdChcIlwiKSksZT0wO2U8ZC5sZW5ndGg7ZSsrKXt2YXIgZj1kW2VdO3ZvaWQgMD09PWFnW2ZdJiYoYWdbZl09ZSl9fX07ZnVuY3Rpb24gZWcoYSl7dmFyIGI9ZmcoYSk7aWYoIShiJiZiLnN1YiYmYi5pc3MmJmIuYXVkJiZiLmV4cCkpdGhyb3cgRXJyb3IoXCJJbnZhbGlkIEpXVFwiKTt0aGlzLmc9YTt0aGlzLmM9Yi5leHA7dGhpcy5oPWIuc3ViO3RhKCk7dGhpcy5hPWIucHJvdmlkZXJfaWR8fGIuZmlyZWJhc2UmJmIuZmlyZWJhc2Uuc2lnbl9pbl9wcm92aWRlcnx8bnVsbDt0aGlzLmY9Yi5maXJlYmFzZSYmYi5maXJlYmFzZS50ZW5hbnR8fG51bGw7dGhpcy5iPSEhYi5pc19hbm9ueW1vdXN8fFwiYW5vbnltb3VzXCI9PXRoaXMuYX1lZy5wcm90b3R5cGUuUz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmZ9O2VnLnByb3RvdHlwZS5pPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYn07ZWcucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ307ZnVuY3Rpb24gZ2coYSl7dHJ5e3JldHVybiBuZXcgZWcoYSl9Y2F0Y2goYil7cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24gZmcoYSl7aWYoIWEpcmV0dXJuIG51bGw7YT1hLnNwbGl0KFwiLlwiKTtpZigzIT1hLmxlbmd0aClyZXR1cm4gbnVsbDthPWFbMV07Zm9yKHZhciBiPSg0LWEubGVuZ3RoJTQpJTQsYz0wO2M8YjtjKyspYSs9XCIuXCI7dHJ5e3JldHVybiBKU09OLnBhcnNlKGJnKGEpKX1jYXRjaChkKXt9cmV0dXJuIG51bGx9O3ZhciBoZz1cIm9hdXRoX2NvbnN1bWVyX2tleSBvYXV0aF9ub25jZSBvYXV0aF9zaWduYXR1cmUgb2F1dGhfc2lnbmF0dXJlX21ldGhvZCBvYXV0aF90aW1lc3RhbXAgb2F1dGhfdG9rZW4gb2F1dGhfdmVyc2lvblwiLnNwbGl0KFwiIFwiKSxpZz1bXCJjbGllbnRfaWRcIixcInJlc3BvbnNlX3R5cGVcIixcInNjb3BlXCIsXCJyZWRpcmVjdF91cmlcIixcInN0YXRlXCJdLGpnPXtrZDp7SGE6XCJsb2NhbGVcIix0YTo3MDAsc2E6NjAwLGVhOlwiZmFjZWJvb2suY29tXCIsVmE6aWd9LG1kOntIYTpudWxsLHRhOjUwMCxzYTo3NTAsZWE6XCJnaXRodWIuY29tXCIsVmE6aWd9LG5kOntIYTpcImhsXCIsdGE6NTE1LHNhOjY4MCxlYTpcImdvb2dsZS5jb21cIixWYTppZ30sdGQ6e0hhOlwibGFuZ1wiLHRhOjQ4NSxzYTo3MDUsZWE6XCJ0d2l0dGVyLmNvbVwiLFZhOmhnfSxnZDp7SGE6XCJsb2NhbGVcIix0YTo2NDAsc2E6NjAwLGVhOlwiYXBwbGUuY29tXCIsVmE6W119fTtcbmZ1bmN0aW9uIGtnKGEpe2Zvcih2YXIgYiBpbiBqZylpZihqZ1tiXS5lYT09YSlyZXR1cm4gamdbYl07cmV0dXJuIG51bGx9O2Z1bmN0aW9uIGxnKGEpe3ZhciBiPXt9O2JbXCJmYWNlYm9vay5jb21cIl09bWc7YltcImdvb2dsZS5jb21cIl09bmc7YltcImdpdGh1Yi5jb21cIl09b2c7YltcInR3aXR0ZXIuY29tXCJdPXBnO3ZhciBjPWEmJmFbcWddO3RyeXtpZihjKXJldHVybiBiW2NdP25ldyBiW2NdKGEpOm5ldyByZyhhKTtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIGFbc2ddKXJldHVybiBuZXcgdGcoYSl9Y2F0Y2goZCl7fXJldHVybiBudWxsfXZhciBzZz1cImlkVG9rZW5cIixxZz1cInByb3ZpZGVySWRcIjtcbmZ1bmN0aW9uIHRnKGEpe3ZhciBiPWFbcWddO2lmKCFiJiZhW3NnXSl7dmFyIGM9Z2coYVtzZ10pO2MmJmMuYSYmKGI9Yy5hKX1pZighYil0aHJvdyBFcnJvcihcIkludmFsaWQgYWRkaXRpb25hbCB1c2VyIGluZm8hXCIpO2lmKFwiYW5vbnltb3VzXCI9PWJ8fFwiY3VzdG9tXCI9PWIpYj1udWxsO2M9ITE7XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBhLmlzTmV3VXNlcj9jPSEhYS5pc05ld1VzZXI6XCJpZGVudGl0eXRvb2xraXQjU2lnbnVwTmV3VXNlclJlc3BvbnNlXCI9PT1hLmtpbmQmJihjPSEwKTtLKHRoaXMsXCJwcm92aWRlcklkXCIsYik7Syh0aGlzLFwiaXNOZXdVc2VyXCIsYyl9ZnVuY3Rpb24gcmcoYSl7dGcuY2FsbCh0aGlzLGEpO2E9VGUoYS5yYXdVc2VySW5mb3x8XCJ7fVwiKTtLKHRoaXMsXCJwcm9maWxlXCIsa2YoYXx8e30pKX10KHJnLHRnKTtcbmZ1bmN0aW9uIG1nKGEpe3JnLmNhbGwodGhpcyxhKTtpZihcImZhY2Vib29rLmNvbVwiIT10aGlzLnByb3ZpZGVySWQpdGhyb3cgRXJyb3IoXCJJbnZhbGlkIHByb3ZpZGVyIElEIVwiKTt9dChtZyxyZyk7ZnVuY3Rpb24gb2coYSl7cmcuY2FsbCh0aGlzLGEpO2lmKFwiZ2l0aHViLmNvbVwiIT10aGlzLnByb3ZpZGVySWQpdGhyb3cgRXJyb3IoXCJJbnZhbGlkIHByb3ZpZGVyIElEIVwiKTtLKHRoaXMsXCJ1c2VybmFtZVwiLHRoaXMucHJvZmlsZSYmdGhpcy5wcm9maWxlLmxvZ2lufHxudWxsKX10KG9nLHJnKTtmdW5jdGlvbiBuZyhhKXtyZy5jYWxsKHRoaXMsYSk7aWYoXCJnb29nbGUuY29tXCIhPXRoaXMucHJvdmlkZXJJZCl0aHJvdyBFcnJvcihcIkludmFsaWQgcHJvdmlkZXIgSUQhXCIpO310KG5nLHJnKTtcbmZ1bmN0aW9uIHBnKGEpe3JnLmNhbGwodGhpcyxhKTtpZihcInR3aXR0ZXIuY29tXCIhPXRoaXMucHJvdmlkZXJJZCl0aHJvdyBFcnJvcihcIkludmFsaWQgcHJvdmlkZXIgSUQhXCIpO0sodGhpcyxcInVzZXJuYW1lXCIsYS5zY3JlZW5OYW1lfHxudWxsKX10KHBnLHJnKTtmdW5jdGlvbiB1ZyhhKXt2YXIgYj1aZChhKSxjPVlkKGIsXCJsaW5rXCIpLGQ9WWQoWmQoYyksXCJsaW5rXCIpO2I9WWQoYixcImRlZXBfbGlua19pZFwiKTtyZXR1cm4gWWQoWmQoYiksXCJsaW5rXCIpfHxifHxkfHxjfHxhfTtmdW5jdGlvbiB2ZyhhLGIpe2lmKCFhJiYhYil0aHJvdyBuZXcgdShcImludGVybmFsLWVycm9yXCIsXCJJbnRlcm5hbCBhc3NlcnQ6IG5vIHJhdyBzZXNzaW9uIHN0cmluZyBhdmFpbGFibGVcIik7aWYoYSYmYil0aHJvdyBuZXcgdShcImludGVybmFsLWVycm9yXCIsXCJJbnRlcm5hbCBhc3NlcnQ6IHVuYWJsZSB0byBkZXRlcm1pbmUgdGhlIHNlc3Npb24gdHlwZVwiKTt0aGlzLmE9YXx8bnVsbDt0aGlzLmI9Ynx8bnVsbDt0aGlzLnR5cGU9dGhpcy5hP3dnOnhnfXZhciB3Zz1cImVucm9sbFwiLHhnPVwic2lnbmluXCI7dmcucHJvdG90eXBlLkZhPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYT9FKHRoaXMuYSk6RSh0aGlzLmIpfTt2Zy5wcm90b3R5cGUudj1mdW5jdGlvbigpe3JldHVybiB0aGlzLnR5cGU9PXdnP3ttdWx0aUZhY3RvclNlc3Npb246e2lkVG9rZW46dGhpcy5hfX06e211bHRpRmFjdG9yU2Vzc2lvbjp7cGVuZGluZ0NyZWRlbnRpYWw6dGhpcy5ifX19O2Z1bmN0aW9uIHlnKCl7fXlnLnByb3RvdHlwZS5pYT1mdW5jdGlvbigpe307eWcucHJvdG90eXBlLmI9ZnVuY3Rpb24oKXt9O3lnLnByb3RvdHlwZS5jPWZ1bmN0aW9uKCl7fTt5Zy5wcm90b3R5cGUudj1mdW5jdGlvbigpe307ZnVuY3Rpb24gemcoYSxiKXtyZXR1cm4gYS50aGVuKGZ1bmN0aW9uKGMpe2lmKGNbQWddKXt2YXIgZD1nZyhjW0FnXSk7aWYoIWR8fGIhPWQuaCl0aHJvdyBuZXcgdShcInVzZXItbWlzbWF0Y2hcIik7cmV0dXJuIGN9dGhyb3cgbmV3IHUoXCJ1c2VyLW1pc21hdGNoXCIpO30pLm8oZnVuY3Rpb24oYyl7dGhyb3cgYyYmYy5jb2RlJiZjLmNvZGU9PXVhK1widXNlci1ub3QtZm91bmRcIj9uZXcgdShcInVzZXItbWlzbWF0Y2hcIik6Yzt9KX1cbmZ1bmN0aW9uIEJnKGEsYil7aWYoYil0aGlzLmE9YjtlbHNlIHRocm93IG5ldyB1KFwiaW50ZXJuYWwtZXJyb3JcIixcImZhaWxlZCB0byBjb25zdHJ1Y3QgYSBjcmVkZW50aWFsXCIpO0sodGhpcyxcInByb3ZpZGVySWRcIixhKTtLKHRoaXMsXCJzaWduSW5NZXRob2RcIixhKX1CZy5wcm90b3R5cGUuaWE9ZnVuY3Rpb24oYSl7cmV0dXJuIENnKGEsRGcodGhpcykpfTtCZy5wcm90b3R5cGUuYj1mdW5jdGlvbihhLGIpe3ZhciBjPURnKHRoaXMpO2MuaWRUb2tlbj1iO3JldHVybiBFZyhhLGMpfTtCZy5wcm90b3R5cGUuYz1mdW5jdGlvbihhLGIpe3JldHVybiB6ZyhGZyhhLERnKHRoaXMpKSxiKX07ZnVuY3Rpb24gRGcoYSl7cmV0dXJue3BlbmRpbmdUb2tlbjphLmEscmVxdWVzdFVyaTpcImh0dHA6Ly9sb2NhbGhvc3RcIn19QmcucHJvdG90eXBlLnY9ZnVuY3Rpb24oKXtyZXR1cm57cHJvdmlkZXJJZDp0aGlzLnByb3ZpZGVySWQsc2lnbkluTWV0aG9kOnRoaXMuc2lnbkluTWV0aG9kLHBlbmRpbmdUb2tlbjp0aGlzLmF9fTtcbmZ1bmN0aW9uIEdnKGEpe2lmKGEmJmEucHJvdmlkZXJJZCYmYS5zaWduSW5NZXRob2QmJjA9PWEucHJvdmlkZXJJZC5pbmRleE9mKFwic2FtbC5cIikmJmEucGVuZGluZ1Rva2VuKXRyeXtyZXR1cm4gbmV3IEJnKGEucHJvdmlkZXJJZCxhLnBlbmRpbmdUb2tlbil9Y2F0Y2goYil7fXJldHVybiBudWxsfVxuZnVuY3Rpb24gSGcoYSxiLGMpe3RoaXMuYT1udWxsO2lmKGIuaWRUb2tlbnx8Yi5hY2Nlc3NUb2tlbiliLmlkVG9rZW4mJksodGhpcyxcImlkVG9rZW5cIixiLmlkVG9rZW4pLGIuYWNjZXNzVG9rZW4mJksodGhpcyxcImFjY2Vzc1Rva2VuXCIsYi5hY2Nlc3NUb2tlbiksYi5ub25jZSYmIWIucGVuZGluZ1Rva2VuJiZLKHRoaXMsXCJub25jZVwiLGIubm9uY2UpLGIucGVuZGluZ1Rva2VuJiYodGhpcy5hPWIucGVuZGluZ1Rva2VuKTtlbHNlIGlmKGIub2F1dGhUb2tlbiYmYi5vYXV0aFRva2VuU2VjcmV0KUsodGhpcyxcImFjY2Vzc1Rva2VuXCIsYi5vYXV0aFRva2VuKSxLKHRoaXMsXCJzZWNyZXRcIixiLm9hdXRoVG9rZW5TZWNyZXQpO2Vsc2UgdGhyb3cgbmV3IHUoXCJpbnRlcm5hbC1lcnJvclwiLFwiZmFpbGVkIHRvIGNvbnN0cnVjdCBhIGNyZWRlbnRpYWxcIik7Syh0aGlzLFwicHJvdmlkZXJJZFwiLGEpO0sodGhpcyxcInNpZ25Jbk1ldGhvZFwiLGMpfVxuSGcucHJvdG90eXBlLmlhPWZ1bmN0aW9uKGEpe3JldHVybiBDZyhhLElnKHRoaXMpKX07SGcucHJvdG90eXBlLmI9ZnVuY3Rpb24oYSxiKXt2YXIgYz1JZyh0aGlzKTtjLmlkVG9rZW49YjtyZXR1cm4gRWcoYSxjKX07SGcucHJvdG90eXBlLmM9ZnVuY3Rpb24oYSxiKXt2YXIgYz1JZyh0aGlzKTtyZXR1cm4gemcoRmcoYSxjKSxiKX07XG5mdW5jdGlvbiBJZyhhKXt2YXIgYj17fTthLmlkVG9rZW4mJihiLmlkX3Rva2VuPWEuaWRUb2tlbik7YS5hY2Nlc3NUb2tlbiYmKGIuYWNjZXNzX3Rva2VuPWEuYWNjZXNzVG9rZW4pO2Euc2VjcmV0JiYoYi5vYXV0aF90b2tlbl9zZWNyZXQ9YS5zZWNyZXQpO2IucHJvdmlkZXJJZD1hLnByb3ZpZGVySWQ7YS5ub25jZSYmIWEuYSYmKGIubm9uY2U9YS5ub25jZSk7Yj17cG9zdEJvZHk6Y2UoYikudG9TdHJpbmcoKSxyZXF1ZXN0VXJpOlwiaHR0cDovL2xvY2FsaG9zdFwifTthLmEmJihkZWxldGUgYi5wb3N0Qm9keSxiLnBlbmRpbmdUb2tlbj1hLmEpO3JldHVybiBifVxuSGcucHJvdG90eXBlLnY9ZnVuY3Rpb24oKXt2YXIgYT17cHJvdmlkZXJJZDp0aGlzLnByb3ZpZGVySWQsc2lnbkluTWV0aG9kOnRoaXMuc2lnbkluTWV0aG9kfTt0aGlzLmlkVG9rZW4mJihhLm9hdXRoSWRUb2tlbj10aGlzLmlkVG9rZW4pO3RoaXMuYWNjZXNzVG9rZW4mJihhLm9hdXRoQWNjZXNzVG9rZW49dGhpcy5hY2Nlc3NUb2tlbik7dGhpcy5zZWNyZXQmJihhLm9hdXRoVG9rZW5TZWNyZXQ9dGhpcy5zZWNyZXQpO3RoaXMubm9uY2UmJihhLm5vbmNlPXRoaXMubm9uY2UpO3RoaXMuYSYmKGEucGVuZGluZ1Rva2VuPXRoaXMuYSk7cmV0dXJuIGF9O1xuZnVuY3Rpb24gSmcoYSl7aWYoYSYmYS5wcm92aWRlcklkJiZhLnNpZ25Jbk1ldGhvZCl7dmFyIGI9e2lkVG9rZW46YS5vYXV0aElkVG9rZW4sYWNjZXNzVG9rZW46YS5vYXV0aFRva2VuU2VjcmV0P251bGw6YS5vYXV0aEFjY2Vzc1Rva2VuLG9hdXRoVG9rZW5TZWNyZXQ6YS5vYXV0aFRva2VuU2VjcmV0LG9hdXRoVG9rZW46YS5vYXV0aFRva2VuU2VjcmV0JiZhLm9hdXRoQWNjZXNzVG9rZW4sbm9uY2U6YS5ub25jZSxwZW5kaW5nVG9rZW46YS5wZW5kaW5nVG9rZW59O3RyeXtyZXR1cm4gbmV3IEhnKGEucHJvdmlkZXJJZCxiLGEuc2lnbkluTWV0aG9kKX1jYXRjaChjKXt9fXJldHVybiBudWxsfWZ1bmN0aW9uIEtnKGEsYil7dGhpcy5PYz1ifHxbXTtMKHRoaXMse3Byb3ZpZGVySWQ6YSxpc09BdXRoUHJvdmlkZXI6ITB9KTt0aGlzLkZiPXt9O3RoaXMubGI9KGtnKGEpfHx7fSkuSGF8fG51bGw7dGhpcy5rYj1udWxsfVxuS2cucHJvdG90eXBlLklhPWZ1bmN0aW9uKGEpe3RoaXMuRmI9a2IoYSk7cmV0dXJuIHRoaXN9O2Z1bmN0aW9uIExnKGEpe2lmKFwic3RyaW5nXCIhPT10eXBlb2YgYXx8MCE9YS5pbmRleE9mKFwic2FtbC5cIikpdGhyb3cgbmV3IHUoXCJhcmd1bWVudC1lcnJvclwiLCdTQU1MIHByb3ZpZGVyIElEcyBtdXN0IGJlIHByZWZpeGVkIHdpdGggXCJzYW1sLlwiJyk7S2cuY2FsbCh0aGlzLGEsW10pfXQoTGcsS2cpO2Z1bmN0aW9uIE0oYSl7S2cuY2FsbCh0aGlzLGEsaWcpO3RoaXMuYT1bXX10KE0sS2cpO00ucHJvdG90eXBlLkFhPWZ1bmN0aW9uKGEpe1NhKHRoaXMuYSxhKXx8dGhpcy5hLnB1c2goYSk7cmV0dXJuIHRoaXN9O00ucHJvdG90eXBlLk5iPWZ1bmN0aW9uKCl7cmV0dXJuIFdhKHRoaXMuYSl9O1xuTS5wcm90b3R5cGUuY3JlZGVudGlhbD1mdW5jdGlvbihhLGIpe3ZhciBjO3EoYSk/Yz17aWRUb2tlbjphLmlkVG9rZW58fG51bGwsYWNjZXNzVG9rZW46YS5hY2Nlc3NUb2tlbnx8bnVsbCxub25jZTphLnJhd05vbmNlfHxudWxsfTpjPXtpZFRva2VuOmF8fG51bGwsYWNjZXNzVG9rZW46Ynx8bnVsbH07aWYoIWMuaWRUb2tlbiYmIWMuYWNjZXNzVG9rZW4pdGhyb3cgbmV3IHUoXCJhcmd1bWVudC1lcnJvclwiLFwiY3JlZGVudGlhbCBmYWlsZWQ6IG11c3QgcHJvdmlkZSB0aGUgSUQgdG9rZW4gYW5kL29yIHRoZSBhY2Nlc3MgdG9rZW4uXCIpO3JldHVybiBuZXcgSGcodGhpcy5wcm92aWRlcklkLGMsdGhpcy5wcm92aWRlcklkKX07ZnVuY3Rpb24gTWcoKXtNLmNhbGwodGhpcyxcImZhY2Vib29rLmNvbVwiKX10KE1nLE0pO0soTWcsXCJQUk9WSURFUl9JRFwiLFwiZmFjZWJvb2suY29tXCIpO0soTWcsXCJGQUNFQk9PS19TSUdOX0lOX01FVEhPRFwiLFwiZmFjZWJvb2suY29tXCIpO1xuZnVuY3Rpb24gTmcoYSl7aWYoIWEpdGhyb3cgbmV3IHUoXCJhcmd1bWVudC1lcnJvclwiLFwiY3JlZGVudGlhbCBmYWlsZWQ6IGV4cGVjdGVkIDEgYXJndW1lbnQgKHRoZSBPQXV0aCBhY2Nlc3MgdG9rZW4pLlwiKTt2YXIgYj1hO3EoYSkmJihiPWEuYWNjZXNzVG9rZW4pO3JldHVybihuZXcgTWcpLmNyZWRlbnRpYWwoe2FjY2Vzc1Rva2VuOmJ9KX1mdW5jdGlvbiBPZygpe00uY2FsbCh0aGlzLFwiZ2l0aHViLmNvbVwiKX10KE9nLE0pO0soT2csXCJQUk9WSURFUl9JRFwiLFwiZ2l0aHViLmNvbVwiKTtLKE9nLFwiR0lUSFVCX1NJR05fSU5fTUVUSE9EXCIsXCJnaXRodWIuY29tXCIpO1xuZnVuY3Rpb24gUGcoYSl7aWYoIWEpdGhyb3cgbmV3IHUoXCJhcmd1bWVudC1lcnJvclwiLFwiY3JlZGVudGlhbCBmYWlsZWQ6IGV4cGVjdGVkIDEgYXJndW1lbnQgKHRoZSBPQXV0aCBhY2Nlc3MgdG9rZW4pLlwiKTt2YXIgYj1hO3EoYSkmJihiPWEuYWNjZXNzVG9rZW4pO3JldHVybihuZXcgT2cpLmNyZWRlbnRpYWwoe2FjY2Vzc1Rva2VuOmJ9KX1mdW5jdGlvbiBRZygpe00uY2FsbCh0aGlzLFwiZ29vZ2xlLmNvbVwiKTt0aGlzLkFhKFwicHJvZmlsZVwiKX10KFFnLE0pO0soUWcsXCJQUk9WSURFUl9JRFwiLFwiZ29vZ2xlLmNvbVwiKTtLKFFnLFwiR09PR0xFX1NJR05fSU5fTUVUSE9EXCIsXCJnb29nbGUuY29tXCIpO2Z1bmN0aW9uIFJnKGEsYil7dmFyIGM9YTtxKGEpJiYoYz1hLmlkVG9rZW4sYj1hLmFjY2Vzc1Rva2VuKTtyZXR1cm4obmV3IFFnKS5jcmVkZW50aWFsKHtpZFRva2VuOmMsYWNjZXNzVG9rZW46Yn0pfWZ1bmN0aW9uIFNnKCl7S2cuY2FsbCh0aGlzLFwidHdpdHRlci5jb21cIixoZyl9dChTZyxLZyk7XG5LKFNnLFwiUFJPVklERVJfSURcIixcInR3aXR0ZXIuY29tXCIpO0soU2csXCJUV0lUVEVSX1NJR05fSU5fTUVUSE9EXCIsXCJ0d2l0dGVyLmNvbVwiKTtmdW5jdGlvbiBUZyhhLGIpe3ZhciBjPWE7cShjKXx8KGM9e29hdXRoVG9rZW46YSxvYXV0aFRva2VuU2VjcmV0OmJ9KTtpZighYy5vYXV0aFRva2VufHwhYy5vYXV0aFRva2VuU2VjcmV0KXRocm93IG5ldyB1KFwiYXJndW1lbnQtZXJyb3JcIixcImNyZWRlbnRpYWwgZmFpbGVkOiBleHBlY3RlZCAyIGFyZ3VtZW50cyAodGhlIE9BdXRoIGFjY2VzcyB0b2tlbiBhbmQgc2VjcmV0KS5cIik7cmV0dXJuIG5ldyBIZyhcInR3aXR0ZXIuY29tXCIsYyxcInR3aXR0ZXIuY29tXCIpfVxuZnVuY3Rpb24gVWcoYSxiLGMpe3RoaXMuYT1hO3RoaXMuZj1iO0sodGhpcyxcInByb3ZpZGVySWRcIixcInBhc3N3b3JkXCIpO0sodGhpcyxcInNpZ25Jbk1ldGhvZFwiLGM9PT1WZy5FTUFJTF9MSU5LX1NJR05fSU5fTUVUSE9EP1ZnLkVNQUlMX0xJTktfU0lHTl9JTl9NRVRIT0Q6VmcuRU1BSUxfUEFTU1dPUkRfU0lHTl9JTl9NRVRIT0QpfVVnLnByb3RvdHlwZS5pYT1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5zaWduSW5NZXRob2Q9PVZnLkVNQUlMX0xJTktfU0lHTl9JTl9NRVRIT0Q/TihhLFdnLHtlbWFpbDp0aGlzLmEsb29iQ29kZTp0aGlzLmZ9KTpOKGEsWGcse2VtYWlsOnRoaXMuYSxwYXNzd29yZDp0aGlzLmZ9KX07XG5VZy5wcm90b3R5cGUuYj1mdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLnNpZ25Jbk1ldGhvZD09VmcuRU1BSUxfTElOS19TSUdOX0lOX01FVEhPRD9OKGEsWWcse2lkVG9rZW46YixlbWFpbDp0aGlzLmEsb29iQ29kZTp0aGlzLmZ9KTpOKGEsWmcse2lkVG9rZW46YixlbWFpbDp0aGlzLmEscGFzc3dvcmQ6dGhpcy5mfSl9O1VnLnByb3RvdHlwZS5jPWZ1bmN0aW9uKGEsYil7cmV0dXJuIHpnKHRoaXMuaWEoYSksYil9O1VnLnByb3RvdHlwZS52PWZ1bmN0aW9uKCl7cmV0dXJue2VtYWlsOnRoaXMuYSxwYXNzd29yZDp0aGlzLmYsc2lnbkluTWV0aG9kOnRoaXMuc2lnbkluTWV0aG9kfX07ZnVuY3Rpb24gJGcoYSl7cmV0dXJuIGEmJmEuZW1haWwmJmEucGFzc3dvcmQ/bmV3IFVnKGEuZW1haWwsYS5wYXNzd29yZCxhLnNpZ25Jbk1ldGhvZCk6bnVsbH1mdW5jdGlvbiBWZygpe0wodGhpcyx7cHJvdmlkZXJJZDpcInBhc3N3b3JkXCIsaXNPQXV0aFByb3ZpZGVyOiExfSl9XG5mdW5jdGlvbiBhaChhLGIpe2I9YmgoYik7aWYoIWIpdGhyb3cgbmV3IHUoXCJhcmd1bWVudC1lcnJvclwiLFwiSW52YWxpZCBlbWFpbCBsaW5rIVwiKTtyZXR1cm4gbmV3IFVnKGEsYi5jb2RlLFZnLkVNQUlMX0xJTktfU0lHTl9JTl9NRVRIT0QpfWZ1bmN0aW9uIGJoKGEpe2E9dWcoYSk7cmV0dXJuKGE9T2YoYSkpJiZhLm9wZXJhdGlvbj09PXhmP2E6bnVsbH1MKFZnLHtQUk9WSURFUl9JRDpcInBhc3N3b3JkXCJ9KTtMKFZnLHtFTUFJTF9MSU5LX1NJR05fSU5fTUVUSE9EOlwiZW1haWxMaW5rXCJ9KTtMKFZnLHtFTUFJTF9QQVNTV09SRF9TSUdOX0lOX01FVEhPRDpcInBhc3N3b3JkXCJ9KTtmdW5jdGlvbiBjaChhKXtpZighKGEuYmImJmEuYWJ8fGEuSmEmJmEuZGEpKXRocm93IG5ldyB1KFwiaW50ZXJuYWwtZXJyb3JcIik7dGhpcy5hPWE7Syh0aGlzLFwicHJvdmlkZXJJZFwiLFwicGhvbmVcIik7dGhpcy5lYT1cInBob25lXCI7Syh0aGlzLFwic2lnbkluTWV0aG9kXCIsXCJwaG9uZVwiKX1cbmNoLnByb3RvdHlwZS5pYT1mdW5jdGlvbihhKXtyZXR1cm4gYS5jYihkaCh0aGlzKSl9O2NoLnByb3RvdHlwZS5iPWZ1bmN0aW9uKGEsYil7dmFyIGM9ZGgodGhpcyk7Yy5pZFRva2VuPWI7cmV0dXJuIE4oYSxlaCxjKX07Y2gucHJvdG90eXBlLmM9ZnVuY3Rpb24oYSxiKXt2YXIgYz1kaCh0aGlzKTtjLm9wZXJhdGlvbj1cIlJFQVVUSFwiO2E9TihhLGZoLGMpO3JldHVybiB6ZyhhLGIpfTtjaC5wcm90b3R5cGUudj1mdW5jdGlvbigpe3ZhciBhPXtwcm92aWRlcklkOlwicGhvbmVcIn07dGhpcy5hLmJiJiYoYS52ZXJpZmljYXRpb25JZD10aGlzLmEuYmIpO3RoaXMuYS5hYiYmKGEudmVyaWZpY2F0aW9uQ29kZT10aGlzLmEuYWIpO3RoaXMuYS5KYSYmKGEudGVtcG9yYXJ5UHJvb2Y9dGhpcy5hLkphKTt0aGlzLmEuZGEmJihhLnBob25lTnVtYmVyPXRoaXMuYS5kYSk7cmV0dXJuIGF9O1xuZnVuY3Rpb24gZ2goYSl7aWYoYSYmXCJwaG9uZVwiPT09YS5wcm92aWRlcklkJiYoYS52ZXJpZmljYXRpb25JZCYmYS52ZXJpZmljYXRpb25Db2RlfHxhLnRlbXBvcmFyeVByb29mJiZhLnBob25lTnVtYmVyKSl7dmFyIGI9e307eChbXCJ2ZXJpZmljYXRpb25JZFwiLFwidmVyaWZpY2F0aW9uQ29kZVwiLFwidGVtcG9yYXJ5UHJvb2ZcIixcInBob25lTnVtYmVyXCJdLGZ1bmN0aW9uKGMpe2FbY10mJihiW2NdPWFbY10pfSk7cmV0dXJuIG5ldyBjaChiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBkaChhKXtyZXR1cm4gYS5hLkphJiZhLmEuZGE/e3RlbXBvcmFyeVByb29mOmEuYS5KYSxwaG9uZU51bWJlcjphLmEuZGF9OntzZXNzaW9uSW5mbzphLmEuYmIsY29kZTphLmEuYWJ9fVxuZnVuY3Rpb24gaGgoYSl7dHJ5e3RoaXMuYT1hfHxmaXJlYmFzZS5hdXRoKCl9Y2F0Y2goYil7dGhyb3cgbmV3IHUoXCJhcmd1bWVudC1lcnJvclwiLFwiRWl0aGVyIGFuIGluc3RhbmNlIG9mIGZpcmViYXNlLmF1dGguQXV0aCBtdXN0IGJlIHBhc3NlZCBhcyBhbiBhcmd1bWVudCB0byB0aGUgZmlyZWJhc2UuYXV0aC5QaG9uZUF1dGhQcm92aWRlciBjb25zdHJ1Y3Rvciwgb3IgdGhlIGRlZmF1bHQgZmlyZWJhc2UgQXBwIGluc3RhbmNlIG11c3QgYmUgaW5pdGlhbGl6ZWQgdmlhIGZpcmViYXNlLmluaXRpYWxpemVBcHAoKS5cIik7fUwodGhpcyx7cHJvdmlkZXJJZDpcInBob25lXCIsaXNPQXV0aFByb3ZpZGVyOiExfSl9XG5oaC5wcm90b3R5cGUuY2I9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLmEuYjtyZXR1cm4gRShiLnZlcmlmeSgpKS50aGVuKGZ1bmN0aW9uKGQpe2lmKFwic3RyaW5nXCIhPT10eXBlb2YgZCl0aHJvdyBuZXcgdShcImFyZ3VtZW50LWVycm9yXCIsXCJBbiBpbXBsZW1lbnRhdGlvbiBvZiBmaXJlYmFzZS5hdXRoLkFwcGxpY2F0aW9uVmVyaWZpZXIucHJvdG90eXBlLnZlcmlmeSgpIG11c3QgcmV0dXJuIGEgZmlyZWJhc2UuUHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggYSBzdHJpbmcuXCIpO3N3aXRjaChiLnR5cGUpe2Nhc2UgXCJyZWNhcHRjaGFcIjp2YXIgZT1xKGEpP2Euc2Vzc2lvbjpudWxsLGY9cShhKT9hLnBob25lTnVtYmVyOmEsZztlJiZlLnR5cGU9PXdnP2c9ZS5GYSgpLnRoZW4oZnVuY3Rpb24oaCl7cmV0dXJuIGloKGMse2lkVG9rZW46aCxwaG9uZUVucm9sbG1lbnRJbmZvOntwaG9uZU51bWJlcjpmLHJlY2FwdGNoYVRva2VuOmR9fSl9KTplJiZlLnR5cGU9PXhnP2c9ZS5GYSgpLnRoZW4oZnVuY3Rpb24oaCl7cmV0dXJuIGpoKGMsXG57bWZhUGVuZGluZ0NyZWRlbnRpYWw6aCxtZmFFbnJvbGxtZW50SWQ6YS5tdWx0aUZhY3RvckhpbnQmJmEubXVsdGlGYWN0b3JIaW50LnVpZHx8YS5tdWx0aUZhY3RvclVpZCxwaG9uZVNpZ25JbkluZm86e3JlY2FwdGNoYVRva2VuOmR9fSl9KTpnPWtoKGMse3Bob25lTnVtYmVyOmYscmVjYXB0Y2hhVG9rZW46ZH0pO3JldHVybiBnLnRoZW4oZnVuY3Rpb24oaCl7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIucmVzZXQmJmIucmVzZXQoKTtyZXR1cm4gaH0sZnVuY3Rpb24oaCl7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIucmVzZXQmJmIucmVzZXQoKTt0aHJvdyBoO30pO2RlZmF1bHQ6dGhyb3cgbmV3IHUoXCJhcmd1bWVudC1lcnJvclwiLCdPbmx5IGZpcmViYXNlLmF1dGguQXBwbGljYXRpb25WZXJpZmllcnMgd2l0aCB0eXBlPVwicmVjYXB0Y2hhXCIgYXJlIGN1cnJlbnRseSBzdXBwb3J0ZWQuJyk7fX0pfTtcbmZ1bmN0aW9uIGxoKGEsYil7aWYoIWEpdGhyb3cgbmV3IHUoXCJtaXNzaW5nLXZlcmlmaWNhdGlvbi1pZFwiKTtpZighYil0aHJvdyBuZXcgdShcIm1pc3NpbmctdmVyaWZpY2F0aW9uLWNvZGVcIik7cmV0dXJuIG5ldyBjaCh7YmI6YSxhYjpifSl9TChoaCx7UFJPVklERVJfSUQ6XCJwaG9uZVwifSk7TChoaCx7UEhPTkVfU0lHTl9JTl9NRVRIT0Q6XCJwaG9uZVwifSk7XG5mdW5jdGlvbiBtaChhKXtpZihhLnRlbXBvcmFyeVByb29mJiZhLnBob25lTnVtYmVyKXJldHVybiBuZXcgY2goe0phOmEudGVtcG9yYXJ5UHJvb2YsZGE6YS5waG9uZU51bWJlcn0pO3ZhciBiPWEmJmEucHJvdmlkZXJJZDtpZighYnx8XCJwYXNzd29yZFwiPT09YilyZXR1cm4gbnVsbDt2YXIgYz1hJiZhLm9hdXRoQWNjZXNzVG9rZW4sZD1hJiZhLm9hdXRoVG9rZW5TZWNyZXQsZT1hJiZhLm5vbmNlLGY9YSYmYS5vYXV0aElkVG9rZW4sZz1hJiZhLnBlbmRpbmdUb2tlbjt0cnl7c3dpdGNoKGIpe2Nhc2UgXCJnb29nbGUuY29tXCI6cmV0dXJuIFJnKGYsYyk7Y2FzZSBcImZhY2Vib29rLmNvbVwiOnJldHVybiBOZyhjKTtjYXNlIFwiZ2l0aHViLmNvbVwiOnJldHVybiBQZyhjKTtjYXNlIFwidHdpdHRlci5jb21cIjpyZXR1cm4gVGcoYyxkKTtkZWZhdWx0OnJldHVybiBjfHxkfHxmfHxnP2c/MD09Yi5pbmRleE9mKFwic2FtbC5cIik/bmV3IEJnKGIsZyk6bmV3IEhnKGIse3BlbmRpbmdUb2tlbjpnLGlkVG9rZW46YS5vYXV0aElkVG9rZW4sXG5hY2Nlc3NUb2tlbjphLm9hdXRoQWNjZXNzVG9rZW59LGIpOihuZXcgTShiKSkuY3JlZGVudGlhbCh7aWRUb2tlbjpmLGFjY2Vzc1Rva2VuOmMscmF3Tm9uY2U6ZX0pOm51bGx9fWNhdGNoKGgpe3JldHVybiBudWxsfX1mdW5jdGlvbiBuaChhKXtpZighYS5pc09BdXRoUHJvdmlkZXIpdGhyb3cgbmV3IHUoXCJpbnZhbGlkLW9hdXRoLXByb3ZpZGVyXCIpO307ZnVuY3Rpb24gb2goYSxiLGMsZCxlLGYsZyl7dGhpcy5jPWE7dGhpcy5iPWJ8fG51bGw7dGhpcy5nPWN8fG51bGw7dGhpcy5mPWR8fG51bGw7dGhpcy5pPWZ8fG51bGw7dGhpcy5oPWd8fG51bGw7dGhpcy5hPWV8fG51bGw7aWYodGhpcy5nfHx0aGlzLmEpe2lmKHRoaXMuZyYmdGhpcy5hKXRocm93IG5ldyB1KFwiaW52YWxpZC1hdXRoLWV2ZW50XCIpO2lmKHRoaXMuZyYmIXRoaXMuZil0aHJvdyBuZXcgdShcImludmFsaWQtYXV0aC1ldmVudFwiKTt9ZWxzZSB0aHJvdyBuZXcgdShcImludmFsaWQtYXV0aC1ldmVudFwiKTt9b2gucHJvdG90eXBlLmdldFVpZD1mdW5jdGlvbigpe3ZhciBhPVtdO2EucHVzaCh0aGlzLmMpO3RoaXMuYiYmYS5wdXNoKHRoaXMuYik7dGhpcy5mJiZhLnB1c2godGhpcy5mKTt0aGlzLmgmJmEucHVzaCh0aGlzLmgpO3JldHVybiBhLmpvaW4oXCItXCIpfTtvaC5wcm90b3R5cGUuUz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmh9O1xub2gucHJvdG90eXBlLnY9ZnVuY3Rpb24oKXtyZXR1cm57dHlwZTp0aGlzLmMsZXZlbnRJZDp0aGlzLmIsdXJsUmVzcG9uc2U6dGhpcy5nLHNlc3Npb25JZDp0aGlzLmYscG9zdEJvZHk6dGhpcy5pLHRlbmFudElkOnRoaXMuaCxlcnJvcjp0aGlzLmEmJnRoaXMuYS52KCl9fTtmdW5jdGlvbiBwaChhKXthPWF8fHt9O3JldHVybiBhLnR5cGU/bmV3IG9oKGEudHlwZSxhLmV2ZW50SWQsYS51cmxSZXNwb25zZSxhLnNlc3Npb25JZCxhLmVycm9yJiZ3YShhLmVycm9yKSxhLnBvc3RCb2R5LGEudGVuYW50SWQpOm51bGx9Oy8qXG5cbiBDb3B5cmlnaHQgMjAxOCBHb29nbGUgSW5jLlxuXG4gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG4gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuZnVuY3Rpb24gcWgoKXt0aGlzLmI9bnVsbDt0aGlzLmE9W119dmFyIHJoPW51bGw7ZnVuY3Rpb24gc2goYSl7dmFyIGI9cmg7Yi5hLnB1c2goYSk7Yi5ifHwoYi5iPWZ1bmN0aW9uKGMpe2Zvcih2YXIgZD0wO2Q8Yi5hLmxlbmd0aDtkKyspYi5hW2RdKGMpfSxhPUooXCJ1bml2ZXJzYWxMaW5rcy5zdWJzY3JpYmVcIixsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSYmYShudWxsLGIuYikpfTtmdW5jdGlvbiB0aChhKXt2YXIgYj1cInVuYXV0aG9yaXplZC1kb21haW5cIixjPXZvaWQgMCxkPVpkKGEpO2E9ZC5iO2Q9ZC5mO1wiY2hyb21lLWV4dGVuc2lvblwiPT1kP2M9TWIoXCJUaGlzIGNocm9tZSBleHRlbnNpb24gSUQgKGNocm9tZS1leHRlbnNpb246Ly8lcykgaXMgbm90IGF1dGhvcml6ZWQgdG8gcnVuIHRoaXMgb3BlcmF0aW9uLiBBZGQgaXQgdG8gdGhlIE9BdXRoIHJlZGlyZWN0IGRvbWFpbnMgbGlzdCBpbiB0aGUgRmlyZWJhc2UgY29uc29sZSAtPiBBdXRoIHNlY3Rpb24gLT4gU2lnbiBpbiBtZXRob2QgdGFiLlwiLGEpOlwiaHR0cFwiPT1kfHxcImh0dHBzXCI9PWQ/Yz1NYihcIlRoaXMgZG9tYWluICglcykgaXMgbm90IGF1dGhvcml6ZWQgdG8gcnVuIHRoaXMgb3BlcmF0aW9uLiBBZGQgaXQgdG8gdGhlIE9BdXRoIHJlZGlyZWN0IGRvbWFpbnMgbGlzdCBpbiB0aGUgRmlyZWJhc2UgY29uc29sZSAtPiBBdXRoIHNlY3Rpb24gLT4gU2lnbiBpbiBtZXRob2QgdGFiLlwiLGEpOmI9XCJvcGVyYXRpb24tbm90LXN1cHBvcnRlZC1pbi10aGlzLWVudmlyb25tZW50XCI7XG51LmNhbGwodGhpcyxiLGMpfXQodGgsdSk7ZnVuY3Rpb24gdWgoYSxiLGMpe3UuY2FsbCh0aGlzLGEsYyk7YT1ifHx7fTthLkdiJiZLKHRoaXMsXCJlbWFpbFwiLGEuR2IpO2EuZGEmJksodGhpcyxcInBob25lTnVtYmVyXCIsYS5kYSk7YS5jcmVkZW50aWFsJiZLKHRoaXMsXCJjcmVkZW50aWFsXCIsYS5jcmVkZW50aWFsKTthLldiJiZLKHRoaXMsXCJ0ZW5hbnRJZFwiLGEuV2IpfXQodWgsdSk7dWgucHJvdG90eXBlLnY9ZnVuY3Rpb24oKXt2YXIgYT17Y29kZTp0aGlzLmNvZGUsbWVzc2FnZTp0aGlzLm1lc3NhZ2V9O3RoaXMuZW1haWwmJihhLmVtYWlsPXRoaXMuZW1haWwpO3RoaXMucGhvbmVOdW1iZXImJihhLnBob25lTnVtYmVyPXRoaXMucGhvbmVOdW1iZXIpO3RoaXMudGVuYW50SWQmJihhLnRlbmFudElkPXRoaXMudGVuYW50SWQpO3ZhciBiPXRoaXMuY3JlZGVudGlhbCYmdGhpcy5jcmVkZW50aWFsLnYoKTtiJiZCKGEsYik7cmV0dXJuIGF9O3VoLnByb3RvdHlwZS50b0pTT049ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy52KCl9O1xuZnVuY3Rpb24gdmgoYSl7aWYoYS5jb2RlKXt2YXIgYj1hLmNvZGV8fFwiXCI7MD09Yi5pbmRleE9mKHVhKSYmKGI9Yi5zdWJzdHJpbmcodWEubGVuZ3RoKSk7dmFyIGM9e2NyZWRlbnRpYWw6bWgoYSksV2I6YS50ZW5hbnRJZH07aWYoYS5lbWFpbCljLkdiPWEuZW1haWw7ZWxzZSBpZihhLnBob25lTnVtYmVyKWMuZGE9YS5waG9uZU51bWJlcjtlbHNlIGlmKCFjLmNyZWRlbnRpYWwpcmV0dXJuIG5ldyB1KGIsYS5tZXNzYWdlfHx2b2lkIDApO3JldHVybiBuZXcgdWgoYixjLGEubWVzc2FnZSl9cmV0dXJuIG51bGx9O2Z1bmN0aW9uIHdoKCl7fXdoLnByb3RvdHlwZS5jPW51bGw7ZnVuY3Rpb24geGgoYSl7cmV0dXJuIGEuY3x8KGEuYz1hLmIoKSl9O3ZhciB5aDtmdW5jdGlvbiB6aCgpe310KHpoLHdoKTt6aC5wcm90b3R5cGUuYT1mdW5jdGlvbigpe3ZhciBhPUFoKHRoaXMpO3JldHVybiBhP25ldyBBY3RpdmVYT2JqZWN0KGEpOm5ldyBYTUxIdHRwUmVxdWVzdH07emgucHJvdG90eXBlLmI9ZnVuY3Rpb24oKXt2YXIgYT17fTtBaCh0aGlzKSYmKGFbMF09ITAsYVsxXT0hMCk7cmV0dXJuIGF9O1xuZnVuY3Rpb24gQWgoYSl7aWYoIWEuZiYmXCJ1bmRlZmluZWRcIj09dHlwZW9mIFhNTEh0dHBSZXF1ZXN0JiZcInVuZGVmaW5lZFwiIT10eXBlb2YgQWN0aXZlWE9iamVjdCl7Zm9yKHZhciBiPVtcIk1TWE1MMi5YTUxIVFRQLjYuMFwiLFwiTVNYTUwyLlhNTEhUVFAuMy4wXCIsXCJNU1hNTDIuWE1MSFRUUFwiLFwiTWljcm9zb2Z0LlhNTEhUVFBcIl0sYz0wO2M8Yi5sZW5ndGg7YysrKXt2YXIgZD1iW2NdO3RyeXtyZXR1cm4gbmV3IEFjdGl2ZVhPYmplY3QoZCksYS5mPWR9Y2F0Y2goZSl7fX10aHJvdyBFcnJvcihcIkNvdWxkIG5vdCBjcmVhdGUgQWN0aXZlWE9iamVjdC4gQWN0aXZlWCBtaWdodCBiZSBkaXNhYmxlZCwgb3IgTVNYTUwgbWlnaHQgbm90IGJlIGluc3RhbGxlZFwiKTt9cmV0dXJuIGEuZn15aD1uZXcgemg7ZnVuY3Rpb24gQmgoKXt9dChCaCx3aCk7QmgucHJvdG90eXBlLmE9ZnVuY3Rpb24oKXt2YXIgYT1uZXcgWE1MSHR0cFJlcXVlc3Q7aWYoXCJ3aXRoQ3JlZGVudGlhbHNcImluIGEpcmV0dXJuIGE7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIFhEb21haW5SZXF1ZXN0KXJldHVybiBuZXcgQ2g7dGhyb3cgRXJyb3IoXCJVbnN1cHBvcnRlZCBicm93c2VyXCIpO307QmgucHJvdG90eXBlLmI9ZnVuY3Rpb24oKXtyZXR1cm57fX07XG5mdW5jdGlvbiBDaCgpe3RoaXMuYT1uZXcgWERvbWFpblJlcXVlc3Q7dGhpcy5yZWFkeVN0YXRlPTA7dGhpcy5vbnJlYWR5c3RhdGVjaGFuZ2U9bnVsbDt0aGlzLnJlc3BvbnNlVHlwZT10aGlzLnJlc3BvbnNlVGV4dD10aGlzLnJlc3BvbnNlPVwiXCI7dGhpcy5zdGF0dXM9LTE7dGhpcy5zdGF0dXNUZXh0PVwiXCI7dGhpcy5hLm9ubG9hZD1yKHRoaXMub2MsdGhpcyk7dGhpcy5hLm9uZXJyb3I9cih0aGlzLlBiLHRoaXMpO3RoaXMuYS5vbnByb2dyZXNzPXIodGhpcy5wYyx0aGlzKTt0aGlzLmEub250aW1lb3V0PXIodGhpcy50Yyx0aGlzKX1rPUNoLnByb3RvdHlwZTtrLm9wZW49ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGwhPWMmJiFjKXRocm93IEVycm9yKFwiT25seSBhc3luYyByZXF1ZXN0cyBhcmUgc3VwcG9ydGVkLlwiKTt0aGlzLmEub3BlbihhLGIpfTtcbmsuc2VuZD1mdW5jdGlvbihhKXtpZihhKWlmKFwic3RyaW5nXCI9PXR5cGVvZiBhKXRoaXMuYS5zZW5kKGEpO2Vsc2UgdGhyb3cgRXJyb3IoXCJPbmx5IHN0cmluZyBkYXRhIGlzIHN1cHBvcnRlZFwiKTtlbHNlIHRoaXMuYS5zZW5kKCl9O2suYWJvcnQ9ZnVuY3Rpb24oKXt0aGlzLmEuYWJvcnQoKX07ay5zZXRSZXF1ZXN0SGVhZGVyPWZ1bmN0aW9uKCl7fTtrLmdldFJlc3BvbnNlSGVhZGVyPWZ1bmN0aW9uKGEpe3JldHVyblwiY29udGVudC10eXBlXCI9PWEudG9Mb3dlckNhc2UoKT90aGlzLmEuY29udGVudFR5cGU6XCJcIn07ay5vYz1mdW5jdGlvbigpe3RoaXMuc3RhdHVzPTIwMDt0aGlzLnJlc3BvbnNlPXRoaXMucmVzcG9uc2VUZXh0PXRoaXMuYS5yZXNwb25zZVRleHQ7RGgodGhpcyw0KX07ay5QYj1mdW5jdGlvbigpe3RoaXMuc3RhdHVzPTUwMDt0aGlzLnJlc3BvbnNlPXRoaXMucmVzcG9uc2VUZXh0PVwiXCI7RGgodGhpcyw0KX07ay50Yz1mdW5jdGlvbigpe3RoaXMuUGIoKX07XG5rLnBjPWZ1bmN0aW9uKCl7dGhpcy5zdGF0dXM9MjAwO0RoKHRoaXMsMSl9O2Z1bmN0aW9uIERoKGEsYil7YS5yZWFkeVN0YXRlPWI7aWYoYS5vbnJlYWR5c3RhdGVjaGFuZ2UpYS5vbnJlYWR5c3RhdGVjaGFuZ2UoKX1rLmdldEFsbFJlc3BvbnNlSGVhZGVycz1mdW5jdGlvbigpe3JldHVyblwiY29udGVudC10eXBlOiBcIit0aGlzLmEuY29udGVudFR5cGV9O2Z1bmN0aW9uIEVoKGEsYixjKXt0aGlzLnJlc2V0KGEsYixjLHZvaWQgMCx2b2lkIDApfUVoLnByb3RvdHlwZS5hPW51bGw7dmFyIEZoPTA7RWgucHJvdG90eXBlLnJlc2V0PWZ1bmN0aW9uKGEsYixjLGQsZSl7XCJudW1iZXJcIj09dHlwZW9mIGV8fEZoKys7ZHx8dGEoKTtkZWxldGUgdGhpcy5hfTtmdW5jdGlvbiBHaChhKXt0aGlzLmY9YTt0aGlzLmI9dGhpcy5jPXRoaXMuYT1udWxsfWZ1bmN0aW9uIEhoKGEsYil7dGhpcy5uYW1lPWE7dGhpcy52YWx1ZT1ifUhoLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLm5hbWV9O3ZhciBJaD1uZXcgSGgoXCJTRVZFUkVcIiwxRTMpLEpoPW5ldyBIaChcIldBUk5JTkdcIiw5MDApLEtoPW5ldyBIaChcIkNPTkZJR1wiLDcwMCksTGg9bmV3IEhoKFwiRklORVwiLDUwMCk7ZnVuY3Rpb24gTWgoYSl7aWYoYS5jKXJldHVybiBhLmM7aWYoYS5hKXJldHVybiBNaChhLmEpO0RhKFwiUm9vdCBsb2dnZXIgaGFzIG5vIGxldmVsIHNldC5cIik7cmV0dXJuIG51bGx9R2gucHJvdG90eXBlLmxvZz1mdW5jdGlvbihhLGIsYyl7aWYoYS52YWx1ZT49TWgodGhpcykudmFsdWUpZm9yKG4oYikmJihiPWIoKSksYT1uZXcgRWgoYSxTdHJpbmcoYiksdGhpcy5mKSxjJiYoYS5hPWMpLGM9dGhpcztjOyljPWMuYX07dmFyIE5oPXt9LE9oPW51bGw7XG5mdW5jdGlvbiBQaChhKXtPaHx8KE9oPW5ldyBHaChcIlwiKSxOaFtcIlwiXT1PaCxPaC5jPUtoKTt2YXIgYjtpZighKGI9TmhbYV0pKXtiPW5ldyBHaChhKTt2YXIgYz1hLmxhc3RJbmRleE9mKFwiLlwiKSxkPWEuc3Vic3RyKGMrMSk7Yz1QaChhLnN1YnN0cigwLGMpKTtjLmJ8fChjLmI9e30pO2MuYltkXT1iO2IuYT1jO05oW2FdPWJ9cmV0dXJuIGJ9O2Z1bmN0aW9uIFFoKGEsYil7YSYmYS5sb2coTGgsYix2b2lkIDApfTtmdW5jdGlvbiBSaChhKXt0aGlzLmY9YX10KFJoLHdoKTtSaC5wcm90b3R5cGUuYT1mdW5jdGlvbigpe3JldHVybiBuZXcgU2godGhpcy5mKX07UmgucHJvdG90eXBlLmI9ZnVuY3Rpb24oYSl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGF9fSh7fSk7ZnVuY3Rpb24gU2goYSl7Ry5jYWxsKHRoaXMpO3RoaXMucz1hO3RoaXMucmVhZHlTdGF0ZT1UaDt0aGlzLnN0YXR1cz0wO3RoaXMucmVzcG9uc2VUeXBlPXRoaXMucmVzcG9uc2VUZXh0PXRoaXMucmVzcG9uc2U9dGhpcy5zdGF0dXNUZXh0PVwiXCI7dGhpcy5vbnJlYWR5c3RhdGVjaGFuZ2U9bnVsbDt0aGlzLmk9bmV3IEhlYWRlcnM7dGhpcy5iPW51bGw7dGhpcy5tPVwiR0VUXCI7dGhpcy5nPVwiXCI7dGhpcy5hPSExO3RoaXMuaD1QaChcImdvb2cubmV0LkZldGNoWG1sSHR0cFwiKTt0aGlzLmw9dGhpcy5jPXRoaXMuZj1udWxsfXQoU2gsRyk7dmFyIFRoPTA7az1TaC5wcm90b3R5cGU7XG5rLm9wZW49ZnVuY3Rpb24oYSxiKXtpZih0aGlzLnJlYWR5U3RhdGUhPVRoKXRocm93IHRoaXMuYWJvcnQoKSxFcnJvcihcIkVycm9yIHJlb3BlbmluZyBhIGNvbm5lY3Rpb25cIik7dGhpcy5tPWE7dGhpcy5nPWI7dGhpcy5yZWFkeVN0YXRlPTE7VWgodGhpcyl9O2suc2VuZD1mdW5jdGlvbihhKXtpZigxIT10aGlzLnJlYWR5U3RhdGUpdGhyb3cgdGhpcy5hYm9ydCgpLEVycm9yKFwibmVlZCB0byBjYWxsIG9wZW4oKSBmaXJzdC4gXCIpO3RoaXMuYT0hMDt2YXIgYj17aGVhZGVyczp0aGlzLmksbWV0aG9kOnRoaXMubSxjcmVkZW50aWFsczp2b2lkIDAsY2FjaGU6dm9pZCAwfTthJiYoYi5ib2R5PWEpO3RoaXMucy5mZXRjaChuZXcgUmVxdWVzdCh0aGlzLmcsYikpLnRoZW4odGhpcy5zYy5iaW5kKHRoaXMpLHRoaXMuU2EuYmluZCh0aGlzKSl9O1xuay5hYm9ydD1mdW5jdGlvbigpe3RoaXMucmVzcG9uc2U9dGhpcy5yZXNwb25zZVRleHQ9XCJcIjt0aGlzLmk9bmV3IEhlYWRlcnM7dGhpcy5zdGF0dXM9MDt0aGlzLmMmJnRoaXMuYy5jYW5jZWwoXCJSZXF1ZXN0IHdhcyBhYm9ydGVkLlwiKTsxPD10aGlzLnJlYWR5U3RhdGUmJnRoaXMuYSYmNCE9dGhpcy5yZWFkeVN0YXRlJiYodGhpcy5hPSExLFZoKHRoaXMsITEpKTt0aGlzLnJlYWR5U3RhdGU9VGh9O1xuay5zYz1mdW5jdGlvbihhKXt0aGlzLmEmJih0aGlzLmY9YSx0aGlzLmJ8fCh0aGlzLmI9YS5oZWFkZXJzLHRoaXMucmVhZHlTdGF0ZT0yLFVoKHRoaXMpKSx0aGlzLmEmJih0aGlzLnJlYWR5U3RhdGU9MyxVaCh0aGlzKSx0aGlzLmEmJihcImFycmF5YnVmZmVyXCI9PT10aGlzLnJlc3BvbnNlVHlwZT9hLmFycmF5QnVmZmVyKCkudGhlbih0aGlzLnFjLmJpbmQodGhpcyksdGhpcy5TYS5iaW5kKHRoaXMpKTpcInVuZGVmaW5lZFwiIT09dHlwZW9mIGwuUmVhZGFibGVTdHJlYW0mJlwiYm9keVwiaW4gYT8odGhpcy5yZXNwb25zZT10aGlzLnJlc3BvbnNlVGV4dD1cIlwiLHRoaXMuYz1hLmJvZHkuZ2V0UmVhZGVyKCksdGhpcy5sPW5ldyBUZXh0RGVjb2RlcixXaCh0aGlzKSk6YS50ZXh0KCkudGhlbih0aGlzLnJjLmJpbmQodGhpcyksdGhpcy5TYS5iaW5kKHRoaXMpKSkpKX07ZnVuY3Rpb24gV2goYSl7YS5jLnJlYWQoKS50aGVuKGEubmMuYmluZChhKSkuY2F0Y2goYS5TYS5iaW5kKGEpKX1cbmsubmM9ZnVuY3Rpb24oYSl7aWYodGhpcy5hKXt2YXIgYj10aGlzLmwuZGVjb2RlKGEudmFsdWU/YS52YWx1ZTpuZXcgVWludDhBcnJheSgwKSx7c3RyZWFtOiFhLmRvbmV9KTtiJiYodGhpcy5yZXNwb25zZT10aGlzLnJlc3BvbnNlVGV4dCs9Yik7YS5kb25lP1ZoKHRoaXMsITApOlVoKHRoaXMpOzM9PXRoaXMucmVhZHlTdGF0ZSYmV2godGhpcyl9fTtrLnJjPWZ1bmN0aW9uKGEpe3RoaXMuYSYmKHRoaXMucmVzcG9uc2U9dGhpcy5yZXNwb25zZVRleHQ9YSxWaCh0aGlzLCEwKSl9O2sucWM9ZnVuY3Rpb24oYSl7dGhpcy5hJiYodGhpcy5yZXNwb25zZT1hLFZoKHRoaXMsITApKX07ay5TYT1mdW5jdGlvbihhKXt2YXIgYj10aGlzLmg7YiYmYi5sb2coSmgsXCJGYWlsZWQgdG8gZmV0Y2ggdXJsIFwiK3RoaXMuZyxhIGluc3RhbmNlb2YgRXJyb3I/YTpFcnJvcihhKSk7dGhpcy5hJiZWaCh0aGlzLCEwKX07XG5mdW5jdGlvbiBWaChhLGIpe2ImJmEuZiYmKGEuc3RhdHVzPWEuZi5zdGF0dXMsYS5zdGF0dXNUZXh0PWEuZi5zdGF0dXNUZXh0KTthLnJlYWR5U3RhdGU9NDthLmY9bnVsbDthLmM9bnVsbDthLmw9bnVsbDtVaChhKX1rLnNldFJlcXVlc3RIZWFkZXI9ZnVuY3Rpb24oYSxiKXt0aGlzLmkuYXBwZW5kKGEsYil9O2suZ2V0UmVzcG9uc2VIZWFkZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuYj90aGlzLmIuZ2V0KGEudG9Mb3dlckNhc2UoKSl8fFwiXCI6KChhPXRoaXMuaCkmJmEubG9nKEpoLFwiQXR0ZW1wdGluZyB0byBnZXQgcmVzcG9uc2UgaGVhZGVyIGJ1dCBubyBoZWFkZXJzIGhhdmUgYmVlbiByZWNlaXZlZCBmb3IgdXJsOiBcIit0aGlzLmcsdm9pZCAwKSxcIlwiKX07XG5rLmdldEFsbFJlc3BvbnNlSGVhZGVycz1mdW5jdGlvbigpe2lmKCF0aGlzLmIpe3ZhciBhPXRoaXMuaDthJiZhLmxvZyhKaCxcIkF0dGVtcHRpbmcgdG8gZ2V0IGFsbCByZXNwb25zZSBoZWFkZXJzIGJ1dCBubyBoZWFkZXJzIGhhdmUgYmVlbiByZWNlaXZlZCBmb3IgdXJsOiBcIit0aGlzLmcsdm9pZCAwKTtyZXR1cm5cIlwifWE9W107Zm9yKHZhciBiPXRoaXMuYi5lbnRyaWVzKCksYz1iLm5leHQoKTshYy5kb25lOyljPWMudmFsdWUsYS5wdXNoKGNbMF0rXCI6IFwiK2NbMV0pLGM9Yi5uZXh0KCk7cmV0dXJuIGEuam9pbihcIlxcclxcblwiKX07ZnVuY3Rpb24gVWgoYSl7YS5vbnJlYWR5c3RhdGVjaGFuZ2UmJmEub25yZWFkeXN0YXRlY2hhbmdlLmNhbGwoYSl9O2Z1bmN0aW9uIFhoKGEpe0cuY2FsbCh0aGlzKTt0aGlzLmhlYWRlcnM9bmV3IEZkO3RoaXMuRD1hfHxudWxsO3RoaXMuYz0hMTt0aGlzLkI9dGhpcy5hPW51bGw7dGhpcy5oPXRoaXMuUD10aGlzLmw9XCJcIjt0aGlzLmY9dGhpcy5PPXRoaXMuaT10aGlzLk49ITE7dGhpcy5nPTA7dGhpcy5zPW51bGw7dGhpcy5tPVloO3RoaXMudz10aGlzLlI9ITF9dChYaCxHKTt2YXIgWWg9XCJcIjtYaC5wcm90b3R5cGUuYj1QaChcImdvb2cubmV0LlhocklvXCIpO3ZhciBaaD0vXmh0dHBzPyQvaSwkaD1bXCJQT1NUXCIsXCJQVVRcIl07XG5mdW5jdGlvbiBhaShhLGIsYyxkLGUpe2lmKGEuYSl0aHJvdyBFcnJvcihcIltnb29nLm5ldC5YaHJJb10gT2JqZWN0IGlzIGFjdGl2ZSB3aXRoIGFub3RoZXIgcmVxdWVzdD1cIithLmwrXCI7IG5ld1VyaT1cIitiKTtjPWM/Yy50b1VwcGVyQ2FzZSgpOlwiR0VUXCI7YS5sPWI7YS5oPVwiXCI7YS5QPWM7YS5OPSExO2EuYz0hMDthLmE9YS5EP2EuRC5hKCk6eWguYSgpO2EuQj1hLkQ/eGgoYS5EKTp4aCh5aCk7YS5hLm9ucmVhZHlzdGF0ZWNoYW5nZT1yKGEuU2IsYSk7dHJ5e1FoKGEuYixiaShhLFwiT3BlbmluZyBYaHJcIikpLGEuTz0hMCxhLmEub3BlbihjLFN0cmluZyhiKSwhMCksYS5PPSExfWNhdGNoKGcpe1FoKGEuYixiaShhLFwiRXJyb3Igb3BlbmluZyBYaHI6IFwiK2cubWVzc2FnZSkpO2NpKGEsZyk7cmV0dXJufWI9ZHx8XCJcIjt2YXIgZj1uZXcgRmQoYS5oZWFkZXJzKTtlJiZFZChlLGZ1bmN0aW9uKGcsaCl7Zi5zZXQoaCxnKX0pO2U9UWEoZi5YKCkpO2Q9bC5Gb3JtRGF0YSYmYiBpbnN0YW5jZW9mXG5sLkZvcm1EYXRhOyFTYSgkaCxjKXx8ZXx8ZHx8Zi5zZXQoXCJDb250ZW50LVR5cGVcIixcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDtjaGFyc2V0PXV0Zi04XCIpO2YuZm9yRWFjaChmdW5jdGlvbihnLGgpe3RoaXMuYS5zZXRSZXF1ZXN0SGVhZGVyKGgsZyl9LGEpO2EubSYmKGEuYS5yZXNwb25zZVR5cGU9YS5tKTtcIndpdGhDcmVkZW50aWFsc1wiaW4gYS5hJiZhLmEud2l0aENyZWRlbnRpYWxzIT09YS5SJiYoYS5hLndpdGhDcmVkZW50aWFscz1hLlIpO3RyeXtkaShhKSwwPGEuZyYmKGEudz1laShhLmEpLFFoKGEuYixiaShhLFwiV2lsbCBhYm9ydCBhZnRlciBcIithLmcrXCJtcyBpZiBpbmNvbXBsZXRlLCB4aHIyIFwiK2EudykpLGEudz8oYS5hLnRpbWVvdXQ9YS5nLGEuYS5vbnRpbWVvdXQ9cihhLkthLGEpKTphLnM9QWQoYS5LYSxhLmcsYSkpLFFoKGEuYixiaShhLFwiU2VuZGluZyByZXF1ZXN0XCIpKSxhLmk9ITAsYS5hLnNlbmQoYiksYS5pPSExfWNhdGNoKGcpe1FoKGEuYixcbmJpKGEsXCJTZW5kIGVycm9yOiBcIitnLm1lc3NhZ2UpKSxjaShhLGcpfX1mdW5jdGlvbiBlaShhKXtyZXR1cm4gU2ImJmJjKDkpJiZcIm51bWJlclwiPT09dHlwZW9mIGEudGltZW91dCYmdm9pZCAwIT09YS5vbnRpbWVvdXR9ZnVuY3Rpb24gUmEoYSl7cmV0dXJuXCJjb250ZW50LXR5cGVcIj09YS50b0xvd2VyQ2FzZSgpfWs9WGgucHJvdG90eXBlO2suS2E9ZnVuY3Rpb24oKXtcInVuZGVmaW5lZFwiIT10eXBlb2YgaGEmJnRoaXMuYSYmKHRoaXMuaD1cIlRpbWVkIG91dCBhZnRlciBcIit0aGlzLmcrXCJtcywgYWJvcnRpbmdcIixRaCh0aGlzLmIsYmkodGhpcyx0aGlzLmgpKSx0aGlzLmRpc3BhdGNoRXZlbnQoXCJ0aW1lb3V0XCIpLHRoaXMuYWJvcnQoOCkpfTtmdW5jdGlvbiBjaShhLGIpe2EuYz0hMTthLmEmJihhLmY9ITAsYS5hLmFib3J0KCksYS5mPSExKTthLmg9YjtmaShhKTtnaShhKX1cbmZ1bmN0aW9uIGZpKGEpe2EuTnx8KGEuTj0hMCxhLmRpc3BhdGNoRXZlbnQoXCJjb21wbGV0ZVwiKSxhLmRpc3BhdGNoRXZlbnQoXCJlcnJvclwiKSl9ay5hYm9ydD1mdW5jdGlvbigpe3RoaXMuYSYmdGhpcy5jJiYoUWgodGhpcy5iLGJpKHRoaXMsXCJBYm9ydGluZ1wiKSksdGhpcy5jPSExLHRoaXMuZj0hMCx0aGlzLmEuYWJvcnQoKSx0aGlzLmY9ITEsdGhpcy5kaXNwYXRjaEV2ZW50KFwiY29tcGxldGVcIiksdGhpcy5kaXNwYXRjaEV2ZW50KFwiYWJvcnRcIiksZ2kodGhpcykpfTtrLkJhPWZ1bmN0aW9uKCl7dGhpcy5hJiYodGhpcy5jJiYodGhpcy5jPSExLHRoaXMuZj0hMCx0aGlzLmEuYWJvcnQoKSx0aGlzLmY9ITEpLGdpKHRoaXMsITApKTtYaC5aYS5CYS5jYWxsKHRoaXMpfTtrLlNiPWZ1bmN0aW9uKCl7dGhpcy53YXx8KHRoaXMuT3x8dGhpcy5pfHx0aGlzLmY/aGkodGhpcyk6dGhpcy5IYygpKX07ay5IYz1mdW5jdGlvbigpe2hpKHRoaXMpfTtcbmZ1bmN0aW9uIGhpKGEpe2lmKGEuYyYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGhhKWlmKGEuQlsxXSYmND09aWkoYSkmJjI9PWppKGEpKVFoKGEuYixiaShhLFwiTG9jYWwgcmVxdWVzdCBlcnJvciBkZXRlY3RlZCBhbmQgaWdub3JlZFwiKSk7ZWxzZSBpZihhLmkmJjQ9PWlpKGEpKUFkKGEuU2IsMCxhKTtlbHNlIGlmKGEuZGlzcGF0Y2hFdmVudChcInJlYWR5c3RhdGVjaGFuZ2VcIiksND09aWkoYSkpe1FoKGEuYixiaShhLFwiUmVxdWVzdCBjb21wbGV0ZVwiKSk7YS5jPSExO3RyeXt2YXIgYj1qaShhKTthOnN3aXRjaChiKXtjYXNlIDIwMDpjYXNlIDIwMTpjYXNlIDIwMjpjYXNlIDIwNDpjYXNlIDIwNjpjYXNlIDMwNDpjYXNlIDEyMjM6dmFyIGM9ITA7YnJlYWsgYTtkZWZhdWx0OmM9ITF9dmFyIGQ7aWYoIShkPWMpKXt2YXIgZTtpZihlPTA9PT1iKXt2YXIgZj1TdHJpbmcoYS5sKS5tYXRjaChJZClbMV18fG51bGw7aWYoIWYmJmwuc2VsZiYmbC5zZWxmLmxvY2F0aW9uKXt2YXIgZz1sLnNlbGYubG9jYXRpb24ucHJvdG9jb2w7XG5mPWcuc3Vic3RyKDAsZy5sZW5ndGgtMSl9ZT0hWmgudGVzdChmP2YudG9Mb3dlckNhc2UoKTpcIlwiKX1kPWV9aWYoZClhLmRpc3BhdGNoRXZlbnQoXCJjb21wbGV0ZVwiKSxhLmRpc3BhdGNoRXZlbnQoXCJzdWNjZXNzXCIpO2Vsc2V7dHJ5e3ZhciBoPTI8aWkoYSk/YS5hLnN0YXR1c1RleHQ6XCJcIn1jYXRjaChtKXtRaChhLmIsXCJDYW4gbm90IGdldCBzdGF0dXM6IFwiK20ubWVzc2FnZSksaD1cIlwifWEuaD1oK1wiIFtcIitqaShhKStcIl1cIjtmaShhKX19ZmluYWxseXtnaShhKX19fWZ1bmN0aW9uIGdpKGEsYil7aWYoYS5hKXtkaShhKTt2YXIgYz1hLmEsZD1hLkJbMF0/a2E6bnVsbDthLmE9bnVsbDthLkI9bnVsbDtifHxhLmRpc3BhdGNoRXZlbnQoXCJyZWFkeVwiKTt0cnl7Yy5vbnJlYWR5c3RhdGVjaGFuZ2U9ZH1jYXRjaChlKXsoYT1hLmIpJiZhLmxvZyhJaCxcIlByb2JsZW0gZW5jb3VudGVyZWQgcmVzZXR0aW5nIG9ucmVhZHlzdGF0ZWNoYW5nZTogXCIrZS5tZXNzYWdlLHZvaWQgMCl9fX1cbmZ1bmN0aW9uIGRpKGEpe2EuYSYmYS53JiYoYS5hLm9udGltZW91dD1udWxsKTthLnMmJihsLmNsZWFyVGltZW91dChhLnMpLGEucz1udWxsKX1mdW5jdGlvbiBpaShhKXtyZXR1cm4gYS5hP2EuYS5yZWFkeVN0YXRlOjB9ZnVuY3Rpb24gamkoYSl7dHJ5e3JldHVybiAyPGlpKGEpP2EuYS5zdGF0dXM6LTF9Y2F0Y2goYil7cmV0dXJuLTF9fWZ1bmN0aW9uIGtpKGEpe3RyeXtyZXR1cm4gYS5hP2EuYS5yZXNwb25zZVRleHQ6XCJcIn1jYXRjaChiKXtyZXR1cm4gUWgoYS5iLFwiQ2FuIG5vdCBnZXQgcmVzcG9uc2VUZXh0OiBcIitiLm1lc3NhZ2UpLFwiXCJ9fVxuay5nZXRSZXNwb25zZT1mdW5jdGlvbigpe3RyeXtpZighdGhpcy5hKXJldHVybiBudWxsO2lmKFwicmVzcG9uc2VcImluIHRoaXMuYSlyZXR1cm4gdGhpcy5hLnJlc3BvbnNlO3N3aXRjaCh0aGlzLm0pe2Nhc2UgWWg6Y2FzZSBcInRleHRcIjpyZXR1cm4gdGhpcy5hLnJlc3BvbnNlVGV4dDtjYXNlIFwiYXJyYXlidWZmZXJcIjppZihcIm1velJlc3BvbnNlQXJyYXlCdWZmZXJcImluIHRoaXMuYSlyZXR1cm4gdGhpcy5hLm1velJlc3BvbnNlQXJyYXlCdWZmZXJ9dmFyIGE9dGhpcy5iO2EmJmEubG9nKEloLFwiUmVzcG9uc2UgdHlwZSBcIit0aGlzLm0rXCIgaXMgbm90IHN1cHBvcnRlZCBvbiB0aGlzIGJyb3dzZXJcIix2b2lkIDApO3JldHVybiBudWxsfWNhdGNoKGIpe3JldHVybiBRaCh0aGlzLmIsXCJDYW4gbm90IGdldCByZXNwb25zZTogXCIrYi5tZXNzYWdlKSxudWxsfX07ZnVuY3Rpb24gYmkoYSxiKXtyZXR1cm4gYitcIiBbXCIrYS5QK1wiIFwiK2EubCtcIiBcIitqaShhKStcIl1cIn07LypcbiBQb3J0aW9ucyBvZiB0aGlzIGNvZGUgYXJlIGZyb20gTW9jaGlLaXQsIHJlY2VpdmVkIGJ5XG4gVGhlIENsb3N1cmUgQXV0aG9ycyB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuIEFsbCBvdGhlciBjb2RlIGlzIENvcHlyaWdodFxuIDIwMDUtMjAwOSBUaGUgQ2xvc3VyZSBBdXRob3JzLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuKi9cbmZ1bmN0aW9uIGxpKGEpe3ZhciBiPW1pO3RoaXMuZz1bXTt0aGlzLnc9Yjt0aGlzLnM9YXx8bnVsbDt0aGlzLmY9dGhpcy5hPSExO3RoaXMuYz12b2lkIDA7dGhpcy51PXRoaXMuQj10aGlzLmk9ITE7dGhpcy5oPTA7dGhpcy5iPW51bGw7dGhpcy5sPTB9bGkucHJvdG90eXBlLmNhbmNlbD1mdW5jdGlvbihhKXtpZih0aGlzLmEpdGhpcy5jIGluc3RhbmNlb2YgbGkmJnRoaXMuYy5jYW5jZWwoKTtlbHNle2lmKHRoaXMuYil7dmFyIGI9dGhpcy5iO2RlbGV0ZSB0aGlzLmI7YT9iLmNhbmNlbChhKTooYi5sLS0sMD49Yi5sJiZiLmNhbmNlbCgpKX10aGlzLnc/dGhpcy53LmNhbGwodGhpcy5zLHRoaXMpOnRoaXMudT0hMDt0aGlzLmF8fChhPW5ldyBuaSh0aGlzKSxvaSh0aGlzKSxwaSh0aGlzLCExLGEpKX19O2xpLnByb3RvdHlwZS5tPWZ1bmN0aW9uKGEsYil7dGhpcy5pPSExO3BpKHRoaXMsYSxiKX07ZnVuY3Rpb24gcGkoYSxiLGMpe2EuYT0hMDthLmM9YzthLmY9IWI7cWkoYSl9XG5mdW5jdGlvbiBvaShhKXtpZihhLmEpe2lmKCFhLnUpdGhyb3cgbmV3IHJpKGEpO2EudT0hMX19ZnVuY3Rpb24gc2koYSxiKXt0aShhLG51bGwsYix2b2lkIDApfWZ1bmN0aW9uIHRpKGEsYixjLGQpe2EuZy5wdXNoKFtiLGMsZF0pO2EuYSYmcWkoYSl9bGkucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24oYSxiLGMpe3ZhciBkLGUsZj1uZXcgRChmdW5jdGlvbihnLGgpe2Q9ZztlPWh9KTt0aSh0aGlzLGQsZnVuY3Rpb24oZyl7ZyBpbnN0YW5jZW9mIG5pP2YuY2FuY2VsKCk6ZShnKX0pO3JldHVybiBmLnRoZW4oYSxiLGMpfTtsaS5wcm90b3R5cGUuJGdvb2dfVGhlbmFibGU9ITA7ZnVuY3Rpb24gdWkoYSl7cmV0dXJuIFBhKGEuZyxmdW5jdGlvbihiKXtyZXR1cm4gbihiWzFdKX0pfVxuZnVuY3Rpb24gcWkoYSl7aWYoYS5oJiZhLmEmJnVpKGEpKXt2YXIgYj1hLmgsYz12aVtiXTtjJiYobC5jbGVhclRpbWVvdXQoYy5hKSxkZWxldGUgdmlbYl0pO2EuaD0wfWEuYiYmKGEuYi5sLS0sZGVsZXRlIGEuYik7Yj1hLmM7Zm9yKHZhciBkPWM9ITE7YS5nLmxlbmd0aCYmIWEuaTspe3ZhciBlPWEuZy5zaGlmdCgpLGY9ZVswXSxnPWVbMV07ZT1lWzJdO2lmKGY9YS5mP2c6Zil0cnl7dmFyIGg9Zi5jYWxsKGV8fGEucyxiKTt2b2lkIDAhPT1oJiYoYS5mPWEuZiYmKGg9PWJ8fGggaW5zdGFuY2VvZiBFcnJvciksYS5jPWI9aCk7aWYoQmEoYil8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBsLlByb21pc2UmJmIgaW5zdGFuY2VvZiBsLlByb21pc2UpZD0hMCxhLmk9ITB9Y2F0Y2gobSl7Yj1tLGEuZj0hMCx1aShhKXx8KGM9ITApfX1hLmM9YjtkJiYoaD1yKGEubSxhLCEwKSxkPXIoYS5tLGEsITEpLGIgaW5zdGFuY2VvZiBsaT8odGkoYixoLGQpLGIuQj0hMCk6Yi50aGVuKGgsZCkpO2MmJihiPVxubmV3IHdpKGIpLHZpW2IuYV09YixhLmg9Yi5hKX1mdW5jdGlvbiByaSgpe3cuY2FsbCh0aGlzKX10KHJpLHcpO3JpLnByb3RvdHlwZS5tZXNzYWdlPVwiRGVmZXJyZWQgaGFzIGFscmVhZHkgZmlyZWRcIjtyaS5wcm90b3R5cGUubmFtZT1cIkFscmVhZHlDYWxsZWRFcnJvclwiO2Z1bmN0aW9uIG5pKCl7dy5jYWxsKHRoaXMpfXQobmksdyk7bmkucHJvdG90eXBlLm1lc3NhZ2U9XCJEZWZlcnJlZCB3YXMgY2FuY2VsZWRcIjtuaS5wcm90b3R5cGUubmFtZT1cIkNhbmNlbGVkRXJyb3JcIjtmdW5jdGlvbiB3aShhKXt0aGlzLmE9bC5zZXRUaW1lb3V0KHIodGhpcy5jLHRoaXMpLDApO3RoaXMuYj1hfXdpLnByb3RvdHlwZS5jPWZ1bmN0aW9uKCl7ZGVsZXRlIHZpW3RoaXMuYV07dGhyb3cgdGhpcy5iO307dmFyIHZpPXt9O2Z1bmN0aW9uIHhpKGEpe3ZhciBiPXt9LGM9Yi5kb2N1bWVudHx8ZG9jdW1lbnQsZD12YihhKS50b1N0cmluZygpLGU9aWMoZG9jdW1lbnQsXCJTQ1JJUFRcIiksZj17VGI6ZSxLYTp2b2lkIDB9LGc9bmV3IGxpKGYpLGg9bnVsbCxtPW51bGwhPWIudGltZW91dD9iLnRpbWVvdXQ6NUUzOzA8bSYmKGg9d2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24oKXt5aShlLCEwKTt2YXIgcD1uZXcgemkoQWksXCJUaW1lb3V0IHJlYWNoZWQgZm9yIGxvYWRpbmcgc2NyaXB0IFwiK2QpO29pKGcpO3BpKGcsITEscCl9LG0pLGYuS2E9aCk7ZS5vbmxvYWQ9ZS5vbnJlYWR5c3RhdGVjaGFuZ2U9ZnVuY3Rpb24oKXtlLnJlYWR5U3RhdGUmJlwibG9hZGVkXCIhPWUucmVhZHlTdGF0ZSYmXCJjb21wbGV0ZVwiIT1lLnJlYWR5U3RhdGV8fCh5aShlLGIudWR8fCExLGgpLG9pKGcpLHBpKGcsITAsbnVsbCkpfTtlLm9uZXJyb3I9ZnVuY3Rpb24oKXt5aShlLCEwLGgpO3ZhciBwPW5ldyB6aShCaSxcIkVycm9yIHdoaWxlIGxvYWRpbmcgc2NyaXB0IFwiK1xuZCk7b2koZyk7cGkoZywhMSxwKX07Zj1iLmF0dHJpYnV0ZXN8fHt9O0IoZix7dHlwZTpcInRleHQvamF2YXNjcmlwdFwiLGNoYXJzZXQ6XCJVVEYtOFwifSk7ZmMoZSxmKTtMYihlLGEpO0NpKGMpLmFwcGVuZENoaWxkKGUpO3JldHVybiBnfWZ1bmN0aW9uIENpKGEpe3ZhciBiO3JldHVybihiPShhfHxkb2N1bWVudCkuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJIRUFEXCIpKSYmMCE9Yi5sZW5ndGg/YlswXTphLmRvY3VtZW50RWxlbWVudH1mdW5jdGlvbiBtaSgpe2lmKHRoaXMmJnRoaXMuVGIpe3ZhciBhPXRoaXMuVGI7YSYmXCJTQ1JJUFRcIj09YS50YWdOYW1lJiZ5aShhLCEwLHRoaXMuS2EpfX1cbmZ1bmN0aW9uIHlpKGEsYixjKXtudWxsIT1jJiZsLmNsZWFyVGltZW91dChjKTthLm9ubG9hZD1rYTthLm9uZXJyb3I9a2E7YS5vbnJlYWR5c3RhdGVjaGFuZ2U9a2E7YiYmd2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24oKXthJiZhLnBhcmVudE5vZGUmJmEucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChhKX0sMCl9dmFyIEJpPTAsQWk9MTtmdW5jdGlvbiB6aShhLGIpe3ZhciBjPVwiSnNsb2FkZXIgZXJyb3IgKGNvZGUgI1wiK2ErXCIpXCI7YiYmKGMrPVwiOiBcIitiKTt3LmNhbGwodGhpcyxjKTt0aGlzLmNvZGU9YX10KHppLHcpO2Z1bmN0aW9uIERpKGEpe3RoaXMuZj1hfXQoRGksd2gpO0RpLnByb3RvdHlwZS5hPWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyB0aGlzLmZ9O0RpLnByb3RvdHlwZS5iPWZ1bmN0aW9uKCl7cmV0dXJue319O1xuZnVuY3Rpb24gRWkoYSxiLGMpe3RoaXMuYz1hO2E9Ynx8e307dGhpcy51PWEuc2VjdXJlVG9rZW5FbmRwb2ludHx8XCJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZWFwaXMuY29tL3YxL3Rva2VuXCI7dGhpcy5tPWEuc2VjdXJlVG9rZW5UaW1lb3V0fHxGaTt0aGlzLmc9a2IoYS5zZWN1cmVUb2tlbkhlYWRlcnN8fEdpKTt0aGlzLmg9YS5maXJlYmFzZUVuZHBvaW50fHxcImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2lkZW50aXR5dG9vbGtpdC92My9yZWx5aW5ncGFydHkvXCI7dGhpcy5sPWEuaWRlbnRpdHlQbGF0Zm9ybUVuZHBvaW50fHxcImh0dHBzOi8vaWRlbnRpdHl0b29sa2l0Lmdvb2dsZWFwaXMuY29tL3YyL1wiO3RoaXMuaT1hLmZpcmViYXNlVGltZW91dHx8SGk7dGhpcy5hPWtiKGEuZmlyZWJhc2VIZWFkZXJzfHxJaSk7YyYmKHRoaXMuYVtcIlgtQ2xpZW50LVZlcnNpb25cIl09Yyx0aGlzLmdbXCJYLUNsaWVudC1WZXJzaW9uXCJdPWMpO2M9XCJOb2RlXCI9PUhlKCk7Yz1sLlhNTEh0dHBSZXF1ZXN0fHxcbmMmJmZpcmViYXNlLklOVEVSTkFMLm5vZGUmJmZpcmViYXNlLklOVEVSTkFMLm5vZGUuWE1MSHR0cFJlcXVlc3Q7aWYoIWMmJiFHZSgpKXRocm93IG5ldyB1KFwiaW50ZXJuYWwtZXJyb3JcIixcIlRoZSBYTUxIdHRwUmVxdWVzdCBjb21wYXRpYmlsaXR5IGxpYnJhcnkgd2FzIG5vdCBmb3VuZC5cIik7dGhpcy5mPXZvaWQgMDtHZSgpP3RoaXMuZj1uZXcgUmgoc2VsZik6SWUoKT90aGlzLmY9bmV3IERpKGMpOnRoaXMuZj1uZXcgQmg7dGhpcy5iPW51bGx9dmFyIEppLEFnPVwiaWRUb2tlblwiLEZpPW5ldyBXZSgzRTQsNkU0KSxHaT17XCJDb250ZW50LVR5cGVcIjpcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwifSxIaT1uZXcgV2UoM0U0LDZFNCksSWk9e1wiQ29udGVudC1UeXBlXCI6XCJhcHBsaWNhdGlvbi9qc29uXCJ9O2Z1bmN0aW9uIEtpKGEsYil7Yj9hLmFbXCJYLUZpcmViYXNlLUxvY2FsZVwiXT1iOmRlbGV0ZSBhLmFbXCJYLUZpcmViYXNlLUxvY2FsZVwiXX1cbmZ1bmN0aW9uIExpKGEsYil7Yj8oYS5hW1wiWC1DbGllbnQtVmVyc2lvblwiXT1iLGEuZ1tcIlgtQ2xpZW50LVZlcnNpb25cIl09Yik6KGRlbGV0ZSBhLmFbXCJYLUNsaWVudC1WZXJzaW9uXCJdLGRlbGV0ZSBhLmdbXCJYLUNsaWVudC1WZXJzaW9uXCJdKX1FaS5wcm90b3R5cGUuUz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmJ9O2Z1bmN0aW9uIE1pKGEsYixjLGQsZSxmLGcpe3JlKCl8fEdlKCk/YT1yKGEudyxhKTooSml8fChKaT1uZXcgRChmdW5jdGlvbihoLG0pe05pKGgsbSl9KSksYT1yKGEucyxhKSk7YShiLGMsZCxlLGYsZyl9XG5FaS5wcm90b3R5cGUudz1mdW5jdGlvbihhLGIsYyxkLGUsZil7aWYoR2UoKSYmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgbC5mZXRjaHx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBsLkhlYWRlcnN8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgbC5SZXF1ZXN0KSl0aHJvdyBuZXcgdShcIm9wZXJhdGlvbi1ub3Qtc3VwcG9ydGVkLWluLXRoaXMtZW52aXJvbm1lbnRcIixcImZldGNoLCBIZWFkZXJzIGFuZCBSZXF1ZXN0IG5hdGl2ZSBBUElzIG9yIGVxdWl2YWxlbnQgUG9seWZpbGxzIG11c3QgYmUgYXZhaWxhYmxlIHRvIHN1cHBvcnQgSFRUUCByZXF1ZXN0cyBmcm9tIGEgV29ya2VyIGVudmlyb25tZW50LlwiKTt2YXIgZz1uZXcgWGgodGhpcy5mKTtpZihmKXtnLmc9TWF0aC5tYXgoMCxmKTt2YXIgaD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Zy5kaXNwYXRjaEV2ZW50KFwidGltZW91dFwiKX0sZil9bWQoZyxcImNvbXBsZXRlXCIsZnVuY3Rpb24oKXtoJiZjbGVhclRpbWVvdXQoaCk7dmFyIG09bnVsbDt0cnl7bT1cbkpTT04ucGFyc2Uoa2kodGhpcykpfHxudWxsfWNhdGNoKHApe209bnVsbH1iJiZiKG0pfSk7c2QoZyxcInJlYWR5XCIsZnVuY3Rpb24oKXtoJiZjbGVhclRpbWVvdXQoaCk7U2ModGhpcyl9KTtzZChnLFwidGltZW91dFwiLGZ1bmN0aW9uKCl7aCYmY2xlYXJUaW1lb3V0KGgpO1NjKHRoaXMpO2ImJmIobnVsbCl9KTthaShnLGEsYyxkLGUpfTt2YXIgT2k9bmV3IG5iKG9iLFwiaHR0cHM6Ly9hcGlzLmdvb2dsZS5jb20vanMvY2xpZW50LmpzP29ubG9hZD0le29ubG9hZH1cIiksUGk9XCJfX2ZjYlwiK01hdGguZmxvb3IoMUU2Kk1hdGgucmFuZG9tKCkpLnRvU3RyaW5nKCk7XG5mdW5jdGlvbiBOaShhLGIpe2lmKCgod2luZG93LmdhcGl8fHt9KS5jbGllbnR8fHt9KS5yZXF1ZXN0KWEoKTtlbHNle2xbUGldPWZ1bmN0aW9uKCl7KCh3aW5kb3cuZ2FwaXx8e30pLmNsaWVudHx8e30pLnJlcXVlc3Q/YSgpOmIoRXJyb3IoXCJDT1JTX1VOU1VQUE9SVEVEXCIpKX07dmFyIGM9d2IoT2kse29ubG9hZDpQaX0pO3NpKHhpKGMpLGZ1bmN0aW9uKCl7YihFcnJvcihcIkNPUlNfVU5TVVBQT1JURURcIikpfSl9fVxuRWkucHJvdG90eXBlLnM9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj10aGlzO0ppLnRoZW4oZnVuY3Rpb24oKXt3aW5kb3cuZ2FwaS5jbGllbnQuc2V0QXBpS2V5KGYuYyk7dmFyIGc9d2luZG93LmdhcGkuYXV0aC5nZXRUb2tlbigpO3dpbmRvdy5nYXBpLmF1dGguc2V0VG9rZW4obnVsbCk7d2luZG93LmdhcGkuY2xpZW50LnJlcXVlc3Qoe3BhdGg6YSxtZXRob2Q6Yyxib2R5OmQsaGVhZGVyczplLGF1dGhUeXBlOlwibm9uZVwiLGNhbGxiYWNrOmZ1bmN0aW9uKGgpe3dpbmRvdy5nYXBpLmF1dGguc2V0VG9rZW4oZyk7YiYmYihoKX19KX0pLm8oZnVuY3Rpb24oZyl7YiYmYih7ZXJyb3I6e21lc3NhZ2U6ZyYmZy5tZXNzYWdlfHxcIkNPUlNfVU5TVVBQT1JURURcIn19KX0pfTtcbmZ1bmN0aW9uIFFpKGEsYil7cmV0dXJuIG5ldyBEKGZ1bmN0aW9uKGMsZCl7XCJyZWZyZXNoX3Rva2VuXCI9PWIuZ3JhbnRfdHlwZSYmYi5yZWZyZXNoX3Rva2VufHxcImF1dGhvcml6YXRpb25fY29kZVwiPT1iLmdyYW50X3R5cGUmJmIuY29kZT9NaShhLGEudStcIj9rZXk9XCIrZW5jb2RlVVJJQ29tcG9uZW50KGEuYyksZnVuY3Rpb24oZSl7ZT9lLmVycm9yP2QoUmkoZSkpOmUuYWNjZXNzX3Rva2VuJiZlLnJlZnJlc2hfdG9rZW4/YyhlKTpkKG5ldyB1KFwiaW50ZXJuYWwtZXJyb3JcIikpOmQobmV3IHUoXCJuZXR3b3JrLXJlcXVlc3QtZmFpbGVkXCIpKX0sXCJQT1NUXCIsY2UoYikudG9TdHJpbmcoKSxhLmcsYS5tLmdldCgpKTpkKG5ldyB1KFwiaW50ZXJuYWwtZXJyb3JcIikpfSl9XG5mdW5jdGlvbiBTaShhLGIsYyxkLGUsZixnKXt2YXIgaD1aZChiK2MpO0goaCxcImtleVwiLGEuYyk7ZyYmSChoLFwiY2JcIix0YSgpLnRvU3RyaW5nKCkpO3ZhciBtPVwiR0VUXCI9PWQ7aWYobSlmb3IodmFyIHAgaW4gZSllLmhhc093blByb3BlcnR5KHApJiZIKGgscCxlW3BdKTtyZXR1cm4gbmV3IEQoZnVuY3Rpb24odixDKXtNaShhLGgudG9TdHJpbmcoKSxmdW5jdGlvbihBKXtBP0EuZXJyb3I/QyhSaShBLGZ8fHt9KSk6dihBKTpDKG5ldyB1KFwibmV0d29yay1yZXF1ZXN0LWZhaWxlZFwiKSl9LGQsbT92b2lkIDA6aGUoU2UoZSkpLGEuYSxhLmkuZ2V0KCkpfSl9ZnVuY3Rpb24gVGkoYSl7YT1hLmVtYWlsO2lmKFwic3RyaW5nXCIhPT10eXBlb2YgYXx8IUFlLnRlc3QoYSkpdGhyb3cgbmV3IHUoXCJpbnZhbGlkLWVtYWlsXCIpO31mdW5jdGlvbiBVaShhKXtcImVtYWlsXCJpbiBhJiZUaShhKX1cbmZ1bmN0aW9uIFZpKGEsYil7cmV0dXJuIE4oYSxXaSx7aWRlbnRpZmllcjpiLGNvbnRpbnVlVXJpOlBlKCk/b2UoKTpcImh0dHA6Ly9sb2NhbGhvc3RcIn0pLnRoZW4oZnVuY3Rpb24oYyl7cmV0dXJuIGMuc2lnbmluTWV0aG9kc3x8W119KX1mdW5jdGlvbiBYaShhKXtyZXR1cm4gTihhLFlpLHt9KS50aGVuKGZ1bmN0aW9uKGIpe3JldHVybiBiLmF1dGhvcml6ZWREb21haW5zfHxbXX0pfWZ1bmN0aW9uIE8oYSl7aWYoIWFbQWddKXtpZihhLm1mYVBlbmRpbmdDcmVkZW50aWFsKXRocm93IG5ldyB1KFwibXVsdGktZmFjdG9yLWF1dGgtcmVxdWlyZWRcIixudWxsLGtiKGEpKTt0aHJvdyBuZXcgdShcImludGVybmFsLWVycm9yXCIpO319XG5mdW5jdGlvbiBaaShhKXtpZihhLnBob25lTnVtYmVyfHxhLnRlbXBvcmFyeVByb29mKXtpZighYS5waG9uZU51bWJlcnx8IWEudGVtcG9yYXJ5UHJvb2YpdGhyb3cgbmV3IHUoXCJpbnRlcm5hbC1lcnJvclwiKTt9ZWxzZXtpZighYS5zZXNzaW9uSW5mbyl0aHJvdyBuZXcgdShcIm1pc3NpbmctdmVyaWZpY2F0aW9uLWlkXCIpO2lmKCFhLmNvZGUpdGhyb3cgbmV3IHUoXCJtaXNzaW5nLXZlcmlmaWNhdGlvbi1jb2RlXCIpO319RWkucHJvdG90eXBlLnZiPWZ1bmN0aW9uKCl7cmV0dXJuIE4odGhpcywkaSx7fSl9O0VpLnByb3RvdHlwZS54Yj1mdW5jdGlvbihhLGIpe3JldHVybiBOKHRoaXMsYWose2lkVG9rZW46YSxlbWFpbDpifSl9O0VpLnByb3RvdHlwZS55Yj1mdW5jdGlvbihhLGIpe3JldHVybiBOKHRoaXMsWmcse2lkVG9rZW46YSxwYXNzd29yZDpifSl9O3ZhciBiaj17ZGlzcGxheU5hbWU6XCJESVNQTEFZX05BTUVcIixwaG90b1VybDpcIlBIT1RPX1VSTFwifTtrPUVpLnByb3RvdHlwZTtcbmsuemI9ZnVuY3Rpb24oYSxiKXt2YXIgYz17aWRUb2tlbjphfSxkPVtdO2liKGJqLGZ1bmN0aW9uKGUsZil7dmFyIGc9YltmXTtudWxsPT09Zz9kLnB1c2goZSk6ZiBpbiBiJiYoY1tmXT1nKX0pO2QubGVuZ3RoJiYoYy5kZWxldGVBdHRyaWJ1dGU9ZCk7cmV0dXJuIE4odGhpcyxhaixjKX07ay5yYj1mdW5jdGlvbihhLGIpe2E9e3JlcXVlc3RUeXBlOlwiUEFTU1dPUkRfUkVTRVRcIixlbWFpbDphfTtCKGEsYik7cmV0dXJuIE4odGhpcyxjaixhKX07ay5zYj1mdW5jdGlvbihhLGIpe2E9e3JlcXVlc3RUeXBlOlwiRU1BSUxfU0lHTklOXCIsZW1haWw6YX07QihhLGIpO3JldHVybiBOKHRoaXMsZGosYSl9O2sucWI9ZnVuY3Rpb24oYSxiKXthPXtyZXF1ZXN0VHlwZTpcIlZFUklGWV9FTUFJTFwiLGlkVG9rZW46YX07QihhLGIpO3JldHVybiBOKHRoaXMsZWosYSl9O1xuay5BYj1mdW5jdGlvbihhLGIsYyl7YT17cmVxdWVzdFR5cGU6XCJWRVJJRllfQU5EX0NIQU5HRV9FTUFJTFwiLGlkVG9rZW46YSxuZXdFbWFpbDpifTtCKGEsYyk7cmV0dXJuIE4odGhpcyxmaixhKX07ZnVuY3Rpb24ga2goYSxiKXtyZXR1cm4gTihhLGdqLGIpfWsuY2I9ZnVuY3Rpb24oYSl7cmV0dXJuIE4odGhpcyxoaixhKX07ZnVuY3Rpb24gaWgoYSxiKXtyZXR1cm4gTihhLGlqLGIpLnRoZW4oZnVuY3Rpb24oYyl7cmV0dXJuIGMucGhvbmVTZXNzaW9uSW5mby5zZXNzaW9uSW5mb30pfVxuZnVuY3Rpb24gamooYSl7aWYoIWEucGhvbmVWZXJpZmljYXRpb25JbmZvKXRocm93IG5ldyB1KFwiaW50ZXJuYWwtZXJyb3JcIik7aWYoIWEucGhvbmVWZXJpZmljYXRpb25JbmZvLnNlc3Npb25JbmZvKXRocm93IG5ldyB1KFwibWlzc2luZy12ZXJpZmljYXRpb24taWRcIik7aWYoIWEucGhvbmVWZXJpZmljYXRpb25JbmZvLmNvZGUpdGhyb3cgbmV3IHUoXCJtaXNzaW5nLXZlcmlmaWNhdGlvbi1jb2RlXCIpO31mdW5jdGlvbiBqaChhLGIpe3JldHVybiBOKGEsa2osYikudGhlbihmdW5jdGlvbihjKXtyZXR1cm4gYy5waG9uZVJlc3BvbnNlSW5mby5zZXNzaW9uSW5mb30pfWZ1bmN0aW9uIGxqKGEsYixjKXtyZXR1cm4gTihhLG1qLHtpZFRva2VuOmIsZGVsZXRlUHJvdmlkZXI6Y30pfWZ1bmN0aW9uIG5qKGEpe2lmKCFhLnJlcXVlc3RVcml8fCFhLnNlc3Npb25JZCYmIWEucG9zdEJvZHkmJiFhLnBlbmRpbmdUb2tlbil0aHJvdyBuZXcgdShcImludGVybmFsLWVycm9yXCIpO31cbmZ1bmN0aW9uIG9qKGEsYil7Yi5vYXV0aElkVG9rZW4mJmIucHJvdmlkZXJJZCYmMD09Yi5wcm92aWRlcklkLmluZGV4T2YoXCJvaWRjLlwiKSYmIWIucGVuZGluZ1Rva2VuJiYoYS5zZXNzaW9uSWQ/Yi5ub25jZT1hLnNlc3Npb25JZDphLnBvc3RCb2R5JiYoYT1uZXcgUWQoYS5wb3N0Qm9keSksZ2UoYSxcIm5vbmNlXCIpJiYoYi5ub25jZT1hLmdldChcIm5vbmNlXCIpKSkpO3JldHVybiBifVxuZnVuY3Rpb24gcGooYSl7dmFyIGI9bnVsbDthLm5lZWRDb25maXJtYXRpb24/KGEuY29kZT1cImFjY291bnQtZXhpc3RzLXdpdGgtZGlmZmVyZW50LWNyZWRlbnRpYWxcIixiPXZoKGEpKTpcIkZFREVSQVRFRF9VU0VSX0lEX0FMUkVBRFlfTElOS0VEXCI9PWEuZXJyb3JNZXNzYWdlPyhhLmNvZGU9XCJjcmVkZW50aWFsLWFscmVhZHktaW4tdXNlXCIsYj12aChhKSk6XCJFTUFJTF9FWElTVFNcIj09YS5lcnJvck1lc3NhZ2U/KGEuY29kZT1cImVtYWlsLWFscmVhZHktaW4tdXNlXCIsYj12aChhKSk6YS5lcnJvck1lc3NhZ2UmJihiPXFqKGEuZXJyb3JNZXNzYWdlKSk7aWYoYil0aHJvdyBiO08oYSl9ZnVuY3Rpb24gQ2coYSxiKXtiLnJldHVybklkcENyZWRlbnRpYWw9ITA7cmV0dXJuIE4oYSxyaixiKX1mdW5jdGlvbiBFZyhhLGIpe2IucmV0dXJuSWRwQ3JlZGVudGlhbD0hMDtyZXR1cm4gTihhLHNqLGIpfVxuZnVuY3Rpb24gRmcoYSxiKXtiLnJldHVybklkcENyZWRlbnRpYWw9ITA7Yi5hdXRvQ3JlYXRlPSExO3JldHVybiBOKGEsdGosYil9ZnVuY3Rpb24gdWooYSl7aWYoIWEub29iQ29kZSl0aHJvdyBuZXcgdShcImludmFsaWQtYWN0aW9uLWNvZGVcIik7fWsuamI9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gTih0aGlzLHZqLHtvb2JDb2RlOmEsbmV3UGFzc3dvcmQ6Yn0pfTtrLlBhPWZ1bmN0aW9uKGEpe3JldHVybiBOKHRoaXMsd2ose29vYkNvZGU6YX0pfTtrLmZiPWZ1bmN0aW9uKGEpe3JldHVybiBOKHRoaXMseGose29vYkNvZGU6YX0pfTtcbnZhciB4aj17ZW5kcG9pbnQ6XCJzZXRBY2NvdW50SW5mb1wiLEE6dWosWTpcImVtYWlsXCIsQzohMH0sd2o9e2VuZHBvaW50OlwicmVzZXRQYXNzd29yZFwiLEE6dWosRzpmdW5jdGlvbihhKXt2YXIgYj1hLnJlcXVlc3RUeXBlO2lmKCFifHwhYS5lbWFpbCYmXCJFTUFJTF9TSUdOSU5cIiE9YiYmXCJWRVJJRllfQU5EX0NIQU5HRV9FTUFJTFwiIT1iKXRocm93IG5ldyB1KFwiaW50ZXJuYWwtZXJyb3JcIik7fSxDOiEwfSx5aj17ZW5kcG9pbnQ6XCJzaWdudXBOZXdVc2VyXCIsQTpmdW5jdGlvbihhKXtUaShhKTtpZighYS5wYXNzd29yZCl0aHJvdyBuZXcgdShcIndlYWstcGFzc3dvcmRcIik7fSxHOk8sVTohMCxDOiEwfSxXaT17ZW5kcG9pbnQ6XCJjcmVhdGVBdXRoVXJpXCIsQzohMH0semo9e2VuZHBvaW50OlwiZGVsZXRlQWNjb3VudFwiLE06W1wiaWRUb2tlblwiXX0sbWo9e2VuZHBvaW50Olwic2V0QWNjb3VudEluZm9cIixNOltcImlkVG9rZW5cIixcImRlbGV0ZVByb3ZpZGVyXCJdLEE6ZnVuY3Rpb24oYSl7aWYoXCJhcnJheVwiIT1cbmxhKGEuZGVsZXRlUHJvdmlkZXIpKXRocm93IG5ldyB1KFwiaW50ZXJuYWwtZXJyb3JcIik7fX0sV2c9e2VuZHBvaW50OlwiZW1haWxMaW5rU2lnbmluXCIsTTpbXCJlbWFpbFwiLFwib29iQ29kZVwiXSxBOlRpLEc6TyxVOiEwLEM6ITB9LFlnPXtlbmRwb2ludDpcImVtYWlsTGlua1NpZ25pblwiLE06W1wiaWRUb2tlblwiLFwiZW1haWxcIixcIm9vYkNvZGVcIl0sQTpUaSxHOk8sVTohMH0sQWo9e2VuZHBvaW50OlwiYWNjb3VudHMvbWZhRW5yb2xsbWVudDpmaW5hbGl6ZVwiLE06W1wiaWRUb2tlblwiLFwicGhvbmVWZXJpZmljYXRpb25JbmZvXCJdLEE6amosRzpPLEM6ITAsTGE6ITB9LEJqPXtlbmRwb2ludDpcImFjY291bnRzL21mYVNpZ25JbjpmaW5hbGl6ZVwiLE06W1wibWZhUGVuZGluZ0NyZWRlbnRpYWxcIixcInBob25lVmVyaWZpY2F0aW9uSW5mb1wiXSxBOmpqLEc6TyxDOiEwLExhOiEwfSxDaj17ZW5kcG9pbnQ6XCJnZXRBY2NvdW50SW5mb1wifSxkaj17ZW5kcG9pbnQ6XCJnZXRPb2JDb25maXJtYXRpb25Db2RlXCIsTTpbXCJyZXF1ZXN0VHlwZVwiXSxcbkE6ZnVuY3Rpb24oYSl7aWYoXCJFTUFJTF9TSUdOSU5cIiE9YS5yZXF1ZXN0VHlwZSl0aHJvdyBuZXcgdShcImludGVybmFsLWVycm9yXCIpO1RpKGEpfSxZOlwiZW1haWxcIixDOiEwfSxlaj17ZW5kcG9pbnQ6XCJnZXRPb2JDb25maXJtYXRpb25Db2RlXCIsTTpbXCJpZFRva2VuXCIsXCJyZXF1ZXN0VHlwZVwiXSxBOmZ1bmN0aW9uKGEpe2lmKFwiVkVSSUZZX0VNQUlMXCIhPWEucmVxdWVzdFR5cGUpdGhyb3cgbmV3IHUoXCJpbnRlcm5hbC1lcnJvclwiKTt9LFk6XCJlbWFpbFwiLEM6ITB9LGZqPXtlbmRwb2ludDpcImdldE9vYkNvbmZpcm1hdGlvbkNvZGVcIixNOltcImlkVG9rZW5cIixcIm5ld0VtYWlsXCIsXCJyZXF1ZXN0VHlwZVwiXSxBOmZ1bmN0aW9uKGEpe2lmKFwiVkVSSUZZX0FORF9DSEFOR0VfRU1BSUxcIiE9YS5yZXF1ZXN0VHlwZSl0aHJvdyBuZXcgdShcImludGVybmFsLWVycm9yXCIpO30sWTpcImVtYWlsXCIsQzohMH0sY2o9e2VuZHBvaW50OlwiZ2V0T29iQ29uZmlybWF0aW9uQ29kZVwiLE06W1wicmVxdWVzdFR5cGVcIl0sQTpmdW5jdGlvbihhKXtpZihcIlBBU1NXT1JEX1JFU0VUXCIhPVxuYS5yZXF1ZXN0VHlwZSl0aHJvdyBuZXcgdShcImludGVybmFsLWVycm9yXCIpO1RpKGEpfSxZOlwiZW1haWxcIixDOiEwfSxZaT17aGI6ITAsZW5kcG9pbnQ6XCJnZXRQcm9qZWN0Q29uZmlnXCIsUmI6XCJHRVRcIn0sRGo9e2hiOiEwLGVuZHBvaW50OlwiZ2V0UmVjYXB0Y2hhUGFyYW1cIixSYjpcIkdFVFwiLEc6ZnVuY3Rpb24oYSl7aWYoIWEucmVjYXB0Y2hhU2l0ZUtleSl0aHJvdyBuZXcgdShcImludGVybmFsLWVycm9yXCIpO319LHZqPXtlbmRwb2ludDpcInJlc2V0UGFzc3dvcmRcIixBOnVqLFk6XCJlbWFpbFwiLEM6ITB9LGdqPXtlbmRwb2ludDpcInNlbmRWZXJpZmljYXRpb25Db2RlXCIsTTpbXCJwaG9uZU51bWJlclwiLFwicmVjYXB0Y2hhVG9rZW5cIl0sWTpcInNlc3Npb25JbmZvXCIsQzohMH0sYWo9e2VuZHBvaW50Olwic2V0QWNjb3VudEluZm9cIixNOltcImlkVG9rZW5cIl0sQTpVaSxVOiEwfSxaZz17ZW5kcG9pbnQ6XCJzZXRBY2NvdW50SW5mb1wiLE06W1wiaWRUb2tlblwiXSxBOmZ1bmN0aW9uKGEpe1VpKGEpO2lmKCFhLnBhc3N3b3JkKXRocm93IG5ldyB1KFwid2Vhay1wYXNzd29yZFwiKTtcbn0sRzpPLFU6ITB9LCRpPXtlbmRwb2ludDpcInNpZ251cE5ld1VzZXJcIixHOk8sVTohMCxDOiEwfSxpaj17ZW5kcG9pbnQ6XCJhY2NvdW50cy9tZmFFbnJvbGxtZW50OnN0YXJ0XCIsTTpbXCJpZFRva2VuXCIsXCJwaG9uZUVucm9sbG1lbnRJbmZvXCJdLEE6ZnVuY3Rpb24oYSl7aWYoIWEucGhvbmVFbnJvbGxtZW50SW5mbyl0aHJvdyBuZXcgdShcImludGVybmFsLWVycm9yXCIpO2lmKCFhLnBob25lRW5yb2xsbWVudEluZm8ucGhvbmVOdW1iZXIpdGhyb3cgbmV3IHUoXCJtaXNzaW5nLXBob25lLW51bWJlclwiKTtpZighYS5waG9uZUVucm9sbG1lbnRJbmZvLnJlY2FwdGNoYVRva2VuKXRocm93IG5ldyB1KFwibWlzc2luZy1hcHAtY3JlZGVudGlhbFwiKTt9LEc6ZnVuY3Rpb24oYSl7aWYoIWEucGhvbmVTZXNzaW9uSW5mb3x8IWEucGhvbmVTZXNzaW9uSW5mby5zZXNzaW9uSW5mbyl0aHJvdyBuZXcgdShcImludGVybmFsLWVycm9yXCIpO30sQzohMCxMYTohMH0sa2o9e2VuZHBvaW50OlwiYWNjb3VudHMvbWZhU2lnbkluOnN0YXJ0XCIsXG5NOltcIm1mYVBlbmRpbmdDcmVkZW50aWFsXCIsXCJtZmFFbnJvbGxtZW50SWRcIixcInBob25lU2lnbkluSW5mb1wiXSxBOmZ1bmN0aW9uKGEpe2lmKCFhLnBob25lU2lnbkluSW5mb3x8IWEucGhvbmVTaWduSW5JbmZvLnJlY2FwdGNoYVRva2VuKXRocm93IG5ldyB1KFwibWlzc2luZy1hcHAtY3JlZGVudGlhbFwiKTt9LEc6ZnVuY3Rpb24oYSl7aWYoIWEucGhvbmVSZXNwb25zZUluZm98fCFhLnBob25lUmVzcG9uc2VJbmZvLnNlc3Npb25JbmZvKXRocm93IG5ldyB1KFwiaW50ZXJuYWwtZXJyb3JcIik7fSxDOiEwLExhOiEwfSxyaj17ZW5kcG9pbnQ6XCJ2ZXJpZnlBc3NlcnRpb25cIixBOm5qLFdhOm9qLEc6cGosVTohMCxDOiEwfSx0aj17ZW5kcG9pbnQ6XCJ2ZXJpZnlBc3NlcnRpb25cIixBOm5qLFdhOm9qLEc6ZnVuY3Rpb24oYSl7aWYoYS5lcnJvck1lc3NhZ2UmJlwiVVNFUl9OT1RfRk9VTkRcIj09YS5lcnJvck1lc3NhZ2UpdGhyb3cgbmV3IHUoXCJ1c2VyLW5vdC1mb3VuZFwiKTtpZihhLmVycm9yTWVzc2FnZSl0aHJvdyBxaihhLmVycm9yTWVzc2FnZSk7XG5PKGEpfSxVOiEwLEM6ITB9LHNqPXtlbmRwb2ludDpcInZlcmlmeUFzc2VydGlvblwiLEE6ZnVuY3Rpb24oYSl7bmooYSk7aWYoIWEuaWRUb2tlbil0aHJvdyBuZXcgdShcImludGVybmFsLWVycm9yXCIpO30sV2E6b2osRzpwaixVOiEwfSxFaj17ZW5kcG9pbnQ6XCJ2ZXJpZnlDdXN0b21Ub2tlblwiLEE6ZnVuY3Rpb24oYSl7aWYoIWEudG9rZW4pdGhyb3cgbmV3IHUoXCJpbnZhbGlkLWN1c3RvbS10b2tlblwiKTt9LEc6TyxVOiEwLEM6ITB9LFhnPXtlbmRwb2ludDpcInZlcmlmeVBhc3N3b3JkXCIsQTpmdW5jdGlvbihhKXtUaShhKTtpZighYS5wYXNzd29yZCl0aHJvdyBuZXcgdShcIndyb25nLXBhc3N3b3JkXCIpO30sRzpPLFU6ITAsQzohMH0saGo9e2VuZHBvaW50OlwidmVyaWZ5UGhvbmVOdW1iZXJcIixBOlppLEc6TyxDOiEwfSxlaD17ZW5kcG9pbnQ6XCJ2ZXJpZnlQaG9uZU51bWJlclwiLEE6ZnVuY3Rpb24oYSl7aWYoIWEuaWRUb2tlbil0aHJvdyBuZXcgdShcImludGVybmFsLWVycm9yXCIpO1ppKGEpfSxcbkc6ZnVuY3Rpb24oYSl7aWYoYS50ZW1wb3JhcnlQcm9vZil0aHJvdyBhLmNvZGU9XCJjcmVkZW50aWFsLWFscmVhZHktaW4tdXNlXCIsdmgoYSk7TyhhKX19LGZoPXtFYjp7VVNFUl9OT1RfRk9VTkQ6XCJ1c2VyLW5vdC1mb3VuZFwifSxlbmRwb2ludDpcInZlcmlmeVBob25lTnVtYmVyXCIsQTpaaSxHOk8sQzohMH0sRmo9e2VuZHBvaW50OlwiYWNjb3VudHMvbWZhRW5yb2xsbWVudDp3aXRoZHJhd1wiLE06W1wiaWRUb2tlblwiLFwibWZhRW5yb2xsbWVudElkXCJdLEc6ZnVuY3Rpb24oYSl7aWYoISFhW0FnXV4hIWEucmVmcmVzaFRva2VuKXRocm93IG5ldyB1KFwiaW50ZXJuYWwtZXJyb3JcIik7fSxDOiEwLExhOiEwfTtcbmZ1bmN0aW9uIE4oYSxiLGMpe2lmKCFqZihjLGIuTSkpcmV0dXJuIEYobmV3IHUoXCJpbnRlcm5hbC1lcnJvclwiKSk7dmFyIGQ9ISFiLkxhLGU9Yi5SYnx8XCJQT1NUXCIsZjtyZXR1cm4gRShjKS50aGVuKGIuQSkudGhlbihmdW5jdGlvbigpe2IuVSYmKGMucmV0dXJuU2VjdXJlVG9rZW49ITApO2IuQyYmYS5iJiZcInVuZGVmaW5lZFwiPT09dHlwZW9mIGMudGVuYW50SWQmJihjLnRlbmFudElkPWEuYik7cmV0dXJuIGQ/U2koYSxhLmwsYi5lbmRwb2ludCxlLGMsYi5FYixiLmhifHwhMSk6U2koYSxhLmgsYi5lbmRwb2ludCxlLGMsYi5FYixiLmhifHwhMSl9KS50aGVuKGZ1bmN0aW9uKGcpe2Y9ZztyZXR1cm4gYi5XYT9iLldhKGMsZik6Zn0pLnRoZW4oYi5HKS50aGVuKGZ1bmN0aW9uKCl7aWYoIWIuWSlyZXR1cm4gZjtpZighKGIuWSBpbiBmKSl0aHJvdyBuZXcgdShcImludGVybmFsLWVycm9yXCIpO3JldHVybiBmW2IuWV19KX1cbmZ1bmN0aW9uIHFqKGEpe3JldHVybiBSaSh7ZXJyb3I6e2Vycm9yczpbe21lc3NhZ2U6YX1dLGNvZGU6NDAwLG1lc3NhZ2U6YX19KX1cbmZ1bmN0aW9uIFJpKGEsYil7dmFyIGM9KGEuZXJyb3ImJmEuZXJyb3IuZXJyb3JzJiZhLmVycm9yLmVycm9yc1swXXx8e30pLnJlYXNvbnx8XCJcIjt2YXIgZD17a2V5SW52YWxpZDpcImludmFsaWQtYXBpLWtleVwiLGlwUmVmZXJlckJsb2NrZWQ6XCJhcHAtbm90LWF1dGhvcml6ZWRcIn07aWYoYz1kW2NdP25ldyB1KGRbY10pOm51bGwpcmV0dXJuIGM7Yz1hLmVycm9yJiZhLmVycm9yLm1lc3NhZ2V8fFwiXCI7ZD17SU5WQUxJRF9DVVNUT01fVE9LRU46XCJpbnZhbGlkLWN1c3RvbS10b2tlblwiLENSRURFTlRJQUxfTUlTTUFUQ0g6XCJjdXN0b20tdG9rZW4tbWlzbWF0Y2hcIixNSVNTSU5HX0NVU1RPTV9UT0tFTjpcImludGVybmFsLWVycm9yXCIsSU5WQUxJRF9JREVOVElGSUVSOlwiaW52YWxpZC1lbWFpbFwiLE1JU1NJTkdfQ09OVElOVUVfVVJJOlwiaW50ZXJuYWwtZXJyb3JcIixJTlZBTElEX0VNQUlMOlwiaW52YWxpZC1lbWFpbFwiLElOVkFMSURfUEFTU1dPUkQ6XCJ3cm9uZy1wYXNzd29yZFwiLFVTRVJfRElTQUJMRUQ6XCJ1c2VyLWRpc2FibGVkXCIsXG5NSVNTSU5HX1BBU1NXT1JEOlwiaW50ZXJuYWwtZXJyb3JcIixFTUFJTF9FWElTVFM6XCJlbWFpbC1hbHJlYWR5LWluLXVzZVwiLFBBU1NXT1JEX0xPR0lOX0RJU0FCTEVEOlwib3BlcmF0aW9uLW5vdC1hbGxvd2VkXCIsSU5WQUxJRF9JRFBfUkVTUE9OU0U6XCJpbnZhbGlkLWNyZWRlbnRpYWxcIixJTlZBTElEX1BFTkRJTkdfVE9LRU46XCJpbnZhbGlkLWNyZWRlbnRpYWxcIixGRURFUkFURURfVVNFUl9JRF9BTFJFQURZX0xJTktFRDpcImNyZWRlbnRpYWwtYWxyZWFkeS1pbi11c2VcIixNSVNTSU5HX09SX0lOVkFMSURfTk9OQ0U6XCJtaXNzaW5nLW9yLWludmFsaWQtbm9uY2VcIixJTlZBTElEX01FU1NBR0VfUEFZTE9BRDpcImludmFsaWQtbWVzc2FnZS1wYXlsb2FkXCIsSU5WQUxJRF9SRUNJUElFTlRfRU1BSUw6XCJpbnZhbGlkLXJlY2lwaWVudC1lbWFpbFwiLElOVkFMSURfU0VOREVSOlwiaW52YWxpZC1zZW5kZXJcIixFTUFJTF9OT1RfRk9VTkQ6XCJ1c2VyLW5vdC1mb3VuZFwiLFJFU0VUX1BBU1NXT1JEX0VYQ0VFRF9MSU1JVDpcInRvby1tYW55LXJlcXVlc3RzXCIsXG5FWFBJUkVEX09PQl9DT0RFOlwiZXhwaXJlZC1hY3Rpb24tY29kZVwiLElOVkFMSURfT09CX0NPREU6XCJpbnZhbGlkLWFjdGlvbi1jb2RlXCIsTUlTU0lOR19PT0JfQ09ERTpcImludGVybmFsLWVycm9yXCIsSU5WQUxJRF9QUk9WSURFUl9JRDpcImludmFsaWQtcHJvdmlkZXItaWRcIixDUkVERU5USUFMX1RPT19PTERfTE9HSU5fQUdBSU46XCJyZXF1aXJlcy1yZWNlbnQtbG9naW5cIixJTlZBTElEX0lEX1RPS0VOOlwiaW52YWxpZC11c2VyLXRva2VuXCIsVE9LRU5fRVhQSVJFRDpcInVzZXItdG9rZW4tZXhwaXJlZFwiLFVTRVJfTk9UX0ZPVU5EOlwidXNlci10b2tlbi1leHBpcmVkXCIsQ09SU19VTlNVUFBPUlRFRDpcImNvcnMtdW5zdXBwb3J0ZWRcIixEWU5BTUlDX0xJTktfTk9UX0FDVElWQVRFRDpcImR5bmFtaWMtbGluay1ub3QtYWN0aXZhdGVkXCIsSU5WQUxJRF9BUFBfSUQ6XCJpbnZhbGlkLWFwcC1pZFwiLFRPT19NQU5ZX0FUVEVNUFRTX1RSWV9MQVRFUjpcInRvby1tYW55LXJlcXVlc3RzXCIsV0VBS19QQVNTV09SRDpcIndlYWstcGFzc3dvcmRcIixcbk9QRVJBVElPTl9OT1RfQUxMT1dFRDpcIm9wZXJhdGlvbi1ub3QtYWxsb3dlZFwiLFVTRVJfQ0FOQ0VMTEVEOlwidXNlci1jYW5jZWxsZWRcIixDQVBUQ0hBX0NIRUNLX0ZBSUxFRDpcImNhcHRjaGEtY2hlY2stZmFpbGVkXCIsSU5WQUxJRF9BUFBfQ1JFREVOVElBTDpcImludmFsaWQtYXBwLWNyZWRlbnRpYWxcIixJTlZBTElEX0NPREU6XCJpbnZhbGlkLXZlcmlmaWNhdGlvbi1jb2RlXCIsSU5WQUxJRF9QSE9ORV9OVU1CRVI6XCJpbnZhbGlkLXBob25lLW51bWJlclwiLElOVkFMSURfU0VTU0lPTl9JTkZPOlwiaW52YWxpZC12ZXJpZmljYXRpb24taWRcIixJTlZBTElEX1RFTVBPUkFSWV9QUk9PRjpcImludmFsaWQtY3JlZGVudGlhbFwiLE1JU1NJTkdfQVBQX0NSRURFTlRJQUw6XCJtaXNzaW5nLWFwcC1jcmVkZW50aWFsXCIsTUlTU0lOR19DT0RFOlwibWlzc2luZy12ZXJpZmljYXRpb24tY29kZVwiLE1JU1NJTkdfUEhPTkVfTlVNQkVSOlwibWlzc2luZy1waG9uZS1udW1iZXJcIixNSVNTSU5HX1NFU1NJT05fSU5GTzpcIm1pc3NpbmctdmVyaWZpY2F0aW9uLWlkXCIsXG5RVU9UQV9FWENFRURFRDpcInF1b3RhLWV4Y2VlZGVkXCIsU0VTU0lPTl9FWFBJUkVEOlwiY29kZS1leHBpcmVkXCIsUkVKRUNURURfQ1JFREVOVElBTDpcInJlamVjdGVkLWNyZWRlbnRpYWxcIixJTlZBTElEX0NPTlRJTlVFX1VSSTpcImludmFsaWQtY29udGludWUtdXJpXCIsTUlTU0lOR19BTkRST0lEX1BBQ0tBR0VfTkFNRTpcIm1pc3NpbmctYW5kcm9pZC1wa2ctbmFtZVwiLE1JU1NJTkdfSU9TX0JVTkRMRV9JRDpcIm1pc3NpbmctaW9zLWJ1bmRsZS1pZFwiLFVOQVVUSE9SSVpFRF9ET01BSU46XCJ1bmF1dGhvcml6ZWQtY29udGludWUtdXJpXCIsSU5WQUxJRF9EWU5BTUlDX0xJTktfRE9NQUlOOlwiaW52YWxpZC1keW5hbWljLWxpbmstZG9tYWluXCIsSU5WQUxJRF9PQVVUSF9DTElFTlRfSUQ6XCJpbnZhbGlkLW9hdXRoLWNsaWVudC1pZFwiLElOVkFMSURfQ0VSVF9IQVNIOlwiaW52YWxpZC1jZXJ0LWhhc2hcIixVTlNVUFBPUlRFRF9URU5BTlRfT1BFUkFUSU9OOlwidW5zdXBwb3J0ZWQtdGVuYW50LW9wZXJhdGlvblwiLFxuSU5WQUxJRF9URU5BTlRfSUQ6XCJpbnZhbGlkLXRlbmFudC1pZFwiLFRFTkFOVF9JRF9NSVNNQVRDSDpcInRlbmFudC1pZC1taXNtYXRjaFwiLEFETUlOX09OTFlfT1BFUkFUSU9OOlwiYWRtaW4tcmVzdHJpY3RlZC1vcGVyYXRpb25cIixJTlZBTElEX01GQV9QRU5ESU5HX0NSRURFTlRJQUw6XCJpbnZhbGlkLW11bHRpLWZhY3Rvci1zZXNzaW9uXCIsTUZBX0VOUk9MTE1FTlRfTk9UX0ZPVU5EOlwibXVsdGktZmFjdG9yLWluZm8tbm90LWZvdW5kXCIsTUlTU0lOR19NRkFfUEVORElOR19DUkVERU5USUFMOlwibWlzc2luZy1tdWx0aS1mYWN0b3Itc2Vzc2lvblwiLE1JU1NJTkdfTUZBX0VOUk9MTE1FTlRfSUQ6XCJtaXNzaW5nLW11bHRpLWZhY3Rvci1pbmZvXCIsRU1BSUxfQ0hBTkdFX05FRURTX1ZFUklGSUNBVElPTjpcImVtYWlsLWNoYW5nZS1uZWVkcy12ZXJpZmljYXRpb25cIixTRUNPTkRfRkFDVE9SX0VYSVNUUzpcInNlY29uZC1mYWN0b3ItYWxyZWFkeS1pbi11c2VcIixTRUNPTkRfRkFDVE9SX0xJTUlUX0VYQ0VFREVEOlwibWF4aW11bS1zZWNvbmQtZmFjdG9yLWNvdW50LWV4Y2VlZGVkXCIsXG5VTlNVUFBPUlRFRF9GSVJTVF9GQUNUT1I6XCJ1bnN1cHBvcnRlZC1maXJzdC1mYWN0b3JcIixVTlZFUklGSUVEX0VNQUlMOlwidW52ZXJpZmllZC1lbWFpbFwifTtCKGQsYnx8e30pO2I9KGI9Yy5tYXRjaCgvXlteXFxzXStcXHMqOlxccyooW1xcc1xcU10qKSQvKSkmJjE8Yi5sZW5ndGg/YlsxXTp2b2lkIDA7Zm9yKHZhciBlIGluIGQpaWYoMD09PWMuaW5kZXhPZihlKSlyZXR1cm4gbmV3IHUoZFtlXSxiKTshYiYmYSYmKGI9UmUoYSkpO3JldHVybiBuZXcgdShcImludGVybmFsLWVycm9yXCIsYil9O2Z1bmN0aW9uIEdqKGEpe3RoaXMuYj1hO3RoaXMuYT1udWxsO3RoaXMubmI9SGoodGhpcyl9XG5mdW5jdGlvbiBIaihhKXtyZXR1cm4gSWooKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBEKGZ1bmN0aW9uKGIsYyl7SihcImdhcGkuaWZyYW1lcy5nZXRDb250ZXh0XCIpKCkub3Blbih7d2hlcmU6ZG9jdW1lbnQuYm9keSx1cmw6YS5iLG1lc3NhZ2VIYW5kbGVyc0ZpbHRlcjpKKFwiZ2FwaS5pZnJhbWVzLkNST1NTX09SSUdJTl9JRlJBTUVTX0ZJTFRFUlwiKSxhdHRyaWJ1dGVzOntzdHlsZTp7cG9zaXRpb246XCJhYnNvbHV0ZVwiLHRvcDpcIi0xMDBweFwiLHdpZHRoOlwiMXB4XCIsaGVpZ2h0OlwiMXB4XCJ9fSxkb250Y2xlYXI6ITB9LGZ1bmN0aW9uKGQpe2Z1bmN0aW9uIGUoKXtjbGVhclRpbWVvdXQoZik7YigpfWEuYT1kO2EuYS5yZXN0eWxlKHtzZXRIaWRlT25MZWF2ZTohMX0pO3ZhciBmPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtjKEVycm9yKFwiTmV0d29yayBFcnJvclwiKSl9LEpqLmdldCgpKTtkLnBpbmcoZSkudGhlbihlLGZ1bmN0aW9uKCl7YyhFcnJvcihcIk5ldHdvcmsgRXJyb3JcIikpfSl9KX0pfSl9XG5mdW5jdGlvbiBLaihhLGIpe3JldHVybiBhLm5iLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gbmV3IEQoZnVuY3Rpb24oYyl7YS5hLnNlbmQoYi50eXBlLGIsYyxKKFwiZ2FwaS5pZnJhbWVzLkNST1NTX09SSUdJTl9JRlJBTUVTX0ZJTFRFUlwiKSl9KX0pfWZ1bmN0aW9uIExqKGEsYil7YS5uYi50aGVuKGZ1bmN0aW9uKCl7YS5hLnJlZ2lzdGVyKFwiYXV0aEV2ZW50XCIsYixKKFwiZ2FwaS5pZnJhbWVzLkNST1NTX09SSUdJTl9JRlJBTUVTX0ZJTFRFUlwiKSl9KX12YXIgTWo9bmV3IG5iKG9iLFwiaHR0cHM6Ly9hcGlzLmdvb2dsZS5jb20vanMvYXBpLmpzP29ubG9hZD0le29ubG9hZH1cIiksTmo9bmV3IFdlKDNFNCw2RTQpLEpqPW5ldyBXZSg1RTMsMTVFMyksT2o9bnVsbDtcbmZ1bmN0aW9uIElqKCl7cmV0dXJuIE9qP09qOk9qPShuZXcgRChmdW5jdGlvbihhLGIpe2Z1bmN0aW9uIGMoKXtWZSgpO0ooXCJnYXBpLmxvYWRcIikoXCJnYXBpLmlmcmFtZXNcIix7Y2FsbGJhY2s6YSxvbnRpbWVvdXQ6ZnVuY3Rpb24oKXtWZSgpO2IoRXJyb3IoXCJOZXR3b3JrIEVycm9yXCIpKX0sdGltZW91dDpOai5nZXQoKX0pfWlmKEooXCJnYXBpLmlmcmFtZXMuSWZyYW1lXCIpKWEoKTtlbHNlIGlmKEooXCJnYXBpLmxvYWRcIikpYygpO2Vsc2V7dmFyIGQ9XCJfX2lmcmFtZWZjYlwiK01hdGguZmxvb3IoMUU2Kk1hdGgucmFuZG9tKCkpLnRvU3RyaW5nKCk7bFtkXT1mdW5jdGlvbigpe0ooXCJnYXBpLmxvYWRcIik/YygpOmIoRXJyb3IoXCJOZXR3b3JrIEVycm9yXCIpKX07ZD13YihNaix7b25sb2FkOmR9KTtFKHhpKGQpKS5vKGZ1bmN0aW9uKCl7YihFcnJvcihcIk5ldHdvcmsgRXJyb3JcIikpfSl9fSkpLm8oZnVuY3Rpb24oYSl7T2o9bnVsbDt0aHJvdyBhO30pfTtmdW5jdGlvbiBQaihhLGIsYyl7dGhpcy5pPWE7dGhpcy5nPWI7dGhpcy5oPWM7dGhpcy5mPW51bGw7dGhpcy5hPSRkKHRoaXMuaSxcIi9fXy9hdXRoL2lmcmFtZVwiKTtIKHRoaXMuYSxcImFwaUtleVwiLHRoaXMuZyk7SCh0aGlzLmEsXCJhcHBOYW1lXCIsdGhpcy5oKTt0aGlzLmI9bnVsbDt0aGlzLmM9W119UGoucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7dGhpcy5mP0godGhpcy5hLFwidlwiLHRoaXMuZik6ZmUodGhpcy5hLmEsXCJ2XCIpO3RoaXMuYj9IKHRoaXMuYSxcImVpZFwiLHRoaXMuYik6ZmUodGhpcy5hLmEsXCJlaWRcIik7dGhpcy5jLmxlbmd0aD9IKHRoaXMuYSxcImZ3XCIsdGhpcy5jLmpvaW4oXCIsXCIpKTpmZSh0aGlzLmEuYSxcImZ3XCIpO3JldHVybiB0aGlzLmEudG9TdHJpbmcoKX07ZnVuY3Rpb24gUWooYSxiLGMsZCxlKXt0aGlzLnM9YTt0aGlzLm09Yjt0aGlzLmM9Yzt0aGlzLnU9ZDt0aGlzLmk9dGhpcy5nPXRoaXMubD1udWxsO3RoaXMuYT1lO3RoaXMuaD10aGlzLmY9bnVsbH1cblFqLnByb3RvdHlwZS51Yj1mdW5jdGlvbihhKXt0aGlzLmg9YTtyZXR1cm4gdGhpc307XG5Rai5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXt2YXIgYT0kZCh0aGlzLnMsXCIvX18vYXV0aC9oYW5kbGVyXCIpO0goYSxcImFwaUtleVwiLHRoaXMubSk7SChhLFwiYXBwTmFtZVwiLHRoaXMuYyk7SChhLFwiYXV0aFR5cGVcIix0aGlzLnUpO2lmKHRoaXMuYS5pc09BdXRoUHJvdmlkZXIpe3ZhciBiPXRoaXMuYTt0cnl7dmFyIGM9ZmlyZWJhc2UuYXBwKHRoaXMuYykuYXV0aCgpLmphKCl9Y2F0Y2goaCl7Yz1udWxsfWIua2I9YztIKGEsXCJwcm92aWRlcklkXCIsdGhpcy5hLnByb3ZpZGVySWQpO2I9dGhpcy5hO2M9U2UoYi5GYik7Zm9yKHZhciBkIGluIGMpY1tkXT1jW2RdLnRvU3RyaW5nKCk7ZD1iLk9jO2M9a2IoYyk7Zm9yKHZhciBlPTA7ZTxkLmxlbmd0aDtlKyspe3ZhciBmPWRbZV07ZiBpbiBjJiZkZWxldGUgY1tmXX1iLmxiJiZiLmtiJiYhY1tiLmxiXSYmKGNbYi5sYl09Yi5rYik7amIoYyl8fEgoYSxcImN1c3RvbVBhcmFtZXRlcnNcIixSZShjKSl9XCJmdW5jdGlvblwiPT09dHlwZW9mIHRoaXMuYS5OYiYmXG4oYj10aGlzLmEuTmIoKSxiLmxlbmd0aCYmSChhLFwic2NvcGVzXCIsYi5qb2luKFwiLFwiKSkpO3RoaXMubD9IKGEsXCJyZWRpcmVjdFVybFwiLHRoaXMubCk6ZmUoYS5hLFwicmVkaXJlY3RVcmxcIik7dGhpcy5nP0goYSxcImV2ZW50SWRcIix0aGlzLmcpOmZlKGEuYSxcImV2ZW50SWRcIik7dGhpcy5pP0goYSxcInZcIix0aGlzLmkpOmZlKGEuYSxcInZcIik7aWYodGhpcy5iKWZvcih2YXIgZyBpbiB0aGlzLmIpdGhpcy5iLmhhc093blByb3BlcnR5KGcpJiYhWWQoYSxnKSYmSChhLGcsdGhpcy5iW2ddKTt0aGlzLmg/SChhLFwidGlkXCIsdGhpcy5oKTpmZShhLmEsXCJ0aWRcIik7dGhpcy5mP0goYSxcImVpZFwiLHRoaXMuZik6ZmUoYS5hLFwiZWlkXCIpO2c9UmoodGhpcy5jKTtnLmxlbmd0aCYmSChhLFwiZndcIixnLmpvaW4oXCIsXCIpKTtyZXR1cm4gYS50b1N0cmluZygpfTtmdW5jdGlvbiBSaihhKXt0cnl7cmV0dXJuIGZpcmViYXNlLmFwcChhKS5hdXRoKCkuRWEoKX1jYXRjaChiKXtyZXR1cm5bXX19XG5mdW5jdGlvbiBTaihhLGIsYyxkLGUpe3RoaXMudT1hO3RoaXMuZj1iO3RoaXMuYj1jO3RoaXMuYz1kfHxudWxsO3RoaXMuaD1lfHxudWxsO3RoaXMubT10aGlzLnM9dGhpcy53PW51bGw7dGhpcy5nPVtdO3RoaXMubD10aGlzLmE9bnVsbH1cbmZ1bmN0aW9uIFRqKGEpe3ZhciBiPW9lKCk7cmV0dXJuIFhpKGEpLnRoZW4oZnVuY3Rpb24oYyl7YTp7dmFyIGQ9WmQoYiksZT1kLmY7ZD1kLmI7Zm9yKHZhciBmPTA7ZjxjLmxlbmd0aDtmKyspe3ZhciBnPWNbZl07dmFyIGg9ZDt2YXIgbT1lOzA9PWcuaW5kZXhPZihcImNocm9tZS1leHRlbnNpb246Ly9cIik/aD1aZChnKS5iPT1oJiZcImNocm9tZS1leHRlbnNpb25cIj09bTpcImh0dHBcIiE9bSYmXCJodHRwc1wiIT1tP2g9ITE6emUudGVzdChnKT9oPWg9PWc6KGc9Zy5zcGxpdChcIi5cIikuam9pbihcIlxcXFwuXCIpLGg9KG5ldyBSZWdFeHAoXCJeKC4rXFxcXC5cIitnK1wifFwiK2crXCIpJFwiLFwiaVwiKSkudGVzdChoKSk7aWYoaCl7Yz0hMDticmVhayBhfX1jPSExfWlmKCFjKXRocm93IG5ldyB0aChvZSgpKTt9KX1cbmZ1bmN0aW9uIFVqKGEpe2lmKGEubClyZXR1cm4gYS5sO2EubD1CZSgpLnRoZW4oZnVuY3Rpb24oKXtpZighYS5zKXt2YXIgYj1hLmMsYz1hLmgsZD1SaihhLmIpLGU9bmV3IFBqKGEudSxhLmYsYS5iKTtlLmY9YjtlLmI9YztlLmM9V2EoZHx8W10pO2Eucz1lLnRvU3RyaW5nKCl9YS5pPW5ldyBHaihhLnMpO1ZqKGEpfSk7cmV0dXJuIGEubH1rPVNqLnByb3RvdHlwZTtrLkxiPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1uZXcgdShcInBvcHVwLWNsb3NlZC1ieS11c2VyXCIpLGU9bmV3IHUoXCJ3ZWItc3RvcmFnZS11bnN1cHBvcnRlZFwiKSxmPXRoaXMsZz0hMTtyZXR1cm4gdGhpcy5rYSgpLnRoZW4oZnVuY3Rpb24oKXtXaihmKS50aGVuKGZ1bmN0aW9uKGgpe2h8fChhJiZ2ZShhKSxiKGUpLGc9ITApfSl9KS5vKGZ1bmN0aW9uKCl7fSkudGhlbihmdW5jdGlvbigpe2lmKCFnKXJldHVybiB5ZShhKX0pLnRoZW4oZnVuY3Rpb24oKXtpZighZylyZXR1cm4gQmQoYykudGhlbihmdW5jdGlvbigpe2IoZCl9KX0pfTtcbmsuVWI9ZnVuY3Rpb24oKXt2YXIgYT1JKCk7cmV0dXJuIVFlKGEpJiYhVWUoYSl9O2suUWI9ZnVuY3Rpb24oKXtyZXR1cm4hMX07XG5rLkpiPWZ1bmN0aW9uKGEsYixjLGQsZSxmLGcsaCl7aWYoIWEpcmV0dXJuIEYobmV3IHUoXCJwb3B1cC1ibG9ja2VkXCIpKTtpZihnJiYhUWUoKSlyZXR1cm4gdGhpcy5rYSgpLm8oZnVuY3Rpb24ocCl7dmUoYSk7ZShwKX0pLGQoKSxFKCk7dGhpcy5hfHwodGhpcy5hPVRqKFhqKHRoaXMpKSk7dmFyIG09dGhpcztyZXR1cm4gdGhpcy5hLnRoZW4oZnVuY3Rpb24oKXt2YXIgcD1tLmthKCkubyhmdW5jdGlvbih2KXt2ZShhKTtlKHYpO3Rocm93IHY7fSk7ZCgpO3JldHVybiBwfSkudGhlbihmdW5jdGlvbigpe25oKGMpO2lmKCFnKXt2YXIgcD1ZaihtLnUsbS5mLG0uYixiLGMsbnVsbCxmLG0uYyx2b2lkIDAsbS5oLGgpO3BlKHAsYSl9fSkubyhmdW5jdGlvbihwKXtcImF1dGgvbmV0d29yay1yZXF1ZXN0LWZhaWxlZFwiPT1wLmNvZGUmJihtLmE9bnVsbCk7dGhyb3cgcDt9KX07XG5mdW5jdGlvbiBYaihhKXthLm18fChhLnc9YS5jP0xlKGEuYyxSaihhLmIpKTpudWxsLGEubT1uZXcgRWkoYS5mLHphKGEuaCksYS53KSk7cmV0dXJuIGEubX1rLktiPWZ1bmN0aW9uKGEsYixjLGQpe3RoaXMuYXx8KHRoaXMuYT1UaihYaih0aGlzKSkpO3ZhciBlPXRoaXM7cmV0dXJuIHRoaXMuYS50aGVuKGZ1bmN0aW9uKCl7bmgoYik7dmFyIGY9WWooZS51LGUuZixlLmIsYSxiLG9lKCksYyxlLmMsdm9pZCAwLGUuaCxkKTtwZShmKX0pLm8oZnVuY3Rpb24oZil7XCJhdXRoL25ldHdvcmstcmVxdWVzdC1mYWlsZWRcIj09Zi5jb2RlJiYoZS5hPW51bGwpO3Rocm93IGY7fSl9O2sua2E9ZnVuY3Rpb24oKXt2YXIgYT10aGlzO3JldHVybiBVaih0aGlzKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIGEuaS5uYn0pLm8oZnVuY3Rpb24oKXthLmE9bnVsbDt0aHJvdyBuZXcgdShcIm5ldHdvcmstcmVxdWVzdC1mYWlsZWRcIik7fSl9O2suWGI9ZnVuY3Rpb24oKXtyZXR1cm4hMH07XG5mdW5jdGlvbiBZaihhLGIsYyxkLGUsZixnLGgsbSxwLHYpe2E9bmV3IFFqKGEsYixjLGQsZSk7YS5sPWY7YS5nPWc7YS5pPWg7YS5iPWtiKG18fG51bGwpO2EuZj1wO3JldHVybiBhLnViKHYpLnRvU3RyaW5nKCl9ZnVuY3Rpb24gVmooYSl7aWYoIWEuaSl0aHJvdyBFcnJvcihcIklmY0hhbmRsZXIgbXVzdCBiZSBpbml0aWFsaXplZCFcIik7TGooYS5pLGZ1bmN0aW9uKGIpe3ZhciBjPXt9O2lmKGImJmIuYXV0aEV2ZW50KXt2YXIgZD0hMTtiPXBoKGIuYXV0aEV2ZW50KTtmb3IoYz0wO2M8YS5nLmxlbmd0aDtjKyspZD1hLmdbY10oYil8fGQ7Yz17fTtjLnN0YXR1cz1kP1wiQUNLXCI6XCJFUlJPUlwiO3JldHVybiBFKGMpfWMuc3RhdHVzPVwiRVJST1JcIjtyZXR1cm4gRShjKX0pfVxuZnVuY3Rpb24gV2ooYSl7dmFyIGI9e3R5cGU6XCJ3ZWJTdG9yYWdlU3VwcG9ydFwifTtyZXR1cm4gVWooYSkudGhlbihmdW5jdGlvbigpe3JldHVybiBLaihhLmksYil9KS50aGVuKGZ1bmN0aW9uKGMpe2lmKGMmJmMubGVuZ3RoJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGNbMF0ud2ViU3RvcmFnZVN1cHBvcnQpcmV0dXJuIGNbMF0ud2ViU3RvcmFnZVN1cHBvcnQ7dGhyb3cgRXJyb3IoKTt9KX1rLkNhPWZ1bmN0aW9uKGEpe3RoaXMuZy5wdXNoKGEpfTtrLlFhPWZ1bmN0aW9uKGEpe1VhKHRoaXMuZyxmdW5jdGlvbihiKXtyZXR1cm4gYj09YX0pfTtmdW5jdGlvbiBaaihhKXt0aGlzLmE9YXx8ZmlyZWJhc2UuSU5URVJOQUwucmVhY3ROYXRpdmUmJmZpcmViYXNlLklOVEVSTkFMLnJlYWN0TmF0aXZlLkFzeW5jU3RvcmFnZTtpZighdGhpcy5hKXRocm93IG5ldyB1KFwiaW50ZXJuYWwtZXJyb3JcIixcIlRoZSBSZWFjdCBOYXRpdmUgY29tcGF0aWJpbGl0eSBsaWJyYXJ5IHdhcyBub3QgZm91bmQuXCIpO3RoaXMudHlwZT1cImFzeW5jU3RvcmFnZVwifWs9WmoucHJvdG90eXBlO2suZ2V0PWZ1bmN0aW9uKGEpe3JldHVybiBFKHRoaXMuYS5nZXRJdGVtKGEpKS50aGVuKGZ1bmN0aW9uKGIpe3JldHVybiBiJiZUZShiKX0pfTtrLnNldD1mdW5jdGlvbihhLGIpe3JldHVybiBFKHRoaXMuYS5zZXRJdGVtKGEsUmUoYikpKX07ay5UPWZ1bmN0aW9uKGEpe3JldHVybiBFKHRoaXMuYS5yZW1vdmVJdGVtKGEpKX07ay5iYT1mdW5jdGlvbigpe307ay5oYT1mdW5jdGlvbigpe307ZnVuY3Rpb24gYWsoYSl7dGhpcy5iPWE7dGhpcy5hPXt9O3RoaXMuZj1yKHRoaXMuYyx0aGlzKX12YXIgYms9W107ZnVuY3Rpb24gY2soKXt2YXIgYT1HZSgpP3NlbGY6bnVsbDt4KGJrLGZ1bmN0aW9uKGMpe2MuYj09YSYmKGI9Yyl9KTtpZighYil7dmFyIGI9bmV3IGFrKGEpO2JrLnB1c2goYil9cmV0dXJuIGJ9XG5hay5wcm90b3R5cGUuYz1mdW5jdGlvbihhKXt2YXIgYj1hLmRhdGEuZXZlbnRUeXBlLGM9YS5kYXRhLmV2ZW50SWQsZD10aGlzLmFbYl07aWYoZCYmMDxkLmxlbmd0aCl7YS5wb3J0c1swXS5wb3N0TWVzc2FnZSh7c3RhdHVzOlwiYWNrXCIsZXZlbnRJZDpjLGV2ZW50VHlwZTpiLHJlc3BvbnNlOm51bGx9KTt2YXIgZT1bXTt4KGQsZnVuY3Rpb24oZil7ZS5wdXNoKEUoKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIGYoYS5vcmlnaW4sYS5kYXRhLmRhdGEpfSkpfSk7RWMoZSkudGhlbihmdW5jdGlvbihmKXt2YXIgZz1bXTt4KGYsZnVuY3Rpb24oaCl7Zy5wdXNoKHtmdWxmaWxsZWQ6aC5NYix2YWx1ZTpoLnZhbHVlLHJlYXNvbjpoLnJlYXNvbj9oLnJlYXNvbi5tZXNzYWdlOnZvaWQgMH0pfSk7eChnLGZ1bmN0aW9uKGgpe2Zvcih2YXIgbSBpbiBoKVwidW5kZWZpbmVkXCI9PT10eXBlb2YgaFttXSYmZGVsZXRlIGhbbV19KTthLnBvcnRzWzBdLnBvc3RNZXNzYWdlKHtzdGF0dXM6XCJkb25lXCIsZXZlbnRJZDpjLFxuZXZlbnRUeXBlOmIscmVzcG9uc2U6Z30pfSl9fTtmdW5jdGlvbiBkayhhLGIsYyl7amIoYS5hKSYmYS5iLmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsYS5mKTtcInVuZGVmaW5lZFwiPT09dHlwZW9mIGEuYVtiXSYmKGEuYVtiXT1bXSk7YS5hW2JdLnB1c2goYyl9O2Z1bmN0aW9uIGVrKGEpe3RoaXMuYT1hfWVrLnByb3RvdHlwZS5wb3N0TWVzc2FnZT1mdW5jdGlvbihhLGIpe3RoaXMuYS5wb3N0TWVzc2FnZShhLGIpfTtmdW5jdGlvbiBmayhhKXt0aGlzLmM9YTt0aGlzLmI9ITE7dGhpcy5hPVtdfVxuZnVuY3Rpb24gZ2soYSxiLGMsZCl7dmFyIGUsZj1jfHx7fSxnLGgsbSxwPW51bGw7aWYoYS5iKXJldHVybiBGKEVycm9yKFwiY29ubmVjdGlvbl91bmF2YWlsYWJsZVwiKSk7dmFyIHY9ZD84MDA6NTAsQz1cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1lc3NhZ2VDaGFubmVsP25ldyBNZXNzYWdlQ2hhbm5lbDpudWxsO3JldHVybihuZXcgRChmdW5jdGlvbihBLFEpe0M/KGU9TWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKk1hdGgucG93KDEwLDIwKSkudG9TdHJpbmcoKSxDLnBvcnQxLnN0YXJ0KCksaD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7UShFcnJvcihcInVuc3VwcG9ydGVkX2V2ZW50XCIpKX0sdiksZz1mdW5jdGlvbih4YSl7eGEuZGF0YS5ldmVudElkPT09ZSYmKFwiYWNrXCI9PT14YS5kYXRhLnN0YXR1cz8oY2xlYXJUaW1lb3V0KGgpLG09c2V0VGltZW91dChmdW5jdGlvbigpe1EoRXJyb3IoXCJ0aW1lb3V0XCIpKX0sM0UzKSk6XCJkb25lXCI9PT14YS5kYXRhLnN0YXR1cz8oY2xlYXJUaW1lb3V0KG0pLFxuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiB4YS5kYXRhLnJlc3BvbnNlP0EoeGEuZGF0YS5yZXNwb25zZSk6UShFcnJvcihcInVua25vd25fZXJyb3JcIikpKTooY2xlYXJUaW1lb3V0KGgpLGNsZWFyVGltZW91dChtKSxRKEVycm9yKFwiaW52YWxpZF9yZXNwb25zZVwiKSkpKX0scD17bWVzc2FnZUNoYW5uZWw6Qyxvbk1lc3NhZ2U6Z30sYS5hLnB1c2gocCksQy5wb3J0MS5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLGcpLGEuYy5wb3N0TWVzc2FnZSh7ZXZlbnRUeXBlOmIsZXZlbnRJZDplLGRhdGE6Zn0sW0MucG9ydDJdKSk6UShFcnJvcihcImNvbm5lY3Rpb25fdW5hdmFpbGFibGVcIikpfSkpLnRoZW4oZnVuY3Rpb24oQSl7aGsoYSxwKTtyZXR1cm4gQX0pLm8oZnVuY3Rpb24oQSl7aGsoYSxwKTt0aHJvdyBBO30pfVxuZnVuY3Rpb24gaGsoYSxiKXtpZihiKXt2YXIgYz1iLm1lc3NhZ2VDaGFubmVsLGQ9Yi5vbk1lc3NhZ2U7YyYmKGMucG9ydDEucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIixkKSxjLnBvcnQxLmNsb3NlKCkpO1VhKGEuYSxmdW5jdGlvbihlKXtyZXR1cm4gZT09Yn0pfX1may5wcm90b3R5cGUuY2xvc2U9ZnVuY3Rpb24oKXtmb3IoOzA8dGhpcy5hLmxlbmd0aDspaGsodGhpcyx0aGlzLmFbMF0pO3RoaXMuYj0hMH07ZnVuY3Rpb24gaWsoKXtpZighamsoKSl0aHJvdyBuZXcgdShcIndlYi1zdG9yYWdlLXVuc3VwcG9ydGVkXCIpO3RoaXMuYz17fTt0aGlzLmE9W107dGhpcy5iPTA7dGhpcy51PWwuaW5kZXhlZERCO3RoaXMudHlwZT1cImluZGV4ZWREQlwiO3RoaXMuZz10aGlzLmw9dGhpcy5mPXRoaXMuaT1udWxsO3RoaXMucz0hMTt0aGlzLmg9bnVsbDt2YXIgYT10aGlzO0dlKCkmJnNlbGY/KHRoaXMubD1jaygpLGRrKHRoaXMubCxcImtleUNoYW5nZWRcIixmdW5jdGlvbihiLGMpe3JldHVybiBrayhhKS50aGVuKGZ1bmN0aW9uKGQpezA8ZC5sZW5ndGgmJngoYS5hLGZ1bmN0aW9uKGUpe2UoZCl9KTtyZXR1cm57a2V5UHJvY2Vzc2VkOlNhKGQsYy5rZXkpfX0pfSksZGsodGhpcy5sLFwicGluZ1wiLGZ1bmN0aW9uKCl7cmV0dXJuIEUoW1wia2V5Q2hhbmdlZFwiXSl9KSk6YmYoKS50aGVuKGZ1bmN0aW9uKGIpe2lmKGEuaD1iKWEuZz1uZXcgZmsobmV3IGVrKGIpKSxnayhhLmcsXCJwaW5nXCIsbnVsbCwhMCkudGhlbihmdW5jdGlvbihjKXtjWzBdLmZ1bGZpbGxlZCYmXG5TYShjWzBdLnZhbHVlLFwia2V5Q2hhbmdlZFwiKSYmKGEucz0hMCl9KS5vKGZ1bmN0aW9uKCl7fSl9KX12YXIgbGs7ZnVuY3Rpb24gbWsoYSl7cmV0dXJuIG5ldyBEKGZ1bmN0aW9uKGIsYyl7dmFyIGQ9YS51LmRlbGV0ZURhdGFiYXNlKFwiZmlyZWJhc2VMb2NhbFN0b3JhZ2VEYlwiKTtkLm9uc3VjY2Vzcz1mdW5jdGlvbigpe2IoKX07ZC5vbmVycm9yPWZ1bmN0aW9uKGUpe2MoRXJyb3IoZS50YXJnZXQuZXJyb3IpKX19KX1cbmZ1bmN0aW9uIG5rKGEpe3JldHVybiBuZXcgRChmdW5jdGlvbihiLGMpe3ZhciBkPWEudS5vcGVuKFwiZmlyZWJhc2VMb2NhbFN0b3JhZ2VEYlwiLDEpO2Qub25lcnJvcj1mdW5jdGlvbihlKXt0cnl7ZS5wcmV2ZW50RGVmYXVsdCgpfWNhdGNoKGYpe31jKEVycm9yKGUudGFyZ2V0LmVycm9yKSl9O2Qub251cGdyYWRlbmVlZGVkPWZ1bmN0aW9uKGUpe2U9ZS50YXJnZXQucmVzdWx0O3RyeXtlLmNyZWF0ZU9iamVjdFN0b3JlKFwiZmlyZWJhc2VMb2NhbFN0b3JhZ2VcIix7a2V5UGF0aDpcImZiYXNlX2tleVwifSl9Y2F0Y2goZil7YyhmKX19O2Qub25zdWNjZXNzPWZ1bmN0aW9uKGUpe2U9ZS50YXJnZXQucmVzdWx0O2Uub2JqZWN0U3RvcmVOYW1lcy5jb250YWlucyhcImZpcmViYXNlTG9jYWxTdG9yYWdlXCIpP2IoZSk6bWsoYSkudGhlbihmdW5jdGlvbigpe3JldHVybiBuayhhKX0pLnRoZW4oZnVuY3Rpb24oZil7YihmKX0pLm8oZnVuY3Rpb24oZil7YyhmKX0pfX0pfVxuZnVuY3Rpb24gb2soYSl7YS5tfHwoYS5tPW5rKGEpKTtyZXR1cm4gYS5tfWZ1bmN0aW9uIGprKCl7dHJ5e3JldHVybiEhbC5pbmRleGVkREJ9Y2F0Y2goYSl7cmV0dXJuITF9fWZ1bmN0aW9uIHBrKGEpe3JldHVybiBhLm9iamVjdFN0b3JlKFwiZmlyZWJhc2VMb2NhbFN0b3JhZ2VcIil9ZnVuY3Rpb24gcWsoYSxiKXtyZXR1cm4gYS50cmFuc2FjdGlvbihbXCJmaXJlYmFzZUxvY2FsU3RvcmFnZVwiXSxiP1wicmVhZHdyaXRlXCI6XCJyZWFkb25seVwiKX1mdW5jdGlvbiByayhhKXtyZXR1cm4gbmV3IEQoZnVuY3Rpb24oYixjKXthLm9uc3VjY2Vzcz1mdW5jdGlvbihkKXtkJiZkLnRhcmdldD9iKGQudGFyZ2V0LnJlc3VsdCk6YigpfTthLm9uZXJyb3I9ZnVuY3Rpb24oZCl7YyhkLnRhcmdldC5lcnJvcil9fSl9az1pay5wcm90b3R5cGU7XG5rLnNldD1mdW5jdGlvbihhLGIpe3ZhciBjPSExLGQsZT10aGlzO3JldHVybiBvayh0aGlzKS50aGVuKGZ1bmN0aW9uKGYpe2Q9ZjtmPXBrKHFrKGQsITApKTtyZXR1cm4gcmsoZi5nZXQoYSkpfSkudGhlbihmdW5jdGlvbihmKXt2YXIgZz1wayhxayhkLCEwKSk7aWYoZilyZXR1cm4gZi52YWx1ZT1iLHJrKGcucHV0KGYpKTtlLmIrKztjPSEwO2Y9e307Zi5mYmFzZV9rZXk9YTtmLnZhbHVlPWI7cmV0dXJuIHJrKGcuYWRkKGYpKX0pLnRoZW4oZnVuY3Rpb24oKXtlLmNbYV09YjtyZXR1cm4gc2soZSxhKX0pLm1hKGZ1bmN0aW9uKCl7YyYmZS5iLS19KX07ZnVuY3Rpb24gc2soYSxiKXtyZXR1cm4gYS5nJiZhLmgmJmFmKCk9PT1hLmg/Z2soYS5nLFwia2V5Q2hhbmdlZFwiLHtrZXk6Yn0sYS5zKS50aGVuKGZ1bmN0aW9uKCl7fSkubyhmdW5jdGlvbigpe30pOkUoKX1cbmsuZ2V0PWZ1bmN0aW9uKGEpe3JldHVybiBvayh0aGlzKS50aGVuKGZ1bmN0aW9uKGIpe3JldHVybiByayhwayhxayhiLCExKSkuZ2V0KGEpKX0pLnRoZW4oZnVuY3Rpb24oYil7cmV0dXJuIGImJmIudmFsdWV9KX07ay5UPWZ1bmN0aW9uKGEpe3ZhciBiPSExLGM9dGhpcztyZXR1cm4gb2sodGhpcykudGhlbihmdW5jdGlvbihkKXtiPSEwO2MuYisrO3JldHVybiByayhwayhxayhkLCEwKSlbXCJkZWxldGVcIl0oYSkpfSkudGhlbihmdW5jdGlvbigpe2RlbGV0ZSBjLmNbYV07cmV0dXJuIHNrKGMsYSl9KS5tYShmdW5jdGlvbigpe2ImJmMuYi0tfSl9O1xuZnVuY3Rpb24ga2soYSl7cmV0dXJuIG9rKGEpLnRoZW4oZnVuY3Rpb24oYil7dmFyIGM9cGsocWsoYiwhMSkpO3JldHVybiBjLmdldEFsbD9yayhjLmdldEFsbCgpKTpuZXcgRChmdW5jdGlvbihkLGUpe3ZhciBmPVtdLGc9Yy5vcGVuQ3Vyc29yKCk7Zy5vbnN1Y2Nlc3M9ZnVuY3Rpb24oaCl7KGg9aC50YXJnZXQucmVzdWx0KT8oZi5wdXNoKGgudmFsdWUpLGhbXCJjb250aW51ZVwiXSgpKTpkKGYpfTtnLm9uZXJyb3I9ZnVuY3Rpb24oaCl7ZShoLnRhcmdldC5lcnJvcil9fSl9KS50aGVuKGZ1bmN0aW9uKGIpe3ZhciBjPXt9LGQ9W107aWYoMD09YS5iKXtmb3IoZD0wO2Q8Yi5sZW5ndGg7ZCsrKWNbYltkXS5mYmFzZV9rZXldPWJbZF0udmFsdWU7ZD1xZShhLmMsYyk7YS5jPWN9cmV0dXJuIGR9KX1rLmJhPWZ1bmN0aW9uKGEpezA9PXRoaXMuYS5sZW5ndGgmJnRrKHRoaXMpO3RoaXMuYS5wdXNoKGEpfTtcbmsuaGE9ZnVuY3Rpb24oYSl7VWEodGhpcy5hLGZ1bmN0aW9uKGIpe3JldHVybiBiPT1hfSk7MD09dGhpcy5hLmxlbmd0aCYmdWsodGhpcyl9O2Z1bmN0aW9uIHRrKGEpe2Z1bmN0aW9uIGIoKXthLmY9c2V0VGltZW91dChmdW5jdGlvbigpe2EuaT1rayhhKS50aGVuKGZ1bmN0aW9uKGMpezA8Yy5sZW5ndGgmJngoYS5hLGZ1bmN0aW9uKGQpe2QoYyl9KX0pLnRoZW4oZnVuY3Rpb24oKXtiKCl9KS5vKGZ1bmN0aW9uKGMpe1wiU1RPUF9FVkVOVFwiIT1jLm1lc3NhZ2UmJmIoKX0pfSw4MDApfXVrKGEpO2IoKX1mdW5jdGlvbiB1ayhhKXthLmkmJmEuaS5jYW5jZWwoXCJTVE9QX0VWRU5UXCIpO2EuZiYmKGNsZWFyVGltZW91dChhLmYpLGEuZj1udWxsKX07ZnVuY3Rpb24gdmsoYSl7dmFyIGI9dGhpcyxjPW51bGw7dGhpcy5hPVtdO3RoaXMudHlwZT1cImluZGV4ZWREQlwiO3RoaXMuYz1hO3RoaXMuYj1FKCkudGhlbihmdW5jdGlvbigpe2lmKGprKCkpe3ZhciBkPU5lKCksZT1cIl9fc2FrXCIrZDtsa3x8KGxrPW5ldyBpayk7Yz1saztyZXR1cm4gYy5zZXQoZSxkKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIGMuZ2V0KGUpfSkudGhlbihmdW5jdGlvbihmKXtpZihmIT09ZCl0aHJvdyBFcnJvcihcImluZGV4ZWREQiBub3Qgc3VwcG9ydGVkIVwiKTtyZXR1cm4gYy5UKGUpfSkudGhlbihmdW5jdGlvbigpe3JldHVybiBjfSkubyhmdW5jdGlvbigpe3JldHVybiBiLmN9KX1yZXR1cm4gYi5jfSkudGhlbihmdW5jdGlvbihkKXtiLnR5cGU9ZC50eXBlO2QuYmEoZnVuY3Rpb24oZSl7eChiLmEsZnVuY3Rpb24oZil7ZihlKX0pfSk7cmV0dXJuIGR9KX1rPXZrLnByb3RvdHlwZTtrLmdldD1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5iLnRoZW4oZnVuY3Rpb24oYil7cmV0dXJuIGIuZ2V0KGEpfSl9O1xuay5zZXQ9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5iLnRoZW4oZnVuY3Rpb24oYyl7cmV0dXJuIGMuc2V0KGEsYil9KX07ay5UPWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmIudGhlbihmdW5jdGlvbihiKXtyZXR1cm4gYi5UKGEpfSl9O2suYmE9ZnVuY3Rpb24oYSl7dGhpcy5hLnB1c2goYSl9O2suaGE9ZnVuY3Rpb24oYSl7VWEodGhpcy5hLGZ1bmN0aW9uKGIpe3JldHVybiBiPT1hfSl9O2Z1bmN0aW9uIHdrKCl7dGhpcy5hPXt9O3RoaXMudHlwZT1cImluTWVtb3J5XCJ9az13ay5wcm90b3R5cGU7ay5nZXQ9ZnVuY3Rpb24oYSl7cmV0dXJuIEUodGhpcy5hW2FdKX07ay5zZXQ9ZnVuY3Rpb24oYSxiKXt0aGlzLmFbYV09YjtyZXR1cm4gRSgpfTtrLlQ9ZnVuY3Rpb24oYSl7ZGVsZXRlIHRoaXMuYVthXTtyZXR1cm4gRSgpfTtrLmJhPWZ1bmN0aW9uKCl7fTtrLmhhPWZ1bmN0aW9uKCl7fTtmdW5jdGlvbiB4aygpe2lmKCF5aygpKXtpZihcIk5vZGVcIj09SGUoKSl0aHJvdyBuZXcgdShcImludGVybmFsLWVycm9yXCIsXCJUaGUgTG9jYWxTdG9yYWdlIGNvbXBhdGliaWxpdHkgbGlicmFyeSB3YXMgbm90IGZvdW5kLlwiKTt0aHJvdyBuZXcgdShcIndlYi1zdG9yYWdlLXVuc3VwcG9ydGVkXCIpO310aGlzLmE9emsoKXx8ZmlyZWJhc2UuSU5URVJOQUwubm9kZS5sb2NhbFN0b3JhZ2U7dGhpcy50eXBlPVwibG9jYWxTdG9yYWdlXCJ9ZnVuY3Rpb24gemsoKXt0cnl7dmFyIGE9bC5sb2NhbFN0b3JhZ2UsYj1OZSgpO2EmJihhLnNldEl0ZW0oYixcIjFcIiksYS5yZW1vdmVJdGVtKGIpKTtyZXR1cm4gYX1jYXRjaChjKXtyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiB5aygpe3ZhciBhPVwiTm9kZVwiPT1IZSgpO2E9emsoKXx8YSYmZmlyZWJhc2UuSU5URVJOQUwubm9kZSYmZmlyZWJhc2UuSU5URVJOQUwubm9kZS5sb2NhbFN0b3JhZ2U7aWYoIWEpcmV0dXJuITE7dHJ5e3JldHVybiBhLnNldEl0ZW0oXCJfX3Nha1wiLFwiMVwiKSxhLnJlbW92ZUl0ZW0oXCJfX3Nha1wiKSwhMH1jYXRjaChiKXtyZXR1cm4hMX19az14ay5wcm90b3R5cGU7ay5nZXQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcztyZXR1cm4gRSgpLnRoZW4oZnVuY3Rpb24oKXt2YXIgYz1iLmEuZ2V0SXRlbShhKTtyZXR1cm4gVGUoYyl9KX07ay5zZXQ9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzO3JldHVybiBFKCkudGhlbihmdW5jdGlvbigpe3ZhciBkPVJlKGIpO251bGw9PT1kP2MuVChhKTpjLmEuc2V0SXRlbShhLGQpfSl9O2suVD1mdW5jdGlvbihhKXt2YXIgYj10aGlzO3JldHVybiBFKCkudGhlbihmdW5jdGlvbigpe2IuYS5yZW1vdmVJdGVtKGEpfSl9O1xuay5iYT1mdW5jdGlvbihhKXtsLndpbmRvdyYmamQobC53aW5kb3csXCJzdG9yYWdlXCIsYSl9O2suaGE9ZnVuY3Rpb24oYSl7bC53aW5kb3cmJnRkKGwud2luZG93LFwic3RvcmFnZVwiLGEpfTtmdW5jdGlvbiBBaygpe3RoaXMudHlwZT1cIm51bGxTdG9yYWdlXCJ9az1Bay5wcm90b3R5cGU7ay5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gRShudWxsKX07ay5zZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gRSgpfTtrLlQ9ZnVuY3Rpb24oKXtyZXR1cm4gRSgpfTtrLmJhPWZ1bmN0aW9uKCl7fTtrLmhhPWZ1bmN0aW9uKCl7fTtmdW5jdGlvbiBCaygpe2lmKCFDaygpKXtpZihcIk5vZGVcIj09SGUoKSl0aHJvdyBuZXcgdShcImludGVybmFsLWVycm9yXCIsXCJUaGUgU2Vzc2lvblN0b3JhZ2UgY29tcGF0aWJpbGl0eSBsaWJyYXJ5IHdhcyBub3QgZm91bmQuXCIpO3Rocm93IG5ldyB1KFwid2ViLXN0b3JhZ2UtdW5zdXBwb3J0ZWRcIik7fXRoaXMuYT1EaygpfHxmaXJlYmFzZS5JTlRFUk5BTC5ub2RlLnNlc3Npb25TdG9yYWdlO3RoaXMudHlwZT1cInNlc3Npb25TdG9yYWdlXCJ9ZnVuY3Rpb24gRGsoKXt0cnl7dmFyIGE9bC5zZXNzaW9uU3RvcmFnZSxiPU5lKCk7YSYmKGEuc2V0SXRlbShiLFwiMVwiKSxhLnJlbW92ZUl0ZW0oYikpO3JldHVybiBhfWNhdGNoKGMpe3JldHVybiBudWxsfX1cbmZ1bmN0aW9uIENrKCl7dmFyIGE9XCJOb2RlXCI9PUhlKCk7YT1EaygpfHxhJiZmaXJlYmFzZS5JTlRFUk5BTC5ub2RlJiZmaXJlYmFzZS5JTlRFUk5BTC5ub2RlLnNlc3Npb25TdG9yYWdlO2lmKCFhKXJldHVybiExO3RyeXtyZXR1cm4gYS5zZXRJdGVtKFwiX19zYWtcIixcIjFcIiksYS5yZW1vdmVJdGVtKFwiX19zYWtcIiksITB9Y2F0Y2goYil7cmV0dXJuITF9fWs9QmsucHJvdG90eXBlO2suZ2V0PWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXM7cmV0dXJuIEUoKS50aGVuKGZ1bmN0aW9uKCl7dmFyIGM9Yi5hLmdldEl0ZW0oYSk7cmV0dXJuIFRlKGMpfSl9O2suc2V0PWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcztyZXR1cm4gRSgpLnRoZW4oZnVuY3Rpb24oKXt2YXIgZD1SZShiKTtudWxsPT09ZD9jLlQoYSk6Yy5hLnNldEl0ZW0oYSxkKX0pfTtrLlQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcztyZXR1cm4gRSgpLnRoZW4oZnVuY3Rpb24oKXtiLmEucmVtb3ZlSXRlbShhKX0pfTtrLmJhPWZ1bmN0aW9uKCl7fTtcbmsuaGE9ZnVuY3Rpb24oKXt9O2Z1bmN0aW9uIEVrKCl7dmFyIGE9e307YS5Ccm93c2VyPUZrO2EuTm9kZT1HazthLlJlYWN0TmF0aXZlPUhrO2EuV29ya2VyPUlrO3RoaXMuYT1hW0hlKCldfXZhciBKayxGaz17Rjp4aywkYTpCa30sR2s9e0Y6eGssJGE6Qmt9LEhrPXtGOlpqLCRhOkFrfSxJaz17Rjp4aywkYTpBa307LypcblxuIENvcHlyaWdodCAyMDE3IEdvb2dsZSBMTENcblxuIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cbnZhciBLaz17b2Q6XCJsb2NhbFwiLE5PTkU6XCJub25lXCIscWQ6XCJzZXNzaW9uXCJ9O2Z1bmN0aW9uIExrKGEpe3ZhciBiPW5ldyB1KFwiaW52YWxpZC1wZXJzaXN0ZW5jZS10eXBlXCIpLGM9bmV3IHUoXCJ1bnN1cHBvcnRlZC1wZXJzaXN0ZW5jZS10eXBlXCIpO2E6e2ZvcihkIGluIEtrKWlmKEtrW2RdPT1hKXt2YXIgZD0hMDticmVhayBhfWQ9ITF9aWYoIWR8fFwic3RyaW5nXCIhPT10eXBlb2YgYSl0aHJvdyBiO3N3aXRjaChIZSgpKXtjYXNlIFwiUmVhY3ROYXRpdmVcIjppZihcInNlc3Npb25cIj09PWEpdGhyb3cgYzticmVhaztjYXNlIFwiTm9kZVwiOmlmKFwibm9uZVwiIT09YSl0aHJvdyBjO2JyZWFrO2Nhc2UgXCJXb3JrZXJcIjppZihcInNlc3Npb25cIj09PWF8fCFqaygpJiZcIm5vbmVcIiE9PWEpdGhyb3cgYzticmVhaztkZWZhdWx0OmlmKCFNZSgpJiZcIm5vbmVcIiE9PWEpdGhyb3cgYzt9fVxuZnVuY3Rpb24gTWsoKXt2YXIgYT0hVWUoSSgpKSYmRmUoKT8hMDohMSxiPVFlKCksYz1NZSgpO3RoaXMubT1hO3RoaXMuaD1iO3RoaXMubD1jO3RoaXMuYT17fTtKa3x8KEprPW5ldyBFayk7YT1Kazt0cnl7dGhpcy5nPSFuZSgpJiYkZSgpfHwhbC5pbmRleGVkREI/bmV3IGEuYS5GOm5ldyB2ayhHZSgpP25ldyB3azpuZXcgYS5hLkYpfWNhdGNoKGQpe3RoaXMuZz1uZXcgd2ssdGhpcy5oPSEwfXRyeXt0aGlzLmk9bmV3IGEuYS4kYX1jYXRjaChkKXt0aGlzLmk9bmV3IHdrfXRoaXMudT1uZXcgd2s7dGhpcy5mPXIodGhpcy5WYix0aGlzKTt0aGlzLmI9e319dmFyIE5rO2Z1bmN0aW9uIE9rKCl7Tmt8fChOaz1uZXcgTWspO3JldHVybiBOa31mdW5jdGlvbiBQayhhLGIpe3N3aXRjaChiKXtjYXNlIFwic2Vzc2lvblwiOnJldHVybiBhLmk7Y2FzZSBcIm5vbmVcIjpyZXR1cm4gYS51O2RlZmF1bHQ6cmV0dXJuIGEuZ319XG5mdW5jdGlvbiBRayhhLGIpe3JldHVyblwiZmlyZWJhc2U6XCIrYS5uYW1lKyhiP1wiOlwiK2I6XCJcIil9ZnVuY3Rpb24gUmsoYSxiLGMpe3ZhciBkPVFrKGIsYyksZT1QayhhLGIuRik7cmV0dXJuIGEuZ2V0KGIsYykudGhlbihmdW5jdGlvbihmKXt2YXIgZz1udWxsO3RyeXtnPVRlKGwubG9jYWxTdG9yYWdlLmdldEl0ZW0oZCkpfWNhdGNoKGgpe31pZihnJiYhZilyZXR1cm4gbC5sb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShkKSxhLnNldChiLGcsYyk7ZyYmZiYmXCJsb2NhbFN0b3JhZ2VcIiE9ZS50eXBlJiZsLmxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKGQpfSl9az1Nay5wcm90b3R5cGU7ay5nZXQ9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUGsodGhpcyxhLkYpLmdldChRayhhLGIpKX07ZnVuY3Rpb24gU2soYSxiLGMpe2M9UWsoYixjKTtcImxvY2FsXCI9PWIuRiYmKGEuYltjXT1udWxsKTtyZXR1cm4gUGsoYSxiLkYpLlQoYyl9XG5rLnNldD1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9UWsoYSxjKSxlPXRoaXMsZj1Qayh0aGlzLGEuRik7cmV0dXJuIGYuc2V0KGQsYikudGhlbihmdW5jdGlvbigpe3JldHVybiBmLmdldChkKX0pLnRoZW4oZnVuY3Rpb24oZyl7XCJsb2NhbFwiPT1hLkYmJihlLmJbZF09Zyl9KX07ay5hZGRMaXN0ZW5lcj1mdW5jdGlvbihhLGIsYyl7YT1RayhhLGIpO3RoaXMubCYmKHRoaXMuYlthXT1sLmxvY2FsU3RvcmFnZS5nZXRJdGVtKGEpKTtqYih0aGlzLmEpJiYoUGsodGhpcyxcImxvY2FsXCIpLmJhKHRoaXMuZiksdGhpcy5ofHwobmUoKXx8ISRlKCkpJiZsLmluZGV4ZWREQnx8IXRoaXMubHx8VGsodGhpcykpO3RoaXMuYVthXXx8KHRoaXMuYVthXT1bXSk7dGhpcy5hW2FdLnB1c2goYyl9O1xuay5yZW1vdmVMaXN0ZW5lcj1mdW5jdGlvbihhLGIsYyl7YT1RayhhLGIpO3RoaXMuYVthXSYmKFVhKHRoaXMuYVthXSxmdW5jdGlvbihkKXtyZXR1cm4gZD09Y30pLDA9PXRoaXMuYVthXS5sZW5ndGgmJmRlbGV0ZSB0aGlzLmFbYV0pO2piKHRoaXMuYSkmJihQayh0aGlzLFwibG9jYWxcIikuaGEodGhpcy5mKSxVayh0aGlzKSl9O2Z1bmN0aW9uIFRrKGEpe1VrKGEpO2EuYz1zZXRJbnRlcnZhbChmdW5jdGlvbigpe2Zvcih2YXIgYiBpbiBhLmEpe3ZhciBjPWwubG9jYWxTdG9yYWdlLmdldEl0ZW0oYiksZD1hLmJbYl07YyE9ZCYmKGEuYltiXT1jLGM9bmV3IFljKHt0eXBlOlwic3RvcmFnZVwiLGtleTpiLHRhcmdldDp3aW5kb3csb2xkVmFsdWU6ZCxuZXdWYWx1ZTpjLGE6ITB9KSxhLlZiKGMpKX19LDFFMyl9ZnVuY3Rpb24gVWsoYSl7YS5jJiYoY2xlYXJJbnRlcnZhbChhLmMpLGEuYz1udWxsKX1cbmsuVmI9ZnVuY3Rpb24oYSl7aWYoYSYmYS5mKXt2YXIgYj1hLmEua2V5O2lmKG51bGw9PWIpZm9yKHZhciBjIGluIHRoaXMuYSl7dmFyIGQ9dGhpcy5iW2NdO1widW5kZWZpbmVkXCI9PT10eXBlb2YgZCYmKGQ9bnVsbCk7dmFyIGU9bC5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShjKTtlIT09ZCYmKHRoaXMuYltjXT1lLHRoaXMuaWIoYykpfWVsc2UgaWYoMD09Yi5pbmRleE9mKFwiZmlyZWJhc2U6XCIpJiZ0aGlzLmFbYl0pe1widW5kZWZpbmVkXCIhPT10eXBlb2YgYS5hLmE/UGsodGhpcyxcImxvY2FsXCIpLmhhKHRoaXMuZik6VWsodGhpcyk7aWYodGhpcy5tKWlmKGM9bC5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShiKSxkPWEuYS5uZXdWYWx1ZSxkIT09YyludWxsIT09ZD9sLmxvY2FsU3RvcmFnZS5zZXRJdGVtKGIsZCk6bC5sb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShiKTtlbHNlIGlmKHRoaXMuYltiXT09PWQmJlwidW5kZWZpbmVkXCI9PT10eXBlb2YgYS5hLmEpcmV0dXJuO3ZhciBmPXRoaXM7Yz1mdW5jdGlvbigpe2lmKFwidW5kZWZpbmVkXCIhPT1cbnR5cGVvZiBhLmEuYXx8Zi5iW2JdIT09bC5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShiKSlmLmJbYl09bC5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShiKSxmLmliKGIpfTtTYiYmY2MmJjEwPT1jYyYmbC5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShiKSE9PWEuYS5uZXdWYWx1ZSYmYS5hLm5ld1ZhbHVlIT09YS5hLm9sZFZhbHVlP3NldFRpbWVvdXQoYywxMCk6YygpfX1lbHNlIHgoYSxyKHRoaXMuaWIsdGhpcykpfTtrLmliPWZ1bmN0aW9uKGEpe3RoaXMuYVthXSYmeCh0aGlzLmFbYV0sZnVuY3Rpb24oYil7YigpfSl9O2Z1bmN0aW9uIFZrKGEpe3RoaXMuYT1hO3RoaXMuYj1PaygpfXZhciBXaz17bmFtZTpcImF1dGhFdmVudFwiLEY6XCJsb2NhbFwifTtmdW5jdGlvbiBYayhhKXtyZXR1cm4gYS5iLmdldChXayxhLmEpLnRoZW4oZnVuY3Rpb24oYil7cmV0dXJuIHBoKGIpfSl9O2Z1bmN0aW9uIFlrKCl7dGhpcy5hPU9rKCl9O2Z1bmN0aW9uIFprKCl7dGhpcy5iPS0xfTtmdW5jdGlvbiAkayhhLGIpe3RoaXMuYj1hbDt0aGlzLmY9bC5VaW50OEFycmF5P25ldyBVaW50OEFycmF5KHRoaXMuYik6QXJyYXkodGhpcy5iKTt0aGlzLmc9dGhpcy5jPTA7dGhpcy5hPVtdO3RoaXMuaT1hO3RoaXMuaD1iO3RoaXMubD1sLkludDMyQXJyYXk/bmV3IEludDMyQXJyYXkoNjQpOkFycmF5KDY0KTt2b2lkIDA9PT1ibCYmKGwuSW50MzJBcnJheT9ibD1uZXcgSW50MzJBcnJheShjbCk6Ymw9Y2wpO3RoaXMucmVzZXQoKX12YXIgYmw7dCgkayxaayk7Zm9yKHZhciBhbD02NCxkbD1hbC0xLGVsPVtdLGZsPTA7Zmw8ZGw7ZmwrKyllbFtmbF09MDt2YXIgZ2w9VmEoMTI4LGVsKTskay5wcm90b3R5cGUucmVzZXQ9ZnVuY3Rpb24oKXt0aGlzLmc9dGhpcy5jPTA7dGhpcy5hPWwuSW50MzJBcnJheT9uZXcgSW50MzJBcnJheSh0aGlzLmgpOldhKHRoaXMuaCl9O1xuZnVuY3Rpb24gaGwoYSl7Zm9yKHZhciBiPWEuZixjPWEubCxkPTAsZT0wO2U8Yi5sZW5ndGg7KWNbZCsrXT1iW2VdPDwyNHxiW2UrMV08PDE2fGJbZSsyXTw8OHxiW2UrM10sZT00KmQ7Zm9yKGI9MTY7NjQ+YjtiKyspe2U9Y1tiLTE1XXwwO2Q9Y1tiLTJdfDA7dmFyIGY9KGNbYi0xNl18MCkrKChlPj4+N3xlPDwyNSleKGU+Pj4xOHxlPDwxNCleZT4+PjMpfDAsZz0oY1tiLTddfDApKygoZD4+PjE3fGQ8PDE1KV4oZD4+PjE5fGQ8PDEzKV5kPj4+MTApfDA7Y1tiXT1mK2d8MH1kPWEuYVswXXwwO2U9YS5hWzFdfDA7dmFyIGg9YS5hWzJdfDAsbT1hLmFbM118MCxwPWEuYVs0XXwwLHY9YS5hWzVdfDAsQz1hLmFbNl18MDtmPWEuYVs3XXwwO2ZvcihiPTA7NjQ+YjtiKyspe3ZhciBBPSgoZD4+PjJ8ZDw8MzApXihkPj4+MTN8ZDw8MTkpXihkPj4+MjJ8ZDw8MTApKSsoZCZlXmQmaF5lJmgpfDA7Zz1wJnZefnAmQztmPWYrKChwPj4+NnxwPDwyNileKHA+Pj4xMXxwPDwyMSleKHA+Pj4yNXxwPDxcbjcpKXwwO2c9ZysoYmxbYl18MCl8MDtnPWYrKGcrKGNbYl18MCl8MCl8MDtmPUM7Qz12O3Y9cDtwPW0rZ3wwO209aDtoPWU7ZT1kO2Q9ZytBfDB9YS5hWzBdPWEuYVswXStkfDA7YS5hWzFdPWEuYVsxXStlfDA7YS5hWzJdPWEuYVsyXStofDA7YS5hWzNdPWEuYVszXSttfDA7YS5hWzRdPWEuYVs0XStwfDA7YS5hWzVdPWEuYVs1XSt2fDA7YS5hWzZdPWEuYVs2XStDfDA7YS5hWzddPWEuYVs3XStmfDB9XG5mdW5jdGlvbiBpbChhLGIsYyl7dm9pZCAwPT09YyYmKGM9Yi5sZW5ndGgpO3ZhciBkPTAsZT1hLmM7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBiKWZvcig7ZDxjOylhLmZbZSsrXT1iLmNoYXJDb2RlQXQoZCsrKSxlPT1hLmImJihobChhKSxlPTApO2Vsc2UgaWYobWEoYikpZm9yKDtkPGM7KXt2YXIgZj1iW2QrK107aWYoIShcIm51bWJlclwiPT10eXBlb2YgZiYmMDw9ZiYmMjU1Pj1mJiZmPT0oZnwwKSkpdGhyb3cgRXJyb3IoXCJtZXNzYWdlIG11c3QgYmUgYSBieXRlIGFycmF5XCIpO2EuZltlKytdPWY7ZT09YS5iJiYoaGwoYSksZT0wKX1lbHNlIHRocm93IEVycm9yKFwibWVzc2FnZSBtdXN0IGJlIHN0cmluZyBvciBhcnJheVwiKTthLmM9ZTthLmcrPWN9XG52YXIgY2w9WzExMTYzNTI0MDgsMTg5OTQ0NzQ0MSwzMDQ5MzIzNDcxLDM5MjEwMDk1NzMsOTYxOTg3MTYzLDE1MDg5NzA5OTMsMjQ1MzYzNTc0OCwyODcwNzYzMjIxLDM2MjQzODEwODAsMzEwNTk4NDAxLDYwNzIyNTI3OCwxNDI2ODgxOTg3LDE5MjUwNzgzODgsMjE2MjA3ODIwNiwyNjE0ODg4MTAzLDMyNDgyMjI1ODAsMzgzNTM5MDQwMSw0MDIyMjI0Nzc0LDI2NDM0NzA3OCw2MDQ4MDc2MjgsNzcwMjU1OTgzLDEyNDkxNTAxMjIsMTU1NTA4MTY5MiwxOTk2MDY0OTg2LDI1NTQyMjA4ODIsMjgyMTgzNDM0OSwyOTUyOTk2ODA4LDMyMTAzMTM2NzEsMzMzNjU3MTg5MSwzNTg0NTI4NzExLDExMzkyNjk5MywzMzgyNDE4OTUsNjY2MzA3MjA1LDc3MzUyOTkxMiwxMjk0NzU3MzcyLDEzOTYxODIyOTEsMTY5NTE4MzcwMCwxOTg2NjYxMDUxLDIxNzcwMjYzNTAsMjQ1Njk1NjAzNywyNzMwNDg1OTIxLDI4MjAzMDI0MTEsMzI1OTczMDgwMCwzMzQ1NzY0NzcxLDM1MTYwNjU4MTcsMzYwMDM1MjgwNCxcbjQwOTQ1NzE5MDksMjc1NDIzMzQ0LDQzMDIyNzczNCw1MDY5NDg2MTYsNjU5MDYwNTU2LDg4Mzk5Nzg3Nyw5NTgxMzk1NzEsMTMyMjgyMjIxOCwxNTM3MDAyMDYzLDE3NDc4NzM3NzksMTk1NTU2MjIyMiwyMDI0MTA0ODE1LDIyMjc3MzA0NTIsMjM2MTg1MjQyNCwyNDI4NDM2NDc0LDI3NTY3MzQxODcsMzIwNDAzMTQ3OSwzMzI5MzI1Mjk4XTtmdW5jdGlvbiBqbCgpeyRrLmNhbGwodGhpcyw4LGtsKX10KGpsLCRrKTt2YXIga2w9WzE3NzkwMzM3MDMsMzE0NDEzNDI3NywxMDEzOTA0MjQyLDI3NzM0ODA3NjIsMTM1OTg5MzExOSwyNjAwODIyOTI0LDUyODczNDYzNSwxNTQxNDU5MjI1XTtmdW5jdGlvbiBsbChhLGIsYyxkLGUpe3RoaXMudT1hO3RoaXMuaT1iO3RoaXMubD1jO3RoaXMubT1kfHxudWxsO3RoaXMucz1lfHxudWxsO3RoaXMuaD1iK1wiOlwiK2M7dGhpcy53PW5ldyBZazt0aGlzLmc9bmV3IFZrKHRoaXMuaCk7dGhpcy5mPW51bGw7dGhpcy5iPVtdO3RoaXMuYT10aGlzLmM9bnVsbH1mdW5jdGlvbiBtbChhKXtyZXR1cm4gbmV3IHUoXCJpbnZhbGlkLWNvcmRvdmEtY29uZmlndXJhdGlvblwiLGEpfWs9bGwucHJvdG90eXBlO1xuay5rYT1mdW5jdGlvbigpe3JldHVybiB0aGlzLkdhP3RoaXMuR2E6dGhpcy5HYT1DZSgpLnRoZW4oZnVuY3Rpb24oKXtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgSihcInVuaXZlcnNhbExpbmtzLnN1YnNjcmliZVwiLGwpKXRocm93IG1sKFwiY29yZG92YS11bml2ZXJzYWwtbGlua3MtcGx1Z2luLWZpeCBpcyBub3QgaW5zdGFsbGVkXCIpO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgSihcIkJ1aWxkSW5mby5wYWNrYWdlTmFtZVwiLGwpKXRocm93IG1sKFwiY29yZG92YS1wbHVnaW4tYnVpbGRpbmZvIGlzIG5vdCBpbnN0YWxsZWRcIik7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIEooXCJjb3Jkb3ZhLnBsdWdpbnMuYnJvd3NlcnRhYi5vcGVuVXJsXCIsbCkpdGhyb3cgbWwoXCJjb3Jkb3ZhLXBsdWdpbi1icm93c2VydGFiIGlzIG5vdCBpbnN0YWxsZWRcIik7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIEooXCJjb3Jkb3ZhLkluQXBwQnJvd3Nlci5vcGVuXCIsbCkpdGhyb3cgbWwoXCJjb3Jkb3ZhLXBsdWdpbi1pbmFwcGJyb3dzZXIgaXMgbm90IGluc3RhbGxlZFwiKTtcbn0sZnVuY3Rpb24oKXt0aHJvdyBuZXcgdShcImNvcmRvdmEtbm90LXJlYWR5XCIpO30pfTtmdW5jdGlvbiBubCgpe2Zvcih2YXIgYT0yMCxiPVtdOzA8YTspYi5wdXNoKFwiMTIzNDU2Nzg5MGFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVpcIi5jaGFyQXQoTWF0aC5mbG9vcig2MipNYXRoLnJhbmRvbSgpKSkpLGEtLTtyZXR1cm4gYi5qb2luKFwiXCIpfWZ1bmN0aW9uIG9sKGEpe3ZhciBiPW5ldyBqbDtpbChiLGEpO2E9W107dmFyIGM9OCpiLmc7NTY+Yi5jP2lsKGIsZ2wsNTYtYi5jKTppbChiLGdsLGIuYi0oYi5jLTU2KSk7Zm9yKHZhciBkPTYzOzU2PD1kO2QtLSliLmZbZF09YyYyNTUsYy89MjU2O2hsKGIpO2ZvcihkPWM9MDtkPGIuaTtkKyspZm9yKHZhciBlPTI0OzA8PWU7ZS09OClhW2MrK109Yi5hW2RdPj5lJjI1NTtyZXR1cm4gJGYoYSl9XG5rLkxiPWZ1bmN0aW9uKGEsYil7YihuZXcgdShcIm9wZXJhdGlvbi1ub3Qtc3VwcG9ydGVkLWluLXRoaXMtZW52aXJvbm1lbnRcIikpO3JldHVybiBFKCl9O2suSmI9ZnVuY3Rpb24oKXtyZXR1cm4gRihuZXcgdShcIm9wZXJhdGlvbi1ub3Qtc3VwcG9ydGVkLWluLXRoaXMtZW52aXJvbm1lbnRcIikpfTtrLlhiPWZ1bmN0aW9uKCl7cmV0dXJuITF9O2suVWI9ZnVuY3Rpb24oKXtyZXR1cm4hMH07ay5RYj1mdW5jdGlvbigpe3JldHVybiEwfTtcbmsuS2I9ZnVuY3Rpb24oYSxiLGMsZCl7aWYodGhpcy5jKXJldHVybiBGKG5ldyB1KFwicmVkaXJlY3Qtb3BlcmF0aW9uLXBlbmRpbmdcIikpO3ZhciBlPXRoaXMsZj1sLmRvY3VtZW50LGc9bnVsbCxoPW51bGwsbT1udWxsLHA9bnVsbDtyZXR1cm4gdGhpcy5jPUUoKS50aGVuKGZ1bmN0aW9uKCl7bmgoYik7cmV0dXJuIHBsKGUpfSkudGhlbihmdW5jdGlvbigpe3JldHVybiBxbChlLGEsYixjLGQpfSkudGhlbihmdW5jdGlvbigpe3JldHVybihuZXcgRChmdW5jdGlvbih2LEMpe2g9ZnVuY3Rpb24oKXt2YXIgQT1KKFwiY29yZG92YS5wbHVnaW5zLmJyb3dzZXJ0YWIuY2xvc2VcIixsKTt2KCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIEEmJkEoKTtlLmEmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmEuY2xvc2UmJihlLmEuY2xvc2UoKSxlLmE9bnVsbCk7cmV0dXJuITF9O2UuQ2EoaCk7bT1mdW5jdGlvbigpe2d8fChnPUJkKDJFMykudGhlbihmdW5jdGlvbigpe0MobmV3IHUoXCJyZWRpcmVjdC1jYW5jZWxsZWQtYnktdXNlclwiKSl9KSl9O1xucD1mdW5jdGlvbigpe1hlKCkmJm0oKX07Zi5hZGRFdmVudExpc3RlbmVyKFwicmVzdW1lXCIsbSwhMSk7SSgpLnRvTG93ZXJDYXNlKCkubWF0Y2goL2FuZHJvaWQvKXx8Zi5hZGRFdmVudExpc3RlbmVyKFwidmlzaWJpbGl0eWNoYW5nZVwiLHAsITEpfSkpLm8oZnVuY3Rpb24odil7cmV0dXJuIHJsKGUpLnRoZW4oZnVuY3Rpb24oKXt0aHJvdyB2O30pfSl9KS5tYShmdW5jdGlvbigpe20mJmYucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInJlc3VtZVwiLG0sITEpO3AmJmYucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInZpc2liaWxpdHljaGFuZ2VcIixwLCExKTtnJiZnLmNhbmNlbCgpO2gmJmUuUWEoaCk7ZS5jPW51bGx9KX07XG5mdW5jdGlvbiBxbChhLGIsYyxkLGUpe3ZhciBmPW5sKCksZz1uZXcgb2goYixkLG51bGwsZixuZXcgdShcIm5vLWF1dGgtZXZlbnRcIiksbnVsbCxlKSxoPUooXCJCdWlsZEluZm8ucGFja2FnZU5hbWVcIixsKTtpZihcInN0cmluZ1wiIT09dHlwZW9mIGgpdGhyb3cgbmV3IHUoXCJpbnZhbGlkLWNvcmRvdmEtY29uZmlndXJhdGlvblwiKTt2YXIgbT1KKFwiQnVpbGRJbmZvLmRpc3BsYXlOYW1lXCIsbCkscD17fTtpZihJKCkudG9Mb3dlckNhc2UoKS5tYXRjaCgvaXBob25lfGlwYWR8aXBvZC8pKXAuaWJpPWg7ZWxzZSBpZihJKCkudG9Mb3dlckNhc2UoKS5tYXRjaCgvYW5kcm9pZC8pKXAuYXBuPWg7ZWxzZSByZXR1cm4gRihuZXcgdShcIm9wZXJhdGlvbi1ub3Qtc3VwcG9ydGVkLWluLXRoaXMtZW52aXJvbm1lbnRcIikpO20mJihwLmFwcERpc3BsYXlOYW1lPW0pO2Y9b2woZik7cC5zZXNzaW9uSWQ9Zjt2YXIgdj1ZaihhLnUsYS5pLGEubCxiLGMsbnVsbCxkLGEubSxwLGEucyxlKTtyZXR1cm4gYS5rYSgpLnRoZW4oZnVuY3Rpb24oKXt2YXIgQz1cbmEuaDtyZXR1cm4gYS53LmEuc2V0KFdrLGcudigpLEMpfSkudGhlbihmdW5jdGlvbigpe3ZhciBDPUooXCJjb3Jkb3ZhLnBsdWdpbnMuYnJvd3NlcnRhYi5pc0F2YWlsYWJsZVwiLGwpO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBDKXRocm93IG5ldyB1KFwiaW52YWxpZC1jb3Jkb3ZhLWNvbmZpZ3VyYXRpb25cIik7dmFyIEE9bnVsbDtDKGZ1bmN0aW9uKFEpe2lmKFEpe0E9SihcImNvcmRvdmEucGx1Z2lucy5icm93c2VydGFiLm9wZW5VcmxcIixsKTtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgQSl0aHJvdyBuZXcgdShcImludmFsaWQtY29yZG92YS1jb25maWd1cmF0aW9uXCIpO0Eodil9ZWxzZXtBPUooXCJjb3Jkb3ZhLkluQXBwQnJvd3Nlci5vcGVuXCIsbCk7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIEEpdGhyb3cgbmV3IHUoXCJpbnZhbGlkLWNvcmRvdmEtY29uZmlndXJhdGlvblwiKTtRPUkoKTthLmE9QSh2LFEubWF0Y2goLyhpUGFkfGlQaG9uZXxpUG9kKS4qT1MgN19cXGQvaSl8fFEubWF0Y2goLyhpUGFkfGlQaG9uZXxpUG9kKS4qT1MgOF9cXGQvaSk/XG5cIl9ibGFua1wiOlwiX3N5c3RlbVwiLFwibG9jYXRpb249eWVzXCIpfX0pfSl9ZnVuY3Rpb24gc2woYSxiKXtmb3IodmFyIGM9MDtjPGEuYi5sZW5ndGg7YysrKXRyeXthLmJbY10oYil9Y2F0Y2goZCl7fX1mdW5jdGlvbiBwbChhKXthLmZ8fChhLmY9YS5rYSgpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gbmV3IEQoZnVuY3Rpb24oYil7ZnVuY3Rpb24gYyhkKXtiKGQpO2EuUWEoYyk7cmV0dXJuITF9YS5DYShjKTt0bChhKX0pfSkpO3JldHVybiBhLmZ9ZnVuY3Rpb24gcmwoYSl7dmFyIGI9bnVsbDtyZXR1cm4gWGsoYS5nKS50aGVuKGZ1bmN0aW9uKGMpe2I9YztjPWEuZztyZXR1cm4gU2soYy5iLFdrLGMuYSl9KS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIGJ9KX1cbmZ1bmN0aW9uIHRsKGEpe2Z1bmN0aW9uIGIoZyl7ZD0hMDtlJiZlLmNhbmNlbCgpO3JsKGEpLnRoZW4oZnVuY3Rpb24oaCl7dmFyIG09YztpZihoJiZnJiZnLnVybCl7dmFyIHA9bnVsbDttPXVnKGcudXJsKTstMSE9bS5pbmRleE9mKFwiL19fL2F1dGgvY2FsbGJhY2tcIikmJihwPVpkKG0pLHA9VGUoWWQocCxcImZpcmViYXNlRXJyb3JcIil8fG51bGwpLHA9KHA9XCJvYmplY3RcIj09PXR5cGVvZiBwP3dhKHApOm51bGwpP25ldyBvaChoLmMsaC5iLG51bGwsbnVsbCxwLG51bGwsaC5TKCkpOm5ldyBvaChoLmMsaC5iLG0saC5mLG51bGwsbnVsbCxoLlMoKSkpO209cHx8Y31zbChhLG0pfSl9dmFyIGM9bmV3IG9oKFwidW5rbm93blwiLG51bGwsbnVsbCxudWxsLG5ldyB1KFwibm8tYXV0aC1ldmVudFwiKSksZD0hMSxlPUJkKDUwMCkudGhlbihmdW5jdGlvbigpe3JldHVybiBybChhKS50aGVuKGZ1bmN0aW9uKCl7ZHx8c2woYSxjKX0pfSksZj1sLmhhbmRsZU9wZW5VUkw7bC5oYW5kbGVPcGVuVVJMPWZ1bmN0aW9uKGcpezA9PVxuZy50b0xvd2VyQ2FzZSgpLmluZGV4T2YoSihcIkJ1aWxkSW5mby5wYWNrYWdlTmFtZVwiLGwpLnRvTG93ZXJDYXNlKCkrXCI6Ly9cIikmJmIoe3VybDpnfSk7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpdHJ5e2YoZyl9Y2F0Y2goaCl7Y29uc29sZS5lcnJvcihoKX19O3JofHwocmg9bmV3IHFoKTtzaChiKX1rLkNhPWZ1bmN0aW9uKGEpe3RoaXMuYi5wdXNoKGEpO3BsKHRoaXMpLm8oZnVuY3Rpb24oYil7XCJhdXRoL2ludmFsaWQtY29yZG92YS1jb25maWd1cmF0aW9uXCI9PT1iLmNvZGUmJihiPW5ldyBvaChcInVua25vd25cIixudWxsLG51bGwsbnVsbCxuZXcgdShcIm5vLWF1dGgtZXZlbnRcIikpLGEoYikpfSl9O2suUWE9ZnVuY3Rpb24oYSl7VWEodGhpcy5iLGZ1bmN0aW9uKGIpe3JldHVybiBiPT1hfSl9O2Z1bmN0aW9uIHVsKGEpe3RoaXMuYT1hO3RoaXMuYj1PaygpfXZhciB2bD17bmFtZTpcInBlbmRpbmdSZWRpcmVjdFwiLEY6XCJzZXNzaW9uXCJ9O2Z1bmN0aW9uIHdsKGEpe3JldHVybiBhLmIuc2V0KHZsLFwicGVuZGluZ1wiLGEuYSl9ZnVuY3Rpb24geGwoYSl7cmV0dXJuIFNrKGEuYix2bCxhLmEpfWZ1bmN0aW9uIHlsKGEpe3JldHVybiBhLmIuZ2V0KHZsLGEuYSkudGhlbihmdW5jdGlvbihiKXtyZXR1cm5cInBlbmRpbmdcIj09Yn0pfTtmdW5jdGlvbiB6bChhLGIsYyl7dGhpcy5pPXt9O3RoaXMudz0wO3RoaXMuRD1hO3RoaXMudT1iO3RoaXMubT1jO3RoaXMuaD1bXTt0aGlzLmY9ITE7dGhpcy5sPXIodGhpcy5zLHRoaXMpO3RoaXMuYj1uZXcgQWw7dGhpcy5CPW5ldyBCbDt0aGlzLmc9bmV3IHVsKHRoaXMudStcIjpcIit0aGlzLm0pO3RoaXMuYz17fTt0aGlzLmMudW5rbm93bj10aGlzLmI7dGhpcy5jLnNpZ25JblZpYVJlZGlyZWN0PXRoaXMuYjt0aGlzLmMubGlua1ZpYVJlZGlyZWN0PXRoaXMuYjt0aGlzLmMucmVhdXRoVmlhUmVkaXJlY3Q9dGhpcy5iO3RoaXMuYy5zaWduSW5WaWFQb3B1cD10aGlzLkI7dGhpcy5jLmxpbmtWaWFQb3B1cD10aGlzLkI7dGhpcy5jLnJlYXV0aFZpYVBvcHVwPXRoaXMuQjt0aGlzLmE9Q2wodGhpcy5ELHRoaXMudSx0aGlzLm0sQWEpfVxuZnVuY3Rpb24gQ2woYSxiLGMsZCl7dmFyIGU9ZmlyZWJhc2UuU0RLX1ZFUlNJT058fG51bGw7cmV0dXJuIERlKCk/bmV3IGxsKGEsYixjLGUsZCk6bmV3IFNqKGEsYixjLGUsZCl9emwucHJvdG90eXBlLnJlc2V0PWZ1bmN0aW9uKCl7dGhpcy5mPSExO3RoaXMuYS5RYSh0aGlzLmwpO3RoaXMuYT1DbCh0aGlzLkQsdGhpcy51LHRoaXMubSk7dGhpcy5pPXt9fTtmdW5jdGlvbiBEbChhKXthLmZ8fChhLmY9ITAsYS5hLkNhKGEubCkpO3ZhciBiPWEuYTtyZXR1cm4gYS5hLmthKCkubyhmdW5jdGlvbihjKXthLmE9PWImJmEucmVzZXQoKTt0aHJvdyBjO30pfWZ1bmN0aW9uIEVsKGEpe2EuYS5VYigpJiZEbChhKS5vKGZ1bmN0aW9uKGIpe3ZhciBjPW5ldyBvaChcInVua25vd25cIixudWxsLG51bGwsbnVsbCxuZXcgdShcIm9wZXJhdGlvbi1ub3Qtc3VwcG9ydGVkLWluLXRoaXMtZW52aXJvbm1lbnRcIikpO0ZsKGIpJiZhLnMoYyl9KTthLmEuUWIoKXx8R2woYS5iKX1cbmZ1bmN0aW9uIEhsKGEsYil7U2EoYS5oLGIpfHxhLmgucHVzaChiKTthLmZ8fHlsKGEuZykudGhlbihmdW5jdGlvbihjKXtjP3hsKGEuZykudGhlbihmdW5jdGlvbigpe0RsKGEpLm8oZnVuY3Rpb24oZCl7dmFyIGU9bmV3IG9oKFwidW5rbm93blwiLG51bGwsbnVsbCxudWxsLG5ldyB1KFwib3BlcmF0aW9uLW5vdC1zdXBwb3J0ZWQtaW4tdGhpcy1lbnZpcm9ubWVudFwiKSk7RmwoZCkmJmEucyhlKX0pfSk6RWwoYSl9KS5vKGZ1bmN0aW9uKCl7RWwoYSl9KX1mdW5jdGlvbiBJbChhLGIpe1VhKGEuaCxmdW5jdGlvbihjKXtyZXR1cm4gYz09Yn0pfVxuemwucHJvdG90eXBlLnM9ZnVuY3Rpb24oYSl7aWYoIWEpdGhyb3cgbmV3IHUoXCJpbnZhbGlkLWF1dGgtZXZlbnRcIik7NkU1PD10YSgpLXRoaXMudyYmKHRoaXMuaT17fSx0aGlzLnc9MCk7aWYoYSYmYS5nZXRVaWQoKSYmdGhpcy5pLmhhc093blByb3BlcnR5KGEuZ2V0VWlkKCkpKXJldHVybiExO2Zvcih2YXIgYj0hMSxjPTA7Yzx0aGlzLmgubGVuZ3RoO2MrKyl7dmFyIGQ9dGhpcy5oW2NdO2lmKGQuQ2IoYS5jLGEuYikpe2lmKGI9dGhpcy5jW2EuY10pYi5oKGEsZCksYSYmKGEuZnx8YS5iKSYmKHRoaXMuaVthLmdldFVpZCgpXT0hMCx0aGlzLnc9dGEoKSk7Yj0hMDticmVha319R2wodGhpcy5iKTtyZXR1cm4gYn07dmFyIEpsPW5ldyBXZSgyRTMsMUU0KSxLbD1uZXcgV2UoM0U0LDZFNCk7emwucHJvdG90eXBlLnBhPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYi5wYSgpfTtcbmZ1bmN0aW9uIExsKGEsYixjLGQsZSxmLGcpe3JldHVybiBhLmEuSmIoYixjLGQsZnVuY3Rpb24oKXthLmZ8fChhLmY9ITAsYS5hLkNhKGEubCkpfSxmdW5jdGlvbigpe2EucmVzZXQoKX0sZSxmLGcpfWZ1bmN0aW9uIEZsKGEpe3JldHVybiBhJiZcImF1dGgvY29yZG92YS1ub3QtcmVhZHlcIj09YS5jb2RlPyEwOiExfVxuZnVuY3Rpb24gTWwoYSxiLGMsZCxlKXt2YXIgZjtyZXR1cm4gd2woYS5nKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIGEuYS5LYihiLGMsZCxlKS5vKGZ1bmN0aW9uKGcpe2lmKEZsKGcpKXRocm93IG5ldyB1KFwib3BlcmF0aW9uLW5vdC1zdXBwb3J0ZWQtaW4tdGhpcy1lbnZpcm9ubWVudFwiKTtmPWc7cmV0dXJuIHhsKGEuZykudGhlbihmdW5jdGlvbigpe3Rocm93IGY7fSl9KS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIGEuYS5YYigpP25ldyBEKGZ1bmN0aW9uKCl7fSk6eGwoYS5nKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIGEucGEoKX0pLnRoZW4oZnVuY3Rpb24oKXt9KS5vKGZ1bmN0aW9uKCl7fSl9KX0pfWZ1bmN0aW9uIE5sKGEsYixjLGQsZSl7cmV0dXJuIGEuYS5MYihkLGZ1bmN0aW9uKGYpe2IubGEoYyxudWxsLGYsZSl9LEpsLmdldCgpKX12YXIgT2w9e307XG5mdW5jdGlvbiBQbChhLGIsYyl7dmFyIGQ9YitcIjpcIitjO09sW2RdfHwoT2xbZF09bmV3IHpsKGEsYixjKSk7cmV0dXJuIE9sW2RdfWZ1bmN0aW9uIEFsKCl7dGhpcy5iPW51bGw7dGhpcy5mPVtdO3RoaXMuYz1bXTt0aGlzLmE9bnVsbDt0aGlzLmk9dGhpcy5nPSExfUFsLnByb3RvdHlwZS5yZXNldD1mdW5jdGlvbigpe3RoaXMuYj1udWxsO3RoaXMuYSYmKHRoaXMuYS5jYW5jZWwoKSx0aGlzLmE9bnVsbCl9O1xuQWwucHJvdG90eXBlLmg9ZnVuY3Rpb24oYSxiKXtpZihhKXt0aGlzLnJlc2V0KCk7dGhpcy5nPSEwO3ZhciBjPWEuYyxkPWEuYixlPWEuYSYmXCJhdXRoL3dlYi1zdG9yYWdlLXVuc3VwcG9ydGVkXCI9PWEuYS5jb2RlLGY9YS5hJiZcImF1dGgvb3BlcmF0aW9uLW5vdC1zdXBwb3J0ZWQtaW4tdGhpcy1lbnZpcm9ubWVudFwiPT1hLmEuY29kZTt0aGlzLmk9ISghZSYmIWYpO1widW5rbm93blwiIT1jfHxlfHxmP2EuYT8oUWwodGhpcywhMCxudWxsLGEuYSksRSgpKTpiLkRhKGMsZCk/UmwodGhpcyxhLGIpOkYobmV3IHUoXCJpbnZhbGlkLWF1dGgtZXZlbnRcIikpOihRbCh0aGlzLCExLG51bGwsbnVsbCksRSgpKX1lbHNlIEYobmV3IHUoXCJpbnZhbGlkLWF1dGgtZXZlbnRcIikpfTtmdW5jdGlvbiBHbChhKXthLmd8fChhLmc9ITAsUWwoYSwhMSxudWxsLG51bGwpKX1mdW5jdGlvbiBTbChhKXthLmcmJiFhLmkmJlFsKGEsITEsbnVsbCxudWxsKX1cbmZ1bmN0aW9uIFJsKGEsYixjKXtjPWMuRGEoYi5jLGIuYik7dmFyIGQ9Yi5nLGU9Yi5mLGY9Yi5pLGc9Yi5TKCksaD0hIWIuYy5tYXRjaCgvUmVkaXJlY3QkLyk7YyhkLGUsZyxmKS50aGVuKGZ1bmN0aW9uKG0pe1FsKGEsaCxtLG51bGwpfSkubyhmdW5jdGlvbihtKXtRbChhLGgsbnVsbCxtKX0pfWZ1bmN0aW9uIFRsKGEsYil7YS5iPWZ1bmN0aW9uKCl7cmV0dXJuIEYoYil9O2lmKGEuYy5sZW5ndGgpZm9yKHZhciBjPTA7YzxhLmMubGVuZ3RoO2MrKylhLmNbY10oYil9ZnVuY3Rpb24gVWwoYSxiKXthLmI9ZnVuY3Rpb24oKXtyZXR1cm4gRShiKX07aWYoYS5mLmxlbmd0aClmb3IodmFyIGM9MDtjPGEuZi5sZW5ndGg7YysrKWEuZltjXShiKX1mdW5jdGlvbiBRbChhLGIsYyxkKXtiP2Q/VGwoYSxkKTpVbChhLGMpOlVsKGEse3VzZXI6bnVsbH0pO2EuZj1bXTthLmM9W119XG5BbC5wcm90b3R5cGUucGE9ZnVuY3Rpb24oKXt2YXIgYT10aGlzO3JldHVybiBuZXcgRChmdW5jdGlvbihiLGMpe2EuYj9hLmIoKS50aGVuKGIsYyk6KGEuZi5wdXNoKGIpLGEuYy5wdXNoKGMpLFZsKGEpKX0pfTtmdW5jdGlvbiBWbChhKXt2YXIgYj1uZXcgdShcInRpbWVvdXRcIik7YS5hJiZhLmEuY2FuY2VsKCk7YS5hPUJkKEtsLmdldCgpKS50aGVuKGZ1bmN0aW9uKCl7YS5ifHwoYS5nPSEwLFFsKGEsITAsbnVsbCxiKSl9KX1mdW5jdGlvbiBCbCgpe31CbC5wcm90b3R5cGUuaD1mdW5jdGlvbihhLGIpe2lmKGEpe3ZhciBjPWEuYyxkPWEuYjthLmE/KGIubGEoYS5jLG51bGwsYS5hLGEuYiksRSgpKTpiLkRhKGMsZCk/V2woYSxiKTpGKG5ldyB1KFwiaW52YWxpZC1hdXRoLWV2ZW50XCIpKX1lbHNlIEYobmV3IHUoXCJpbnZhbGlkLWF1dGgtZXZlbnRcIikpfTtcbmZ1bmN0aW9uIFdsKGEsYil7dmFyIGM9YS5iLGQ9YS5jO2IuRGEoZCxjKShhLmcsYS5mLGEuUygpLGEuaSkudGhlbihmdW5jdGlvbihlKXtiLmxhKGQsZSxudWxsLGMpfSkubyhmdW5jdGlvbihlKXtiLmxhKGQsbnVsbCxlLGMpfSl9O2Z1bmN0aW9uIFhsKCl7dGhpcy5CYj0hMTtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcImFwcFZlcmlmaWNhdGlvbkRpc2FibGVkXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLkJifSxzZXQ6ZnVuY3Rpb24oYSl7dGhpcy5CYj1hfSxlbnVtZXJhYmxlOiExfSl9O2Z1bmN0aW9uIFlsKGEsYil7dGhpcy5hPWI7Syh0aGlzLFwidmVyaWZpY2F0aW9uSWRcIixhKX1ZbC5wcm90b3R5cGUuY29uZmlybT1mdW5jdGlvbihhKXthPWxoKHRoaXMudmVyaWZpY2F0aW9uSWQsYSk7cmV0dXJuIHRoaXMuYShhKX07ZnVuY3Rpb24gWmwoYSxiLGMsZCl7cmV0dXJuKG5ldyBoaChhKSkuY2IoYixjKS50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiBuZXcgWWwoZSxkKX0pfTtmdW5jdGlvbiAkbChhKXt2YXIgYj1mZyhhKTtpZighKGImJmIuZXhwJiZiLmF1dGhfdGltZSYmYi5pYXQpKXRocm93IG5ldyB1KFwiaW50ZXJuYWwtZXJyb3JcIixcIkFuIGludGVybmFsIGVycm9yIG9jY3VycmVkLiBUaGUgdG9rZW4gb2J0YWluZWQgYnkgRmlyZWJhc2UgYXBwZWFycyB0byBiZSBtYWxmb3JtZWQuIFBsZWFzZSByZXRyeSB0aGUgb3BlcmF0aW9uLlwiKTtMKHRoaXMse3Rva2VuOmEsZXhwaXJhdGlvblRpbWU6WmUoMUUzKmIuZXhwKSxhdXRoVGltZTpaZSgxRTMqYi5hdXRoX3RpbWUpLGlzc3VlZEF0VGltZTpaZSgxRTMqYi5pYXQpLHNpZ25JblByb3ZpZGVyOmIuZmlyZWJhc2UmJmIuZmlyZWJhc2Uuc2lnbl9pbl9wcm92aWRlcj9iLmZpcmViYXNlLnNpZ25faW5fcHJvdmlkZXI6bnVsbCxzaWduSW5TZWNvbmRGYWN0b3I6Yi5maXJlYmFzZSYmYi5maXJlYmFzZS5zaWduX2luX3NlY29uZF9mYWN0b3I/Yi5maXJlYmFzZS5zaWduX2luX3NlY29uZF9mYWN0b3I6bnVsbCxjbGFpbXM6Yn0pfVxuO2Z1bmN0aW9uIGFtKGEsYixjKXt2YXIgZD1iJiZiW2JtXTtpZighZCl0aHJvdyBuZXcgdShcImFyZ3VtZW50LWVycm9yXCIsXCJJbnRlcm5hbCBhc3NlcnQ6IEludmFsaWQgTXVsdGlGYWN0b3JSZXNvbHZlclwiKTt0aGlzLmE9YTt0aGlzLmY9a2IoYik7dGhpcy5nPWM7dGhpcy5jPW5ldyB2ZyhudWxsLGQpO3RoaXMuYj1bXTt2YXIgZT10aGlzO3goYltjbV18fFtdLGZ1bmN0aW9uKGYpeyhmPXFmKGYpKSYmZS5iLnB1c2goZil9KTtLKHRoaXMsXCJhdXRoXCIsdGhpcy5hKTtLKHRoaXMsXCJzZXNzaW9uXCIsdGhpcy5jKTtLKHRoaXMsXCJoaW50c1wiLHRoaXMuYil9dmFyIGNtPVwibWZhSW5mb1wiLGJtPVwibWZhUGVuZGluZ0NyZWRlbnRpYWxcIjthbS5wcm90b3R5cGUuUGM9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcztyZXR1cm4gYS5vYih0aGlzLmEuYix0aGlzLmMpLnRoZW4oZnVuY3Rpb24oYyl7dmFyIGQ9a2IoYi5mKTtkZWxldGUgZFtjbV07ZGVsZXRlIGRbYm1dO0IoZCxjKTtyZXR1cm4gYi5nKGQpfSl9O2Z1bmN0aW9uIGRtKGEsYixjLGQpe3UuY2FsbCh0aGlzLFwibXVsdGktZmFjdG9yLWF1dGgtcmVxdWlyZWRcIixkLGIpO3RoaXMuYj1uZXcgYW0oYSxiLGMpO0sodGhpcyxcInJlc29sdmVyXCIsdGhpcy5iKX10KGRtLHUpO2Z1bmN0aW9uIGVtKGEsYixjKXtpZihhJiZxKGEuc2VydmVyUmVzcG9uc2UpJiZcImF1dGgvbXVsdGktZmFjdG9yLWF1dGgtcmVxdWlyZWRcIj09PWEuY29kZSl0cnl7cmV0dXJuIG5ldyBkbShiLGEuc2VydmVyUmVzcG9uc2UsYyxhLm1lc3NhZ2UpfWNhdGNoKGQpe31yZXR1cm4gbnVsbH07ZnVuY3Rpb24gZm0oKXt9Zm0ucHJvdG90eXBlLm9iPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gYi50eXBlPT13Zz9nbSh0aGlzLGEsYixjKTpobSh0aGlzLGEsYil9O2Z1bmN0aW9uIGdtKGEsYixjLGQpe3JldHVybiBjLkZhKCkudGhlbihmdW5jdGlvbihlKXtlPXtpZFRva2VuOmV9O1widW5kZWZpbmVkXCIhPT10eXBlb2YgZCYmKGUuZGlzcGxheU5hbWU9ZCk7QihlLHtwaG9uZVZlcmlmaWNhdGlvbkluZm86ZGgoYS5hKX0pO3JldHVybiBOKGIsQWosZSl9KX1mdW5jdGlvbiBobShhLGIsYyl7cmV0dXJuIGMuRmEoKS50aGVuKGZ1bmN0aW9uKGQpe2Q9e21mYVBlbmRpbmdDcmVkZW50aWFsOmR9O0IoZCx7cGhvbmVWZXJpZmljYXRpb25JbmZvOmRoKGEuYSl9KTtyZXR1cm4gTihiLEJqLGQpfSl9ZnVuY3Rpb24gaW0oYSl7Syh0aGlzLFwiZmFjdG9ySWRcIixhLmVhKTt0aGlzLmE9YX10KGltLGZtKTtcbmZ1bmN0aW9uIGptKGEpe2ltLmNhbGwodGhpcyxhKTtpZih0aGlzLmEuZWEhPWhoLlBST1ZJREVSX0lEKXRocm93IG5ldyB1KFwiYXJndW1lbnQtZXJyb3JcIixcImZpcmViYXNlLmF1dGguUGhvbmVNdWx0aUZhY3RvckFzc2VydGlvbiByZXF1aXJlcyBhIHZhbGlkIGZpcmViYXNlLmF1dGguUGhvbmVBdXRoQ3JlZGVudGlhbFwiKTt9dChqbSxpbSk7ZnVuY3Rpb24ga20oYSxiKXtYYy5jYWxsKHRoaXMsYSk7Zm9yKHZhciBjIGluIGIpdGhpc1tjXT1iW2NdfXQoa20sWGMpO2Z1bmN0aW9uIGxtKGEsYil7dGhpcy5hPWE7dGhpcy5iPVtdO3RoaXMuYz1yKHRoaXMud2MsdGhpcyk7amQodGhpcy5hLFwidXNlclJlbG9hZGVkXCIsdGhpcy5jKTt2YXIgYz1bXTtiJiZiLm11bHRpRmFjdG9yJiZiLm11bHRpRmFjdG9yLmVucm9sbGVkRmFjdG9ycyYmeChiLm11bHRpRmFjdG9yLmVucm9sbGVkRmFjdG9ycyxmdW5jdGlvbihkKXt2YXIgZT1udWxsLGY9e307aWYoZCl7ZC51aWQmJihmW25mXT1kLnVpZCk7ZC5kaXNwbGF5TmFtZSYmKGZbb2ZdPWQuZGlzcGxheU5hbWUpO2QuZW5yb2xsbWVudFRpbWUmJihmW3BmXT0obmV3IERhdGUoZC5lbnJvbGxtZW50VGltZSkpLnRvSVNPU3RyaW5nKCkpO2QucGhvbmVOdW1iZXImJihmW21mXT1kLnBob25lTnVtYmVyKTt0cnl7ZT1uZXcgcmYoZil9Y2F0Y2goZyl7fWQ9ZX1lbHNlIGQ9bnVsbDtkJiZjLnB1c2goZCl9KTttbSh0aGlzLGMpfVxuZnVuY3Rpb24gbm0oYSl7dmFyIGI9W107eChhLm1mYUluZm98fFtdLGZ1bmN0aW9uKGMpeyhjPXFmKGMpKSYmYi5wdXNoKGMpfSk7cmV0dXJuIGJ9az1sbS5wcm90b3R5cGU7ay53Yz1mdW5jdGlvbihhKXttbSh0aGlzLG5tKGEuZWQpKX07ZnVuY3Rpb24gbW0oYSxiKXthLmI9YjtLKGEsXCJlbnJvbGxlZEZhY3RvcnNcIixiKX1rLk9iPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYS5JKCkudGhlbihmdW5jdGlvbihhKXtyZXR1cm4gbmV3IHZnKGEsbnVsbCl9KX07ay5kYz1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMsZD10aGlzLmEuYTtyZXR1cm4gdGhpcy5PYigpLnRoZW4oZnVuY3Rpb24oZSl7cmV0dXJuIGEub2IoZCxlLGIpfSkudGhlbihmdW5jdGlvbihlKXtvbShjLmEsZSk7cmV0dXJuIGMuYS5yZWxvYWQoKX0pfTtcbmsuJGM9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcyxjPVwic3RyaW5nXCI9PT10eXBlb2YgYT9hOmEudWlkLGQ9dGhpcy5hLmE7cmV0dXJuIHRoaXMuYS5JKCkudGhlbihmdW5jdGlvbihlKXtyZXR1cm4gTihkLEZqLHtpZFRva2VuOmUsbWZhRW5yb2xsbWVudElkOmN9KX0pLnRoZW4oZnVuY3Rpb24oZSl7dmFyIGY9TmEoYi5iLGZ1bmN0aW9uKGcpe3JldHVybiBnLnVpZCE9Y30pO21tKGIsZik7b20oYi5hLGUpO3JldHVybiBiLmEucmVsb2FkKCkubyhmdW5jdGlvbihnKXtpZihcImF1dGgvdXNlci10b2tlbi1leHBpcmVkXCIhPWcuY29kZSl0aHJvdyBnO30pfSl9O2sudj1mdW5jdGlvbigpe3JldHVybnttdWx0aUZhY3Rvcjp7ZW5yb2xsZWRGYWN0b3JzOk9hKHRoaXMuYixmdW5jdGlvbihhKXtyZXR1cm4gYS52KCl9KX19fTtmdW5jdGlvbiBwbShhLGIsYyl7dGhpcy5oPWE7dGhpcy5pPWI7dGhpcy5nPWM7dGhpcy5jPTNFNDt0aGlzLmY9OTZFNDt0aGlzLmI9bnVsbDt0aGlzLmE9dGhpcy5jO2lmKHRoaXMuZjx0aGlzLmMpdGhyb3cgRXJyb3IoXCJQcm9hY3RpdmUgcmVmcmVzaCBsb3dlciBib3VuZCBncmVhdGVyIHRoYW4gdXBwZXIgYm91bmQhXCIpO31wbS5wcm90b3R5cGUuc3RhcnQ9ZnVuY3Rpb24oKXt0aGlzLmE9dGhpcy5jO3FtKHRoaXMsITApfTtmdW5jdGlvbiBybShhLGIpe2lmKGIpcmV0dXJuIGEuYT1hLmMsYS5nKCk7Yj1hLmE7YS5hKj0yO2EuYT5hLmYmJihhLmE9YS5mKTtyZXR1cm4gYn1mdW5jdGlvbiBxbShhLGIpe2Euc3RvcCgpO2EuYj1CZChybShhLGIpKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIFllKCl9KS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIGEuaCgpfSkudGhlbihmdW5jdGlvbigpe3FtKGEsITApfSkubyhmdW5jdGlvbihjKXthLmkoYykmJnFtKGEsITEpfSl9XG5wbS5wcm90b3R5cGUuc3RvcD1mdW5jdGlvbigpe3RoaXMuYiYmKHRoaXMuYi5jYW5jZWwoKSx0aGlzLmI9bnVsbCl9O2Z1bmN0aW9uIHNtKGEpe3RoaXMuYz1hO3RoaXMuYj10aGlzLmE9bnVsbH1zbS5wcm90b3R5cGUudj1mdW5jdGlvbigpe3JldHVybnthcGlLZXk6dGhpcy5jLmMscmVmcmVzaFRva2VuOnRoaXMuYSxhY2Nlc3NUb2tlbjp0aGlzLmImJnRoaXMuYi50b1N0cmluZygpLGV4cGlyYXRpb25UaW1lOnRtKHRoaXMpfX07ZnVuY3Rpb24gdG0oYSl7cmV0dXJuIGEuYiYmMUUzKmEuYi5jfHwwfWZ1bmN0aW9uIHVtKGEsYil7dmFyIGM9Yi5yZWZyZXNoVG9rZW47YS5iPWdnKGJbQWddfHxcIlwiKTthLmE9Y31mdW5jdGlvbiB2bShhLGIpe2EuYj1iLmI7YS5hPWIuYX1cbmZ1bmN0aW9uIHdtKGEsYil7cmV0dXJuIFFpKGEuYyxiKS50aGVuKGZ1bmN0aW9uKGMpe2EuYj1nZyhjLmFjY2Vzc190b2tlbik7YS5hPWMucmVmcmVzaF90b2tlbjtyZXR1cm57YWNjZXNzVG9rZW46YS5iLnRvU3RyaW5nKCkscmVmcmVzaFRva2VuOmEuYX19KS5vKGZ1bmN0aW9uKGMpe1wiYXV0aC91c2VyLXRva2VuLWV4cGlyZWRcIj09Yy5jb2RlJiYoYS5hPW51bGwpO3Rocm93IGM7fSl9c20ucHJvdG90eXBlLmdldFRva2VuPWZ1bmN0aW9uKGEpe2E9ISFhO3JldHVybiB0aGlzLmImJiF0aGlzLmE/RihuZXcgdShcInVzZXItdG9rZW4tZXhwaXJlZFwiKSk6YXx8IXRoaXMuYnx8dGEoKT50bSh0aGlzKS0zRTQ/dGhpcy5hP3dtKHRoaXMse2dyYW50X3R5cGU6XCJyZWZyZXNoX3Rva2VuXCIscmVmcmVzaF90b2tlbjp0aGlzLmF9KTpFKG51bGwpOkUoe2FjY2Vzc1Rva2VuOnRoaXMuYi50b1N0cmluZygpLHJlZnJlc2hUb2tlbjp0aGlzLmF9KX07ZnVuY3Rpb24geG0oYSxiKXt0aGlzLmE9YXx8bnVsbDt0aGlzLmI9Ynx8bnVsbDtMKHRoaXMse2xhc3RTaWduSW5UaW1lOlplKGJ8fG51bGwpLGNyZWF0aW9uVGltZTpaZShhfHxudWxsKX0pfWZ1bmN0aW9uIHltKGEpe3JldHVybiBuZXcgeG0oYS5hLGEuYil9eG0ucHJvdG90eXBlLnY9ZnVuY3Rpb24oKXtyZXR1cm57bGFzdExvZ2luQXQ6dGhpcy5iLGNyZWF0ZWRBdDp0aGlzLmF9fTtmdW5jdGlvbiB6bShhLGIsYyxkLGUsZil7TCh0aGlzLHt1aWQ6YSxkaXNwbGF5TmFtZTpkfHxudWxsLHBob3RvVVJMOmV8fG51bGwsZW1haWw6Y3x8bnVsbCxwaG9uZU51bWJlcjpmfHxudWxsLHByb3ZpZGVySWQ6Yn0pfVxuZnVuY3Rpb24gUChhLGIsYyl7dGhpcy5OPVtdO3RoaXMubD1hLmFwaUtleTt0aGlzLm09YS5hcHBOYW1lO3RoaXMucz1hLmF1dGhEb21haW58fG51bGw7YT1maXJlYmFzZS5TREtfVkVSU0lPTj9MZShmaXJlYmFzZS5TREtfVkVSU0lPTik6bnVsbDt0aGlzLmE9bmV3IEVpKHRoaXMubCx6YShBYSksYSk7dGhpcy5iPW5ldyBzbSh0aGlzLmEpO0FtKHRoaXMsYltBZ10pO3VtKHRoaXMuYixiKTtLKHRoaXMsXCJyZWZyZXNoVG9rZW5cIix0aGlzLmIuYSk7Qm0odGhpcyxjfHx7fSk7Ry5jYWxsKHRoaXMpO3RoaXMuUD0hMTt0aGlzLnMmJk9lKCkmJih0aGlzLmk9UGwodGhpcy5zLHRoaXMubCx0aGlzLm0pKTt0aGlzLlI9W107dGhpcy5oPW51bGw7dGhpcy5CPUNtKHRoaXMpO3RoaXMuWj1yKHRoaXMuTWEsdGhpcyk7dmFyIGQ9dGhpczt0aGlzLm9hPW51bGw7dGhpcy56YT1mdW5jdGlvbihlKXtkLnZhKGUuZyl9O3RoaXMuYWE9bnVsbDt0aGlzLlc9W107dGhpcy55YT1mdW5jdGlvbihlKXtEbShkLFxuZS5jKX07dGhpcy4kPW51bGw7dGhpcy5PPW5ldyBsbSh0aGlzLGMpO0sodGhpcyxcIm11bHRpRmFjdG9yXCIsdGhpcy5PKX10KFAsRyk7UC5wcm90b3R5cGUudmE9ZnVuY3Rpb24oYSl7dGhpcy5vYT1hO0tpKHRoaXMuYSxhKX07UC5wcm90b3R5cGUuamE9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5vYX07ZnVuY3Rpb24gRW0oYSxiKXthLmFhJiZ0ZChhLmFhLFwibGFuZ3VhZ2VDb2RlQ2hhbmdlZFwiLGEuemEpOyhhLmFhPWIpJiZqZChiLFwibGFuZ3VhZ2VDb2RlQ2hhbmdlZFwiLGEuemEpfWZ1bmN0aW9uIERtKGEsYil7YS5XPWI7TGkoYS5hLGZpcmViYXNlLlNES19WRVJTSU9OP0xlKGZpcmViYXNlLlNES19WRVJTSU9OLGEuVyk6bnVsbCl9UC5wcm90b3R5cGUuRWE9ZnVuY3Rpb24oKXtyZXR1cm4gV2EodGhpcy5XKX07ZnVuY3Rpb24gRm0oYSxiKXthLiQmJnRkKGEuJCxcImZyYW1ld29ya0NoYW5nZWRcIixhLnlhKTsoYS4kPWIpJiZqZChiLFwiZnJhbWV3b3JrQ2hhbmdlZFwiLGEueWEpfVxuUC5wcm90b3R5cGUuTWE9ZnVuY3Rpb24oKXt0aGlzLkIuYiYmKHRoaXMuQi5zdG9wKCksdGhpcy5CLnN0YXJ0KCkpfTtmdW5jdGlvbiBHbShhKXt0cnl7cmV0dXJuIGZpcmViYXNlLmFwcChhLm0pLmF1dGgoKX1jYXRjaChiKXt0aHJvdyBuZXcgdShcImludGVybmFsLWVycm9yXCIsXCJObyBmaXJlYmFzZS5hdXRoLkF1dGggaW5zdGFuY2UgaXMgYXZhaWxhYmxlIGZvciB0aGUgRmlyZWJhc2UgQXBwICdcIithLm0rXCInIVwiKTt9fWZ1bmN0aW9uIENtKGEpe3JldHVybiBuZXcgcG0oZnVuY3Rpb24oKXtyZXR1cm4gYS5JKCEwKX0sZnVuY3Rpb24oYil7cmV0dXJuIGImJlwiYXV0aC9uZXR3b3JrLXJlcXVlc3QtZmFpbGVkXCI9PWIuY29kZT8hMDohMX0sZnVuY3Rpb24oKXt2YXIgYj10bShhLmIpLXRhKCktM0U1O3JldHVybiAwPGI/YjowfSl9XG5mdW5jdGlvbiBIbShhKXthLkR8fGEuQi5ifHwoYS5CLnN0YXJ0KCksdGQoYSxcInRva2VuQ2hhbmdlZFwiLGEuWiksamQoYSxcInRva2VuQ2hhbmdlZFwiLGEuWikpfWZ1bmN0aW9uIEltKGEpe3RkKGEsXCJ0b2tlbkNoYW5nZWRcIixhLlopO2EuQi5zdG9wKCl9ZnVuY3Rpb24gQW0oYSxiKXthLnhhPWI7SyhhLFwiX2xhdFwiLGIpfWZ1bmN0aW9uIEptKGEsYil7VWEoYS5SLGZ1bmN0aW9uKGMpe3JldHVybiBjPT1ifSl9ZnVuY3Rpb24gS20oYSl7Zm9yKHZhciBiPVtdLGM9MDtjPGEuUi5sZW5ndGg7YysrKWIucHVzaChhLlJbY10oYSkpO3JldHVybiBFYyhiKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIGF9KX1mdW5jdGlvbiBMbShhKXthLmkmJiFhLlAmJihhLlA9ITAsSGwoYS5pLGEpKX1cbmZ1bmN0aW9uIEJtKGEsYil7TChhLHt1aWQ6Yi51aWQsZGlzcGxheU5hbWU6Yi5kaXNwbGF5TmFtZXx8bnVsbCxwaG90b1VSTDpiLnBob3RvVVJMfHxudWxsLGVtYWlsOmIuZW1haWx8fG51bGwsZW1haWxWZXJpZmllZDpiLmVtYWlsVmVyaWZpZWR8fCExLHBob25lTnVtYmVyOmIucGhvbmVOdW1iZXJ8fG51bGwsaXNBbm9ueW1vdXM6Yi5pc0Fub255bW91c3x8ITEsdGVuYW50SWQ6Yi50ZW5hbnRJZHx8bnVsbCxtZXRhZGF0YTpuZXcgeG0oYi5jcmVhdGVkQXQsYi5sYXN0TG9naW5BdCkscHJvdmlkZXJEYXRhOltdfSk7YS5hLmI9YS50ZW5hbnRJZH1LKFAucHJvdG90eXBlLFwicHJvdmlkZXJJZFwiLFwiZmlyZWJhc2VcIik7ZnVuY3Rpb24gTW0oKXt9ZnVuY3Rpb24gTm0oYSl7cmV0dXJuIEUoKS50aGVuKGZ1bmN0aW9uKCl7aWYoYS5EKXRocm93IG5ldyB1KFwiYXBwLWRlbGV0ZWRcIik7fSl9XG5mdW5jdGlvbiBPbShhKXtyZXR1cm4gT2EoYS5wcm92aWRlckRhdGEsZnVuY3Rpb24oYil7cmV0dXJuIGIucHJvdmlkZXJJZH0pfWZ1bmN0aW9uIFBtKGEsYil7YiYmKFFtKGEsYi5wcm92aWRlcklkKSxhLnByb3ZpZGVyRGF0YS5wdXNoKGIpKX1mdW5jdGlvbiBRbShhLGIpe1VhKGEucHJvdmlkZXJEYXRhLGZ1bmN0aW9uKGMpe3JldHVybiBjLnByb3ZpZGVySWQ9PWJ9KX1mdW5jdGlvbiBSbShhLGIsYyl7KFwidWlkXCIhPWJ8fGMpJiZhLmhhc093blByb3BlcnR5KGIpJiZLKGEsYixjKX1cbmZ1bmN0aW9uIFNtKGEsYil7YSE9YiYmKEwoYSx7dWlkOmIudWlkLGRpc3BsYXlOYW1lOmIuZGlzcGxheU5hbWUscGhvdG9VUkw6Yi5waG90b1VSTCxlbWFpbDpiLmVtYWlsLGVtYWlsVmVyaWZpZWQ6Yi5lbWFpbFZlcmlmaWVkLHBob25lTnVtYmVyOmIucGhvbmVOdW1iZXIsaXNBbm9ueW1vdXM6Yi5pc0Fub255bW91cyx0ZW5hbnRJZDpiLnRlbmFudElkLHByb3ZpZGVyRGF0YTpbXX0pLGIubWV0YWRhdGE/SyhhLFwibWV0YWRhdGFcIix5bShiLm1ldGFkYXRhKSk6SyhhLFwibWV0YWRhdGFcIixuZXcgeG0pLHgoYi5wcm92aWRlckRhdGEsZnVuY3Rpb24oYyl7UG0oYSxjKX0pLHZtKGEuYixiLmIpLEsoYSxcInJlZnJlc2hUb2tlblwiLGEuYi5hKSxtbShhLk8sYi5PLmIpKX1rPVAucHJvdG90eXBlO2sucmVsb2FkPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcztyZXR1cm4gUih0aGlzLE5tKHRoaXMpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gVG0oYSkudGhlbihmdW5jdGlvbigpe3JldHVybiBLbShhKX0pLnRoZW4oTW0pfSkpfTtcbmZ1bmN0aW9uIFRtKGEpe3JldHVybiBhLkkoKS50aGVuKGZ1bmN0aW9uKGIpe3ZhciBjPWEuaXNBbm9ueW1vdXM7cmV0dXJuIFVtKGEsYikudGhlbihmdW5jdGlvbigpe2N8fFJtKGEsXCJpc0Fub255bW91c1wiLCExKTtyZXR1cm4gYn0pfSl9ay5tYz1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5JKGEpLnRoZW4oZnVuY3Rpb24oYil7cmV0dXJuIG5ldyAkbChiKX0pfTtrLkk9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcztyZXR1cm4gUih0aGlzLE5tKHRoaXMpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gYi5iLmdldFRva2VuKGEpfSkudGhlbihmdW5jdGlvbihjKXtpZighYyl0aHJvdyBuZXcgdShcImludGVybmFsLWVycm9yXCIpO2MuYWNjZXNzVG9rZW4hPWIueGEmJihBbShiLGMuYWNjZXNzVG9rZW4pLGIuZGlzcGF0Y2hFdmVudChuZXcga20oXCJ0b2tlbkNoYW5nZWRcIikpKTtSbShiLFwicmVmcmVzaFRva2VuXCIsYy5yZWZyZXNoVG9rZW4pO3JldHVybiBjLmFjY2Vzc1Rva2VufSkpfTtcbmZ1bmN0aW9uIG9tKGEsYil7YltBZ10mJmEueGEhPWJbQWddJiYodW0oYS5iLGIpLGEuZGlzcGF0Y2hFdmVudChuZXcga20oXCJ0b2tlbkNoYW5nZWRcIikpLEFtKGEsYltBZ10pLFJtKGEsXCJyZWZyZXNoVG9rZW5cIixhLmIuYSkpfWZ1bmN0aW9uIFVtKGEsYil7cmV0dXJuIE4oYS5hLENqLHtpZFRva2VuOmJ9KS50aGVuKHIoYS5JYyxhKSl9XG5rLkljPWZ1bmN0aW9uKGEpe2E9YS51c2VycztpZighYXx8IWEubGVuZ3RoKXRocm93IG5ldyB1KFwiaW50ZXJuYWwtZXJyb3JcIik7YT1hWzBdO0JtKHRoaXMse3VpZDphLmxvY2FsSWQsZGlzcGxheU5hbWU6YS5kaXNwbGF5TmFtZSxwaG90b1VSTDphLnBob3RvVXJsLGVtYWlsOmEuZW1haWwsZW1haWxWZXJpZmllZDohIWEuZW1haWxWZXJpZmllZCxwaG9uZU51bWJlcjphLnBob25lTnVtYmVyLGxhc3RMb2dpbkF0OmEubGFzdExvZ2luQXQsY3JlYXRlZEF0OmEuY3JlYXRlZEF0LHRlbmFudElkOmEudGVuYW50SWR9KTtmb3IodmFyIGI9Vm0oYSksYz0wO2M8Yi5sZW5ndGg7YysrKVBtKHRoaXMsYltjXSk7Um0odGhpcyxcImlzQW5vbnltb3VzXCIsISh0aGlzLmVtYWlsJiZhLnBhc3N3b3JkSGFzaCkmJiEodGhpcy5wcm92aWRlckRhdGEmJnRoaXMucHJvdmlkZXJEYXRhLmxlbmd0aCkpO3RoaXMuZGlzcGF0Y2hFdmVudChuZXcga20oXCJ1c2VyUmVsb2FkZWRcIix7ZWQ6YX0pKX07XG5mdW5jdGlvbiBWbShhKXtyZXR1cm4oYT1hLnByb3ZpZGVyVXNlckluZm8pJiZhLmxlbmd0aD9PYShhLGZ1bmN0aW9uKGIpe3JldHVybiBuZXcgem0oYi5yYXdJZCxiLnByb3ZpZGVySWQsYi5lbWFpbCxiLmRpc3BsYXlOYW1lLGIucGhvdG9VcmwsYi5waG9uZU51bWJlcil9KTpbXX1rLkpjPWZ1bmN0aW9uKGEpe2RmKFwiZmlyZWJhc2UuVXNlci5wcm90b3R5cGUucmVhdXRoZW50aWNhdGVBbmRSZXRyaWV2ZURhdGFXaXRoQ3JlZGVudGlhbCBpcyBkZXByZWNhdGVkLiBQbGVhc2UgdXNlIGZpcmViYXNlLlVzZXIucHJvdG90eXBlLnJlYXV0aGVudGljYXRlV2l0aENyZWRlbnRpYWwgaW5zdGVhZC5cIik7cmV0dXJuIHRoaXMucGIoYSl9O1xuay5wYj1mdW5jdGlvbihhKXt2YXIgYj10aGlzLGM9bnVsbDtyZXR1cm4gUih0aGlzLGEuYyh0aGlzLmEsdGhpcy51aWQpLnRoZW4oZnVuY3Rpb24oZCl7b20oYixkKTtjPVdtKGIsZCxcInJlYXV0aGVudGljYXRlXCIpO2IuaD1udWxsO3JldHVybiBiLnJlbG9hZCgpfSkudGhlbihmdW5jdGlvbigpe3JldHVybiBjfSksITApfTtmdW5jdGlvbiBYbShhLGIpe3JldHVybiBUbShhKS50aGVuKGZ1bmN0aW9uKCl7aWYoU2EoT20oYSksYikpcmV0dXJuIEttKGEpLnRoZW4oZnVuY3Rpb24oKXt0aHJvdyBuZXcgdShcInByb3ZpZGVyLWFscmVhZHktbGlua2VkXCIpO30pfSl9ay5BYz1mdW5jdGlvbihhKXtkZihcImZpcmViYXNlLlVzZXIucHJvdG90eXBlLmxpbmtBbmRSZXRyaWV2ZURhdGFXaXRoQ3JlZGVudGlhbCBpcyBkZXByZWNhdGVkLiBQbGVhc2UgdXNlIGZpcmViYXNlLlVzZXIucHJvdG90eXBlLmxpbmtXaXRoQ3JlZGVudGlhbCBpbnN0ZWFkLlwiKTtyZXR1cm4gdGhpcy5tYihhKX07XG5rLm1iPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMsYz1udWxsO3JldHVybiBSKHRoaXMsWG0odGhpcyxhLnByb3ZpZGVySWQpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gYi5JKCl9KS50aGVuKGZ1bmN0aW9uKGQpe3JldHVybiBhLmIoYi5hLGQpfSkudGhlbihmdW5jdGlvbihkKXtjPVdtKGIsZCxcImxpbmtcIik7cmV0dXJuIFltKGIsZCl9KS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIGN9KSl9O2suQmM9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzO3JldHVybiBSKHRoaXMsWG0odGhpcyxcInBob25lXCIpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gWmwoR20oYyksYSxiLHIoYy5tYixjKSl9KSl9O2suS2M9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzO3JldHVybiBSKHRoaXMsRSgpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gWmwoR20oYyksYSxiLHIoYy5wYixjKSl9KSwhMCl9O1xuZnVuY3Rpb24gV20oYSxiLGMpe3ZhciBkPW1oKGIpO2I9bGcoYik7cmV0dXJuIGdmKHt1c2VyOmEsY3JlZGVudGlhbDpkLGFkZGl0aW9uYWxVc2VySW5mbzpiLG9wZXJhdGlvblR5cGU6Y30pfWZ1bmN0aW9uIFltKGEsYil7b20oYSxiKTtyZXR1cm4gYS5yZWxvYWQoKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIGF9KX1rLnhiPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXM7cmV0dXJuIFIodGhpcyx0aGlzLkkoKS50aGVuKGZ1bmN0aW9uKGMpe3JldHVybiBiLmEueGIoYyxhKX0pLnRoZW4oZnVuY3Rpb24oYyl7b20oYixjKTtyZXR1cm4gYi5yZWxvYWQoKX0pKX07ay5jZD1mdW5jdGlvbihhKXt2YXIgYj10aGlzO3JldHVybiBSKHRoaXMsdGhpcy5JKCkudGhlbihmdW5jdGlvbihjKXtyZXR1cm4gYS5iKGIuYSxjKX0pLnRoZW4oZnVuY3Rpb24oYyl7b20oYixjKTtyZXR1cm4gYi5yZWxvYWQoKX0pKX07XG5rLnliPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXM7cmV0dXJuIFIodGhpcyx0aGlzLkkoKS50aGVuKGZ1bmN0aW9uKGMpe3JldHVybiBiLmEueWIoYyxhKX0pLnRoZW4oZnVuY3Rpb24oYyl7b20oYixjKTtyZXR1cm4gYi5yZWxvYWQoKX0pKX07XG5rLnpiPWZ1bmN0aW9uKGEpe2lmKHZvaWQgMD09PWEuZGlzcGxheU5hbWUmJnZvaWQgMD09PWEucGhvdG9VUkwpcmV0dXJuIE5tKHRoaXMpO3ZhciBiPXRoaXM7cmV0dXJuIFIodGhpcyx0aGlzLkkoKS50aGVuKGZ1bmN0aW9uKGMpe3JldHVybiBiLmEuemIoYyx7ZGlzcGxheU5hbWU6YS5kaXNwbGF5TmFtZSxwaG90b1VybDphLnBob3RvVVJMfSl9KS50aGVuKGZ1bmN0aW9uKGMpe29tKGIsYyk7Um0oYixcImRpc3BsYXlOYW1lXCIsYy5kaXNwbGF5TmFtZXx8bnVsbCk7Um0oYixcInBob3RvVVJMXCIsYy5waG90b1VybHx8bnVsbCk7eChiLnByb3ZpZGVyRGF0YSxmdW5jdGlvbihkKXtcInBhc3N3b3JkXCI9PT1kLnByb3ZpZGVySWQmJihLKGQsXCJkaXNwbGF5TmFtZVwiLGIuZGlzcGxheU5hbWUpLEsoZCxcInBob3RvVVJMXCIsYi5waG90b1VSTCkpfSk7cmV0dXJuIEttKGIpfSkudGhlbihNbSkpfTtcbmsuYWQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcztyZXR1cm4gUih0aGlzLFRtKHRoaXMpLnRoZW4oZnVuY3Rpb24oYyl7cmV0dXJuIFNhKE9tKGIpLGEpP2xqKGIuYSxjLFthXSkudGhlbihmdW5jdGlvbihkKXt2YXIgZT17fTt4KGQucHJvdmlkZXJVc2VySW5mb3x8W10sZnVuY3Rpb24oZil7ZVtmLnByb3ZpZGVySWRdPSEwfSk7eChPbShiKSxmdW5jdGlvbihmKXtlW2ZdfHxRbShiLGYpfSk7ZVtoaC5QUk9WSURFUl9JRF18fEsoYixcInBob25lTnVtYmVyXCIsbnVsbCk7cmV0dXJuIEttKGIpfSk6S20oYikudGhlbihmdW5jdGlvbigpe3Rocm93IG5ldyB1KFwibm8tc3VjaC1wcm92aWRlclwiKTt9KX0pKX07XG5rLmRlbGV0ZT1mdW5jdGlvbigpe3ZhciBhPXRoaXM7cmV0dXJuIFIodGhpcyx0aGlzLkkoKS50aGVuKGZ1bmN0aW9uKGIpe3JldHVybiBOKGEuYSx6aix7aWRUb2tlbjpifSl9KS50aGVuKGZ1bmN0aW9uKCl7YS5kaXNwYXRjaEV2ZW50KG5ldyBrbShcInVzZXJEZWxldGVkXCIpKX0pKS50aGVuKGZ1bmN0aW9uKCl7Zm9yKHZhciBiPTA7YjxhLk4ubGVuZ3RoO2IrKylhLk5bYl0uY2FuY2VsKFwiYXBwLWRlbGV0ZWRcIik7RW0oYSxudWxsKTtGbShhLG51bGwpO2EuTj1bXTthLkQ9ITA7SW0oYSk7SyhhLFwicmVmcmVzaFRva2VuXCIsbnVsbCk7YS5pJiZJbChhLmksYSl9KX07XG5rLkNiPWZ1bmN0aW9uKGEsYil7cmV0dXJuXCJsaW5rVmlhUG9wdXBcIj09YSYmKHRoaXMuZ3x8bnVsbCk9PWImJnRoaXMuZnx8XCJyZWF1dGhWaWFQb3B1cFwiPT1hJiYodGhpcy5nfHxudWxsKT09YiYmdGhpcy5mfHxcImxpbmtWaWFSZWRpcmVjdFwiPT1hJiYodGhpcy5mYXx8bnVsbCk9PWJ8fFwicmVhdXRoVmlhUmVkaXJlY3RcIj09YSYmKHRoaXMuZmF8fG51bGwpPT1iPyEwOiExfTtrLmxhPWZ1bmN0aW9uKGEsYixjLGQpe1wibGlua1ZpYVBvcHVwXCIhPWEmJlwicmVhdXRoVmlhUG9wdXBcIiE9YXx8ZCE9KHRoaXMuZ3x8bnVsbCl8fChjJiZ0aGlzLnc/dGhpcy53KGMpOmImJiFjJiZ0aGlzLmYmJnRoaXMuZihiKSx0aGlzLmMmJih0aGlzLmMuY2FuY2VsKCksdGhpcy5jPW51bGwpLGRlbGV0ZSB0aGlzLmYsZGVsZXRlIHRoaXMudyl9O1xuay5EYT1mdW5jdGlvbihhLGIpe3JldHVyblwibGlua1ZpYVBvcHVwXCI9PWEmJmI9PSh0aGlzLmd8fG51bGwpP3IodGhpcy5IYix0aGlzKTpcInJlYXV0aFZpYVBvcHVwXCI9PWEmJmI9PSh0aGlzLmd8fG51bGwpP3IodGhpcy5JYix0aGlzKTpcImxpbmtWaWFSZWRpcmVjdFwiPT1hJiYodGhpcy5mYXx8bnVsbCk9PWI/cih0aGlzLkhiLHRoaXMpOlwicmVhdXRoVmlhUmVkaXJlY3RcIj09YSYmKHRoaXMuZmF8fG51bGwpPT1iP3IodGhpcy5JYix0aGlzKTpudWxsfTtrLkNjPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXM7cmV0dXJuIFptKHRoaXMsXCJsaW5rVmlhUG9wdXBcIixhLGZ1bmN0aW9uKCl7cmV0dXJuIFhtKGIsYS5wcm92aWRlcklkKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIEttKGIpfSl9LCExKX07ay5MYz1mdW5jdGlvbihhKXtyZXR1cm4gWm0odGhpcyxcInJlYXV0aFZpYVBvcHVwXCIsYSxmdW5jdGlvbigpe3JldHVybiBFKCl9LCEwKX07XG5mdW5jdGlvbiBabShhLGIsYyxkLGUpe2lmKCFPZSgpKXJldHVybiBGKG5ldyB1KFwib3BlcmF0aW9uLW5vdC1zdXBwb3J0ZWQtaW4tdGhpcy1lbnZpcm9ubWVudFwiKSk7aWYoYS5oJiYhZSlyZXR1cm4gRihhLmgpO3ZhciBmPWtnKGMucHJvdmlkZXJJZCksZz1OZShhLnVpZCtcIjo6OlwiKSxoPW51bGw7KCFRZSgpfHxGZSgpKSYmYS5zJiZjLmlzT0F1dGhQcm92aWRlciYmKGg9WWooYS5zLGEubCxhLm0sYixjLG51bGwsZyxmaXJlYmFzZS5TREtfVkVSU0lPTnx8bnVsbCxudWxsLG51bGwsYS50ZW5hbnRJZCkpO3ZhciBtPXdlKGgsZiYmZi50YSxmJiZmLnNhKTtkPWQoKS50aGVuKGZ1bmN0aW9uKCl7JG0oYSk7aWYoIWUpcmV0dXJuIGEuSSgpLnRoZW4oZnVuY3Rpb24oKXt9KX0pLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gTGwoYS5pLG0sYixjLGcsISFoLGEudGVuYW50SWQpfSkudGhlbihmdW5jdGlvbigpe3JldHVybiBuZXcgRChmdW5jdGlvbihwLHYpe2EubGEoYixudWxsLG5ldyB1KFwiY2FuY2VsbGVkLXBvcHVwLXJlcXVlc3RcIiksXG5hLmd8fG51bGwpO2EuZj1wO2Eudz12O2EuZz1nO2EuYz1ObChhLmksYSxiLG0sZyl9KX0pLnRoZW4oZnVuY3Rpb24ocCl7bSYmdmUobSk7cmV0dXJuIHA/Z2YocCk6bnVsbH0pLm8oZnVuY3Rpb24ocCl7bSYmdmUobSk7dGhyb3cgcDt9KTtyZXR1cm4gUihhLGQsZSl9ay5EYz1mdW5jdGlvbihhKXt2YXIgYj10aGlzO3JldHVybiBhbih0aGlzLFwibGlua1ZpYVJlZGlyZWN0XCIsYSxmdW5jdGlvbigpe3JldHVybiBYbShiLGEucHJvdmlkZXJJZCl9LCExKX07ay5NYz1mdW5jdGlvbihhKXtyZXR1cm4gYW4odGhpcyxcInJlYXV0aFZpYVJlZGlyZWN0XCIsYSxmdW5jdGlvbigpe3JldHVybiBFKCl9LCEwKX07XG5mdW5jdGlvbiBhbihhLGIsYyxkLGUpe2lmKCFPZSgpKXJldHVybiBGKG5ldyB1KFwib3BlcmF0aW9uLW5vdC1zdXBwb3J0ZWQtaW4tdGhpcy1lbnZpcm9ubWVudFwiKSk7aWYoYS5oJiYhZSlyZXR1cm4gRihhLmgpO3ZhciBmPW51bGwsZz1OZShhLnVpZCtcIjo6OlwiKTtkPWQoKS50aGVuKGZ1bmN0aW9uKCl7JG0oYSk7aWYoIWUpcmV0dXJuIGEuSSgpLnRoZW4oZnVuY3Rpb24oKXt9KX0pLnRoZW4oZnVuY3Rpb24oKXthLmZhPWc7cmV0dXJuIEttKGEpfSkudGhlbihmdW5jdGlvbihoKXthLmdhJiYoaD1hLmdhLGg9aC5iLnNldChibixhLnYoKSxoLmEpKTtyZXR1cm4gaH0pLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gTWwoYS5pLGIsYyxnLGEudGVuYW50SWQpfSkubyhmdW5jdGlvbihoKXtmPWg7aWYoYS5nYSlyZXR1cm4gY24oYS5nYSk7dGhyb3cgZjt9KS50aGVuKGZ1bmN0aW9uKCl7aWYoZil0aHJvdyBmO30pO3JldHVybiBSKGEsZCxlKX1cbmZ1bmN0aW9uICRtKGEpe2lmKCFhLml8fCFhLlApe2lmKGEuaSYmIWEuUCl0aHJvdyBuZXcgdShcImludGVybmFsLWVycm9yXCIpO3Rocm93IG5ldyB1KFwiYXV0aC1kb21haW4tY29uZmlnLXJlcXVpcmVkXCIpO319ay5IYj1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZT10aGlzO3RoaXMuYyYmKHRoaXMuYy5jYW5jZWwoKSx0aGlzLmM9bnVsbCk7dmFyIGY9bnVsbDtjPXRoaXMuSSgpLnRoZW4oZnVuY3Rpb24oZyl7cmV0dXJuIEVnKGUuYSx7cmVxdWVzdFVyaTphLHBvc3RCb2R5OmQsc2Vzc2lvbklkOmIsaWRUb2tlbjpnfSl9KS50aGVuKGZ1bmN0aW9uKGcpe2Y9V20oZSxnLFwibGlua1wiKTtyZXR1cm4gWW0oZSxnKX0pLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gZn0pO3JldHVybiBSKHRoaXMsYyl9O1xuay5JYj1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZT10aGlzO3RoaXMuYyYmKHRoaXMuYy5jYW5jZWwoKSx0aGlzLmM9bnVsbCk7dmFyIGY9bnVsbCxnPUUoKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIHpnKEZnKGUuYSx7cmVxdWVzdFVyaTphLHNlc3Npb25JZDpiLHBvc3RCb2R5OmQsdGVuYW50SWQ6Y30pLGUudWlkKX0pLnRoZW4oZnVuY3Rpb24oaCl7Zj1XbShlLGgsXCJyZWF1dGhlbnRpY2F0ZVwiKTtvbShlLGgpO2UuaD1udWxsO3JldHVybiBlLnJlbG9hZCgpfSkudGhlbihmdW5jdGlvbigpe3JldHVybiBmfSk7cmV0dXJuIFIodGhpcyxnLCEwKX07XG5rLnFiPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMsYz1udWxsO3JldHVybiBSKHRoaXMsdGhpcy5JKCkudGhlbihmdW5jdGlvbihkKXtjPWQ7cmV0dXJuXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhfHxqYihhKT97fTpaZihuZXcgUGYoYSkpfSkudGhlbihmdW5jdGlvbihkKXtyZXR1cm4gYi5hLnFiKGMsZCl9KS50aGVuKGZ1bmN0aW9uKGQpe2lmKGIuZW1haWwhPWQpcmV0dXJuIGIucmVsb2FkKCl9KS50aGVuKGZ1bmN0aW9uKCl7fSkpfTtrLkFiPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcyxkPW51bGw7cmV0dXJuIFIodGhpcyx0aGlzLkkoKS50aGVuKGZ1bmN0aW9uKGUpe2Q9ZTtyZXR1cm5cInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fGpiKGIpP3t9OlpmKG5ldyBQZihiKSl9KS50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiBjLmEuQWIoZCxhLGUpfSkudGhlbihmdW5jdGlvbihlKXtpZihjLmVtYWlsIT1lKXJldHVybiBjLnJlbG9hZCgpfSkudGhlbihmdW5jdGlvbigpe30pKX07XG5mdW5jdGlvbiBSKGEsYixjKXt2YXIgZD1kbihhLGIsYyk7YS5OLnB1c2goZCk7ZC5tYShmdW5jdGlvbigpe1RhKGEuTixkKX0pO3JldHVybiBkLm8oZnVuY3Rpb24oZSl7dmFyIGY9bnVsbDtlJiZcImF1dGgvbXVsdGktZmFjdG9yLWF1dGgtcmVxdWlyZWRcIj09PWUuY29kZSYmKGY9ZW0oZS52KCksR20oYSkscihhLmhjLGEpKSk7dGhyb3cgZnx8ZTt9KX1rLmhjPWZ1bmN0aW9uKGEpe3ZhciBiPW51bGwsYz10aGlzO2E9emcoRShhKSxjLnVpZCkudGhlbihmdW5jdGlvbihkKXtiPVdtKGMsZCxcInJlYXV0aGVudGljYXRlXCIpO29tKGMsZCk7Yy5oPW51bGw7cmV0dXJuIGMucmVsb2FkKCl9KS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIGJ9KTtyZXR1cm4gUih0aGlzLGEsITApfTtcbmZ1bmN0aW9uIGRuKGEsYixjKXtyZXR1cm4gYS5oJiYhYz8oYi5jYW5jZWwoKSxGKGEuaCkpOmIubyhmdW5jdGlvbihkKXshZHx8XCJhdXRoL3VzZXItZGlzYWJsZWRcIiE9ZC5jb2RlJiZcImF1dGgvdXNlci10b2tlbi1leHBpcmVkXCIhPWQuY29kZXx8KGEuaHx8YS5kaXNwYXRjaEV2ZW50KG5ldyBrbShcInVzZXJJbnZhbGlkYXRlZFwiKSksYS5oPWQpO3Rocm93IGQ7fSl9ay50b0pTT049ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy52KCl9O1xuay52PWZ1bmN0aW9uKCl7dmFyIGE9e3VpZDp0aGlzLnVpZCxkaXNwbGF5TmFtZTp0aGlzLmRpc3BsYXlOYW1lLHBob3RvVVJMOnRoaXMucGhvdG9VUkwsZW1haWw6dGhpcy5lbWFpbCxlbWFpbFZlcmlmaWVkOnRoaXMuZW1haWxWZXJpZmllZCxwaG9uZU51bWJlcjp0aGlzLnBob25lTnVtYmVyLGlzQW5vbnltb3VzOnRoaXMuaXNBbm9ueW1vdXMsdGVuYW50SWQ6dGhpcy50ZW5hbnRJZCxwcm92aWRlckRhdGE6W10sYXBpS2V5OnRoaXMubCxhcHBOYW1lOnRoaXMubSxhdXRoRG9tYWluOnRoaXMucyxzdHNUb2tlbk1hbmFnZXI6dGhpcy5iLnYoKSxyZWRpcmVjdEV2ZW50SWQ6dGhpcy5mYXx8bnVsbH07dGhpcy5tZXRhZGF0YSYmQihhLHRoaXMubWV0YWRhdGEudigpKTt4KHRoaXMucHJvdmlkZXJEYXRhLGZ1bmN0aW9uKGIpe2EucHJvdmlkZXJEYXRhLnB1c2goaGYoYikpfSk7QihhLHRoaXMuTy52KCkpO3JldHVybiBhfTtcbmZ1bmN0aW9uIGVuKGEpe2lmKCFhLmFwaUtleSlyZXR1cm4gbnVsbDt2YXIgYj17YXBpS2V5OmEuYXBpS2V5LGF1dGhEb21haW46YS5hdXRoRG9tYWluLGFwcE5hbWU6YS5hcHBOYW1lfSxjPXt9O2lmKGEuc3RzVG9rZW5NYW5hZ2VyJiZhLnN0c1Rva2VuTWFuYWdlci5hY2Nlc3NUb2tlbiljW0FnXT1hLnN0c1Rva2VuTWFuYWdlci5hY2Nlc3NUb2tlbixjLnJlZnJlc2hUb2tlbj1hLnN0c1Rva2VuTWFuYWdlci5yZWZyZXNoVG9rZW58fG51bGw7ZWxzZSByZXR1cm4gbnVsbDt2YXIgZD1uZXcgUChiLGMsYSk7YS5wcm92aWRlckRhdGEmJngoYS5wcm92aWRlckRhdGEsZnVuY3Rpb24oZSl7ZSYmUG0oZCxnZihlKSl9KTthLnJlZGlyZWN0RXZlbnRJZCYmKGQuZmE9YS5yZWRpcmVjdEV2ZW50SWQpO3JldHVybiBkfVxuZnVuY3Rpb24gZm4oYSxiLGMsZCl7dmFyIGU9bmV3IFAoYSxiKTtjJiYoZS5nYT1jKTtkJiZEbShlLGQpO3JldHVybiBlLnJlbG9hZCgpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gZX0pfWZ1bmN0aW9uIGduKGEsYixjLGQpe3ZhciBlPWEuYixmPXt9O2ZbQWddPWUuYiYmZS5iLnRvU3RyaW5nKCk7Zi5yZWZyZXNoVG9rZW49ZS5hO2I9bmV3IFAoYnx8e2FwaUtleTphLmwsYXV0aERvbWFpbjphLnMsYXBwTmFtZTphLm19LGYpO2MmJihiLmdhPWMpO2QmJkRtKGIsZCk7U20oYixhKTtyZXR1cm4gYn07ZnVuY3Rpb24gaG4oYSl7dGhpcy5hPWE7dGhpcy5iPU9rKCl9dmFyIGJuPXtuYW1lOlwicmVkaXJlY3RVc2VyXCIsRjpcInNlc3Npb25cIn07ZnVuY3Rpb24gY24oYSl7cmV0dXJuIFNrKGEuYixibixhLmEpfWZ1bmN0aW9uIGpuKGEsYil7cmV0dXJuIGEuYi5nZXQoYm4sYS5hKS50aGVuKGZ1bmN0aW9uKGMpe2MmJmImJihjLmF1dGhEb21haW49Yik7cmV0dXJuIGVuKGN8fHt9KX0pfTtmdW5jdGlvbiBrbihhKXt0aGlzLmE9YTt0aGlzLmI9T2soKTt0aGlzLmM9bnVsbDt0aGlzLmY9bG4odGhpcyk7dGhpcy5iLmFkZExpc3RlbmVyKG1uKFwibG9jYWxcIiksdGhpcy5hLHIodGhpcy5nLHRoaXMpKX1rbi5wcm90b3R5cGUuZz1mdW5jdGlvbigpe3ZhciBhPXRoaXMsYj1tbihcImxvY2FsXCIpO25uKHRoaXMsZnVuY3Rpb24oKXtyZXR1cm4gRSgpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gYS5jJiZcImxvY2FsXCIhPWEuYy5GP2EuYi5nZXQoYixhLmEpOm51bGx9KS50aGVuKGZ1bmN0aW9uKGMpe2lmKGMpcmV0dXJuIG9uKGEsXCJsb2NhbFwiKS50aGVuKGZ1bmN0aW9uKCl7YS5jPWJ9KX0pfSl9O2Z1bmN0aW9uIG9uKGEsYil7dmFyIGM9W10sZDtmb3IoZCBpbiBLaylLa1tkXSE9PWImJmMucHVzaChTayhhLmIsbW4oS2tbZF0pLGEuYSkpO2MucHVzaChTayhhLmIscG4sYS5hKSk7cmV0dXJuIERjKGMpfVxuZnVuY3Rpb24gbG4oYSl7dmFyIGI9bW4oXCJsb2NhbFwiKSxjPW1uKFwic2Vzc2lvblwiKSxkPW1uKFwibm9uZVwiKTtyZXR1cm4gUmsoYS5iLGIsYS5hKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIGEuYi5nZXQoYyxhLmEpfSkudGhlbihmdW5jdGlvbihlKXtyZXR1cm4gZT9jOmEuYi5nZXQoZCxhLmEpLnRoZW4oZnVuY3Rpb24oZil7cmV0dXJuIGY/ZDphLmIuZ2V0KGIsYS5hKS50aGVuKGZ1bmN0aW9uKGcpe3JldHVybiBnP2I6YS5iLmdldChwbixhLmEpLnRoZW4oZnVuY3Rpb24oaCl7cmV0dXJuIGg/bW4oaCk6Yn0pfSl9KX0pLnRoZW4oZnVuY3Rpb24oZSl7YS5jPWU7cmV0dXJuIG9uKGEsZS5GKX0pLm8oZnVuY3Rpb24oKXthLmN8fChhLmM9Yil9KX12YXIgcG49e25hbWU6XCJwZXJzaXN0ZW5jZVwiLEY6XCJzZXNzaW9uXCJ9O2Z1bmN0aW9uIG1uKGEpe3JldHVybntuYW1lOlwiYXV0aFVzZXJcIixGOmF9fVxua24ucHJvdG90eXBlLnRiPWZ1bmN0aW9uKGEpe3ZhciBiPW51bGwsYz10aGlzO0xrKGEpO3JldHVybiBubih0aGlzLGZ1bmN0aW9uKCl7cmV0dXJuIGEhPWMuYy5GP2MuYi5nZXQoYy5jLGMuYSkudGhlbihmdW5jdGlvbihkKXtiPWQ7cmV0dXJuIG9uKGMsYSl9KS50aGVuKGZ1bmN0aW9uKCl7Yy5jPW1uKGEpO2lmKGIpcmV0dXJuIGMuYi5zZXQoYy5jLGIsYy5hKX0pOkUoKX0pfTtmdW5jdGlvbiBxbihhKXtyZXR1cm4gbm4oYSxmdW5jdGlvbigpe3JldHVybiBhLmIuc2V0KHBuLGEuYy5GLGEuYSl9KX1mdW5jdGlvbiBybihhLGIpe3JldHVybiBubihhLGZ1bmN0aW9uKCl7cmV0dXJuIGEuYi5zZXQoYS5jLGIudigpLGEuYSl9KX1mdW5jdGlvbiBzbihhKXtyZXR1cm4gbm4oYSxmdW5jdGlvbigpe3JldHVybiBTayhhLmIsYS5jLGEuYSl9KX1cbmZ1bmN0aW9uIHRuKGEsYil7cmV0dXJuIG5uKGEsZnVuY3Rpb24oKXtyZXR1cm4gYS5iLmdldChhLmMsYS5hKS50aGVuKGZ1bmN0aW9uKGMpe2MmJmImJihjLmF1dGhEb21haW49Yik7cmV0dXJuIGVuKGN8fHt9KX0pfSl9ZnVuY3Rpb24gbm4oYSxiKXthLmY9YS5mLnRoZW4oYixiKTtyZXR1cm4gYS5mfTtmdW5jdGlvbiB1bihhKXt0aGlzLmw9ITE7Syh0aGlzLFwic2V0dGluZ3NcIixuZXcgWGwpO0sodGhpcyxcImFwcFwiLGEpO2lmKFModGhpcykub3B0aW9ucyYmUyh0aGlzKS5vcHRpb25zLmFwaUtleSlhPWZpcmViYXNlLlNES19WRVJTSU9OP0xlKGZpcmViYXNlLlNES19WRVJTSU9OKTpudWxsLHRoaXMuYj1uZXcgRWkoUyh0aGlzKS5vcHRpb25zJiZTKHRoaXMpLm9wdGlvbnMuYXBpS2V5LHphKEFhKSxhKTtlbHNlIHRocm93IG5ldyB1KFwiaW52YWxpZC1hcGkta2V5XCIpO3RoaXMuUD1bXTt0aGlzLm09W107dGhpcy5PPVtdO3RoaXMuJGI9ZmlyZWJhc2UuSU5URVJOQUwuY3JlYXRlU3Vic2NyaWJlKHIodGhpcy54Yyx0aGlzKSk7dGhpcy5XPXZvaWQgMDt0aGlzLmFjPWZpcmViYXNlLklOVEVSTkFMLmNyZWF0ZVN1YnNjcmliZShyKHRoaXMueWMsdGhpcykpO3ZuKHRoaXMsbnVsbCk7dGhpcy5pPW5ldyBrbihTKHRoaXMpLm9wdGlvbnMuYXBpS2V5K1wiOlwiK1ModGhpcykubmFtZSk7dGhpcy5CPVxubmV3IGhuKFModGhpcykub3B0aW9ucy5hcGlLZXkrXCI6XCIrUyh0aGlzKS5uYW1lKTt0aGlzLlo9VCh0aGlzLHduKHRoaXMpKTt0aGlzLmg9VCh0aGlzLHhuKHRoaXMpKTt0aGlzLmFhPSExO3RoaXMub2E9cih0aGlzLlhjLHRoaXMpO3RoaXMuTWE9cih0aGlzLmNhLHRoaXMpO3RoaXMueGE9cih0aGlzLmpjLHRoaXMpO3RoaXMueWE9cih0aGlzLnVjLHRoaXMpO3RoaXMuemE9cih0aGlzLnZjLHRoaXMpO3RoaXMuYT1udWxsO3luKHRoaXMpO3RoaXMuSU5URVJOQUw9e307dGhpcy5JTlRFUk5BTFtcImRlbGV0ZVwiXT1yKHRoaXMuZGVsZXRlLHRoaXMpO3RoaXMuSU5URVJOQUwubG9nRnJhbWV3b3JrPXIodGhpcy5FYyx0aGlzKTt0aGlzLnM9MDtHLmNhbGwodGhpcyk7em4odGhpcyk7dGhpcy5OPVtdfXQodW4sRyk7ZnVuY3Rpb24gQW4oYSl7WGMuY2FsbCh0aGlzLFwibGFuZ3VhZ2VDb2RlQ2hhbmdlZFwiKTt0aGlzLmc9YX10KEFuLFhjKTtcbmZ1bmN0aW9uIEJuKGEpe1hjLmNhbGwodGhpcyxcImZyYW1ld29ya0NoYW5nZWRcIik7dGhpcy5jPWF9dChCbixYYyk7az11bi5wcm90b3R5cGU7ay50Yj1mdW5jdGlvbihhKXthPXRoaXMuaS50YihhKTtyZXR1cm4gVCh0aGlzLGEpfTtrLnZhPWZ1bmN0aW9uKGEpe3RoaXMuJD09PWF8fHRoaXMubHx8KHRoaXMuJD1hLEtpKHRoaXMuYix0aGlzLiQpLHRoaXMuZGlzcGF0Y2hFdmVudChuZXcgQW4odGhpcy5qYSgpKSkpfTtrLmphPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuJH07ay5kZD1mdW5jdGlvbigpe3ZhciBhPWwubmF2aWdhdG9yO3RoaXMudmEoYT9hLmxhbmd1YWdlcyYmYS5sYW5ndWFnZXNbMF18fGEubGFuZ3VhZ2V8fGEudXNlckxhbmd1YWdlfHxudWxsOm51bGwpfTtrLkVjPWZ1bmN0aW9uKGEpe3RoaXMuTi5wdXNoKGEpO0xpKHRoaXMuYixmaXJlYmFzZS5TREtfVkVSU0lPTj9MZShmaXJlYmFzZS5TREtfVkVSU0lPTix0aGlzLk4pOm51bGwpO3RoaXMuZGlzcGF0Y2hFdmVudChuZXcgQm4odGhpcy5OKSl9O1xuay5FYT1mdW5jdGlvbigpe3JldHVybiBXYSh0aGlzLk4pfTtrLnViPWZ1bmN0aW9uKGEpe3RoaXMuUj09PWF8fHRoaXMubHx8KHRoaXMuUj1hLHRoaXMuYi5iPXRoaXMuUil9O2suUz1mdW5jdGlvbigpe3JldHVybiB0aGlzLlJ9O2Z1bmN0aW9uIHpuKGEpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLFwibGNcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuamEoKX0sc2V0OmZ1bmN0aW9uKGIpe3RoaXMudmEoYil9LGVudW1lcmFibGU6ITF9KTthLiQ9bnVsbDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxcInRpXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLlMoKX0sc2V0OmZ1bmN0aW9uKGIpe3RoaXMudWIoYil9LGVudW1lcmFibGU6ITF9KTthLlI9bnVsbH1cbmsudG9KU09OPWZ1bmN0aW9uKCl7cmV0dXJue2FwaUtleTpTKHRoaXMpLm9wdGlvbnMuYXBpS2V5LGF1dGhEb21haW46Uyh0aGlzKS5vcHRpb25zLmF1dGhEb21haW4sYXBwTmFtZTpTKHRoaXMpLm5hbWUsY3VycmVudFVzZXI6VSh0aGlzKSYmVSh0aGlzKS52KCl9fTtmdW5jdGlvbiBDbihhKXtyZXR1cm4gYS5aYnx8RihuZXcgdShcImF1dGgtZG9tYWluLWNvbmZpZy1yZXF1aXJlZFwiKSl9ZnVuY3Rpb24geW4oYSl7dmFyIGI9UyhhKS5vcHRpb25zLmF1dGhEb21haW4sYz1TKGEpLm9wdGlvbnMuYXBpS2V5O2ImJk9lKCkmJihhLlpiPWEuWi50aGVuKGZ1bmN0aW9uKCl7aWYoIWEubCl7YS5hPVBsKGIsYyxTKGEpLm5hbWUpO0hsKGEuYSxhKTtVKGEpJiZMbShVKGEpKTtpZihhLkQpe0xtKGEuRCk7dmFyIGQ9YS5EO2QudmEoYS5qYSgpKTtFbShkLGEpO2Q9YS5EO0RtKGQsYS5OKTtGbShkLGEpO2EuRD1udWxsfXJldHVybiBhLmF9fSkpfVxuay5DYj1mdW5jdGlvbihhLGIpe3N3aXRjaChhKXtjYXNlIFwidW5rbm93blwiOmNhc2UgXCJzaWduSW5WaWFSZWRpcmVjdFwiOnJldHVybiEwO2Nhc2UgXCJzaWduSW5WaWFQb3B1cFwiOnJldHVybiB0aGlzLmc9PWImJiEhdGhpcy5mO2RlZmF1bHQ6cmV0dXJuITF9fTtrLmxhPWZ1bmN0aW9uKGEsYixjLGQpe1wic2lnbkluVmlhUG9wdXBcIj09YSYmdGhpcy5nPT1kJiYoYyYmdGhpcy53P3RoaXMudyhjKTpiJiYhYyYmdGhpcy5mJiZ0aGlzLmYoYiksdGhpcy5jJiYodGhpcy5jLmNhbmNlbCgpLHRoaXMuYz1udWxsKSxkZWxldGUgdGhpcy5mLGRlbGV0ZSB0aGlzLncpfTtrLkRhPWZ1bmN0aW9uKGEsYil7cmV0dXJuXCJzaWduSW5WaWFSZWRpcmVjdFwiPT1hfHxcInNpZ25JblZpYVBvcHVwXCI9PWEmJnRoaXMuZz09YiYmdGhpcy5mP3IodGhpcy5nYyx0aGlzKTpudWxsfTtcbmsuZ2M9ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9dGhpcyxmPXtyZXF1ZXN0VXJpOmEscG9zdEJvZHk6ZCxzZXNzaW9uSWQ6Yix0ZW5hbnRJZDpjfTt0aGlzLmMmJih0aGlzLmMuY2FuY2VsKCksdGhpcy5jPW51bGwpO3JldHVybiBlLloudGhlbihmdW5jdGlvbigpe3JldHVybiBEbihlLENnKGUuYixmKSl9KX07XG5rLlZjPWZ1bmN0aW9uKGEpe2lmKCFPZSgpKXJldHVybiBGKG5ldyB1KFwib3BlcmF0aW9uLW5vdC1zdXBwb3J0ZWQtaW4tdGhpcy1lbnZpcm9ubWVudFwiKSk7dmFyIGI9dGhpcyxjPWtnKGEucHJvdmlkZXJJZCksZD1OZSgpLGU9bnVsbDsoIVFlKCl8fEZlKCkpJiZTKHRoaXMpLm9wdGlvbnMuYXV0aERvbWFpbiYmYS5pc09BdXRoUHJvdmlkZXImJihlPVlqKFModGhpcykub3B0aW9ucy5hdXRoRG9tYWluLFModGhpcykub3B0aW9ucy5hcGlLZXksUyh0aGlzKS5uYW1lLFwic2lnbkluVmlhUG9wdXBcIixhLG51bGwsZCxmaXJlYmFzZS5TREtfVkVSU0lPTnx8bnVsbCxudWxsLG51bGwsdGhpcy5TKCkpKTt2YXIgZj13ZShlLGMmJmMudGEsYyYmYy5zYSk7Yz1Dbih0aGlzKS50aGVuKGZ1bmN0aW9uKGcpe3JldHVybiBMbChnLGYsXCJzaWduSW5WaWFQb3B1cFwiLGEsZCwhIWUsYi5TKCkpfSkudGhlbihmdW5jdGlvbigpe3JldHVybiBuZXcgRChmdW5jdGlvbihnLGgpe2IubGEoXCJzaWduSW5WaWFQb3B1cFwiLFxubnVsbCxuZXcgdShcImNhbmNlbGxlZC1wb3B1cC1yZXF1ZXN0XCIpLGIuZyk7Yi5mPWc7Yi53PWg7Yi5nPWQ7Yi5jPU5sKGIuYSxiLFwic2lnbkluVmlhUG9wdXBcIixmLGQpfSl9KS50aGVuKGZ1bmN0aW9uKGcpe2YmJnZlKGYpO3JldHVybiBnP2dmKGcpOm51bGx9KS5vKGZ1bmN0aW9uKGcpe2YmJnZlKGYpO3Rocm93IGc7fSk7cmV0dXJuIFQodGhpcyxjKX07ay5XYz1mdW5jdGlvbihhKXtpZighT2UoKSlyZXR1cm4gRihuZXcgdShcIm9wZXJhdGlvbi1ub3Qtc3VwcG9ydGVkLWluLXRoaXMtZW52aXJvbm1lbnRcIikpO3ZhciBiPXRoaXMsYz1Dbih0aGlzKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIHFuKGIuaSl9KS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIE1sKGIuYSxcInNpZ25JblZpYVJlZGlyZWN0XCIsYSx2b2lkIDAsYi5TKCkpfSk7cmV0dXJuIFQodGhpcyxjKX07XG5mdW5jdGlvbiBFbihhKXtpZighT2UoKSlyZXR1cm4gRihuZXcgdShcIm9wZXJhdGlvbi1ub3Qtc3VwcG9ydGVkLWluLXRoaXMtZW52aXJvbm1lbnRcIikpO3ZhciBiPUNuKGEpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gYS5hLnBhKCl9KS50aGVuKGZ1bmN0aW9uKGMpe3JldHVybiBjP2dmKGMpOm51bGx9KTtyZXR1cm4gVChhLGIpfWsucGE9ZnVuY3Rpb24oKXt2YXIgYT10aGlzO3JldHVybiBFbih0aGlzKS50aGVuKGZ1bmN0aW9uKGIpe2EuYSYmU2woYS5hLmIpO3JldHVybiBifSkubyhmdW5jdGlvbihiKXthLmEmJlNsKGEuYS5iKTt0aHJvdyBiO30pfTtcbmsuYmQ9ZnVuY3Rpb24oYSl7aWYoIWEpcmV0dXJuIEYobmV3IHUoXCJudWxsLXVzZXJcIikpO2lmKHRoaXMuUiE9YS50ZW5hbnRJZClyZXR1cm4gRihuZXcgdShcInRlbmFudC1pZC1taXNtYXRjaFwiKSk7dmFyIGI9dGhpcyxjPXt9O2MuYXBpS2V5PVModGhpcykub3B0aW9ucy5hcGlLZXk7Yy5hdXRoRG9tYWluPVModGhpcykub3B0aW9ucy5hdXRoRG9tYWluO2MuYXBwTmFtZT1TKHRoaXMpLm5hbWU7dmFyIGQ9Z24oYSxjLGIuQixiLkVhKCkpO3JldHVybiBUKHRoaXMsdGhpcy5oLnRoZW4oZnVuY3Rpb24oKXtpZihTKGIpLm9wdGlvbnMuYXBpS2V5IT1hLmwpcmV0dXJuIGQucmVsb2FkKCl9KS50aGVuKGZ1bmN0aW9uKCl7aWYoVShiKSYmYS51aWQ9PVUoYikudWlkKXJldHVybiBTbShVKGIpLGEpLGIuY2EoYSk7dm4oYixkKTtMbShkKTtyZXR1cm4gYi5jYShkKX0pLnRoZW4oZnVuY3Rpb24oKXtGbihiKX0pKX07XG5mdW5jdGlvbiBHbihhLGIpe3ZhciBjPXt9O2MuYXBpS2V5PVMoYSkub3B0aW9ucy5hcGlLZXk7Yy5hdXRoRG9tYWluPVMoYSkub3B0aW9ucy5hdXRoRG9tYWluO2MuYXBwTmFtZT1TKGEpLm5hbWU7cmV0dXJuIGEuWi50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIGZuKGMsYixhLkIsYS5FYSgpKX0pLnRoZW4oZnVuY3Rpb24oZCl7aWYoVShhKSYmZC51aWQ9PVUoYSkudWlkKXJldHVybiBTbShVKGEpLGQpLGEuY2EoZCk7dm4oYSxkKTtMbShkKTtyZXR1cm4gYS5jYShkKX0pLnRoZW4oZnVuY3Rpb24oKXtGbihhKX0pfVxuZnVuY3Rpb24gdm4oYSxiKXtVKGEpJiYoSm0oVShhKSxhLk1hKSx0ZChVKGEpLFwidG9rZW5DaGFuZ2VkXCIsYS54YSksdGQoVShhKSxcInVzZXJEZWxldGVkXCIsYS55YSksdGQoVShhKSxcInVzZXJJbnZhbGlkYXRlZFwiLGEuemEpLEltKFUoYSkpKTtiJiYoYi5SLnB1c2goYS5NYSksamQoYixcInRva2VuQ2hhbmdlZFwiLGEueGEpLGpkKGIsXCJ1c2VyRGVsZXRlZFwiLGEueWEpLGpkKGIsXCJ1c2VySW52YWxpZGF0ZWRcIixhLnphKSwwPGEucyYmSG0oYikpO0soYSxcImN1cnJlbnRVc2VyXCIsYik7YiYmKGIudmEoYS5qYSgpKSxFbShiLGEpLERtKGIsYS5OKSxGbShiLGEpKX1rLndiPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcyxiPXRoaXMuaC50aGVuKGZ1bmN0aW9uKCl7YS5hJiZTbChhLmEuYik7aWYoIVUoYSkpcmV0dXJuIEUoKTt2bihhLG51bGwpO3JldHVybiBzbihhLmkpLnRoZW4oZnVuY3Rpb24oKXtGbihhKX0pfSk7cmV0dXJuIFQodGhpcyxiKX07XG5mdW5jdGlvbiBIbihhKXt2YXIgYj1qbihhLkIsUyhhKS5vcHRpb25zLmF1dGhEb21haW4pLnRoZW4oZnVuY3Rpb24oYyl7aWYoYS5EPWMpYy5nYT1hLkI7cmV0dXJuIGNuKGEuQil9KTtyZXR1cm4gVChhLGIpfWZ1bmN0aW9uIHduKGEpe3ZhciBiPVMoYSkub3B0aW9ucy5hdXRoRG9tYWluLGM9SG4oYSkudGhlbihmdW5jdGlvbigpe3JldHVybiB0bihhLmksYil9KS50aGVuKGZ1bmN0aW9uKGQpe3JldHVybiBkPyhkLmdhPWEuQixhLkQmJihhLkQuZmF8fG51bGwpPT0oZC5mYXx8bnVsbCk/ZDpkLnJlbG9hZCgpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gcm4oYS5pLGQpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gZH0pfSkubyhmdW5jdGlvbihlKXtyZXR1cm5cImF1dGgvbmV0d29yay1yZXF1ZXN0LWZhaWxlZFwiPT1lLmNvZGU/ZDpzbihhLmkpfSkpOm51bGx9KS50aGVuKGZ1bmN0aW9uKGQpe3ZuKGEsZHx8bnVsbCl9KTtyZXR1cm4gVChhLGMpfVxuZnVuY3Rpb24geG4oYSl7cmV0dXJuIGEuWi50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIEVuKGEpfSkubyhmdW5jdGlvbigpe30pLnRoZW4oZnVuY3Rpb24oKXtpZighYS5sKXJldHVybiBhLm9hKCl9KS5vKGZ1bmN0aW9uKCl7fSkudGhlbihmdW5jdGlvbigpe2lmKCFhLmwpe2EuYWE9ITA7dmFyIGI9YS5pO2IuYi5hZGRMaXN0ZW5lcihtbihcImxvY2FsXCIpLGIuYSxhLm9hKX19KX1cbmsuWGM9ZnVuY3Rpb24oKXt2YXIgYT10aGlzO3JldHVybiB0bih0aGlzLmksUyh0aGlzKS5vcHRpb25zLmF1dGhEb21haW4pLnRoZW4oZnVuY3Rpb24oYil7aWYoIWEubCl7dmFyIGM7aWYoYz1VKGEpJiZiKXtjPVUoYSkudWlkO3ZhciBkPWIudWlkO2M9dm9pZCAwPT09Y3x8bnVsbD09PWN8fFwiXCI9PT1jfHx2b2lkIDA9PT1kfHxudWxsPT09ZHx8XCJcIj09PWQ/ITE6Yz09ZH1pZihjKXJldHVybiBTbShVKGEpLGIpLFUoYSkuSSgpO2lmKFUoYSl8fGIpdm4oYSxiKSxiJiYoTG0oYiksYi5nYT1hLkIpLGEuYSYmSGwoYS5hLGEpLEZuKGEpfX0pfTtrLmNhPWZ1bmN0aW9uKGEpe3JldHVybiBybih0aGlzLmksYSl9O2suamM9ZnVuY3Rpb24oKXtGbih0aGlzKTt0aGlzLmNhKFUodGhpcykpfTtrLnVjPWZ1bmN0aW9uKCl7dGhpcy53YigpfTtrLnZjPWZ1bmN0aW9uKCl7dGhpcy53YigpfTtcbmZ1bmN0aW9uIERuKGEsYil7dmFyIGM9bnVsbCxkPW51bGw7cmV0dXJuIFQoYSxiLnRoZW4oZnVuY3Rpb24oZSl7Yz1taChlKTtkPWxnKGUpO3JldHVybiBHbihhLGUpfSxmdW5jdGlvbihlKXt2YXIgZj1udWxsO2UmJlwiYXV0aC9tdWx0aS1mYWN0b3ItYXV0aC1yZXF1aXJlZFwiPT09ZS5jb2RlJiYoZj1lbShlLnYoKSxhLHIoYS5pYyxhKSkpO3Rocm93IGZ8fGU7fSkudGhlbihmdW5jdGlvbigpe3JldHVybiBnZih7dXNlcjpVKGEpLGNyZWRlbnRpYWw6YyxhZGRpdGlvbmFsVXNlckluZm86ZCxvcGVyYXRpb25UeXBlOlwic2lnbkluXCJ9KX0pKX1rLmljPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXM7cmV0dXJuIHRoaXMuaC50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIERuKGIsRShhKSl9KX07ay54Yz1mdW5jdGlvbihhKXt2YXIgYj10aGlzO3RoaXMuYWRkQXV0aFRva2VuTGlzdGVuZXIoZnVuY3Rpb24oKXthLm5leHQoVShiKSl9KX07XG5rLnljPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXM7SW4odGhpcyxmdW5jdGlvbigpe2EubmV4dChVKGIpKX0pfTtrLkdjPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aGlzO3RoaXMuYWEmJlByb21pc2UucmVzb2x2ZSgpLnRoZW4oZnVuY3Rpb24oKXtuKGEpP2EoVShkKSk6bihhLm5leHQpJiZhLm5leHQoVShkKSl9KTtyZXR1cm4gdGhpcy4kYihhLGIsYyl9O2suRmM9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRoaXM7dGhpcy5hYSYmUHJvbWlzZS5yZXNvbHZlKCkudGhlbihmdW5jdGlvbigpe2QuVz1kLmdldFVpZCgpO24oYSk/YShVKGQpKTpuKGEubmV4dCkmJmEubmV4dChVKGQpKX0pO3JldHVybiB0aGlzLmFjKGEsYixjKX07ay5rYz1mdW5jdGlvbihhKXt2YXIgYj10aGlzLGM9dGhpcy5oLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gVShiKT9VKGIpLkkoYSkudGhlbihmdW5jdGlvbihkKXtyZXR1cm57YWNjZXNzVG9rZW46ZH19KTpudWxsfSk7cmV0dXJuIFQodGhpcyxjKX07XG5rLlJjPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXM7cmV0dXJuIHRoaXMuaC50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIERuKGIsTihiLmIsRWose3Rva2VuOmF9KSl9KS50aGVuKGZ1bmN0aW9uKGMpe3ZhciBkPWMudXNlcjtSbShkLFwiaXNBbm9ueW1vdXNcIiwhMSk7Yi5jYShkKTtyZXR1cm4gY30pfTtrLlNjPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcztyZXR1cm4gdGhpcy5oLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gRG4oYyxOKGMuYixYZyx7ZW1haWw6YSxwYXNzd29yZDpifSkpfSl9O2suY2M9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzO3JldHVybiB0aGlzLmgudGhlbihmdW5jdGlvbigpe3JldHVybiBEbihjLE4oYy5iLHlqLHtlbWFpbDphLHBhc3N3b3JkOmJ9KSl9KX07ay5ZYT1mdW5jdGlvbihhKXt2YXIgYj10aGlzO3JldHVybiB0aGlzLmgudGhlbihmdW5jdGlvbigpe3JldHVybiBEbihiLGEuaWEoYi5iKSl9KX07XG5rLlFjPWZ1bmN0aW9uKGEpe2RmKFwiZmlyZWJhc2UuYXV0aC5BdXRoLnByb3RvdHlwZS5zaWduSW5BbmRSZXRyaWV2ZURhdGFXaXRoQ3JlZGVudGlhbCBpcyBkZXByZWNhdGVkLiBQbGVhc2UgdXNlIGZpcmViYXNlLmF1dGguQXV0aC5wcm90b3R5cGUuc2lnbkluV2l0aENyZWRlbnRpYWwgaW5zdGVhZC5cIik7cmV0dXJuIHRoaXMuWWEoYSl9O2sudmI9ZnVuY3Rpb24oKXt2YXIgYT10aGlzO3JldHVybiB0aGlzLmgudGhlbihmdW5jdGlvbigpe3ZhciBiPVUoYSk7aWYoYiYmYi5pc0Fub255bW91cyl7dmFyIGM9Z2Yoe3Byb3ZpZGVySWQ6bnVsbCxpc05ld1VzZXI6ITF9KTtyZXR1cm4gZ2Yoe3VzZXI6YixjcmVkZW50aWFsOm51bGwsYWRkaXRpb25hbFVzZXJJbmZvOmMsb3BlcmF0aW9uVHlwZTpcInNpZ25JblwifSl9cmV0dXJuIERuKGEsYS5iLnZiKCkpLnRoZW4oZnVuY3Rpb24oZCl7dmFyIGU9ZC51c2VyO1JtKGUsXCJpc0Fub255bW91c1wiLCEwKTthLmNhKGUpO3JldHVybiBkfSl9KX07XG5mdW5jdGlvbiBTKGEpe3JldHVybiBhLmFwcH1mdW5jdGlvbiBVKGEpe3JldHVybiBhLmN1cnJlbnRVc2VyfWsuZ2V0VWlkPWZ1bmN0aW9uKCl7cmV0dXJuIFUodGhpcykmJlUodGhpcykudWlkfHxudWxsfTtmdW5jdGlvbiBKbihhKXtyZXR1cm4gVShhKSYmVShhKS5fbGF0fHxudWxsfWZ1bmN0aW9uIEZuKGEpe2lmKGEuYWEpe2Zvcih2YXIgYj0wO2I8YS5tLmxlbmd0aDtiKyspaWYoYS5tW2JdKWEubVtiXShKbihhKSk7aWYoYS5XIT09YS5nZXRVaWQoKSYmYS5PLmxlbmd0aClmb3IoYS5XPWEuZ2V0VWlkKCksYj0wO2I8YS5PLmxlbmd0aDtiKyspaWYoYS5PW2JdKWEuT1tiXShKbihhKSl9fWsuYmM9ZnVuY3Rpb24oYSl7dGhpcy5hZGRBdXRoVG9rZW5MaXN0ZW5lcihhKTt0aGlzLnMrKzswPHRoaXMucyYmVSh0aGlzKSYmSG0oVSh0aGlzKSl9O1xuay5OYz1mdW5jdGlvbihhKXt2YXIgYj10aGlzO3godGhpcy5tLGZ1bmN0aW9uKGMpe2M9PWEmJmIucy0tfSk7MD50aGlzLnMmJih0aGlzLnM9MCk7MD09dGhpcy5zJiZVKHRoaXMpJiZJbShVKHRoaXMpKTt0aGlzLnJlbW92ZUF1dGhUb2tlbkxpc3RlbmVyKGEpfTtrLmFkZEF1dGhUb2tlbkxpc3RlbmVyPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXM7dGhpcy5tLnB1c2goYSk7VCh0aGlzLHRoaXMuaC50aGVuKGZ1bmN0aW9uKCl7Yi5sfHxTYShiLm0sYSkmJmEoSm4oYikpfSkpfTtrLnJlbW92ZUF1dGhUb2tlbkxpc3RlbmVyPWZ1bmN0aW9uKGEpe1VhKHRoaXMubSxmdW5jdGlvbihiKXtyZXR1cm4gYj09YX0pfTtmdW5jdGlvbiBJbihhLGIpe2EuTy5wdXNoKGIpO1QoYSxhLmgudGhlbihmdW5jdGlvbigpeyFhLmwmJlNhKGEuTyxiKSYmYS5XIT09YS5nZXRVaWQoKSYmKGEuVz1hLmdldFVpZCgpLGIoSm4oYSkpKX0pKX1cbmsuZGVsZXRlPWZ1bmN0aW9uKCl7dGhpcy5sPSEwO2Zvcih2YXIgYT0wO2E8dGhpcy5QLmxlbmd0aDthKyspdGhpcy5QW2FdLmNhbmNlbChcImFwcC1kZWxldGVkXCIpO3RoaXMuUD1bXTt0aGlzLmkmJihhPXRoaXMuaSxhLmIucmVtb3ZlTGlzdGVuZXIobW4oXCJsb2NhbFwiKSxhLmEsdGhpcy5vYSkpO3RoaXMuYSYmKElsKHRoaXMuYSx0aGlzKSxTbCh0aGlzLmEuYikpO3JldHVybiBQcm9taXNlLnJlc29sdmUoKX07ZnVuY3Rpb24gVChhLGIpe2EuUC5wdXNoKGIpO2IubWEoZnVuY3Rpb24oKXtUYShhLlAsYil9KTtyZXR1cm4gYn1rLmZjPWZ1bmN0aW9uKGEpe3JldHVybiBUKHRoaXMsVmkodGhpcy5iLGEpKX07ay56Yz1mdW5jdGlvbihhKXtyZXR1cm4hIWJoKGEpfTtcbmsuc2I9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzO3JldHVybiBUKHRoaXMsRSgpLnRoZW4oZnVuY3Rpb24oKXt2YXIgZD1uZXcgUGYoYik7aWYoIWQuYyl0aHJvdyBuZXcgdShcImFyZ3VtZW50LWVycm9yXCIsWGYrXCIgbXVzdCBiZSB0cnVlIHdoZW4gc2VuZGluZyBzaWduIGluIGxpbmsgdG8gZW1haWxcIik7cmV0dXJuIFpmKGQpfSkudGhlbihmdW5jdGlvbihkKXtyZXR1cm4gYy5iLnNiKGEsZCl9KS50aGVuKGZ1bmN0aW9uKCl7fSkpfTtrLmZkPWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLlBhKGEpLnRoZW4oZnVuY3Rpb24oYil7cmV0dXJuIGIuZGF0YS5lbWFpbH0pfTtrLmpiPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFQodGhpcyx0aGlzLmIuamIoYSxiKS50aGVuKGZ1bmN0aW9uKCl7fSkpfTtrLlBhPWZ1bmN0aW9uKGEpe3JldHVybiBUKHRoaXMsdGhpcy5iLlBhKGEpLnRoZW4oZnVuY3Rpb24oYil7cmV0dXJuIG5ldyBzZihiKX0pKX07XG5rLmZiPWZ1bmN0aW9uKGEpe3JldHVybiBUKHRoaXMsdGhpcy5iLmZiKGEpLnRoZW4oZnVuY3Rpb24oKXt9KSl9O2sucmI9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzO3JldHVybiBUKHRoaXMsRSgpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm5cInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fGpiKGIpP3t9OlpmKG5ldyBQZihiKSl9KS50aGVuKGZ1bmN0aW9uKGQpe3JldHVybiBjLmIucmIoYSxkKX0pLnRoZW4oZnVuY3Rpb24oKXt9KSl9O2suVWM9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVCh0aGlzLFpsKHRoaXMsYSxiLHIodGhpcy5ZYSx0aGlzKSkpfTtcbmsuVGM9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzO3JldHVybiBUKHRoaXMsRSgpLnRoZW4oZnVuY3Rpb24oKXt2YXIgZD1ifHxvZSgpLGU9YWgoYSxkKTtkPWJoKGQpO2lmKCFkKXRocm93IG5ldyB1KFwiYXJndW1lbnQtZXJyb3JcIixcIkludmFsaWQgZW1haWwgbGluayFcIik7aWYoZC50ZW5hbnRJZCE9PWMuUygpKXRocm93IG5ldyB1KFwidGVuYW50LWlkLW1pc21hdGNoXCIpO3JldHVybiBjLllhKGUpfSkpfTtmdW5jdGlvbiBLbigpe31Lbi5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKCl7fTtLbi5wcm90b3R5cGUucmVzZXQ9ZnVuY3Rpb24oKXt9O0tuLnByb3RvdHlwZS5nZXRSZXNwb25zZT1mdW5jdGlvbigpe307S24ucHJvdG90eXBlLmV4ZWN1dGU9ZnVuY3Rpb24oKXt9O2Z1bmN0aW9uIExuKCl7dGhpcy5hPXt9O3RoaXMuYj0xRTEyfXZhciBNbj1udWxsO0xuLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSxiKXt0aGlzLmFbdGhpcy5iLnRvU3RyaW5nKCldPW5ldyBObihhLGIpO3JldHVybiB0aGlzLmIrK307TG4ucHJvdG90eXBlLnJlc2V0PWZ1bmN0aW9uKGEpe3ZhciBiPU9uKHRoaXMsYSk7YT1QbihhKTtiJiZhJiYoYi5kZWxldGUoKSxkZWxldGUgdGhpcy5hW2FdKX07TG4ucHJvdG90eXBlLmdldFJlc3BvbnNlPWZ1bmN0aW9uKGEpe3JldHVybihhPU9uKHRoaXMsYSkpP2EuZ2V0UmVzcG9uc2UoKTpudWxsfTtMbi5wcm90b3R5cGUuZXhlY3V0ZT1mdW5jdGlvbihhKXsoYT1Pbih0aGlzLGEpKSYmYS5leGVjdXRlKCl9O2Z1bmN0aW9uIE9uKGEsYil7cmV0dXJuKGI9UG4oYikpP2EuYVtiXXx8bnVsbDpudWxsfWZ1bmN0aW9uIFBuKGEpe3JldHVybihhPVwidW5kZWZpbmVkXCI9PT10eXBlb2YgYT8xRTEyOmEpP2EudG9TdHJpbmcoKTpudWxsfVxuZnVuY3Rpb24gTm4oYSxiKXt0aGlzLmc9ITE7dGhpcy5jPWI7dGhpcy5hPXRoaXMuYj1udWxsO3RoaXMuaD1cImludmlzaWJsZVwiIT09dGhpcy5jLnNpemU7dGhpcy5mPWVjKGEpO3ZhciBjPXRoaXM7dGhpcy5pPWZ1bmN0aW9uKCl7Yy5leGVjdXRlKCl9O3RoaXMuaD90aGlzLmV4ZWN1dGUoKTpqZCh0aGlzLmYsXCJjbGlja1wiLHRoaXMuaSl9Tm4ucHJvdG90eXBlLmdldFJlc3BvbnNlPWZ1bmN0aW9uKCl7UW4odGhpcyk7cmV0dXJuIHRoaXMuYn07XG5Obi5wcm90b3R5cGUuZXhlY3V0ZT1mdW5jdGlvbigpe1FuKHRoaXMpO3ZhciBhPXRoaXM7dGhpcy5hfHwodGhpcy5hPXNldFRpbWVvdXQoZnVuY3Rpb24oKXthLmI9SmUoKTt2YXIgYj1hLmMuY2FsbGJhY2ssYz1hLmNbXCJleHBpcmVkLWNhbGxiYWNrXCJdO2lmKGIpdHJ5e2IoYS5iKX1jYXRjaChkKXt9YS5hPXNldFRpbWVvdXQoZnVuY3Rpb24oKXthLmE9bnVsbDthLmI9bnVsbDtpZihjKXRyeXtjKCl9Y2F0Y2goZCl7fWEuaCYmYS5leGVjdXRlKCl9LDZFNCl9LDUwMCkpfTtObi5wcm90b3R5cGUuZGVsZXRlPWZ1bmN0aW9uKCl7UW4odGhpcyk7dGhpcy5nPSEwO2NsZWFyVGltZW91dCh0aGlzLmEpO3RoaXMuYT1udWxsO3RkKHRoaXMuZixcImNsaWNrXCIsdGhpcy5pKX07ZnVuY3Rpb24gUW4oYSl7aWYoYS5nKXRocm93IEVycm9yKFwicmVDQVBUQ0hBIG1vY2sgd2FzIGFscmVhZHkgZGVsZXRlZCFcIik7fTtmdW5jdGlvbiBSbigpe31LKFJuLFwiRkFDVE9SX0lEXCIsXCJwaG9uZVwiKTtmdW5jdGlvbiBTbigpe31Tbi5wcm90b3R5cGUuZz1mdW5jdGlvbigpe01ufHwoTW49bmV3IExuKTtyZXR1cm4gRShNbil9O1NuLnByb3RvdHlwZS5jPWZ1bmN0aW9uKCl7fTt2YXIgVG49bnVsbDtmdW5jdGlvbiBVbigpe3RoaXMuYj1sLmdyZWNhcHRjaGE/SW5maW5pdHk6MDt0aGlzLmY9bnVsbDt0aGlzLmE9XCJfX3JjYlwiK01hdGguZmxvb3IoMUU2Kk1hdGgucmFuZG9tKCkpLnRvU3RyaW5nKCl9dmFyIFZuPW5ldyBuYihvYixcImh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vcmVjYXB0Y2hhL2FwaS5qcz9vbmxvYWQ9JXtvbmxvYWR9JnJlbmRlcj1leHBsaWNpdCZobD0le2hsfVwiKSxXbj1uZXcgV2UoM0U0LDZFNCk7XG5Vbi5wcm90b3R5cGUuZz1mdW5jdGlvbihhKXt2YXIgYj10aGlzO3JldHVybiBuZXcgRChmdW5jdGlvbihjLGQpe3ZhciBlPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtkKG5ldyB1KFwibmV0d29yay1yZXF1ZXN0LWZhaWxlZFwiKSl9LFduLmdldCgpKTtpZighbC5ncmVjYXB0Y2hhfHxhIT09Yi5mJiYhYi5iKXtsW2IuYV09ZnVuY3Rpb24oKXtpZihsLmdyZWNhcHRjaGEpe2IuZj1hO3ZhciBnPWwuZ3JlY2FwdGNoYS5yZW5kZXI7bC5ncmVjYXB0Y2hhLnJlbmRlcj1mdW5jdGlvbihoLG0pe2g9ZyhoLG0pO2IuYisrO3JldHVybiBofTtjbGVhclRpbWVvdXQoZSk7YyhsLmdyZWNhcHRjaGEpfWVsc2UgY2xlYXJUaW1lb3V0KGUpLGQobmV3IHUoXCJpbnRlcm5hbC1lcnJvclwiKSk7ZGVsZXRlIGxbYi5hXX07dmFyIGY9d2IoVm4se29ubG9hZDpiLmEsaGw6YXx8XCJcIn0pO0UoeGkoZikpLm8oZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQoZSk7ZChuZXcgdShcImludGVybmFsLWVycm9yXCIsXCJVbmFibGUgdG8gbG9hZCBleHRlcm5hbCByZUNBUFRDSEEgZGVwZW5kZW5jaWVzIVwiKSl9KX1lbHNlIGNsZWFyVGltZW91dChlKSxcbmMobC5ncmVjYXB0Y2hhKX0pfTtVbi5wcm90b3R5cGUuYz1mdW5jdGlvbigpe3RoaXMuYi0tfTt2YXIgWG49bnVsbDtmdW5jdGlvbiBZbihhLGIsYyxkLGUsZixnKXtLKHRoaXMsXCJ0eXBlXCIsXCJyZWNhcHRjaGFcIik7dGhpcy5jPXRoaXMuZj1udWxsO3RoaXMuRD0hMTt0aGlzLnU9Yjt0aGlzLmc9bnVsbDtnPyhUbnx8KFRuPW5ldyBTbiksZz1Ubik6KFhufHwoWG49bmV3IFVuKSxnPVhuKTt0aGlzLm09Zzt0aGlzLmE9Y3x8e3RoZW1lOlwibGlnaHRcIix0eXBlOlwiaW1hZ2VcIn07dGhpcy5oPVtdO2lmKHRoaXMuYVtabl0pdGhyb3cgbmV3IHUoXCJhcmd1bWVudC1lcnJvclwiLFwic2l0ZWtleSBzaG91bGQgbm90IGJlIHByb3ZpZGVkIGZvciByZUNBUFRDSEEgYXMgb25lIGlzIGF1dG9tYXRpY2FsbHkgcHJvdmlzaW9uZWQgZm9yIHRoZSBjdXJyZW50IHByb2plY3QuXCIpO3RoaXMuaT1cImludmlzaWJsZVwiPT09dGhpcy5hWyRuXTtpZighbC5kb2N1bWVudCl0aHJvdyBuZXcgdShcIm9wZXJhdGlvbi1ub3Qtc3VwcG9ydGVkLWluLXRoaXMtZW52aXJvbm1lbnRcIixcIlJlY2FwdGNoYVZlcmlmaWVyIGlzIG9ubHkgc3VwcG9ydGVkIGluIGEgYnJvd3NlciBIVFRQL0hUVFBTIGVudmlyb25tZW50IHdpdGggRE9NIHN1cHBvcnQuXCIpO1xuaWYoIWVjKGIpfHwhdGhpcy5pJiZlYyhiKS5oYXNDaGlsZE5vZGVzKCkpdGhyb3cgbmV3IHUoXCJhcmd1bWVudC1lcnJvclwiLFwicmVDQVBUQ0hBIGNvbnRhaW5lciBpcyBlaXRoZXIgbm90IGZvdW5kIG9yIGFscmVhZHkgY29udGFpbnMgaW5uZXIgZWxlbWVudHMhXCIpO3RoaXMucz1uZXcgRWkoYSxmfHxudWxsLGV8fG51bGwpO3RoaXMudz1kfHxmdW5jdGlvbigpe3JldHVybiBudWxsfTt2YXIgaD10aGlzO3RoaXMubD1bXTt2YXIgbT10aGlzLmFbYW9dO3RoaXMuYVthb109ZnVuY3Rpb24odil7Ym8oaCx2KTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSltKHYpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBtKXt2YXIgQz1KKG0sbCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIEMmJkModil9fTt2YXIgcD10aGlzLmFbY29dO3RoaXMuYVtjb109ZnVuY3Rpb24oKXtibyhoLG51bGwpO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBwKXAoKTtlbHNlIGlmKFwic3RyaW5nXCI9PT10eXBlb2YgcCl7dmFyIHY9XG5KKHAsbCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIHYmJnYoKX19fXZhciBhbz1cImNhbGxiYWNrXCIsY289XCJleHBpcmVkLWNhbGxiYWNrXCIsWm49XCJzaXRla2V5XCIsJG49XCJzaXplXCI7ZnVuY3Rpb24gYm8oYSxiKXtmb3IodmFyIGM9MDtjPGEubC5sZW5ndGg7YysrKXRyeXthLmxbY10oYil9Y2F0Y2goZCl7fX1mdW5jdGlvbiBlbyhhLGIpe1VhKGEubCxmdW5jdGlvbihjKXtyZXR1cm4gYz09Yn0pfWZ1bmN0aW9uIGZvKGEsYil7YS5oLnB1c2goYik7Yi5tYShmdW5jdGlvbigpe1RhKGEuaCxiKX0pO3JldHVybiBifWs9WW4ucHJvdG90eXBlO1xuay5HYT1mdW5jdGlvbigpe3ZhciBhPXRoaXM7cmV0dXJuIHRoaXMuZj90aGlzLmY6dGhpcy5mPWZvKHRoaXMsRSgpLnRoZW4oZnVuY3Rpb24oKXtpZihQZSgpJiYhR2UoKSlyZXR1cm4gQmUoKTt0aHJvdyBuZXcgdShcIm9wZXJhdGlvbi1ub3Qtc3VwcG9ydGVkLWluLXRoaXMtZW52aXJvbm1lbnRcIixcIlJlY2FwdGNoYVZlcmlmaWVyIGlzIG9ubHkgc3VwcG9ydGVkIGluIGEgYnJvd3NlciBIVFRQL0hUVFBTIGVudmlyb25tZW50LlwiKTt9KS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIGEubS5nKGEudygpKX0pLnRoZW4oZnVuY3Rpb24oYil7YS5nPWI7cmV0dXJuIE4oYS5zLERqLHt9KX0pLnRoZW4oZnVuY3Rpb24oYil7YS5hW1puXT1iLnJlY2FwdGNoYVNpdGVLZXl9KS5vKGZ1bmN0aW9uKGIpe2EuZj1udWxsO3Rocm93IGI7fSkpfTtcbmsucmVuZGVyPWZ1bmN0aW9uKCl7Z28odGhpcyk7dmFyIGE9dGhpcztyZXR1cm4gZm8odGhpcyx0aGlzLkdhKCkudGhlbihmdW5jdGlvbigpe2lmKG51bGw9PT1hLmMpe3ZhciBiPWEudTtpZighYS5pKXt2YXIgYz1lYyhiKTtiPWhjKFwiRElWXCIpO2MuYXBwZW5kQ2hpbGQoYil9YS5jPWEuZy5yZW5kZXIoYixhLmEpfXJldHVybiBhLmN9KSl9O2sudmVyaWZ5PWZ1bmN0aW9uKCl7Z28odGhpcyk7dmFyIGE9dGhpcztyZXR1cm4gZm8odGhpcyx0aGlzLnJlbmRlcigpLnRoZW4oZnVuY3Rpb24oYil7cmV0dXJuIG5ldyBEKGZ1bmN0aW9uKGMpe3ZhciBkPWEuZy5nZXRSZXNwb25zZShiKTtpZihkKWMoZCk7ZWxzZXt2YXIgZT1mdW5jdGlvbihmKXtmJiYoZW8oYSxlKSxjKGYpKX07YS5sLnB1c2goZSk7YS5pJiZhLmcuZXhlY3V0ZShhLmMpfX0pfSkpfTtrLnJlc2V0PWZ1bmN0aW9uKCl7Z28odGhpcyk7bnVsbCE9PXRoaXMuYyYmdGhpcy5nLnJlc2V0KHRoaXMuYyl9O1xuZnVuY3Rpb24gZ28oYSl7aWYoYS5EKXRocm93IG5ldyB1KFwiaW50ZXJuYWwtZXJyb3JcIixcIlJlY2FwdGNoYVZlcmlmaWVyIGluc3RhbmNlIGhhcyBiZWVuIGRlc3Ryb3llZC5cIik7fWsuY2xlYXI9ZnVuY3Rpb24oKXtnbyh0aGlzKTt0aGlzLkQ9ITA7dGhpcy5tLmMoKTtmb3IodmFyIGE9MDthPHRoaXMuaC5sZW5ndGg7YSsrKXRoaXMuaFthXS5jYW5jZWwoXCJSZWNhcHRjaGFWZXJpZmllciBpbnN0YW5jZSBoYXMgYmVlbiBkZXN0cm95ZWQuXCIpO2lmKCF0aGlzLmkpe2E9ZWModGhpcy51KTtmb3IodmFyIGI7Yj1hLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYil9fTtcbmZ1bmN0aW9uIGhvKGEsYixjKXt2YXIgZD0hMTt0cnl7dGhpcy5iPWN8fGZpcmViYXNlLmFwcCgpfWNhdGNoKGcpe3Rocm93IG5ldyB1KFwiYXJndW1lbnQtZXJyb3JcIixcIk5vIGZpcmViYXNlLmFwcC5BcHAgaW5zdGFuY2UgaXMgY3VycmVudGx5IGluaXRpYWxpemVkLlwiKTt9aWYodGhpcy5iLm9wdGlvbnMmJnRoaXMuYi5vcHRpb25zLmFwaUtleSljPXRoaXMuYi5vcHRpb25zLmFwaUtleTtlbHNlIHRocm93IG5ldyB1KFwiaW52YWxpZC1hcGkta2V5XCIpO3ZhciBlPXRoaXMsZj1udWxsO3RyeXtmPXRoaXMuYi5hdXRoKCkuRWEoKX1jYXRjaChnKXt9dHJ5e2Q9dGhpcy5iLmF1dGgoKS5zZXR0aW5ncy5hcHBWZXJpZmljYXRpb25EaXNhYmxlZEZvclRlc3Rpbmd9Y2F0Y2goZyl7fWY9ZmlyZWJhc2UuU0RLX1ZFUlNJT04/TGUoZmlyZWJhc2UuU0RLX1ZFUlNJT04sZik6bnVsbDtZbi5jYWxsKHRoaXMsYyxhLGIsZnVuY3Rpb24oKXt0cnl7dmFyIGc9ZS5iLmF1dGgoKS5qYSgpfWNhdGNoKGgpe2c9XG5udWxsfXJldHVybiBnfSxmLHphKEFhKSxkKX10KGhvLFluKTtmdW5jdGlvbiBpbyhhLGIsYyxkKXthOntjPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGMpO3ZhciBlPTA7Zm9yKHZhciBmPSExLGc9MDtnPGIubGVuZ3RoO2crKylpZihiW2ddLm9wdGlvbmFsKWY9ITA7ZWxzZXtpZihmKXRocm93IG5ldyB1KFwiaW50ZXJuYWwtZXJyb3JcIixcIkFyZ3VtZW50IHZhbGlkYXRvciBlbmNvdW50ZXJlZCBhIHJlcXVpcmVkIGFyZ3VtZW50IGFmdGVyIGFuIG9wdGlvbmFsIGFyZ3VtZW50LlwiKTtlKyt9Zj1iLmxlbmd0aDtpZihjLmxlbmd0aDxlfHxmPGMubGVuZ3RoKWQ9XCJFeHBlY3RlZCBcIisoZT09Zj8xPT1lP1wiMSBhcmd1bWVudFwiOmUrXCIgYXJndW1lbnRzXCI6ZStcIi1cIitmK1wiIGFyZ3VtZW50c1wiKStcIiBidXQgZ290IFwiK2MubGVuZ3RoK1wiLlwiO2Vsc2V7Zm9yKGU9MDtlPGMubGVuZ3RoO2UrKylpZihmPWJbZV0ub3B0aW9uYWwmJnZvaWQgMD09PWNbZV0sIWJbZV0uSyhjW2VdKSYmIWYpe2I9YltlXTtpZigwPmV8fGU+PWpvLmxlbmd0aCl0aHJvdyBuZXcgdShcImludGVybmFsLWVycm9yXCIsXG5cIkFyZ3VtZW50IHZhbGlkYXRvciByZWNlaXZlZCBhbiB1bnN1cHBvcnRlZCBudW1iZXIgb2YgYXJndW1lbnRzLlwiKTtjPWpvW2VdO2Q9KGQ/XCJcIjpjK1wiIGFyZ3VtZW50IFwiKSsoYi5uYW1lPydcIicrYi5uYW1lKydcIiAnOlwiXCIpK1wibXVzdCBiZSBcIitiLkorXCIuXCI7YnJlYWsgYX1kPW51bGx9fWlmKGQpdGhyb3cgbmV3IHUoXCJhcmd1bWVudC1lcnJvclwiLGErXCIgZmFpbGVkOiBcIitkKTt9dmFyIGpvPVwiRmlyc3QgU2Vjb25kIFRoaXJkIEZvdXJ0aCBGaWZ0aCBTaXh0aCBTZXZlbnRoIEVpZ2h0aCBOaW50aFwiLnNwbGl0KFwiIFwiKTtmdW5jdGlvbiBWKGEsYil7cmV0dXJue25hbWU6YXx8XCJcIixKOlwiYSB2YWxpZCBzdHJpbmdcIixvcHRpb25hbDohIWIsSzpmdW5jdGlvbihjKXtyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGN9fX1cbmZ1bmN0aW9uIGtvKGEsYil7cmV0dXJue25hbWU6YXx8XCJcIixKOlwiYSBib29sZWFuXCIsb3B0aW9uYWw6ISFiLEs6ZnVuY3Rpb24oYyl7cmV0dXJuXCJib29sZWFuXCI9PT10eXBlb2YgY319fWZ1bmN0aW9uIFcoYSxiKXtyZXR1cm57bmFtZTphfHxcIlwiLEo6XCJhIHZhbGlkIG9iamVjdFwiLG9wdGlvbmFsOiEhYixLOnF9fWZ1bmN0aW9uIGxvKGEsYil7cmV0dXJue25hbWU6YXx8XCJcIixKOlwiYSBmdW5jdGlvblwiLG9wdGlvbmFsOiEhYixLOm59fWZ1bmN0aW9uIG1vKGEsYil7cmV0dXJue25hbWU6YXx8XCJcIixKOlwibnVsbFwiLG9wdGlvbmFsOiEhYixLOmZ1bmN0aW9uKGMpe3JldHVybiBudWxsPT09Y319fWZ1bmN0aW9uIG5vKCl7cmV0dXJue25hbWU6XCJcIixKOlwiYW4gSFRNTCBlbGVtZW50XCIsb3B0aW9uYWw6ITEsSzpmdW5jdGlvbihhKXtyZXR1cm4hIShhJiZhIGluc3RhbmNlb2YgRWxlbWVudCl9fX1cbmZ1bmN0aW9uIG9vKCl7cmV0dXJue25hbWU6XCJhdXRoXCIsSjpcImFuIGluc3RhbmNlIG9mIEZpcmViYXNlIEF1dGhcIixvcHRpb25hbDohMCxLOmZ1bmN0aW9uKGEpe3JldHVybiEhKGEmJmEgaW5zdGFuY2VvZiB1bil9fX1mdW5jdGlvbiBwbygpe3JldHVybntuYW1lOlwiYXBwXCIsSjpcImFuIGluc3RhbmNlIG9mIEZpcmViYXNlIEFwcFwiLG9wdGlvbmFsOiEwLEs6ZnVuY3Rpb24oYSl7cmV0dXJuISEoYSYmYSBpbnN0YW5jZW9mIGZpcmViYXNlLmFwcC5BcHApfX19ZnVuY3Rpb24gcW8oYSl7cmV0dXJue25hbWU6YT9hK1wiQ3JlZGVudGlhbFwiOlwiY3JlZGVudGlhbFwiLEo6YT9cImEgdmFsaWQgXCIrYStcIiBjcmVkZW50aWFsXCI6XCJhIHZhbGlkIGNyZWRlbnRpYWxcIixvcHRpb25hbDohMSxLOmZ1bmN0aW9uKGIpe2lmKCFiKXJldHVybiExO3ZhciBjPSFhfHxiLnByb3ZpZGVySWQ9PT1hO3JldHVybiEoIWIuaWF8fCFjKX19fVxuZnVuY3Rpb24gcm8oKXtyZXR1cm57bmFtZTpcIm11bHRpRmFjdG9yQXNzZXJ0aW9uXCIsSjpcImEgdmFsaWQgbXVsdGlGYWN0b3JBc3NlcnRpb25cIixvcHRpb25hbDohMSxLOmZ1bmN0aW9uKGEpe3JldHVybiBhPyEhYS5vYjohMX19fWZ1bmN0aW9uIHNvKCl7cmV0dXJue25hbWU6XCJhdXRoUHJvdmlkZXJcIixKOlwiYSB2YWxpZCBBdXRoIHByb3ZpZGVyXCIsb3B0aW9uYWw6ITEsSzpmdW5jdGlvbihhKXtyZXR1cm4hIShhJiZhLnByb3ZpZGVySWQmJmEuaGFzT3duUHJvcGVydHkmJmEuaGFzT3duUHJvcGVydHkoXCJpc09BdXRoUHJvdmlkZXJcIikpfX19ZnVuY3Rpb24gdG8oYSxiKXtyZXR1cm4gcShhKSYmXCJzdHJpbmdcIj09PXR5cGVvZiBhLnR5cGUmJmEudHlwZT09PWImJm4oYS5GYSl9ZnVuY3Rpb24gdW8oYSl7cmV0dXJuIHEoYSkmJlwic3RyaW5nXCI9PT10eXBlb2YgYS51aWR9XG5mdW5jdGlvbiB2bygpe3JldHVybntuYW1lOlwiYXBwbGljYXRpb25WZXJpZmllclwiLEo6XCJhbiBpbXBsZW1lbnRhdGlvbiBvZiBmaXJlYmFzZS5hdXRoLkFwcGxpY2F0aW9uVmVyaWZpZXJcIixvcHRpb25hbDohMSxLOmZ1bmN0aW9uKGEpe3JldHVybiEoIWF8fFwic3RyaW5nXCIhPT10eXBlb2YgYS50eXBlfHwhbihhLnZlcmlmeSkpfX19ZnVuY3Rpb24gWChhLGIsYyxkKXtyZXR1cm57bmFtZTpjfHxcIlwiLEo6YS5KK1wiIG9yIFwiK2IuSixvcHRpb25hbDohIWQsSzpmdW5jdGlvbihlKXtyZXR1cm4gYS5LKGUpfHxiLksoZSl9fX07ZnVuY3Rpb24gWShhLGIpe2Zvcih2YXIgYyBpbiBiKXt2YXIgZD1iW2NdLm5hbWU7YVtkXT13byhkLGFbY10sYltjXS5qKX19ZnVuY3Rpb24geG8oYSxiKXtmb3IodmFyIGMgaW4gYil7dmFyIGQ9YltjXS5uYW1lO2QhPT1jJiZPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxkLHtnZXQ6c2EoZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXNbZV19LGMpLHNldDpzYShmdW5jdGlvbihlLGYsZyxoKXtpbyhlLFtnXSxbaF0sITApO3RoaXNbZl09aH0sZCxjLGJbY10uZ2IpLGVudW1lcmFibGU6ITB9KX19ZnVuY3Rpb24gWihhLGIsYyxkKXthW2JdPXdvKGIsYyxkKX1cbmZ1bmN0aW9uIHdvKGEsYixjKXtmdW5jdGlvbiBkKCl7dmFyIGc9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKTtpbyhlLGMsZyk7cmV0dXJuIGIuYXBwbHkodGhpcyxnKX1pZighYylyZXR1cm4gYjt2YXIgZT15byhhKSxmO2ZvcihmIGluIGIpZFtmXT1iW2ZdO2ZvcihmIGluIGIucHJvdG90eXBlKWQucHJvdG90eXBlW2ZdPWIucHJvdG90eXBlW2ZdO3JldHVybiBkfWZ1bmN0aW9uIHlvKGEpe2E9YS5zcGxpdChcIi5cIik7cmV0dXJuIGFbYS5sZW5ndGgtMV19O1kodW4ucHJvdG90eXBlLHtmYjp7bmFtZTpcImFwcGx5QWN0aW9uQ29kZVwiLGo6W1YoXCJjb2RlXCIpXX0sUGE6e25hbWU6XCJjaGVja0FjdGlvbkNvZGVcIixqOltWKFwiY29kZVwiKV19LGpiOntuYW1lOlwiY29uZmlybVBhc3N3b3JkUmVzZXRcIixqOltWKFwiY29kZVwiKSxWKFwibmV3UGFzc3dvcmRcIildfSxjYzp7bmFtZTpcImNyZWF0ZVVzZXJXaXRoRW1haWxBbmRQYXNzd29yZFwiLGo6W1YoXCJlbWFpbFwiKSxWKFwicGFzc3dvcmRcIildfSxmYzp7bmFtZTpcImZldGNoU2lnbkluTWV0aG9kc0ZvckVtYWlsXCIsajpbVihcImVtYWlsXCIpXX0scGE6e25hbWU6XCJnZXRSZWRpcmVjdFJlc3VsdFwiLGo6W119LHpjOntuYW1lOlwiaXNTaWduSW5XaXRoRW1haWxMaW5rXCIsajpbVihcImVtYWlsTGlua1wiKV19LEZjOntuYW1lOlwib25BdXRoU3RhdGVDaGFuZ2VkXCIsajpbWChXKCksbG8oKSxcIm5leHRPck9ic2VydmVyXCIpLGxvKFwib3B0X2Vycm9yXCIsITApLGxvKFwib3B0X2NvbXBsZXRlZFwiLCEwKV19LEdjOntuYW1lOlwib25JZFRva2VuQ2hhbmdlZFwiLFxuajpbWChXKCksbG8oKSxcIm5leHRPck9ic2VydmVyXCIpLGxvKFwib3B0X2Vycm9yXCIsITApLGxvKFwib3B0X2NvbXBsZXRlZFwiLCEwKV19LHJiOntuYW1lOlwic2VuZFBhc3N3b3JkUmVzZXRFbWFpbFwiLGo6W1YoXCJlbWFpbFwiKSxYKFcoXCJvcHRfYWN0aW9uQ29kZVNldHRpbmdzXCIsITApLG1vKG51bGwsITApLFwib3B0X2FjdGlvbkNvZGVTZXR0aW5nc1wiLCEwKV19LHNiOntuYW1lOlwic2VuZFNpZ25JbkxpbmtUb0VtYWlsXCIsajpbVihcImVtYWlsXCIpLFcoXCJhY3Rpb25Db2RlU2V0dGluZ3NcIildfSx0Yjp7bmFtZTpcInNldFBlcnNpc3RlbmNlXCIsajpbVihcInBlcnNpc3RlbmNlXCIpXX0sUWM6e25hbWU6XCJzaWduSW5BbmRSZXRyaWV2ZURhdGFXaXRoQ3JlZGVudGlhbFwiLGo6W3FvKCldfSx2Yjp7bmFtZTpcInNpZ25JbkFub255bW91c2x5XCIsajpbXX0sWWE6e25hbWU6XCJzaWduSW5XaXRoQ3JlZGVudGlhbFwiLGo6W3FvKCldfSxSYzp7bmFtZTpcInNpZ25JbldpdGhDdXN0b21Ub2tlblwiLGo6W1YoXCJ0b2tlblwiKV19LFxuU2M6e25hbWU6XCJzaWduSW5XaXRoRW1haWxBbmRQYXNzd29yZFwiLGo6W1YoXCJlbWFpbFwiKSxWKFwicGFzc3dvcmRcIildfSxUYzp7bmFtZTpcInNpZ25JbldpdGhFbWFpbExpbmtcIixqOltWKFwiZW1haWxcIiksVihcImVtYWlsTGlua1wiLCEwKV19LFVjOntuYW1lOlwic2lnbkluV2l0aFBob25lTnVtYmVyXCIsajpbVihcInBob25lTnVtYmVyXCIpLHZvKCldfSxWYzp7bmFtZTpcInNpZ25JbldpdGhQb3B1cFwiLGo6W3NvKCldfSxXYzp7bmFtZTpcInNpZ25JbldpdGhSZWRpcmVjdFwiLGo6W3NvKCldfSxiZDp7bmFtZTpcInVwZGF0ZUN1cnJlbnRVc2VyXCIsajpbWChmdW5jdGlvbihhKXtyZXR1cm57bmFtZTpcInVzZXJcIixKOlwiYW4gaW5zdGFuY2Ugb2YgRmlyZWJhc2UgVXNlclwiLG9wdGlvbmFsOiEhYSxLOmZ1bmN0aW9uKGIpe3JldHVybiEhKGImJmIgaW5zdGFuY2VvZiBQKX19fSgpLG1vKCksXCJ1c2VyXCIpXX0sd2I6e25hbWU6XCJzaWduT3V0XCIsajpbXX0sdG9KU09OOntuYW1lOlwidG9KU09OXCIsajpbVihudWxsLCEwKV19LFxuZGQ6e25hbWU6XCJ1c2VEZXZpY2VMYW5ndWFnZVwiLGo6W119LGZkOntuYW1lOlwidmVyaWZ5UGFzc3dvcmRSZXNldENvZGVcIixqOltWKFwiY29kZVwiKV19fSk7eG8odW4ucHJvdG90eXBlLHtsYzp7bmFtZTpcImxhbmd1YWdlQ29kZVwiLGdiOlgoVigpLG1vKCksXCJsYW5ndWFnZUNvZGVcIil9LHRpOntuYW1lOlwidGVuYW50SWRcIixnYjpYKFYoKSxtbygpLFwidGVuYW50SWRcIil9fSk7dW4uUGVyc2lzdGVuY2U9S2s7dW4uUGVyc2lzdGVuY2UuTE9DQUw9XCJsb2NhbFwiO3VuLlBlcnNpc3RlbmNlLlNFU1NJT049XCJzZXNzaW9uXCI7dW4uUGVyc2lzdGVuY2UuTk9ORT1cIm5vbmVcIjtcblkoUC5wcm90b3R5cGUse1wiZGVsZXRlXCI6e25hbWU6XCJkZWxldGVcIixqOltdfSxtYzp7bmFtZTpcImdldElkVG9rZW5SZXN1bHRcIixqOltrbyhcIm9wdF9mb3JjZVJlZnJlc2hcIiwhMCldfSxJOntuYW1lOlwiZ2V0SWRUb2tlblwiLGo6W2tvKFwib3B0X2ZvcmNlUmVmcmVzaFwiLCEwKV19LEFjOntuYW1lOlwibGlua0FuZFJldHJpZXZlRGF0YVdpdGhDcmVkZW50aWFsXCIsajpbcW8oKV19LG1iOntuYW1lOlwibGlua1dpdGhDcmVkZW50aWFsXCIsajpbcW8oKV19LEJjOntuYW1lOlwibGlua1dpdGhQaG9uZU51bWJlclwiLGo6W1YoXCJwaG9uZU51bWJlclwiKSx2bygpXX0sQ2M6e25hbWU6XCJsaW5rV2l0aFBvcHVwXCIsajpbc28oKV19LERjOntuYW1lOlwibGlua1dpdGhSZWRpcmVjdFwiLGo6W3NvKCldfSxKYzp7bmFtZTpcInJlYXV0aGVudGljYXRlQW5kUmV0cmlldmVEYXRhV2l0aENyZWRlbnRpYWxcIixqOltxbygpXX0scGI6e25hbWU6XCJyZWF1dGhlbnRpY2F0ZVdpdGhDcmVkZW50aWFsXCIsajpbcW8oKV19LEtjOntuYW1lOlwicmVhdXRoZW50aWNhdGVXaXRoUGhvbmVOdW1iZXJcIixcbmo6W1YoXCJwaG9uZU51bWJlclwiKSx2bygpXX0sTGM6e25hbWU6XCJyZWF1dGhlbnRpY2F0ZVdpdGhQb3B1cFwiLGo6W3NvKCldfSxNYzp7bmFtZTpcInJlYXV0aGVudGljYXRlV2l0aFJlZGlyZWN0XCIsajpbc28oKV19LHJlbG9hZDp7bmFtZTpcInJlbG9hZFwiLGo6W119LHFiOntuYW1lOlwic2VuZEVtYWlsVmVyaWZpY2F0aW9uXCIsajpbWChXKFwib3B0X2FjdGlvbkNvZGVTZXR0aW5nc1wiLCEwKSxtbyhudWxsLCEwKSxcIm9wdF9hY3Rpb25Db2RlU2V0dGluZ3NcIiwhMCldfSx0b0pTT046e25hbWU6XCJ0b0pTT05cIixqOltWKG51bGwsITApXX0sYWQ6e25hbWU6XCJ1bmxpbmtcIixqOltWKFwicHJvdmlkZXJcIildfSx4Yjp7bmFtZTpcInVwZGF0ZUVtYWlsXCIsajpbVihcImVtYWlsXCIpXX0seWI6e25hbWU6XCJ1cGRhdGVQYXNzd29yZFwiLGo6W1YoXCJwYXNzd29yZFwiKV19LGNkOntuYW1lOlwidXBkYXRlUGhvbmVOdW1iZXJcIixqOltxbyhcInBob25lXCIpXX0semI6e25hbWU6XCJ1cGRhdGVQcm9maWxlXCIsajpbVyhcInByb2ZpbGVcIildfSxcbkFiOntuYW1lOlwidmVyaWZ5QmVmb3JlVXBkYXRlRW1haWxcIixqOltWKFwiZW1haWxcIiksWChXKFwib3B0X2FjdGlvbkNvZGVTZXR0aW5nc1wiLCEwKSxtbyhudWxsLCEwKSxcIm9wdF9hY3Rpb25Db2RlU2V0dGluZ3NcIiwhMCldfX0pO1koTG4ucHJvdG90eXBlLHtleGVjdXRlOntuYW1lOlwiZXhlY3V0ZVwifSxyZW5kZXI6e25hbWU6XCJyZW5kZXJcIn0scmVzZXQ6e25hbWU6XCJyZXNldFwifSxnZXRSZXNwb25zZTp7bmFtZTpcImdldFJlc3BvbnNlXCJ9fSk7WShLbi5wcm90b3R5cGUse2V4ZWN1dGU6e25hbWU6XCJleGVjdXRlXCJ9LHJlbmRlcjp7bmFtZTpcInJlbmRlclwifSxyZXNldDp7bmFtZTpcInJlc2V0XCJ9LGdldFJlc3BvbnNlOntuYW1lOlwiZ2V0UmVzcG9uc2VcIn19KTtZKEQucHJvdG90eXBlLHttYTp7bmFtZTpcImZpbmFsbHlcIn0sbzp7bmFtZTpcImNhdGNoXCJ9LHRoZW46e25hbWU6XCJ0aGVuXCJ9fSk7XG54byhYbC5wcm90b3R5cGUse2FwcFZlcmlmaWNhdGlvbkRpc2FibGVkOntuYW1lOlwiYXBwVmVyaWZpY2F0aW9uRGlzYWJsZWRGb3JUZXN0aW5nXCIsZ2I6a28oXCJhcHBWZXJpZmljYXRpb25EaXNhYmxlZEZvclRlc3RpbmdcIil9fSk7WShZbC5wcm90b3R5cGUse2NvbmZpcm06e25hbWU6XCJjb25maXJtXCIsajpbVihcInZlcmlmaWNhdGlvbkNvZGVcIildfX0pO1ooeWcsXCJmcm9tSlNPTlwiLGZ1bmN0aW9uKGEpe2E9XCJzdHJpbmdcIj09PXR5cGVvZiBhP0pTT04ucGFyc2UoYSk6YTtmb3IodmFyIGIsYz1bSmcsJGcsZ2gsR2ddLGQ9MDtkPGMubGVuZ3RoO2QrKylpZihiPWNbZF0oYSkpcmV0dXJuIGI7cmV0dXJuIG51bGx9LFtYKFYoKSxXKCksXCJqc29uXCIpXSk7WihWZyxcImNyZWRlbnRpYWxcIixmdW5jdGlvbihhLGIpe3JldHVybiBuZXcgVWcoYSxiKX0sW1YoXCJlbWFpbFwiKSxWKFwicGFzc3dvcmRcIildKTtZKFVnLnByb3RvdHlwZSx7djp7bmFtZTpcInRvSlNPTlwiLGo6W1YobnVsbCwhMCldfX0pO1xuWShNZy5wcm90b3R5cGUse0FhOntuYW1lOlwiYWRkU2NvcGVcIixqOltWKFwic2NvcGVcIildfSxJYTp7bmFtZTpcInNldEN1c3RvbVBhcmFtZXRlcnNcIixqOltXKFwiY3VzdG9tT0F1dGhQYXJhbWV0ZXJzXCIpXX19KTtaKE1nLFwiY3JlZGVudGlhbFwiLE5nLFtYKFYoKSxXKCksXCJ0b2tlblwiKV0pO1ooVmcsXCJjcmVkZW50aWFsV2l0aExpbmtcIixhaCxbVihcImVtYWlsXCIpLFYoXCJlbWFpbExpbmtcIildKTtZKE9nLnByb3RvdHlwZSx7QWE6e25hbWU6XCJhZGRTY29wZVwiLGo6W1YoXCJzY29wZVwiKV19LElhOntuYW1lOlwic2V0Q3VzdG9tUGFyYW1ldGVyc1wiLGo6W1coXCJjdXN0b21PQXV0aFBhcmFtZXRlcnNcIildfX0pO1ooT2csXCJjcmVkZW50aWFsXCIsUGcsW1goVigpLFcoKSxcInRva2VuXCIpXSk7WShRZy5wcm90b3R5cGUse0FhOntuYW1lOlwiYWRkU2NvcGVcIixqOltWKFwic2NvcGVcIildfSxJYTp7bmFtZTpcInNldEN1c3RvbVBhcmFtZXRlcnNcIixqOltXKFwiY3VzdG9tT0F1dGhQYXJhbWV0ZXJzXCIpXX19KTtcblooUWcsXCJjcmVkZW50aWFsXCIsUmcsW1goVigpLFgoVygpLG1vKCkpLFwiaWRUb2tlblwiKSxYKFYoKSxtbygpLFwiYWNjZXNzVG9rZW5cIiwhMCldKTtZKFNnLnByb3RvdHlwZSx7SWE6e25hbWU6XCJzZXRDdXN0b21QYXJhbWV0ZXJzXCIsajpbVyhcImN1c3RvbU9BdXRoUGFyYW1ldGVyc1wiKV19fSk7WihTZyxcImNyZWRlbnRpYWxcIixUZyxbWChWKCksVygpLFwidG9rZW5cIiksVihcInNlY3JldFwiLCEwKV0pO1koTS5wcm90b3R5cGUse0FhOntuYW1lOlwiYWRkU2NvcGVcIixqOltWKFwic2NvcGVcIildfSxjcmVkZW50aWFsOntuYW1lOlwiY3JlZGVudGlhbFwiLGo6W1goVigpLFgoVygpLG1vKCkpLFwib3B0aW9uc09ySWRUb2tlblwiKSxYKFYoKSxtbygpLFwiYWNjZXNzVG9rZW5cIiwhMCldfSxJYTp7bmFtZTpcInNldEN1c3RvbVBhcmFtZXRlcnNcIixqOltXKFwiY3VzdG9tT0F1dGhQYXJhbWV0ZXJzXCIpXX19KTtZKEhnLnByb3RvdHlwZSx7djp7bmFtZTpcInRvSlNPTlwiLGo6W1YobnVsbCwhMCldfX0pO1xuWShCZy5wcm90b3R5cGUse3Y6e25hbWU6XCJ0b0pTT05cIixqOltWKG51bGwsITApXX19KTtaKGhoLFwiY3JlZGVudGlhbFwiLGxoLFtWKFwidmVyaWZpY2F0aW9uSWRcIiksVihcInZlcmlmaWNhdGlvbkNvZGVcIildKTtcblkoaGgucHJvdG90eXBlLHtjYjp7bmFtZTpcInZlcmlmeVBob25lTnVtYmVyXCIsajpbWChWKCksZnVuY3Rpb24oYSxiKXtyZXR1cm57bmFtZTphfHxcInBob25lSW5mb09wdGlvbnNcIixKOlwidmFsaWQgcGhvbmUgaW5mbyBvcHRpb25zXCIsb3B0aW9uYWw6ISFiLEs6ZnVuY3Rpb24oYyl7cmV0dXJuIGM/Yy5zZXNzaW9uJiZjLnBob25lTnVtYmVyP3RvKGMuc2Vzc2lvbix3ZykmJlwic3RyaW5nXCI9PT10eXBlb2YgYy5waG9uZU51bWJlcjpjLnNlc3Npb24mJmMubXVsdGlGYWN0b3JIaW50P3RvKGMuc2Vzc2lvbix4ZykmJnVvKGMubXVsdGlGYWN0b3JIaW50KTpjLnNlc3Npb24mJmMubXVsdGlGYWN0b3JVaWQ/dG8oYy5zZXNzaW9uLHhnKSYmXCJzdHJpbmdcIj09PXR5cGVvZiBjLm11bHRpRmFjdG9yVWlkOmMucGhvbmVOdW1iZXI/XCJzdHJpbmdcIj09PXR5cGVvZiBjLnBob25lTnVtYmVyOiExOiExfX19KCksXCJwaG9uZUluZm9PcHRpb25zXCIpLHZvKCldfX0pO1xuWShjaC5wcm90b3R5cGUse3Y6e25hbWU6XCJ0b0pTT05cIixqOltWKG51bGwsITApXX19KTtZKHUucHJvdG90eXBlLHt0b0pTT046e25hbWU6XCJ0b0pTT05cIixqOltWKG51bGwsITApXX19KTtZKHVoLnByb3RvdHlwZSx7dG9KU09OOntuYW1lOlwidG9KU09OXCIsajpbVihudWxsLCEwKV19fSk7WSh0aC5wcm90b3R5cGUse3RvSlNPTjp7bmFtZTpcInRvSlNPTlwiLGo6W1YobnVsbCwhMCldfX0pO1koZG0ucHJvdG90eXBlLHt0b0pTT046e25hbWU6XCJ0b0pTT05cIixqOltWKG51bGwsITApXX19KTtZKGFtLnByb3RvdHlwZSx7UGM6e25hbWU6XCJyZXNvbHZlU2lnbkluXCIsajpbcm8oKV19fSk7XG5ZKGxtLnByb3RvdHlwZSx7T2I6e25hbWU6XCJnZXRTZXNzaW9uXCIsajpbXX0sZGM6e25hbWU6XCJlbnJvbGxcIixqOltybygpLFYoXCJkaXNwbGF5TmFtZVwiLCEwKV19LCRjOntuYW1lOlwidW5lbnJvbGxcIixqOltYKHtuYW1lOlwibXVsdGlGYWN0b3JJbmZvXCIsSjpcImEgdmFsaWQgbXVsdGlGYWN0b3JJbmZvXCIsb3B0aW9uYWw6ITEsSzp1b30sVigpLFwibXVsdGlGYWN0b3JJbmZvSWRlbnRpZmllclwiKV19fSk7WShoby5wcm90b3R5cGUse2NsZWFyOntuYW1lOlwiY2xlYXJcIixqOltdfSxyZW5kZXI6e25hbWU6XCJyZW5kZXJcIixqOltdfSx2ZXJpZnk6e25hbWU6XCJ2ZXJpZnlcIixqOltdfX0pO1ooR2YsXCJwYXJzZUxpbmtcIixPZixbVihcImxpbmtcIildKTtaKFJuLFwiYXNzZXJ0aW9uXCIsZnVuY3Rpb24oYSl7cmV0dXJuIG5ldyBqbShhKX0sW3FvKFwicGhvbmVcIildKTtcbihmdW5jdGlvbigpe2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgZmlyZWJhc2UmJmZpcmViYXNlLklOVEVSTkFMJiZmaXJlYmFzZS5JTlRFUk5BTC5yZWdpc3RlckNvbXBvbmVudCl7dmFyIGE9e0FjdGlvbkNvZGVJbmZvOntPcGVyYXRpb246e0VNQUlMX1NJR05JTjp4ZixQQVNTV09SRF9SRVNFVDpcIlBBU1NXT1JEX1JFU0VUXCIsUkVDT1ZFUl9FTUFJTDpcIlJFQ09WRVJfRU1BSUxcIixSRVZFUlRfU0VDT05EX0ZBQ1RPUl9BRERJVElPTjp6ZixWRVJJRllfQU5EX0NIQU5HRV9FTUFJTDp5ZixWRVJJRllfRU1BSUw6XCJWRVJJRllfRU1BSUxcIn19LEF1dGg6dW4sQXV0aENyZWRlbnRpYWw6eWcsRXJyb3I6dX07WihhLFwiRW1haWxBdXRoUHJvdmlkZXJcIixWZyxbXSk7WihhLFwiRmFjZWJvb2tBdXRoUHJvdmlkZXJcIixNZyxbXSk7WihhLFwiR2l0aHViQXV0aFByb3ZpZGVyXCIsT2csW10pO1ooYSxcIkdvb2dsZUF1dGhQcm92aWRlclwiLFFnLFtdKTtaKGEsXCJUd2l0dGVyQXV0aFByb3ZpZGVyXCIsU2csW10pO1xuWihhLFwiT0F1dGhQcm92aWRlclwiLE0sW1YoXCJwcm92aWRlcklkXCIpXSk7WihhLFwiU0FNTEF1dGhQcm92aWRlclwiLExnLFtWKFwicHJvdmlkZXJJZFwiKV0pO1ooYSxcIlBob25lQXV0aFByb3ZpZGVyXCIsaGgsW29vKCldKTtaKGEsXCJSZWNhcHRjaGFWZXJpZmllclwiLGhvLFtYKFYoKSxubygpLFwicmVjYXB0Y2hhQ29udGFpbmVyXCIpLFcoXCJyZWNhcHRjaGFQYXJhbWV0ZXJzXCIsITApLHBvKCldKTtaKGEsXCJBY3Rpb25Db2RlVVJMXCIsR2YsW10pO1ooYSxcIlBob25lTXVsdGlGYWN0b3JHZW5lcmF0b3JcIixSbixbXSk7ZmlyZWJhc2UuSU5URVJOQUwucmVnaXN0ZXJDb21wb25lbnQoe25hbWU6XCJhdXRoXCIsaW5zdGFuY2VGYWN0b3J5OmZ1bmN0aW9uKGIpe2I9Yi5nZXRQcm92aWRlcihcImFwcFwiKS5nZXRJbW1lZGlhdGUoKTtyZXR1cm4gbmV3IHVuKGIpfSxtdWx0aXBsZUluc3RhbmNlczohMSxzZXJ2aWNlUHJvcHM6YSxpbnN0YW50aWF0aW9uTW9kZTpcIkxBWllcIix0eXBlOlwiUFVCTElDXCJ9KTtmaXJlYmFzZS5JTlRFUk5BTC5yZWdpc3RlckNvbXBvbmVudCh7bmFtZTpcImF1dGgtaW50ZXJuYWxcIixcbmluc3RhbmNlRmFjdG9yeTpmdW5jdGlvbihiKXtiPWIuZ2V0UHJvdmlkZXIoXCJhdXRoXCIpLmdldEltbWVkaWF0ZSgpO3JldHVybntnZXRVaWQ6cihiLmdldFVpZCxiKSxnZXRUb2tlbjpyKGIua2MsYiksYWRkQXV0aFRva2VuTGlzdGVuZXI6cihiLmJjLGIpLHJlbW92ZUF1dGhUb2tlbkxpc3RlbmVyOnIoYi5OYyxiKX19LG11bHRpcGxlSW5zdGFuY2VzOiExLGluc3RhbnRpYXRpb25Nb2RlOlwiTEFaWVwiLHR5cGU6XCJQUklWQVRFXCJ9KTtmaXJlYmFzZS5yZWdpc3RlclZlcnNpb24oXCJAZmlyZWJhc2UvYXV0aFwiLFwiMC4xNC42XCIpO2ZpcmViYXNlLklOVEVSTkFMLmV4dGVuZE5hbWVzcGFjZSh7VXNlcjpQfSl9ZWxzZSB0aHJvdyBFcnJvcihcIkNhbm5vdCBmaW5kIHRoZSBmaXJlYmFzZSBuYW1lc3BhY2U7IGJlIHN1cmUgdG8gaW5jbHVkZSBmaXJlYmFzZS1hcHAuanMgYmVmb3JlIHRoaXMgbGlicmFyeS5cIik7fSkoKTt9KS5hcHBseSh0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IGdsb2JhbCA6IHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJyA/IHNlbGYgOiB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IHdpbmRvdyA6IHt9KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXV0aC5lc20uanMubWFwXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@firebase/auth/dist/auth.esm.js\n");

/***/ }),

/***/ "./node_modules/@firebase/component/dist/index.cjs.js":
/*!************************************************************!*\
  !*** ./node_modules/@firebase/component/dist/index.cjs.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib = __webpack_require__(/*! tslib */ \"./node_modules/@firebase/component/node_modules/tslib/tslib.es6.js\");\nvar util = __webpack_require__(/*! @firebase/util */ \"./node_modules/@firebase/util/dist/index.cjs.js\");\n\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nvar Component = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param name The public service name, e.g. app, auth, firestore, database\r\n     * @param instanceFactory Service factory responsible for creating the public interface\r\n     * @param type whether the service provided by the component is public or private\r\n     */\r\n    function Component(name, instanceFactory, type) {\r\n        this.name = name;\r\n        this.instanceFactory = instanceFactory;\r\n        this.type = type;\r\n        this.multipleInstances = false;\r\n        /**\r\n         * Properties to be added to the service namespace\r\n         */\r\n        this.serviceProps = {};\r\n        this.instantiationMode = \"LAZY\" /* LAZY */;\r\n    }\r\n    Component.prototype.setInstantiationMode = function (mode) {\r\n        this.instantiationMode = mode;\r\n        return this;\r\n    };\r\n    Component.prototype.setMultipleInstances = function (multipleInstances) {\r\n        this.multipleInstances = multipleInstances;\r\n        return this;\r\n    };\r\n    Component.prototype.setServiceProps = function (props) {\r\n        this.serviceProps = props;\r\n        return this;\r\n    };\r\n    return Component;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n * NameServiceMapping[T] is an alias for the type of the instance\r\n */\r\nvar Provider = /** @class */ (function () {\r\n    function Provider(name, container) {\r\n        this.name = name;\r\n        this.container = container;\r\n        this.component = null;\r\n        this.instances = new Map();\r\n        this.instancesDeferred = new Map();\r\n    }\r\n    /**\r\n     * @param identifier A provider can provide mulitple instances of a service\r\n     * if this.component.multipleInstances is true.\r\n     */\r\n    Provider.prototype.get = function (identifier) {\r\n        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }\r\n        // if multipleInstances is not supported, use the default name\r\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        if (!this.instancesDeferred.has(normalizedIdentifier)) {\r\n            var deferred = new util.Deferred();\r\n            this.instancesDeferred.set(normalizedIdentifier, deferred);\r\n            // If the service instance is available, resolve the promise with it immediately\r\n            try {\r\n                var instance = this.getOrInitializeService(normalizedIdentifier);\r\n                if (instance) {\r\n                    deferred.resolve(instance);\r\n                }\r\n            }\r\n            catch (e) {\r\n                // when the instance factory throws an exception during get(), it should not cause\r\n                // a fatal error. We just return the unresolved promise in this case.\r\n            }\r\n        }\r\n        return this.instancesDeferred.get(normalizedIdentifier).promise;\r\n    };\r\n    Provider.prototype.getImmediate = function (options) {\r\n        var _a = tslib.__assign({ identifier: DEFAULT_ENTRY_NAME, optional: false }, options), identifier = _a.identifier, optional = _a.optional;\r\n        // if multipleInstances is not supported, use the default name\r\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        try {\r\n            var instance = this.getOrInitializeService(normalizedIdentifier);\r\n            if (!instance) {\r\n                if (optional) {\r\n                    return null;\r\n                }\r\n                throw Error(\"Service \" + this.name + \" is not available\");\r\n            }\r\n            return instance;\r\n        }\r\n        catch (e) {\r\n            if (optional) {\r\n                return null;\r\n            }\r\n            else {\r\n                throw e;\r\n            }\r\n        }\r\n    };\r\n    Provider.prototype.getComponent = function () {\r\n        return this.component;\r\n    };\r\n    Provider.prototype.setComponent = function (component) {\r\n        var e_1, _a;\r\n        if (component.name !== this.name) {\r\n            throw Error(\"Mismatching Component \" + component.name + \" for Provider \" + this.name + \".\");\r\n        }\r\n        if (this.component) {\r\n            throw Error(\"Component for \" + this.name + \" has already been provided\");\r\n        }\r\n        this.component = component;\r\n        // if the service is eager, initialize the default instance\r\n        if (isComponentEager(component)) {\r\n            try {\r\n                this.getOrInitializeService(DEFAULT_ENTRY_NAME);\r\n            }\r\n            catch (e) {\r\n                // when the instance factory for an eager Component throws an exception during the eager\r\n                // initialization, it should not cause a fatal error.\r\n                // TODO: Investigate if we need to make it configurable, because some component may want to cause\r\n                // a fatal error in this case?\r\n            }\r\n        }\r\n        try {\r\n            // Create service instances for the pending promises and resolve them\r\n            // NOTE: if this.multipleInstances is false, only the default instance will be created\r\n            // and all promises with resolve with it regardless of the identifier.\r\n            for (var _b = tslib.__values(this.instancesDeferred.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var _d = tslib.__read(_c.value, 2), instanceIdentifier = _d[0], instanceDeferred = _d[1];\r\n                var normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n                try {\r\n                    // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\r\n                    var instance = this.getOrInitializeService(normalizedIdentifier);\r\n                    instanceDeferred.resolve(instance);\r\n                }\r\n                catch (e) {\r\n                    // when the instance factory throws an exception, it should not cause\r\n                    // a fatal error. We just leave the promise unresolved.\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    };\r\n    Provider.prototype.clearInstance = function (identifier) {\r\n        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }\r\n        this.instancesDeferred.delete(identifier);\r\n        this.instances.delete(identifier);\r\n    };\r\n    // app.delete() will call this method on every provider to delete the services\r\n    // TODO: should we mark the provider as deleted?\r\n    Provider.prototype.delete = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var services;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        services = Array.from(this.instances.values());\r\n                        return [4 /*yield*/, Promise.all(services\r\n                                .filter(function (service) { return 'INTERNAL' in service; })\r\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                                .map(function (service) { return service.INTERNAL.delete(); }))];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Provider.prototype.isComponentSet = function () {\r\n        return this.component != null;\r\n    };\r\n    Provider.prototype.getOrInitializeService = function (identifier) {\r\n        var instance = this.instances.get(identifier);\r\n        if (!instance && this.component) {\r\n            instance = this.component.instanceFactory(this.container, normalizeIdentifierForFactory(identifier));\r\n            this.instances.set(identifier, instance);\r\n        }\r\n        return instance || null;\r\n    };\r\n    Provider.prototype.normalizeInstanceIdentifier = function (identifier) {\r\n        if (this.component) {\r\n            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\r\n        }\r\n        else {\r\n            return identifier; // assume multiple instances are supported before the component is provided.\r\n        }\r\n    };\r\n    return Provider;\r\n}());\r\n// undefined should be passed to the service factory for the default instance\r\nfunction normalizeIdentifierForFactory(identifier) {\r\n    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\r\n}\r\nfunction isComponentEager(component) {\r\n    return component.instantiationMode === \"EAGER\" /* EAGER */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nvar ComponentContainer = /** @class */ (function () {\r\n    function ComponentContainer(name) {\r\n        this.name = name;\r\n        this.providers = new Map();\r\n    }\r\n    /**\r\n     *\r\n     * @param component Component being added\r\n     * @param overwrite When a component with the same name has already been registered,\r\n     * if overwrite is true: overwrite the existing component with the new component and create a new\r\n     * provider with the new component. It can be useful in tests where you want to use different mocks\r\n     * for different tests.\r\n     * if overwrite is false: throw an exception\r\n     */\r\n    ComponentContainer.prototype.addComponent = function (component) {\r\n        var provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            throw new Error(\"Component \" + component.name + \" has already been registered with \" + this.name);\r\n        }\r\n        provider.setComponent(component);\r\n    };\r\n    ComponentContainer.prototype.addOrOverwriteComponent = function (component) {\r\n        var provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            // delete the existing provider from the container, so we can register the new component\r\n            this.providers.delete(component.name);\r\n        }\r\n        this.addComponent(component);\r\n    };\r\n    /**\r\n     * getProvider provides a type safe interface where it can only be called with a field name\r\n     * present in NameServiceMapping interface.\r\n     *\r\n     * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n     * themselves.\r\n     */\r\n    ComponentContainer.prototype.getProvider = function (name) {\r\n        if (this.providers.has(name)) {\r\n            return this.providers.get(name);\r\n        }\r\n        // create a Provider for a service that hasn't registered with Firebase\r\n        var provider = new Provider(name, this);\r\n        this.providers.set(name, provider);\r\n        return provider;\r\n    };\r\n    ComponentContainer.prototype.getProviders = function () {\r\n        return Array.from(this.providers.values());\r\n    };\r\n    return ComponentContainer;\r\n}());\n\nexports.Component = Component;\nexports.ComponentContainer = ComponentContainer;\nexports.Provider = Provider;\n//# sourceMappingURL=index.cjs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGZpcmViYXNlL2NvbXBvbmVudC9kaXN0L2luZGV4LmNqcy5qcz80YmU0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE4QyxjQUFjOztBQUU1RCxZQUFZLG1CQUFPLENBQUMsaUZBQU87QUFDM0IsV0FBVyxtQkFBTyxDQUFDLHVFQUFnQjs7QUFFbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLGlDQUFpQztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLGtEQUFrRDtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJGQUEyRixVQUFVO0FBQ3JHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLFFBQVEsZ0JBQWdCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDBCQUEwQjtBQUMvQztBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsaUNBQWlDO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTRELDhCQUE4QixFQUFFO0FBQzVGO0FBQ0EseURBQXlELGtDQUFrQyxFQUFFO0FBQzdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AZmlyZWJhc2UvY29tcG9uZW50L2Rpc3QvaW5kZXguY2pzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG52YXIgdHNsaWIgPSByZXF1aXJlKCd0c2xpYicpO1xudmFyIHV0aWwgPSByZXF1aXJlKCdAZmlyZWJhc2UvdXRpbCcpO1xuXG4vKipcclxuICogQ29tcG9uZW50IGZvciBzZXJ2aWNlIG5hbWUgVCwgZS5nLiBgYXV0aGAsIGBhdXRoLWludGVybmFsYFxyXG4gKi9cclxudmFyIENvbXBvbmVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuICAgIC8qKlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBuYW1lIFRoZSBwdWJsaWMgc2VydmljZSBuYW1lLCBlLmcuIGFwcCwgYXV0aCwgZmlyZXN0b3JlLCBkYXRhYmFzZVxyXG4gICAgICogQHBhcmFtIGluc3RhbmNlRmFjdG9yeSBTZXJ2aWNlIGZhY3RvcnkgcmVzcG9uc2libGUgZm9yIGNyZWF0aW5nIHRoZSBwdWJsaWMgaW50ZXJmYWNlXHJcbiAgICAgKiBAcGFyYW0gdHlwZSB3aGV0aGVyIHRoZSBzZXJ2aWNlIHByb3ZpZGVkIGJ5IHRoZSBjb21wb25lbnQgaXMgcHVibGljIG9yIHByaXZhdGVcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gQ29tcG9uZW50KG5hbWUsIGluc3RhbmNlRmFjdG9yeSwgdHlwZSkge1xyXG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XHJcbiAgICAgICAgdGhpcy5pbnN0YW5jZUZhY3RvcnkgPSBpbnN0YW5jZUZhY3Rvcnk7XHJcbiAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcclxuICAgICAgICB0aGlzLm11bHRpcGxlSW5zdGFuY2VzID0gZmFsc2U7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogUHJvcGVydGllcyB0byBiZSBhZGRlZCB0byB0aGUgc2VydmljZSBuYW1lc3BhY2VcclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLnNlcnZpY2VQcm9wcyA9IHt9O1xyXG4gICAgICAgIHRoaXMuaW5zdGFudGlhdGlvbk1vZGUgPSBcIkxBWllcIiAvKiBMQVpZICovO1xyXG4gICAgfVxyXG4gICAgQ29tcG9uZW50LnByb3RvdHlwZS5zZXRJbnN0YW50aWF0aW9uTW9kZSA9IGZ1bmN0aW9uIChtb2RlKSB7XHJcbiAgICAgICAgdGhpcy5pbnN0YW50aWF0aW9uTW9kZSA9IG1vZGU7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9O1xyXG4gICAgQ29tcG9uZW50LnByb3RvdHlwZS5zZXRNdWx0aXBsZUluc3RhbmNlcyA9IGZ1bmN0aW9uIChtdWx0aXBsZUluc3RhbmNlcykge1xyXG4gICAgICAgIHRoaXMubXVsdGlwbGVJbnN0YW5jZXMgPSBtdWx0aXBsZUluc3RhbmNlcztcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH07XHJcbiAgICBDb21wb25lbnQucHJvdG90eXBlLnNldFNlcnZpY2VQcm9wcyA9IGZ1bmN0aW9uIChwcm9wcykge1xyXG4gICAgICAgIHRoaXMuc2VydmljZVByb3BzID0gcHJvcHM7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIENvbXBvbmVudDtcclxufSgpKTtcblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxudmFyIERFRkFVTFRfRU5UUllfTkFNRSA9ICdbREVGQVVMVF0nO1xuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTkgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogUHJvdmlkZXIgZm9yIGluc3RhbmNlIGZvciBzZXJ2aWNlIG5hbWUgVCwgZS5nLiAnYXV0aCcsICdhdXRoLWludGVybmFsJ1xyXG4gKiBOYW1lU2VydmljZU1hcHBpbmdbVF0gaXMgYW4gYWxpYXMgZm9yIHRoZSB0eXBlIG9mIHRoZSBpbnN0YW5jZVxyXG4gKi9cclxudmFyIFByb3ZpZGVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gUHJvdmlkZXIobmFtZSwgY29udGFpbmVyKSB7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcclxuICAgICAgICB0aGlzLmNvbnRhaW5lciA9IGNvbnRhaW5lcjtcclxuICAgICAgICB0aGlzLmNvbXBvbmVudCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5pbnN0YW5jZXMgPSBuZXcgTWFwKCk7XHJcbiAgICAgICAgdGhpcy5pbnN0YW5jZXNEZWZlcnJlZCA9IG5ldyBNYXAoKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQHBhcmFtIGlkZW50aWZpZXIgQSBwcm92aWRlciBjYW4gcHJvdmlkZSBtdWxpdHBsZSBpbnN0YW5jZXMgb2YgYSBzZXJ2aWNlXHJcbiAgICAgKiBpZiB0aGlzLmNvbXBvbmVudC5tdWx0aXBsZUluc3RhbmNlcyBpcyB0cnVlLlxyXG4gICAgICovXHJcbiAgICBQcm92aWRlci5wcm90b3R5cGUuZ2V0ID0gZnVuY3Rpb24gKGlkZW50aWZpZXIpIHtcclxuICAgICAgICBpZiAoaWRlbnRpZmllciA9PT0gdm9pZCAwKSB7IGlkZW50aWZpZXIgPSBERUZBVUxUX0VOVFJZX05BTUU7IH1cclxuICAgICAgICAvLyBpZiBtdWx0aXBsZUluc3RhbmNlcyBpcyBub3Qgc3VwcG9ydGVkLCB1c2UgdGhlIGRlZmF1bHQgbmFtZVxyXG4gICAgICAgIHZhciBub3JtYWxpemVkSWRlbnRpZmllciA9IHRoaXMubm9ybWFsaXplSW5zdGFuY2VJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xyXG4gICAgICAgIGlmICghdGhpcy5pbnN0YW5jZXNEZWZlcnJlZC5oYXMobm9ybWFsaXplZElkZW50aWZpZXIpKSB7XHJcbiAgICAgICAgICAgIHZhciBkZWZlcnJlZCA9IG5ldyB1dGlsLkRlZmVycmVkKCk7XHJcbiAgICAgICAgICAgIHRoaXMuaW5zdGFuY2VzRGVmZXJyZWQuc2V0KG5vcm1hbGl6ZWRJZGVudGlmaWVyLCBkZWZlcnJlZCk7XHJcbiAgICAgICAgICAgIC8vIElmIHRoZSBzZXJ2aWNlIGluc3RhbmNlIGlzIGF2YWlsYWJsZSwgcmVzb2x2ZSB0aGUgcHJvbWlzZSB3aXRoIGl0IGltbWVkaWF0ZWx5XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgaW5zdGFuY2UgPSB0aGlzLmdldE9ySW5pdGlhbGl6ZVNlcnZpY2Uobm9ybWFsaXplZElkZW50aWZpZXIpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGluc3RhbmNlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShpbnN0YW5jZSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgICAgIC8vIHdoZW4gdGhlIGluc3RhbmNlIGZhY3RvcnkgdGhyb3dzIGFuIGV4Y2VwdGlvbiBkdXJpbmcgZ2V0KCksIGl0IHNob3VsZCBub3QgY2F1c2VcclxuICAgICAgICAgICAgICAgIC8vIGEgZmF0YWwgZXJyb3IuIFdlIGp1c3QgcmV0dXJuIHRoZSB1bnJlc29sdmVkIHByb21pc2UgaW4gdGhpcyBjYXNlLlxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0aGlzLmluc3RhbmNlc0RlZmVycmVkLmdldChub3JtYWxpemVkSWRlbnRpZmllcikucHJvbWlzZTtcclxuICAgIH07XHJcbiAgICBQcm92aWRlci5wcm90b3R5cGUuZ2V0SW1tZWRpYXRlID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcclxuICAgICAgICB2YXIgX2EgPSB0c2xpYi5fX2Fzc2lnbih7IGlkZW50aWZpZXI6IERFRkFVTFRfRU5UUllfTkFNRSwgb3B0aW9uYWw6IGZhbHNlIH0sIG9wdGlvbnMpLCBpZGVudGlmaWVyID0gX2EuaWRlbnRpZmllciwgb3B0aW9uYWwgPSBfYS5vcHRpb25hbDtcclxuICAgICAgICAvLyBpZiBtdWx0aXBsZUluc3RhbmNlcyBpcyBub3Qgc3VwcG9ydGVkLCB1c2UgdGhlIGRlZmF1bHQgbmFtZVxyXG4gICAgICAgIHZhciBub3JtYWxpemVkSWRlbnRpZmllciA9IHRoaXMubm9ybWFsaXplSW5zdGFuY2VJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIHZhciBpbnN0YW5jZSA9IHRoaXMuZ2V0T3JJbml0aWFsaXplU2VydmljZShub3JtYWxpemVkSWRlbnRpZmllcik7XHJcbiAgICAgICAgICAgIGlmICghaW5zdGFuY2UpIHtcclxuICAgICAgICAgICAgICAgIGlmIChvcHRpb25hbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGhyb3cgRXJyb3IoXCJTZXJ2aWNlIFwiICsgdGhpcy5uYW1lICsgXCIgaXMgbm90IGF2YWlsYWJsZVwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gaW5zdGFuY2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIGlmIChvcHRpb25hbCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIFByb3ZpZGVyLnByb3RvdHlwZS5nZXRDb21wb25lbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcG9uZW50O1xyXG4gICAgfTtcclxuICAgIFByb3ZpZGVyLnByb3RvdHlwZS5zZXRDb21wb25lbnQgPSBmdW5jdGlvbiAoY29tcG9uZW50KSB7XHJcbiAgICAgICAgdmFyIGVfMSwgX2E7XHJcbiAgICAgICAgaWYgKGNvbXBvbmVudC5uYW1lICE9PSB0aGlzLm5hbWUpIHtcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoXCJNaXNtYXRjaGluZyBDb21wb25lbnQgXCIgKyBjb21wb25lbnQubmFtZSArIFwiIGZvciBQcm92aWRlciBcIiArIHRoaXMubmFtZSArIFwiLlwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMuY29tcG9uZW50KSB7XHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKFwiQ29tcG9uZW50IGZvciBcIiArIHRoaXMubmFtZSArIFwiIGhhcyBhbHJlYWR5IGJlZW4gcHJvdmlkZWRcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuY29tcG9uZW50ID0gY29tcG9uZW50O1xyXG4gICAgICAgIC8vIGlmIHRoZSBzZXJ2aWNlIGlzIGVhZ2VyLCBpbml0aWFsaXplIHRoZSBkZWZhdWx0IGluc3RhbmNlXHJcbiAgICAgICAgaWYgKGlzQ29tcG9uZW50RWFnZXIoY29tcG9uZW50KSkge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5nZXRPckluaXRpYWxpemVTZXJ2aWNlKERFRkFVTFRfRU5UUllfTkFNRSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgICAgIC8vIHdoZW4gdGhlIGluc3RhbmNlIGZhY3RvcnkgZm9yIGFuIGVhZ2VyIENvbXBvbmVudCB0aHJvd3MgYW4gZXhjZXB0aW9uIGR1cmluZyB0aGUgZWFnZXJcclxuICAgICAgICAgICAgICAgIC8vIGluaXRpYWxpemF0aW9uLCBpdCBzaG91bGQgbm90IGNhdXNlIGEgZmF0YWwgZXJyb3IuXHJcbiAgICAgICAgICAgICAgICAvLyBUT0RPOiBJbnZlc3RpZ2F0ZSBpZiB3ZSBuZWVkIHRvIG1ha2UgaXQgY29uZmlndXJhYmxlLCBiZWNhdXNlIHNvbWUgY29tcG9uZW50IG1heSB3YW50IHRvIGNhdXNlXHJcbiAgICAgICAgICAgICAgICAvLyBhIGZhdGFsIGVycm9yIGluIHRoaXMgY2FzZT9cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAvLyBDcmVhdGUgc2VydmljZSBpbnN0YW5jZXMgZm9yIHRoZSBwZW5kaW5nIHByb21pc2VzIGFuZCByZXNvbHZlIHRoZW1cclxuICAgICAgICAgICAgLy8gTk9URTogaWYgdGhpcy5tdWx0aXBsZUluc3RhbmNlcyBpcyBmYWxzZSwgb25seSB0aGUgZGVmYXVsdCBpbnN0YW5jZSB3aWxsIGJlIGNyZWF0ZWRcclxuICAgICAgICAgICAgLy8gYW5kIGFsbCBwcm9taXNlcyB3aXRoIHJlc29sdmUgd2l0aCBpdCByZWdhcmRsZXNzIG9mIHRoZSBpZGVudGlmaWVyLlxyXG4gICAgICAgICAgICBmb3IgKHZhciBfYiA9IHRzbGliLl9fdmFsdWVzKHRoaXMuaW5zdGFuY2VzRGVmZXJyZWQuZW50cmllcygpKSwgX2MgPSBfYi5uZXh0KCk7ICFfYy5kb25lOyBfYyA9IF9iLm5leHQoKSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIF9kID0gdHNsaWIuX19yZWFkKF9jLnZhbHVlLCAyKSwgaW5zdGFuY2VJZGVudGlmaWVyID0gX2RbMF0sIGluc3RhbmNlRGVmZXJyZWQgPSBfZFsxXTtcclxuICAgICAgICAgICAgICAgIHZhciBub3JtYWxpemVkSWRlbnRpZmllciA9IHRoaXMubm9ybWFsaXplSW5zdGFuY2VJZGVudGlmaWVyKGluc3RhbmNlSWRlbnRpZmllcik7XHJcbiAgICAgICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIGBnZXRPckluaXRpYWxpemVTZXJ2aWNlKClgIHNob3VsZCBhbHdheXMgcmV0dXJuIGEgdmFsaWQgaW5zdGFuY2Ugc2luY2UgYSBjb21wb25lbnQgaXMgZ3VhcmFudGVlZC4gdXNlICEgdG8gbWFrZSB0eXBlc2NyaXB0IGhhcHB5LlxyXG4gICAgICAgICAgICAgICAgICAgIHZhciBpbnN0YW5jZSA9IHRoaXMuZ2V0T3JJbml0aWFsaXplU2VydmljZShub3JtYWxpemVkSWRlbnRpZmllcik7XHJcbiAgICAgICAgICAgICAgICAgICAgaW5zdGFuY2VEZWZlcnJlZC5yZXNvbHZlKGluc3RhbmNlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gd2hlbiB0aGUgaW5zdGFuY2UgZmFjdG9yeSB0aHJvd3MgYW4gZXhjZXB0aW9uLCBpdCBzaG91bGQgbm90IGNhdXNlXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gYSBmYXRhbCBlcnJvci4gV2UganVzdCBsZWF2ZSB0aGUgcHJvbWlzZSB1bnJlc29sdmVkLlxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlXzFfMSkgeyBlXzEgPSB7IGVycm9yOiBlXzFfMSB9OyB9XHJcbiAgICAgICAgZmluYWxseSB7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoX2MgJiYgIV9jLmRvbmUgJiYgKF9hID0gX2IucmV0dXJuKSkgX2EuY2FsbChfYik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZmluYWxseSB7IGlmIChlXzEpIHRocm93IGVfMS5lcnJvcjsgfVxyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBQcm92aWRlci5wcm90b3R5cGUuY2xlYXJJbnN0YW5jZSA9IGZ1bmN0aW9uIChpZGVudGlmaWVyKSB7XHJcbiAgICAgICAgaWYgKGlkZW50aWZpZXIgPT09IHZvaWQgMCkgeyBpZGVudGlmaWVyID0gREVGQVVMVF9FTlRSWV9OQU1FOyB9XHJcbiAgICAgICAgdGhpcy5pbnN0YW5jZXNEZWZlcnJlZC5kZWxldGUoaWRlbnRpZmllcik7XHJcbiAgICAgICAgdGhpcy5pbnN0YW5jZXMuZGVsZXRlKGlkZW50aWZpZXIpO1xyXG4gICAgfTtcclxuICAgIC8vIGFwcC5kZWxldGUoKSB3aWxsIGNhbGwgdGhpcyBtZXRob2Qgb24gZXZlcnkgcHJvdmlkZXIgdG8gZGVsZXRlIHRoZSBzZXJ2aWNlc1xyXG4gICAgLy8gVE9ETzogc2hvdWxkIHdlIG1hcmsgdGhlIHByb3ZpZGVyIGFzIGRlbGV0ZWQ/XHJcbiAgICBQcm92aWRlci5wcm90b3R5cGUuZGVsZXRlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJldHVybiB0c2xpYi5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIHNlcnZpY2VzO1xyXG4gICAgICAgICAgICByZXR1cm4gdHNsaWIuX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XHJcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAwOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXJ2aWNlcyA9IEFycmF5LmZyb20odGhpcy5pbnN0YW5jZXMudmFsdWVzKCkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzQgLyp5aWVsZCovLCBQcm9taXNlLmFsbChzZXJ2aWNlc1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKHNlcnZpY2UpIHsgcmV0dXJuICdJTlRFUk5BTCcgaW4gc2VydmljZTsgfSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKHNlcnZpY2UpIHsgcmV0dXJuIHNlcnZpY2UuSU5URVJOQUwuZGVsZXRlKCk7IH0pKV07XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBfYS5zZW50KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovXTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgUHJvdmlkZXIucHJvdG90eXBlLmlzQ29tcG9uZW50U2V0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBvbmVudCAhPSBudWxsO1xyXG4gICAgfTtcclxuICAgIFByb3ZpZGVyLnByb3RvdHlwZS5nZXRPckluaXRpYWxpemVTZXJ2aWNlID0gZnVuY3Rpb24gKGlkZW50aWZpZXIpIHtcclxuICAgICAgICB2YXIgaW5zdGFuY2UgPSB0aGlzLmluc3RhbmNlcy5nZXQoaWRlbnRpZmllcik7XHJcbiAgICAgICAgaWYgKCFpbnN0YW5jZSAmJiB0aGlzLmNvbXBvbmVudCkge1xyXG4gICAgICAgICAgICBpbnN0YW5jZSA9IHRoaXMuY29tcG9uZW50Lmluc3RhbmNlRmFjdG9yeSh0aGlzLmNvbnRhaW5lciwgbm9ybWFsaXplSWRlbnRpZmllckZvckZhY3RvcnkoaWRlbnRpZmllcikpO1xyXG4gICAgICAgICAgICB0aGlzLmluc3RhbmNlcy5zZXQoaWRlbnRpZmllciwgaW5zdGFuY2UpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gaW5zdGFuY2UgfHwgbnVsbDtcclxuICAgIH07XHJcbiAgICBQcm92aWRlci5wcm90b3R5cGUubm9ybWFsaXplSW5zdGFuY2VJZGVudGlmaWVyID0gZnVuY3Rpb24gKGlkZW50aWZpZXIpIHtcclxuICAgICAgICBpZiAodGhpcy5jb21wb25lbnQpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29tcG9uZW50Lm11bHRpcGxlSW5zdGFuY2VzID8gaWRlbnRpZmllciA6IERFRkFVTFRfRU5UUllfTkFNRTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBpZGVudGlmaWVyOyAvLyBhc3N1bWUgbXVsdGlwbGUgaW5zdGFuY2VzIGFyZSBzdXBwb3J0ZWQgYmVmb3JlIHRoZSBjb21wb25lbnQgaXMgcHJvdmlkZWQuXHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIHJldHVybiBQcm92aWRlcjtcclxufSgpKTtcclxuLy8gdW5kZWZpbmVkIHNob3VsZCBiZSBwYXNzZWQgdG8gdGhlIHNlcnZpY2UgZmFjdG9yeSBmb3IgdGhlIGRlZmF1bHQgaW5zdGFuY2VcclxuZnVuY3Rpb24gbm9ybWFsaXplSWRlbnRpZmllckZvckZhY3RvcnkoaWRlbnRpZmllcikge1xyXG4gICAgcmV0dXJuIGlkZW50aWZpZXIgPT09IERFRkFVTFRfRU5UUllfTkFNRSA/IHVuZGVmaW5lZCA6IGlkZW50aWZpZXI7XHJcbn1cclxuZnVuY3Rpb24gaXNDb21wb25lbnRFYWdlcihjb21wb25lbnQpIHtcclxuICAgIHJldHVybiBjb21wb25lbnQuaW5zdGFudGlhdGlvbk1vZGUgPT09IFwiRUFHRVJcIiAvKiBFQUdFUiAqLztcclxufVxuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTkgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogQ29tcG9uZW50Q29udGFpbmVyIHRoYXQgcHJvdmlkZXMgUHJvdmlkZXJzIGZvciBzZXJ2aWNlIG5hbWUgVCwgZS5nLiBgYXV0aGAsIGBhdXRoLWludGVybmFsYFxyXG4gKi9cclxudmFyIENvbXBvbmVudENvbnRhaW5lciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIENvbXBvbmVudENvbnRhaW5lcihuYW1lKSB7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcclxuICAgICAgICB0aGlzLnByb3ZpZGVycyA9IG5ldyBNYXAoKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBjb21wb25lbnQgQ29tcG9uZW50IGJlaW5nIGFkZGVkXHJcbiAgICAgKiBAcGFyYW0gb3ZlcndyaXRlIFdoZW4gYSBjb21wb25lbnQgd2l0aCB0aGUgc2FtZSBuYW1lIGhhcyBhbHJlYWR5IGJlZW4gcmVnaXN0ZXJlZCxcclxuICAgICAqIGlmIG92ZXJ3cml0ZSBpcyB0cnVlOiBvdmVyd3JpdGUgdGhlIGV4aXN0aW5nIGNvbXBvbmVudCB3aXRoIHRoZSBuZXcgY29tcG9uZW50IGFuZCBjcmVhdGUgYSBuZXdcclxuICAgICAqIHByb3ZpZGVyIHdpdGggdGhlIG5ldyBjb21wb25lbnQuIEl0IGNhbiBiZSB1c2VmdWwgaW4gdGVzdHMgd2hlcmUgeW91IHdhbnQgdG8gdXNlIGRpZmZlcmVudCBtb2Nrc1xyXG4gICAgICogZm9yIGRpZmZlcmVudCB0ZXN0cy5cclxuICAgICAqIGlmIG92ZXJ3cml0ZSBpcyBmYWxzZTogdGhyb3cgYW4gZXhjZXB0aW9uXHJcbiAgICAgKi9cclxuICAgIENvbXBvbmVudENvbnRhaW5lci5wcm90b3R5cGUuYWRkQ29tcG9uZW50ID0gZnVuY3Rpb24gKGNvbXBvbmVudCkge1xyXG4gICAgICAgIHZhciBwcm92aWRlciA9IHRoaXMuZ2V0UHJvdmlkZXIoY29tcG9uZW50Lm5hbWUpO1xyXG4gICAgICAgIGlmIChwcm92aWRlci5pc0NvbXBvbmVudFNldCgpKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvbXBvbmVudCBcIiArIGNvbXBvbmVudC5uYW1lICsgXCIgaGFzIGFscmVhZHkgYmVlbiByZWdpc3RlcmVkIHdpdGggXCIgKyB0aGlzLm5hbWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBwcm92aWRlci5zZXRDb21wb25lbnQoY29tcG9uZW50KTtcclxuICAgIH07XHJcbiAgICBDb21wb25lbnRDb250YWluZXIucHJvdG90eXBlLmFkZE9yT3ZlcndyaXRlQ29tcG9uZW50ID0gZnVuY3Rpb24gKGNvbXBvbmVudCkge1xyXG4gICAgICAgIHZhciBwcm92aWRlciA9IHRoaXMuZ2V0UHJvdmlkZXIoY29tcG9uZW50Lm5hbWUpO1xyXG4gICAgICAgIGlmIChwcm92aWRlci5pc0NvbXBvbmVudFNldCgpKSB7XHJcbiAgICAgICAgICAgIC8vIGRlbGV0ZSB0aGUgZXhpc3RpbmcgcHJvdmlkZXIgZnJvbSB0aGUgY29udGFpbmVyLCBzbyB3ZSBjYW4gcmVnaXN0ZXIgdGhlIG5ldyBjb21wb25lbnRcclxuICAgICAgICAgICAgdGhpcy5wcm92aWRlcnMuZGVsZXRlKGNvbXBvbmVudC5uYW1lKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5hZGRDb21wb25lbnQoY29tcG9uZW50KTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIGdldFByb3ZpZGVyIHByb3ZpZGVzIGEgdHlwZSBzYWZlIGludGVyZmFjZSB3aGVyZSBpdCBjYW4gb25seSBiZSBjYWxsZWQgd2l0aCBhIGZpZWxkIG5hbWVcclxuICAgICAqIHByZXNlbnQgaW4gTmFtZVNlcnZpY2VNYXBwaW5nIGludGVyZmFjZS5cclxuICAgICAqXHJcbiAgICAgKiBGaXJlYmFzZSBTREtzIHByb3ZpZGluZyBzZXJ2aWNlcyBzaG91bGQgZXh0ZW5kIE5hbWVTZXJ2aWNlTWFwcGluZyBpbnRlcmZhY2UgdG8gcmVnaXN0ZXJcclxuICAgICAqIHRoZW1zZWx2ZXMuXHJcbiAgICAgKi9cclxuICAgIENvbXBvbmVudENvbnRhaW5lci5wcm90b3R5cGUuZ2V0UHJvdmlkZXIgPSBmdW5jdGlvbiAobmFtZSkge1xyXG4gICAgICAgIGlmICh0aGlzLnByb3ZpZGVycy5oYXMobmFtZSkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMucHJvdmlkZXJzLmdldChuYW1lKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gY3JlYXRlIGEgUHJvdmlkZXIgZm9yIGEgc2VydmljZSB0aGF0IGhhc24ndCByZWdpc3RlcmVkIHdpdGggRmlyZWJhc2VcclxuICAgICAgICB2YXIgcHJvdmlkZXIgPSBuZXcgUHJvdmlkZXIobmFtZSwgdGhpcyk7XHJcbiAgICAgICAgdGhpcy5wcm92aWRlcnMuc2V0KG5hbWUsIHByb3ZpZGVyKTtcclxuICAgICAgICByZXR1cm4gcHJvdmlkZXI7XHJcbiAgICB9O1xyXG4gICAgQ29tcG9uZW50Q29udGFpbmVyLnByb3RvdHlwZS5nZXRQcm92aWRlcnMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIEFycmF5LmZyb20odGhpcy5wcm92aWRlcnMudmFsdWVzKCkpO1xyXG4gICAgfTtcclxuICAgIHJldHVybiBDb21wb25lbnRDb250YWluZXI7XHJcbn0oKSk7XG5cbmV4cG9ydHMuQ29tcG9uZW50ID0gQ29tcG9uZW50O1xuZXhwb3J0cy5Db21wb25lbnRDb250YWluZXIgPSBDb21wb25lbnRDb250YWluZXI7XG5leHBvcnRzLlByb3ZpZGVyID0gUHJvdmlkZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5janMuanMubWFwXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@firebase/component/dist/index.cjs.js\n");

/***/ }),

/***/ "./node_modules/@firebase/component/node_modules/tslib/tslib.es6.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@firebase/component/node_modules/tslib/tslib.es6.js ***!
  \**************************************************************************/
/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __exportStar, __values, __read, __spread, __spreadArrays, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault, __classPrivateFieldGet, __classPrivateFieldSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__extends\", function() { return __extends; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__assign\", function() { return __assign; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__rest\", function() { return __rest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__decorate\", function() { return __decorate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__param\", function() { return __param; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__metadata\", function() { return __metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__awaiter\", function() { return __awaiter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__generator\", function() { return __generator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__exportStar\", function() { return __exportStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__values\", function() { return __values; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__read\", function() { return __read; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__spread\", function() { return __spread; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__spreadArrays\", function() { return __spreadArrays; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__await\", function() { return __await; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncGenerator\", function() { return __asyncGenerator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncDelegator\", function() { return __asyncDelegator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncValues\", function() { return __asyncValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__makeTemplateObject\", function() { return __makeTemplateObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importStar\", function() { return __importStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importDefault\", function() { return __importDefault; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__classPrivateFieldGet\", function() { return __classPrivateFieldGet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__classPrivateFieldSet\", function() { return __classPrivateFieldSet; });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@firebase/component/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "./node_modules/@firebase/logger/dist/index.esm.js":
/*!*********************************************************!*\
  !*** ./node_modules/@firebase/logger/dist/index.esm.js ***!
  \*********************************************************/
/*! exports provided: LogLevel, Logger, setLogLevel, setUserLogHandler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LogLevel\", function() { return LogLevel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Logger\", function() { return Logger; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setLogLevel\", function() { return setLogLevel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setUserLogHandler\", function() { return setUserLogHandler; });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nvar instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\nvar levelStringToEnum = {\r\n    'debug': LogLevel.DEBUG,\r\n    'verbose': LogLevel.VERBOSE,\r\n    'info': LogLevel.INFO,\r\n    'warn': LogLevel.WARN,\r\n    'error': LogLevel.ERROR,\r\n    'silent': LogLevel.SILENT\r\n};\r\n/**\r\n * The default log level\r\n */\r\nvar defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\r\nvar ConsoleMethod = (_a = {},\r\n    _a[LogLevel.DEBUG] = 'log',\r\n    _a[LogLevel.VERBOSE] = 'log',\r\n    _a[LogLevel.INFO] = 'info',\r\n    _a[LogLevel.WARN] = 'warn',\r\n    _a[LogLevel.ERROR] = 'error',\r\n    _a);\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nvar defaultLogHandler = function (instance, logType) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    if (logType < instance.logLevel) {\r\n        return;\r\n    }\r\n    var now = new Date().toISOString();\r\n    var method = ConsoleMethod[logType];\r\n    if (method) {\r\n        console[method].apply(console, __spreadArrays([\"[\" + now + \"]  \" + instance.name + \":\"], args));\r\n    }\r\n    else {\r\n        throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\r\n    }\r\n};\r\nvar Logger = /** @class */ (function () {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    function Logger(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */\r\n        this._userLogHandler = null;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    Object.defineProperty(Logger.prototype, \"logLevel\", {\r\n        get: function () {\r\n            return this._logLevel;\r\n        },\r\n        set: function (val) {\r\n            if (!(val in LogLevel)) {\r\n                throw new TypeError('Invalid value assigned to `logLevel`');\r\n            }\r\n            this._logLevel = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger.prototype, \"logHandler\", {\r\n        get: function () {\r\n            return this._logHandler;\r\n        },\r\n        set: function (val) {\r\n            if (typeof val !== 'function') {\r\n                throw new TypeError('Value assigned to `logHandler` must be a function');\r\n            }\r\n            this._logHandler = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger.prototype, \"userLogHandler\", {\r\n        get: function () {\r\n            return this._userLogHandler;\r\n        },\r\n        set: function (val) {\r\n            this._userLogHandler = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    Logger.prototype.debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));\r\n    };\r\n    Logger.prototype.log = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));\r\n    };\r\n    Logger.prototype.info = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));\r\n    };\r\n    Logger.prototype.warn = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));\r\n    };\r\n    Logger.prototype.error = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));\r\n    };\r\n    return Logger;\r\n}());\r\nfunction setLogLevel(level) {\r\n    var newLevel = typeof level === 'string' ? levelStringToEnum[level] : level;\r\n    instances.forEach(function (inst) {\r\n        inst.logLevel = newLevel;\r\n    });\r\n}\r\nfunction setUserLogHandler(logCallback, options) {\r\n    var _loop_1 = function (instance) {\r\n        var customLogLevel = null;\r\n        if (options && options.level) {\r\n            customLogLevel = levelStringToEnum[options.level];\r\n        }\r\n        if (logCallback === null) {\r\n            instance.userLogHandler = null;\r\n        }\r\n        else {\r\n            instance.userLogHandler = function (instance, level) {\r\n                var args = [];\r\n                for (var _i = 2; _i < arguments.length; _i++) {\r\n                    args[_i - 2] = arguments[_i];\r\n                }\r\n                var message = args\r\n                    .map(function (arg) {\r\n                    if (arg == null) {\r\n                        return null;\r\n                    }\r\n                    else if (typeof arg === 'string') {\r\n                        return arg;\r\n                    }\r\n                    else if (typeof arg === 'number' || typeof arg === 'boolean') {\r\n                        return arg.toString();\r\n                    }\r\n                    else if (arg instanceof Error) {\r\n                        return arg.message;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            return JSON.stringify(arg);\r\n                        }\r\n                        catch (ignored) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                })\r\n                    .filter(function (arg) { return arg; })\r\n                    .join(' ');\r\n                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\r\n                    logCallback({\r\n                        level: LogLevel[level].toLowerCase(),\r\n                        message: message,\r\n                        args: args,\r\n                        type: instance.name\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    };\r\n    for (var _i = 0, instances_1 = instances; _i < instances_1.length; _i++) {\r\n        var instance = instances_1[_i];\r\n        _loop_1(instance);\r\n    }\r\n}\n\n\n//# sourceMappingURL=index.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@firebase/logger/dist/index.esm.js\n");

/***/ }),

/***/ "./node_modules/@firebase/storage/dist/index.esm.js":
/*!**********************************************************!*\
  !*** ./node_modules/@firebase/storage/dist/index.esm.js ***!
  \**********************************************************/
/*! exports provided: registerStorage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"registerStorage\", function() { return registerStorage; });\n/* harmony import */ var _firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/app */ \"./node_modules/@firebase/app/dist/index.cjs.js\");\n/* harmony import */ var _firebase_app__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_firebase_app__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"./node_modules/@firebase/storage/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _firebase_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @firebase/component */ \"./node_modules/@firebase/component/dist/index.cjs.js\");\n/* harmony import */ var _firebase_component__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_firebase_component__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\r\n/**\r\n * Domain name for firebase storage.\r\n */\r\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\r\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\r\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\r\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\r\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\r\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\r\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\r\n/**\r\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\r\n * enough for us to use it directly.\r\n */\r\nvar MIN_SAFE_INTEGER = -9007199254740991;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FirebaseStorageError = /** @class */ (function () {\r\n    function FirebaseStorageError(code, message) {\r\n        this.code_ = prependCode(code);\r\n        this.message_ = 'Firebase Storage: ' + message;\r\n        this.serverResponse_ = null;\r\n        this.name_ = 'FirebaseError';\r\n    }\r\n    FirebaseStorageError.prototype.codeProp = function () {\r\n        return this.code;\r\n    };\r\n    FirebaseStorageError.prototype.codeEquals = function (code) {\r\n        return prependCode(code) === this.codeProp();\r\n    };\r\n    FirebaseStorageError.prototype.serverResponseProp = function () {\r\n        return this.serverResponse_;\r\n    };\r\n    FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {\r\n        this.serverResponse_ = serverResponse;\r\n    };\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"name\", {\r\n        get: function () {\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"code\", {\r\n        get: function () {\r\n            return this.code_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\r\n        get: function () {\r\n            return this.message_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\r\n        get: function () {\r\n            return this.serverResponse_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FirebaseStorageError;\r\n}());\r\nvar Code = {\r\n    // Shared between all platforms\r\n    UNKNOWN: 'unknown',\r\n    OBJECT_NOT_FOUND: 'object-not-found',\r\n    BUCKET_NOT_FOUND: 'bucket-not-found',\r\n    PROJECT_NOT_FOUND: 'project-not-found',\r\n    QUOTA_EXCEEDED: 'quota-exceeded',\r\n    UNAUTHENTICATED: 'unauthenticated',\r\n    UNAUTHORIZED: 'unauthorized',\r\n    RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\r\n    INVALID_CHECKSUM: 'invalid-checksum',\r\n    CANCELED: 'canceled',\r\n    // JS specific\r\n    INVALID_EVENT_NAME: 'invalid-event-name',\r\n    INVALID_URL: 'invalid-url',\r\n    INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\r\n    NO_DEFAULT_BUCKET: 'no-default-bucket',\r\n    CANNOT_SLICE_BLOB: 'cannot-slice-blob',\r\n    SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\r\n    NO_DOWNLOAD_URL: 'no-download-url',\r\n    INVALID_ARGUMENT: 'invalid-argument',\r\n    INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\r\n    APP_DELETED: 'app-deleted',\r\n    INVALID_ROOT_OPERATION: 'invalid-root-operation',\r\n    INVALID_FORMAT: 'invalid-format',\r\n    INTERNAL_ERROR: 'internal-error'\r\n};\r\nfunction prependCode(code) {\r\n    return 'storage/' + code;\r\n}\r\nfunction unknown() {\r\n    var message = 'An unknown error occurred, please check the error payload for ' +\r\n        'server response.';\r\n    return new FirebaseStorageError(Code.UNKNOWN, message);\r\n}\r\nfunction objectNotFound(path) {\r\n    return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\r\n}\r\nfunction quotaExceeded(bucket) {\r\n    return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" +\r\n        bucket +\r\n        \"' exceeded, please view quota on \" +\r\n        'https://firebase.google.com/pricing/.');\r\n}\r\nfunction unauthenticated() {\r\n    var message = 'User is not authenticated, please authenticate using Firebase ' +\r\n        'Authentication and try again.';\r\n    return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\r\n}\r\nfunction unauthorized(path) {\r\n    return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\r\n}\r\nfunction retryLimitExceeded() {\r\n    return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\r\n}\r\nfunction canceled() {\r\n    return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\r\n}\r\nfunction invalidUrl(url) {\r\n    return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\r\n}\r\nfunction invalidDefaultBucket(bucket) {\r\n    return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\r\n}\r\nfunction cannotSliceBlob() {\r\n    return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\r\n}\r\nfunction serverFileWrongSize() {\r\n    return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\r\n}\r\nfunction noDownloadURL() {\r\n    return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\r\n}\r\nfunction invalidArgument(index, fnName, message) {\r\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);\r\n}\r\nfunction invalidArgumentCount(argMin, argMax, fnName, real) {\r\n    var countPart;\r\n    var plural;\r\n    if (argMin === argMax) {\r\n        countPart = argMin;\r\n        plural = argMin === 1 ? 'argument' : 'arguments';\r\n    }\r\n    else {\r\n        countPart = 'between ' + argMin + ' and ' + argMax;\r\n        plural = 'arguments';\r\n    }\r\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' +\r\n        fnName +\r\n        '`: Expected ' +\r\n        countPart +\r\n        ' ' +\r\n        plural +\r\n        ', received ' +\r\n        real +\r\n        '.');\r\n}\r\nfunction appDeleted() {\r\n    return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\r\n}\r\n/**\r\n * @param name The name of the operation that was invalid.\r\n */\r\nfunction invalidRootOperation(name) {\r\n    return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" +\r\n        name +\r\n        \"' cannot be performed on a root reference, create a non-root \" +\r\n        \"reference using child, such as .child('file.png').\");\r\n}\r\n/**\r\n * @param format The format that was not valid.\r\n * @param message A message describing the format violation.\r\n */\r\nfunction invalidFormat(format, message) {\r\n    return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\r\n}\r\n/**\r\n * @param message A message describing the internal error.\r\n */\r\nfunction internalError(message) {\r\n    throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StringFormat = {\r\n    RAW: 'raw',\r\n    BASE64: 'base64',\r\n    BASE64URL: 'base64url',\r\n    DATA_URL: 'data_url'\r\n};\r\nfunction formatValidator(stringFormat) {\r\n    switch (stringFormat) {\r\n        case StringFormat.RAW:\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n        case StringFormat.DATA_URL:\r\n            return;\r\n        default:\r\n            throw 'Expected one of the event types: [' +\r\n                StringFormat.RAW +\r\n                ', ' +\r\n                StringFormat.BASE64 +\r\n                ', ' +\r\n                StringFormat.BASE64URL +\r\n                ', ' +\r\n                StringFormat.DATA_URL +\r\n                '].';\r\n    }\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar StringData = /** @class */ (function () {\r\n    function StringData(data, contentType) {\r\n        this.data = data;\r\n        this.contentType = contentType || null;\r\n    }\r\n    return StringData;\r\n}());\r\nfunction dataFromString(format, stringData) {\r\n    switch (format) {\r\n        case StringFormat.RAW:\r\n            return new StringData(utf8Bytes_(stringData));\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n            return new StringData(base64Bytes_(format, stringData));\r\n        case StringFormat.DATA_URL:\r\n            return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\r\n        // do nothing\r\n    }\r\n    // assert(false);\r\n    throw unknown();\r\n}\r\nfunction utf8Bytes_(value) {\r\n    var b = [];\r\n    for (var i = 0; i < value.length; i++) {\r\n        var c = value.charCodeAt(i);\r\n        if (c <= 127) {\r\n            b.push(c);\r\n        }\r\n        else {\r\n            if (c <= 2047) {\r\n                b.push(192 | (c >> 6), 128 | (c & 63));\r\n            }\r\n            else {\r\n                if ((c & 64512) === 55296) {\r\n                    // The start of a surrogate pair.\r\n                    var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\r\n                    if (!valid) {\r\n                        // The second surrogate wasn't there.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        var hi = c;\r\n                        var lo = value.charCodeAt(++i);\r\n                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\r\n                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n                else {\r\n                    if ((c & 64512) === 56320) {\r\n                        // Invalid low surrogate.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new Uint8Array(b);\r\n}\r\nfunction percentEncodedBytes_(value) {\r\n    var decoded;\r\n    try {\r\n        decoded = decodeURIComponent(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\r\n    }\r\n    return utf8Bytes_(decoded);\r\n}\r\nfunction base64Bytes_(format, value) {\r\n    switch (format) {\r\n        case StringFormat.BASE64: {\r\n            var hasMinus = value.indexOf('-') !== -1;\r\n            var hasUnder = value.indexOf('_') !== -1;\r\n            if (hasMinus || hasUnder) {\r\n                var invalidChar = hasMinus ? '-' : '_';\r\n                throw invalidFormat(format, \"Invalid character '\" +\r\n                    invalidChar +\r\n                    \"' found: is it base64url encoded?\");\r\n            }\r\n            break;\r\n        }\r\n        case StringFormat.BASE64URL: {\r\n            var hasPlus = value.indexOf('+') !== -1;\r\n            var hasSlash = value.indexOf('/') !== -1;\r\n            if (hasPlus || hasSlash) {\r\n                var invalidChar = hasPlus ? '+' : '/';\r\n                throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\r\n            }\r\n            value = value.replace(/-/g, '+').replace(/_/g, '/');\r\n            break;\r\n        }\r\n        // do nothing\r\n    }\r\n    var bytes;\r\n    try {\r\n        bytes = atob(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(format, 'Invalid character found');\r\n    }\r\n    var array = new Uint8Array(bytes.length);\r\n    for (var i = 0; i < bytes.length; i++) {\r\n        array[i] = bytes.charCodeAt(i);\r\n    }\r\n    return array;\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar DataURLParts = /** @class */ (function () {\r\n    function DataURLParts(dataURL) {\r\n        this.base64 = false;\r\n        this.contentType = null;\r\n        var matches = dataURL.match(/^data:([^,]+)?,/);\r\n        if (matches === null) {\r\n            throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\r\n        }\r\n        var middle = matches[1] || null;\r\n        if (middle != null) {\r\n            this.base64 = endsWith(middle, ';base64');\r\n            this.contentType = this.base64\r\n                ? middle.substring(0, middle.length - ';base64'.length)\r\n                : middle;\r\n        }\r\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\r\n    }\r\n    return DataURLParts;\r\n}());\r\nfunction dataURLBytes_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    if (parts.base64) {\r\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\r\n    }\r\n    else {\r\n        return percentEncodedBytes_(parts.rest);\r\n    }\r\n}\r\nfunction dataURLContentType_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    return parts.contentType;\r\n}\r\nfunction endsWith(s, end) {\r\n    var longEnough = s.length >= end.length;\r\n    if (!longEnough) {\r\n        return false;\r\n    }\r\n    return s.substring(s.length - end.length) === end;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TaskEvent = {\r\n    /** Triggered whenever the task changes or progress is updated. */\r\n    STATE_CHANGED: 'state_changed'\r\n};\r\nvar InternalTaskState = {\r\n    RUNNING: 'running',\r\n    PAUSING: 'pausing',\r\n    PAUSED: 'paused',\r\n    SUCCESS: 'success',\r\n    CANCELING: 'canceling',\r\n    CANCELED: 'canceled',\r\n    ERROR: 'error'\r\n};\r\nvar TaskState = {\r\n    /** The task is currently transferring data. */\r\n    RUNNING: 'running',\r\n    /** The task was paused by the user. */\r\n    PAUSED: 'paused',\r\n    /** The task completed successfully. */\r\n    SUCCESS: 'success',\r\n    /** The task was canceled. */\r\n    CANCELED: 'canceled',\r\n    /** The task failed with an error. */\r\n    ERROR: 'error'\r\n};\r\nfunction taskStateFromInternalTaskState(state) {\r\n    switch (state) {\r\n        case InternalTaskState.RUNNING:\r\n        case InternalTaskState.PAUSING:\r\n        case InternalTaskState.CANCELING:\r\n            return TaskState.RUNNING;\r\n        case InternalTaskState.PAUSED:\r\n            return TaskState.PAUSED;\r\n        case InternalTaskState.SUCCESS:\r\n            return TaskState.SUCCESS;\r\n        case InternalTaskState.CANCELED:\r\n            return TaskState.CANCELED;\r\n        case InternalTaskState.ERROR:\r\n            return TaskState.ERROR;\r\n        default:\r\n            // TODO(andysoto): assert(false);\r\n            return TaskState.ERROR;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @return False if the object is undefined or null, true otherwise.\r\n */\r\nfunction isDef(p) {\r\n    return p != null;\r\n}\r\nfunction isJustDef(p) {\r\n    return p !== void 0;\r\n}\r\nfunction isFunction(p) {\r\n    return typeof p === 'function';\r\n}\r\nfunction isObject(p) {\r\n    return typeof p === 'object';\r\n}\r\nfunction isNonNullObject(p) {\r\n    return isObject(p) && p !== null;\r\n}\r\nfunction isNonArrayObject(p) {\r\n    return isObject(p) && !Array.isArray(p);\r\n}\r\nfunction isString(p) {\r\n    return typeof p === 'string' || p instanceof String;\r\n}\r\nfunction isInteger(p) {\r\n    return isNumber(p) && Number.isInteger(p);\r\n}\r\nfunction isNumber(p) {\r\n    return typeof p === 'number' || p instanceof Number;\r\n}\r\nfunction isNativeBlob(p) {\r\n    return isNativeBlobDefined() && p instanceof Blob;\r\n}\r\nfunction isNativeBlobDefined() {\r\n    return typeof Blob !== 'undefined';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @enum{number}\r\n */\r\nvar ErrorCode;\r\n(function (ErrorCode) {\r\n    ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\r\n    ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\r\n    ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\r\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\r\nvar NetworkXhrIo = /** @class */ (function () {\r\n    function NetworkXhrIo() {\r\n        var _this = this;\r\n        this.sent_ = false;\r\n        this.xhr_ = new XMLHttpRequest();\r\n        this.errorCode_ = ErrorCode.NO_ERROR;\r\n        this.sendPromise_ = new Promise(function (resolve) {\r\n            _this.xhr_.addEventListener('abort', function () {\r\n                _this.errorCode_ = ErrorCode.ABORT;\r\n                resolve(_this);\r\n            });\r\n            _this.xhr_.addEventListener('error', function () {\r\n                _this.errorCode_ = ErrorCode.NETWORK_ERROR;\r\n                resolve(_this);\r\n            });\r\n            _this.xhr_.addEventListener('load', function () {\r\n                resolve(_this);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.send = function (url, method, body, headers) {\r\n        if (this.sent_) {\r\n            throw internalError('cannot .send() more than once');\r\n        }\r\n        this.sent_ = true;\r\n        this.xhr_.open(method, url, true);\r\n        if (isDef(headers)) {\r\n            for (var key in headers) {\r\n                if (headers.hasOwnProperty(key)) {\r\n                    this.xhr_.setRequestHeader(key, headers[key].toString());\r\n                }\r\n            }\r\n        }\r\n        if (isDef(body)) {\r\n            this.xhr_.send(body);\r\n        }\r\n        else {\r\n            this.xhr_.send();\r\n        }\r\n        return this.sendPromise_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getErrorCode = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorCode() before sending');\r\n        }\r\n        return this.errorCode_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getStatus = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getStatus() before sending');\r\n        }\r\n        try {\r\n            return this.xhr_.status;\r\n        }\r\n        catch (e) {\r\n            return -1;\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseText = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getResponseText() before sending');\r\n        }\r\n        return this.xhr_.responseText;\r\n    };\r\n    /**\r\n     * Aborts the request.\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.abort = function () {\r\n        this.xhr_.abort();\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseHeader = function (header) {\r\n        return this.xhr_.getResponseHeader(header);\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\r\n        if (isDef(this.xhr_.upload)) {\r\n            this.xhr_.upload.addEventListener('progress', listener);\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\r\n        if (isDef(this.xhr_.upload)) {\r\n            this.xhr_.upload.removeEventListener('progress', listener);\r\n        }\r\n    };\r\n    return NetworkXhrIo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\r\nvar XhrIoPool = /** @class */ (function () {\r\n    function XhrIoPool() {\r\n    }\r\n    XhrIoPool.prototype.createXhrIo = function () {\r\n        return new NetworkXhrIo();\r\n    };\r\n    return XhrIoPool;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getBlobBuilder() {\r\n    if (typeof BlobBuilder !== 'undefined') {\r\n        return BlobBuilder;\r\n    }\r\n    else if (typeof WebKitBlobBuilder !== 'undefined') {\r\n        return WebKitBlobBuilder;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\r\nfunction getBlob() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    var BlobBuilder = getBlobBuilder();\r\n    if (BlobBuilder !== undefined) {\r\n        var bb = new BlobBuilder();\r\n        for (var i = 0; i < args.length; i++) {\r\n            bb.append(args[i]);\r\n        }\r\n        return bb.getBlob();\r\n    }\r\n    else {\r\n        if (isNativeBlobDefined()) {\r\n            return new Blob(args);\r\n        }\r\n        else {\r\n            throw Error(\"This browser doesn't seem to support creating Blobs\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\r\nfunction sliceBlob(blob, start, end) {\r\n    if (blob.webkitSlice) {\r\n        return blob.webkitSlice(start, end);\r\n    }\r\n    else if (blob.mozSlice) {\r\n        return blob.mozSlice(start, end);\r\n    }\r\n    else if (blob.slice) {\r\n        return blob.slice(start, end);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param opt_elideCopy If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\r\nvar FbsBlob = /** @class */ (function () {\r\n    function FbsBlob(data, elideCopy) {\r\n        var size = 0;\r\n        var blobType = '';\r\n        if (isNativeBlob(data)) {\r\n            this.data_ = data;\r\n            size = data.size;\r\n            blobType = data.type;\r\n        }\r\n        else if (data instanceof ArrayBuffer) {\r\n            if (elideCopy) {\r\n                this.data_ = new Uint8Array(data);\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.byteLength);\r\n                this.data_.set(new Uint8Array(data));\r\n            }\r\n            size = this.data_.length;\r\n        }\r\n        else if (data instanceof Uint8Array) {\r\n            if (elideCopy) {\r\n                this.data_ = data;\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.length);\r\n                this.data_.set(data);\r\n            }\r\n            size = data.length;\r\n        }\r\n        this.size_ = size;\r\n        this.type_ = blobType;\r\n    }\r\n    FbsBlob.prototype.size = function () {\r\n        return this.size_;\r\n    };\r\n    FbsBlob.prototype.type = function () {\r\n        return this.type_;\r\n    };\r\n    FbsBlob.prototype.slice = function (startByte, endByte) {\r\n        if (isNativeBlob(this.data_)) {\r\n            var realBlob = this.data_;\r\n            var sliced = sliceBlob(realBlob, startByte, endByte);\r\n            if (sliced === null) {\r\n                return null;\r\n            }\r\n            return new FbsBlob(sliced);\r\n        }\r\n        else {\r\n            var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\r\n            return new FbsBlob(slice, true);\r\n        }\r\n    };\r\n    FbsBlob.getBlob = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (isNativeBlobDefined()) {\r\n            var blobby = args.map(function (val) {\r\n                if (val instanceof FbsBlob) {\r\n                    return val.data_;\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            });\r\n            return new FbsBlob(getBlob.apply(null, blobby));\r\n        }\r\n        else {\r\n            var uint8Arrays = args.map(function (val) {\r\n                if (isString(val)) {\r\n                    return dataFromString(StringFormat.RAW, val).data;\r\n                }\r\n                else {\r\n                    // Blobs don't exist, so this has to be a Uint8Array.\r\n                    return val.data_;\r\n                }\r\n            });\r\n            var finalLength_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                finalLength_1 += array.byteLength;\r\n            });\r\n            var merged_1 = new Uint8Array(finalLength_1);\r\n            var index_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                for (var i = 0; i < array.length; i++) {\r\n                    merged_1[index_1++] = array[i];\r\n                }\r\n            });\r\n            return new FbsBlob(merged_1, true);\r\n        }\r\n    };\r\n    FbsBlob.prototype.uploadData = function () {\r\n        return this.data_;\r\n    };\r\n    return FbsBlob;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar Location = /** @class */ (function () {\r\n    function Location(bucket, path) {\r\n        this.bucket = bucket;\r\n        this.path_ = path;\r\n    }\r\n    Object.defineProperty(Location.prototype, \"path\", {\r\n        get: function () {\r\n            return this.path_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Location.prototype, \"isRoot\", {\r\n        get: function () {\r\n            return this.path.length === 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Location.prototype.fullServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\r\n    };\r\n    Location.prototype.bucketOnlyServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o';\r\n    };\r\n    Location.makeFromBucketSpec = function (bucketString) {\r\n        var bucketLocation;\r\n        try {\r\n            bucketLocation = Location.makeFromUrl(bucketString);\r\n        }\r\n        catch (e) {\r\n            // Not valid URL, use as-is. This lets you put bare bucket names in\r\n            // config.\r\n            return new Location(bucketString, '');\r\n        }\r\n        if (bucketLocation.path === '') {\r\n            return bucketLocation;\r\n        }\r\n        else {\r\n            throw invalidDefaultBucket(bucketString);\r\n        }\r\n    };\r\n    Location.makeFromUrl = function (url) {\r\n        var location = null;\r\n        var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\r\n        function gsModify(loc) {\r\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\r\n                loc.path_ = loc.path_.slice(0, -1);\r\n            }\r\n        }\r\n        var gsPath = '(/(.*))?$';\r\n        var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\r\n        var gsIndices = { bucket: 1, path: 3 };\r\n        function httpModify(loc) {\r\n            loc.path_ = decodeURIComponent(loc.path);\r\n        }\r\n        var version = 'v[A-Za-z0-9_]+';\r\n        var firebaseStorageHost = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\r\n        var firebaseStoragePath = '(/([^?#]*).*)?$';\r\n        var firebaseStorageRegExp = new RegExp(\"^https?://\" + firebaseStorageHost + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + firebaseStoragePath, 'i');\r\n        var firebaseStorageIndices = { bucket: 1, path: 3 };\r\n        var cloudStorageHost = '(?:storage.googleapis.com|storage.cloud.google.com)';\r\n        var cloudStoragePath = '([^?#]*)';\r\n        var cloudStorageRegExp = new RegExp(\"^https?://\" + cloudStorageHost + \"/\" + bucketDomain + \"/\" + cloudStoragePath, 'i');\r\n        var cloudStorageIndices = { bucket: 1, path: 2 };\r\n        var groups = [\r\n            { regex: gsRegex, indices: gsIndices, postModify: gsModify },\r\n            {\r\n                regex: firebaseStorageRegExp,\r\n                indices: firebaseStorageIndices,\r\n                postModify: httpModify\r\n            },\r\n            {\r\n                regex: cloudStorageRegExp,\r\n                indices: cloudStorageIndices,\r\n                postModify: httpModify\r\n            }\r\n        ];\r\n        for (var i = 0; i < groups.length; i++) {\r\n            var group = groups[i];\r\n            var captures = group.regex.exec(url);\r\n            if (captures) {\r\n                var bucketValue = captures[group.indices.bucket];\r\n                var pathValue = captures[group.indices.path];\r\n                if (!pathValue) {\r\n                    pathValue = '';\r\n                }\r\n                location = new Location(bucketValue, pathValue);\r\n                group.postModify(location);\r\n                break;\r\n            }\r\n        }\r\n        if (location == null) {\r\n            throw invalidUrl(url);\r\n        }\r\n        return location;\r\n    };\r\n    return Location;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\r\nfunction jsonObjectOrNull(s) {\r\n    var obj;\r\n    try {\r\n        obj = JSON.parse(s);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    if (isNonArrayObject(obj)) {\r\n        return obj;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\r\n/**\r\n * @return Null if the path is already at the root.\r\n */\r\nfunction parent(path) {\r\n    if (path.length === 0) {\r\n        return null;\r\n    }\r\n    var index = path.lastIndexOf('/');\r\n    if (index === -1) {\r\n        return '';\r\n    }\r\n    var newPath = path.slice(0, index);\r\n    return newPath;\r\n}\r\nfunction child(path, childPath) {\r\n    var canonicalChildPath = childPath\r\n        .split('/')\r\n        .filter(function (component) { return component.length > 0; })\r\n        .join('/');\r\n    if (path.length === 0) {\r\n        return canonicalChildPath;\r\n    }\r\n    else {\r\n        return path + '/' + canonicalChildPath;\r\n    }\r\n}\r\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\r\nfunction lastComponent(path) {\r\n    var index = path.lastIndexOf('/', path.length - 2);\r\n    if (index === -1) {\r\n        return path;\r\n    }\r\n    else {\r\n        return path.slice(index + 1);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction makeUrl(urlPart) {\r\n    return \"https://\" + DEFAULT_HOST + \"/v0\" + urlPart;\r\n}\r\nfunction makeQueryString(params) {\r\n    var encode = encodeURIComponent;\r\n    var queryPart = '?';\r\n    for (var key in params) {\r\n        if (params.hasOwnProperty(key)) {\r\n            // @ts-ignore TODO: remove once typescript is upgraded to 3.5.x\r\n            var nextPart = encode(key) + '=' + encode(params[key]);\r\n            queryPart = queryPart + nextPart + '&';\r\n        }\r\n    }\r\n    // Chop off the extra '&' or '?' on the end\r\n    queryPart = queryPart.slice(0, -1);\r\n    return queryPart;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction noXform_(metadata, value) {\r\n    return value;\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar Mapping = /** @class */ (function () {\r\n    function Mapping(server, local, writable, xform) {\r\n        this.server = server;\r\n        this.local = local || server;\r\n        this.writable = !!writable;\r\n        this.xform = xform || noXform_;\r\n    }\r\n    return Mapping;\r\n}());\r\nvar mappings_ = null;\r\nfunction xformPath(fullPath) {\r\n    if (!isString(fullPath) || fullPath.length < 2) {\r\n        return fullPath;\r\n    }\r\n    else {\r\n        return lastComponent(fullPath);\r\n    }\r\n}\r\nfunction getMappings() {\r\n    if (mappings_) {\r\n        return mappings_;\r\n    }\r\n    var mappings = [];\r\n    mappings.push(new Mapping('bucket'));\r\n    mappings.push(new Mapping('generation'));\r\n    mappings.push(new Mapping('metageneration'));\r\n    mappings.push(new Mapping('name', 'fullPath', true));\r\n    function mappingsXformPath(_metadata, fullPath) {\r\n        return xformPath(fullPath);\r\n    }\r\n    var nameMapping = new Mapping('name');\r\n    nameMapping.xform = mappingsXformPath;\r\n    mappings.push(nameMapping);\r\n    /**\r\n     * Coerces the second param to a number, if it is defined.\r\n     */\r\n    function xformSize(_metadata, size) {\r\n        if (isDef(size)) {\r\n            return Number(size);\r\n        }\r\n        else {\r\n            return size;\r\n        }\r\n    }\r\n    var sizeMapping = new Mapping('size');\r\n    sizeMapping.xform = xformSize;\r\n    mappings.push(sizeMapping);\r\n    mappings.push(new Mapping('timeCreated'));\r\n    mappings.push(new Mapping('updated'));\r\n    mappings.push(new Mapping('md5Hash', null, true));\r\n    mappings.push(new Mapping('cacheControl', null, true));\r\n    mappings.push(new Mapping('contentDisposition', null, true));\r\n    mappings.push(new Mapping('contentEncoding', null, true));\r\n    mappings.push(new Mapping('contentLanguage', null, true));\r\n    mappings.push(new Mapping('contentType', null, true));\r\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\r\n    mappings_ = mappings;\r\n    return mappings_;\r\n}\r\nfunction addRef(metadata, authWrapper) {\r\n    function generateRef() {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var loc = new Location(bucket, path);\r\n        return authWrapper.makeStorageReference(loc);\r\n    }\r\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\r\n}\r\nfunction fromResource(authWrapper, resource, mappings) {\r\n    var metadata = {};\r\n    metadata['type'] = 'file';\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\r\n    }\r\n    addRef(metadata, authWrapper);\r\n    return metadata;\r\n}\r\nfunction fromResourceString(authWrapper, resourceString, mappings) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromResource(authWrapper, resource, mappings);\r\n}\r\nfunction downloadUrlFromResourceString(metadata, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    if (!isString(obj['downloadTokens'])) {\r\n        // This can happen if objects are uploaded through GCS and retrieved\r\n        // through list, so we don't want to throw an Error.\r\n        return null;\r\n    }\r\n    var tokens = obj['downloadTokens'];\r\n    if (tokens.length === 0) {\r\n        return null;\r\n    }\r\n    var encode = encodeURIComponent;\r\n    var tokensList = tokens.split(',');\r\n    var urls = tokensList.map(function (token) {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\r\n        var base = makeUrl(urlPart);\r\n        var queryString = makeQueryString({\r\n            alt: 'media',\r\n            token: token\r\n        });\r\n        return base + queryString;\r\n    });\r\n    return urls[0];\r\n}\r\nfunction toResourceString(metadata, mappings) {\r\n    var resource = {};\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        if (mapping.writable) {\r\n            resource[mapping.server] = metadata[mapping.local];\r\n        }\r\n    }\r\n    return JSON.stringify(resource);\r\n}\r\nfunction metadataValidator(p) {\r\n    if (!isObject(p) || !p) {\r\n        throw 'Expected Metadata object.';\r\n    }\r\n    for (var key in p) {\r\n        if (p.hasOwnProperty(key)) {\r\n            var val = p[key];\r\n            if (key === 'customMetadata') {\r\n                if (!isObject(val)) {\r\n                    throw 'Expected object for \\'customMetadata\\' mapping.';\r\n                }\r\n            }\r\n            else {\r\n                if (isNonNullObject(val)) {\r\n                    throw \"Mapping for '\" + key + \"' cannot be an object.\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_RESULTS_KEY = 'maxResults';\r\nvar MAX_MAX_RESULTS = 1000;\r\nvar PAGE_TOKEN_KEY = 'pageToken';\r\nvar PREFIXES_KEY = 'prefixes';\r\nvar ITEMS_KEY = 'items';\r\nfunction fromBackendResponse(authWrapper, bucket, resource) {\r\n    var listResult = {\r\n        prefixes: [],\r\n        items: [],\r\n        nextPageToken: resource['nextPageToken']\r\n    };\r\n    if (resource[PREFIXES_KEY]) {\r\n        for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\r\n            var path = _a[_i];\r\n            var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\r\n            var reference = authWrapper.makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\r\n            listResult.prefixes.push(reference);\r\n        }\r\n    }\r\n    if (resource[ITEMS_KEY]) {\r\n        for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\r\n            var item = _c[_b];\r\n            var reference = authWrapper.makeStorageReference(new Location(bucket, item['name']));\r\n            listResult.items.push(reference);\r\n        }\r\n    }\r\n    return listResult;\r\n}\r\nfunction fromResponseString(authWrapper, bucket, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromBackendResponse(authWrapper, bucket, resource);\r\n}\r\nfunction listOptionsValidator(p) {\r\n    if (!isObject(p) || !p) {\r\n        throw 'Expected ListOptions object.';\r\n    }\r\n    for (var key in p) {\r\n        if (key === MAX_RESULTS_KEY) {\r\n            if (!isInteger(p[MAX_RESULTS_KEY]) ||\r\n                p[MAX_RESULTS_KEY] <= 0) {\r\n                throw 'Expected maxResults to be a positive number.';\r\n            }\r\n            if (p[MAX_RESULTS_KEY] > 1000) {\r\n                throw \"Expected maxResults to be less than or equal to \" + MAX_MAX_RESULTS + \".\";\r\n            }\r\n        }\r\n        else if (key === PAGE_TOKEN_KEY) {\r\n            if (p[PAGE_TOKEN_KEY] && !isString(p[PAGE_TOKEN_KEY])) {\r\n                throw 'Expected pageToken to be string.';\r\n            }\r\n        }\r\n        else {\r\n            throw 'Unknown option: ' + key;\r\n        }\r\n    }\r\n}\n\nvar RequestInfo = /** @class */ (function () {\r\n    function RequestInfo(url, method, \r\n    /**\r\n     * Returns the value with which to resolve the request's promise. Only called\r\n     * if the request is successful. Throw from this function to reject the\r\n     * returned Request's promise with the thrown error.\r\n     * Note: The XhrIo passed to this function may be reused after this callback\r\n     * returns. Do not keep a reference to it in any way.\r\n     */\r\n    handler, timeout) {\r\n        this.url = url;\r\n        this.method = method;\r\n        this.handler = handler;\r\n        this.timeout = timeout;\r\n        this.urlParams = {};\r\n        this.headers = {};\r\n        this.body = null;\r\n        this.errorHandler = null;\r\n        /**\r\n         * Called with the current number of bytes uploaded and total size (-1 if not\r\n         * computable) of the request body (i.e. used to report upload progress).\r\n         */\r\n        this.progressCallback = null;\r\n        this.successCodes = [200];\r\n        this.additionalRetryCodes = [];\r\n    }\r\n    return RequestInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\r\nfunction handlerCheck(cndn) {\r\n    if (!cndn) {\r\n        throw unknown();\r\n    }\r\n}\r\nfunction metadataHandler(authWrapper, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(authWrapper, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return metadata;\r\n    }\r\n    return handler;\r\n}\r\nfunction listHandler(authWrapper, bucket) {\r\n    function handler(xhr, text) {\r\n        var listResult = fromResponseString(authWrapper, bucket, text);\r\n        handlerCheck(listResult !== null);\r\n        return listResult;\r\n    }\r\n    return handler;\r\n}\r\nfunction downloadUrlHandler(authWrapper, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(authWrapper, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return downloadUrlFromResourceString(metadata, text);\r\n    }\r\n    return handler;\r\n}\r\nfunction sharedErrorHandler(location) {\r\n    function errorHandler(xhr, err) {\r\n        var newErr;\r\n        if (xhr.getStatus() === 401) {\r\n            newErr = unauthenticated();\r\n        }\r\n        else {\r\n            if (xhr.getStatus() === 402) {\r\n                newErr = quotaExceeded(location.bucket);\r\n            }\r\n            else {\r\n                if (xhr.getStatus() === 403) {\r\n                    newErr = unauthorized(location.path);\r\n                }\r\n                else {\r\n                    newErr = err;\r\n                }\r\n            }\r\n        }\r\n        newErr.setServerResponseProp(err.serverResponseProp());\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction objectErrorHandler(location) {\r\n    var shared = sharedErrorHandler(location);\r\n    function errorHandler(xhr, err) {\r\n        var newErr = shared(xhr, err);\r\n        if (xhr.getStatus() === 404) {\r\n            newErr = objectNotFound(location.path);\r\n        }\r\n        newErr.setServerResponseProp(err.serverResponseProp());\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction getMetadata(authWrapper, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction list(authWrapper, location, delimiter, pageToken, maxResults) {\r\n    var urlParams = {};\r\n    if (location.isRoot) {\r\n        urlParams['prefix'] = '';\r\n    }\r\n    else {\r\n        urlParams['prefix'] = location.path + '/';\r\n    }\r\n    if (delimiter && delimiter.length > 0) {\r\n        urlParams['delimiter'] = delimiter;\r\n    }\r\n    if (pageToken) {\r\n        urlParams['pageToken'] = pageToken;\r\n    }\r\n    if (maxResults) {\r\n        urlParams['maxResults'] = maxResults;\r\n    }\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, listHandler(authWrapper, location.bucket), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction getDownloadUrl(authWrapper, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, downloadUrlHandler(authWrapper, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction updateMetadata(authWrapper, location, metadata, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'PATCH';\r\n    var body = toResourceString(metadata, mappings);\r\n    var headers = { 'Content-Type': 'application/json; charset=utf-8' };\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction deleteObject(authWrapper, location) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'DELETE';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    function handler(_xhr, _text) { }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.successCodes = [200, 204];\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction determineContentType_(metadata, blob) {\r\n    return ((metadata && metadata['contentType']) ||\r\n        (blob && blob.type()) ||\r\n        'application/octet-stream');\r\n}\r\nfunction metadataForUpload_(location, blob, metadata) {\r\n    var metadataClone = Object.assign({}, metadata);\r\n    metadataClone['fullPath'] = location.path;\r\n    metadataClone['size'] = blob.size();\r\n    if (!metadataClone['contentType']) {\r\n        metadataClone['contentType'] = determineContentType_(null, blob);\r\n    }\r\n    return metadataClone;\r\n}\r\nfunction multipartUpload(authWrapper, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'multipart'\r\n    };\r\n    function genBoundary() {\r\n        var str = '';\r\n        for (var i = 0; i < 2; i++) {\r\n            str =\r\n                str +\r\n                    Math.random()\r\n                        .toString()\r\n                        .slice(2);\r\n        }\r\n        return str;\r\n    }\r\n    var boundary = genBoundary();\r\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\r\n    var metadata_ = metadataForUpload_(location, blob, metadata);\r\n    var metadataString = toResourceString(metadata_, mappings);\r\n    var preBlobPart = '--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\r\n        metadataString +\r\n        '\\r\\n--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: ' +\r\n        metadata_['contentType'] +\r\n        '\\r\\n\\r\\n';\r\n    var postBlobPart = '\\r\\n--' + boundary + '--';\r\n    var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    var urlParams = { name: metadata_['fullPath'] };\r\n    var url = makeUrl(urlPart);\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n * @struct\r\n */\r\nvar ResumableUploadStatus = /** @class */ (function () {\r\n    function ResumableUploadStatus(current, total, finalized, metadata) {\r\n        this.current = current;\r\n        this.total = total;\r\n        this.finalized = !!finalized;\r\n        this.metadata = metadata || null;\r\n    }\r\n    return ResumableUploadStatus;\r\n}());\r\nfunction checkResumeHeader_(xhr, allowed) {\r\n    var status = null;\r\n    try {\r\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\r\n    }\r\n    catch (e) {\r\n        handlerCheck(false);\r\n    }\r\n    var allowedStatus = allowed || ['active'];\r\n    handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\r\n    return status;\r\n}\r\nfunction createResumableUpload(authWrapper, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var metadataForUpload = metadataForUpload_(location, blob, metadata);\r\n    var urlParams = { name: metadataForUpload['fullPath'] };\r\n    var url = makeUrl(urlPart);\r\n    var method = 'POST';\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'resumable',\r\n        'X-Goog-Upload-Command': 'start',\r\n        'X-Goog-Upload-Header-Content-Length': blob.size(),\r\n        'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\r\n        'Content-Type': 'application/json; charset=utf-8'\r\n    };\r\n    var body = toResourceString(metadataForUpload, mappings);\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    function handler(xhr) {\r\n        checkResumeHeader_(xhr);\r\n        var url;\r\n        try {\r\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        handlerCheck(isString(url));\r\n        return url;\r\n    }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\r\nfunction getResumableUploadStatus(authWrapper, location, url, blob) {\r\n    var headers = { 'X-Goog-Upload-Command': 'query' };\r\n    function handler(xhr) {\r\n        var status = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var sizeString = null;\r\n        try {\r\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        if (!sizeString) {\r\n            // null or empty string\r\n            handlerCheck(false);\r\n        }\r\n        var size = Number(sizeString);\r\n        handlerCheck(!isNaN(size));\r\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\r\n    }\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\r\nvar resumableUploadChunkSize = 256 * 1024;\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\r\nfunction continueResumableUpload(location, authWrapper, url, blob, chunkSize, mappings, status, progressCallback) {\r\n    // TODO(andysoto): standardize on internal asserts\r\n    // assert(!(opt_status && opt_status.finalized));\r\n    var status_ = new ResumableUploadStatus(0, 0);\r\n    if (status) {\r\n        status_.current = status.current;\r\n        status_.total = status.total;\r\n    }\r\n    else {\r\n        status_.current = 0;\r\n        status_.total = blob.size();\r\n    }\r\n    if (blob.size() !== status_.total) {\r\n        throw serverFileWrongSize();\r\n    }\r\n    var bytesLeft = status_.total - status_.current;\r\n    var bytesToUpload = bytesLeft;\r\n    if (chunkSize > 0) {\r\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\r\n    }\r\n    var startByte = status_.current;\r\n    var endByte = startByte + bytesToUpload;\r\n    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\r\n    var headers = {\r\n        'X-Goog-Upload-Command': uploadCommand,\r\n        'X-Goog-Upload-Offset': status_.current\r\n    };\r\n    var body = blob.slice(startByte, endByte);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    function handler(xhr, text) {\r\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\r\n        // the 'x-range-md5' header comes back with status code 308 responses.\r\n        // We'll only be able to bail out though, because you can't re-upload a\r\n        // range that you previously uploaded.\r\n        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var newCurrent = status_.current + bytesToUpload;\r\n        var size = blob.size();\r\n        var metadata;\r\n        if (uploadStatus === 'final') {\r\n            metadata = metadataHandler(authWrapper, mappings)(xhr, text);\r\n        }\r\n        else {\r\n            metadata = null;\r\n        }\r\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\r\n    }\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.progressCallback = progressCallback || null;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar Observer = /** @class */ (function () {\r\n    function Observer(nextOrObserver, error, complete) {\r\n        var asFunctions = isFunction(nextOrObserver) ||\r\n            isDef(error) ||\r\n            isDef(complete);\r\n        if (asFunctions) {\r\n            this.next = nextOrObserver;\r\n            this.error = error || null;\r\n            this.complete = complete || null;\r\n        }\r\n        else {\r\n            var observer = nextOrObserver;\r\n            this.next = observer.next || null;\r\n            this.error = observer.error || null;\r\n            this.complete = observer.complete || null;\r\n        }\r\n    }\r\n    return Observer;\r\n}());\n\nvar UploadTaskSnapshot = /** @class */ (function () {\r\n    function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\r\n        this.bytesTransferred = bytesTransferred;\r\n        this.totalBytes = totalBytes;\r\n        this.state = state;\r\n        this.metadata = metadata;\r\n        this.task = task;\r\n        this.ref = ref;\r\n    }\r\n    return UploadTaskSnapshot;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param name Name of the function.\r\n * @param specs Argument specs.\r\n * @param passed The actual arguments passed to the function.\r\n * @throws {fbs.Error} If the arguments are invalid.\r\n */\r\nfunction validate(name, specs, passed) {\r\n    var minArgs = specs.length;\r\n    var maxArgs = specs.length;\r\n    for (var i = 0; i < specs.length; i++) {\r\n        if (specs[i].optional) {\r\n            minArgs = i;\r\n            break;\r\n        }\r\n    }\r\n    var validLength = minArgs <= passed.length && passed.length <= maxArgs;\r\n    if (!validLength) {\r\n        throw invalidArgumentCount(minArgs, maxArgs, name, passed.length);\r\n    }\r\n    for (var i = 0; i < passed.length; i++) {\r\n        try {\r\n            specs[i].validator(passed[i]);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof Error) {\r\n                throw invalidArgument(i, name, e.message);\r\n            }\r\n            else {\r\n                throw invalidArgument(i, name, e);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar ArgSpec = /** @class */ (function () {\r\n    function ArgSpec(validator, optional) {\r\n        var self = this;\r\n        this.validator = function (p) {\r\n            if (self.optional && !isJustDef(p)) {\r\n                return;\r\n            }\r\n            validator(p);\r\n        };\r\n        this.optional = !!optional;\r\n    }\r\n    return ArgSpec;\r\n}());\r\nfunction and_(v1, v2) {\r\n    return function (p) {\r\n        v1(p);\r\n        v2(p);\r\n    };\r\n}\r\nfunction stringSpec(validator, optional) {\r\n    function stringValidator(p) {\r\n        if (!isString(p)) {\r\n            throw 'Expected string.';\r\n        }\r\n    }\r\n    var chainedValidator;\r\n    if (validator) {\r\n        chainedValidator = and_(stringValidator, validator);\r\n    }\r\n    else {\r\n        chainedValidator = stringValidator;\r\n    }\r\n    return new ArgSpec(chainedValidator, optional);\r\n}\r\nfunction uploadDataSpec() {\r\n    function validator(p) {\r\n        var valid = p instanceof Uint8Array ||\r\n            p instanceof ArrayBuffer ||\r\n            (isNativeBlobDefined() && p instanceof Blob);\r\n        if (!valid) {\r\n            throw 'Expected Blob or File.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator);\r\n}\r\nfunction metadataSpec(optional) {\r\n    return new ArgSpec(metadataValidator, optional);\r\n}\r\nfunction listOptionSpec(optional) {\r\n    return new ArgSpec(listOptionsValidator, optional);\r\n}\r\nfunction nonNegativeNumberSpec() {\r\n    function validator(p) {\r\n        var valid = isNumber(p) && p >= 0;\r\n        if (!valid) {\r\n            throw 'Expected a number 0 or greater.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator);\r\n}\r\nfunction looseObjectSpec(validator, optional) {\r\n    function isLooseObjectValidator(p) {\r\n        var isLooseObject = p === null || (isDef(p) && p instanceof Object);\r\n        if (!isLooseObject) {\r\n            throw 'Expected an Object.';\r\n        }\r\n        if (validator !== undefined && validator !== null) {\r\n            validator(p);\r\n        }\r\n    }\r\n    return new ArgSpec(isLooseObjectValidator, optional);\r\n}\r\nfunction nullFunctionSpec(optional) {\r\n    function validator(p) {\r\n        var valid = p === null || isFunction(p);\r\n        if (!valid) {\r\n            throw 'Expected a Function.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator, optional);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\r\nfunction async(f) {\r\n    return function () {\r\n        var argsToForward = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            argsToForward[_i] = arguments[_i];\r\n        }\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.resolve().then(function () { return f.apply(void 0, argsToForward); });\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\r\nvar UploadTask = /** @class */ (function () {\r\n    /**\r\n     * @param ref The firebaseStorage.Reference object this task came\r\n     *     from, untyped to avoid cyclic dependencies.\r\n     * @param blob The blob to upload.\r\n     */\r\n    function UploadTask(ref, authWrapper, location, mappings, blob, metadata) {\r\n        var _this = this;\r\n        if (metadata === void 0) { metadata = null; }\r\n        this.transferred_ = 0;\r\n        this.needToFetchStatus_ = false;\r\n        this.needToFetchMetadata_ = false;\r\n        this.observers_ = [];\r\n        this.error_ = null;\r\n        this.uploadUrl_ = null;\r\n        this.request_ = null;\r\n        this.chunkMultiplier_ = 1;\r\n        this.resolve_ = null;\r\n        this.reject_ = null;\r\n        this.ref_ = ref;\r\n        this.authWrapper_ = authWrapper;\r\n        this.location_ = location;\r\n        this.blob_ = blob;\r\n        this.metadata_ = metadata;\r\n        this.mappings_ = mappings;\r\n        this.resumable_ = this.shouldDoResumable_(this.blob_);\r\n        this.state_ = InternalTaskState.RUNNING;\r\n        this.errorHandler_ = function (error) {\r\n            _this.request_ = null;\r\n            _this.chunkMultiplier_ = 1;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this.needToFetchStatus_ = true;\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this.error_ = error;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this.metadataErrorHandler_ = function (error) {\r\n            _this.request_ = null;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this.error_ = error;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this.promise_ = new Promise(function (resolve, reject) {\r\n            _this.resolve_ = resolve;\r\n            _this.reject_ = reject;\r\n            _this.start_();\r\n        });\r\n        // Prevent uncaught rejections on the internal promise from bubbling out\r\n        // to the top level with a dummy handler.\r\n        this.promise_.then(null, function () { });\r\n    }\r\n    UploadTask.prototype.makeProgressCallback_ = function () {\r\n        var _this = this;\r\n        var sizeBefore = this.transferred_;\r\n        return function (loaded) { return _this.updateProgress_(sizeBefore + loaded); };\r\n    };\r\n    UploadTask.prototype.shouldDoResumable_ = function (blob) {\r\n        return blob.size() > 256 * 1024;\r\n    };\r\n    UploadTask.prototype.start_ = function () {\r\n        if (this.state_ !== InternalTaskState.RUNNING) {\r\n            // This can happen if someone pauses us in a resume callback, for example.\r\n            return;\r\n        }\r\n        if (this.request_ !== null) {\r\n            return;\r\n        }\r\n        if (this.resumable_) {\r\n            if (this.uploadUrl_ === null) {\r\n                this.createResumable_();\r\n            }\r\n            else {\r\n                if (this.needToFetchStatus_) {\r\n                    this.fetchStatus_();\r\n                }\r\n                else {\r\n                    if (this.needToFetchMetadata_) {\r\n                        // Happens if we miss the metadata on upload completion.\r\n                        this.fetchMetadata_();\r\n                    }\r\n                    else {\r\n                        this.continueUpload_();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.oneShotUpload_();\r\n        }\r\n    };\r\n    UploadTask.prototype.resolveToken_ = function (callback) {\r\n        var _this = this;\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.authWrapper_.getAuthToken().then(function (authToken) {\r\n            switch (_this.state_) {\r\n                case InternalTaskState.RUNNING:\r\n                    callback(authToken);\r\n                    break;\r\n                case InternalTaskState.CANCELING:\r\n                    _this.transition_(InternalTaskState.CANCELED);\r\n                    break;\r\n                case InternalTaskState.PAUSING:\r\n                    _this.transition_(InternalTaskState.PAUSED);\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    // TODO(andysoto): assert false\r\n    UploadTask.prototype.createResumable_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = createResumableUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\r\n            var createRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = createRequest;\r\n            createRequest.getPromise().then(function (url) {\r\n                _this.request_ = null;\r\n                _this.uploadUrl_ = url;\r\n                _this.needToFetchStatus_ = false;\r\n                _this.completeTransitions_();\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.fetchStatus_ = function () {\r\n        var _this = this;\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this.uploadUrl_;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = getResumableUploadStatus(_this.authWrapper_, _this.location_, url, _this.blob_);\r\n            var statusRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = statusRequest;\r\n            statusRequest.getPromise().then(function (status) {\r\n                status = status;\r\n                _this.request_ = null;\r\n                _this.updateProgress_(status.current);\r\n                _this.needToFetchStatus_ = false;\r\n                if (status.finalized) {\r\n                    _this.needToFetchMetadata_ = true;\r\n                }\r\n                _this.completeTransitions_();\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.continueUpload_ = function () {\r\n        var _this = this;\r\n        var chunkSize = resumableUploadChunkSize * this.chunkMultiplier_;\r\n        var status = new ResumableUploadStatus(this.transferred_, this.blob_.size());\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this.uploadUrl_;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo;\r\n            try {\r\n                requestInfo = continueResumableUpload(_this.location_, _this.authWrapper_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());\r\n            }\r\n            catch (e) {\r\n                _this.error_ = e;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n                return;\r\n            }\r\n            var uploadRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = uploadRequest;\r\n            uploadRequest\r\n                .getPromise()\r\n                .then(function (newStatus) {\r\n                _this.increaseMultiplier_();\r\n                _this.request_ = null;\r\n                _this.updateProgress_(newStatus.current);\r\n                if (newStatus.finalized) {\r\n                    _this.metadata_ = newStatus.metadata;\r\n                    _this.transition_(InternalTaskState.SUCCESS);\r\n                }\r\n                else {\r\n                    _this.completeTransitions_();\r\n                }\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.increaseMultiplier_ = function () {\r\n        var currentSize = resumableUploadChunkSize * this.chunkMultiplier_;\r\n        // Max chunk size is 32M.\r\n        if (currentSize < 32 * 1024 * 1024) {\r\n            this.chunkMultiplier_ *= 2;\r\n        }\r\n    };\r\n    UploadTask.prototype.fetchMetadata_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = getMetadata(_this.authWrapper_, _this.location_, _this.mappings_);\r\n            var metadataRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = metadataRequest;\r\n            metadataRequest.getPromise().then(function (metadata) {\r\n                _this.request_ = null;\r\n                _this.metadata_ = metadata;\r\n                _this.transition_(InternalTaskState.SUCCESS);\r\n            }, _this.metadataErrorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.oneShotUpload_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = multipartUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\r\n            var multipartRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = multipartRequest;\r\n            multipartRequest.getPromise().then(function (metadata) {\r\n                _this.request_ = null;\r\n                _this.metadata_ = metadata;\r\n                _this.updateProgress_(_this.blob_.size());\r\n                _this.transition_(InternalTaskState.SUCCESS);\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.updateProgress_ = function (transferred) {\r\n        var old = this.transferred_;\r\n        this.transferred_ = transferred;\r\n        // A progress update can make the \"transferred\" value smaller (e.g. a\r\n        // partial upload not completed by server, after which the \"transferred\"\r\n        // value may reset to the value at the beginning of the request).\r\n        if (this.transferred_ !== old) {\r\n            this.notifyObservers_();\r\n        }\r\n    };\r\n    UploadTask.prototype.transition_ = function (state) {\r\n        if (this.state_ === state) {\r\n            return;\r\n        }\r\n        switch (state) {\r\n            case InternalTaskState.CANCELING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                this.state_ = state;\r\n                if (this.request_ !== null) {\r\n                    this.request_.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING);\r\n                this.state_ = state;\r\n                if (this.request_ !== null) {\r\n                    this.request_.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                var wasPaused = this.state_ === InternalTaskState.PAUSED;\r\n                this.state_ = state;\r\n                if (wasPaused) {\r\n                    this.notifyObservers_();\r\n                    this.start_();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.CANCELED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.error_ = canceled();\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.ERROR:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.SUCCESS:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n        }\r\n    };\r\n    UploadTask.prototype.completeTransitions_ = function () {\r\n        switch (this.state_) {\r\n            case InternalTaskState.PAUSING:\r\n                this.transition_(InternalTaskState.PAUSED);\r\n                break;\r\n            case InternalTaskState.CANCELING:\r\n                this.transition_(InternalTaskState.CANCELED);\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                this.start_();\r\n                break;\r\n        }\r\n    };\r\n    Object.defineProperty(UploadTask.prototype, \"snapshot\", {\r\n        get: function () {\r\n            var externalState = taskStateFromInternalTaskState(this.state_);\r\n            return new UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a callback for an event.\r\n     * @param type The type of event to listen for.\r\n     */\r\n    UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        function typeValidator() {\r\n            if (type !== TaskEvent.STATE_CHANGED) {\r\n                throw \"Expected one of the event types: [\" + TaskEvent.STATE_CHANGED + \"].\";\r\n            }\r\n        }\r\n        var nextOrObserverMessage = 'Expected a function or an Object with one of ' +\r\n            '`next`, `error`, `complete` properties.';\r\n        var nextValidator = nullFunctionSpec(true).validator;\r\n        var observerValidator = looseObjectSpec(null, true).validator;\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        function nextOrObserverValidator(p) {\r\n            try {\r\n                nextValidator(p);\r\n                return;\r\n            }\r\n            catch (e) { }\r\n            try {\r\n                observerValidator(p);\r\n                var anyDefined = isJustDef(p['next']) ||\r\n                    isJustDef(p['error']) ||\r\n                    isJustDef(p['complete']);\r\n                if (!anyDefined) {\r\n                    throw '';\r\n                }\r\n                return;\r\n            }\r\n            catch (e) {\r\n                throw nextOrObserverMessage;\r\n            }\r\n        }\r\n        var specs = [\r\n            stringSpec(typeValidator),\r\n            looseObjectSpec(nextOrObserverValidator, true),\r\n            nullFunctionSpec(true),\r\n            nullFunctionSpec(true)\r\n        ];\r\n        validate('on', specs, arguments);\r\n        var self = this;\r\n        function makeBinder(specs) {\r\n            function binder(nextOrObserver, error, complete) {\r\n                if (specs !== null) {\r\n                    validate('on', specs, arguments);\r\n                }\r\n                var observer = new Observer(nextOrObserver, error, completed);\r\n                self.addObserver_(observer);\r\n                return function () {\r\n                    self.removeObserver_(observer);\r\n                };\r\n            }\r\n            return binder;\r\n        }\r\n        function binderNextOrObserverValidator(p) {\r\n            if (p === null) {\r\n                throw nextOrObserverMessage;\r\n            }\r\n            nextOrObserverValidator(p);\r\n        }\r\n        var binderSpecs = [\r\n            looseObjectSpec(binderNextOrObserverValidator),\r\n            nullFunctionSpec(true),\r\n            nullFunctionSpec(true)\r\n        ];\r\n        var typeOnly = !(isJustDef(nextOrObserver) ||\r\n            isJustDef(error) ||\r\n            isJustDef(completed));\r\n        if (typeOnly) {\r\n            return makeBinder(binderSpecs);\r\n        }\r\n        else {\r\n            return makeBinder(null)(nextOrObserver, error, completed);\r\n        }\r\n    };\r\n    /**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected The rejection callback.\r\n     */\r\n    UploadTask.prototype.then = function (onFulfilled, onRejected) {\r\n        // These casts are needed so that TypeScript can infer the types of the\r\n        // resulting Promise.\r\n        return this.promise_.then(onFulfilled, onRejected);\r\n    };\r\n    /**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */\r\n    UploadTask.prototype.catch = function (onRejected) {\r\n        return this.then(null, onRejected);\r\n    };\r\n    /**\r\n     * Adds the given observer.\r\n     */\r\n    UploadTask.prototype.addObserver_ = function (observer) {\r\n        this.observers_.push(observer);\r\n        this.notifyObserver_(observer);\r\n    };\r\n    /**\r\n     * Removes the given observer.\r\n     */\r\n    UploadTask.prototype.removeObserver_ = function (observer) {\r\n        var i = this.observers_.indexOf(observer);\r\n        if (i !== -1) {\r\n            this.observers_.splice(i, 1);\r\n        }\r\n    };\r\n    UploadTask.prototype.notifyObservers_ = function () {\r\n        var _this = this;\r\n        this.finishPromise_();\r\n        var observers = this.observers_.slice();\r\n        observers.forEach(function (observer) {\r\n            _this.notifyObserver_(observer);\r\n        });\r\n    };\r\n    UploadTask.prototype.finishPromise_ = function () {\r\n        if (this.resolve_ !== null) {\r\n            var triggered = true;\r\n            switch (taskStateFromInternalTaskState(this.state_)) {\r\n                case TaskState.SUCCESS:\r\n                    async(this.resolve_.bind(null, this.snapshot))();\r\n                    break;\r\n                case TaskState.CANCELED:\r\n                case TaskState.ERROR:\r\n                    var toCall = this.reject_;\r\n                    async(toCall.bind(null, this.error_))();\r\n                    break;\r\n                default:\r\n                    triggered = false;\r\n                    break;\r\n            }\r\n            if (triggered) {\r\n                this.resolve_ = null;\r\n                this.reject_ = null;\r\n            }\r\n        }\r\n    };\r\n    UploadTask.prototype.notifyObserver_ = function (observer) {\r\n        var externalState = taskStateFromInternalTaskState(this.state_);\r\n        switch (externalState) {\r\n            case TaskState.RUNNING:\r\n            case TaskState.PAUSED:\r\n                if (observer.next) {\r\n                    async(observer.next.bind(observer, this.snapshot))();\r\n                }\r\n                break;\r\n            case TaskState.SUCCESS:\r\n                if (observer.complete) {\r\n                    async(observer.complete.bind(observer))();\r\n                }\r\n                break;\r\n            case TaskState.CANCELED:\r\n            case TaskState.ERROR:\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this.error_))();\r\n                }\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this.error_))();\r\n                }\r\n        }\r\n    };\r\n    /**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.resume = function () {\r\n        validate('resume', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.PAUSED ||\r\n            this.state_ === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.RUNNING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.pause = function () {\r\n        validate('pause', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.RUNNING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.PAUSING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.cancel = function () {\r\n        validate('cancel', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.RUNNING ||\r\n            this.state_ === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.CANCELING);\r\n        }\r\n        return valid;\r\n    };\r\n    return UploadTask;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\r\nvar Reference = /** @class */ (function () {\r\n    function Reference(authWrapper, location) {\r\n        this.authWrapper = authWrapper;\r\n        if (location instanceof Location) {\r\n            this.location = location;\r\n        }\r\n        else {\r\n            this.location = Location.makeFromUrl(location);\r\n        }\r\n    }\r\n    /**\r\n     * @return The URL for the bucket and path this object references,\r\n     *     in the form gs://<bucket>/<object-path>\r\n     * @override\r\n     */\r\n    Reference.prototype.toString = function () {\r\n        validate('toString', [], arguments);\r\n        return 'gs://' + this.location.bucket + '/' + this.location.path;\r\n    };\r\n    Reference.prototype.newRef = function (authWrapper, location) {\r\n        return new Reference(authWrapper, location);\r\n    };\r\n    Reference.prototype.mappings = function () {\r\n        return getMappings();\r\n    };\r\n    /**\r\n     * @return A reference to the object obtained by\r\n     *     appending childPath, removing any duplicate, beginning, or trailing\r\n     *     slashes.\r\n     */\r\n    Reference.prototype.child = function (childPath) {\r\n        validate('child', [stringSpec()], arguments);\r\n        var newPath = child(this.location.path, childPath);\r\n        var location = new Location(this.location.bucket, newPath);\r\n        return this.newRef(this.authWrapper, location);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        /**\r\n         * @return A reference to the parent of the\r\n         *     current object, or null if the current object is the root.\r\n         */\r\n        get: function () {\r\n            var newPath = parent(this.location.path);\r\n            if (newPath === null) {\r\n                return null;\r\n            }\r\n            var location = new Location(this.location.bucket, newPath);\r\n            return this.newRef(this.authWrapper, location);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        /**\r\n         * @return An reference to the root of this\r\n         *     object's bucket.\r\n         */\r\n        get: function () {\r\n            var location = new Location(this.location.bucket, '');\r\n            return this.newRef(this.authWrapper, location);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"bucket\", {\r\n        get: function () {\r\n            return this.location.bucket;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"fullPath\", {\r\n        get: function () {\r\n            return this.location.path;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"name\", {\r\n        get: function () {\r\n            return lastComponent(this.location.path);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"storage\", {\r\n        get: function () {\r\n            return this.authWrapper.service();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Uploads a blob to this object's location.\r\n     * @param data The blob to upload.\r\n     * @return An UploadTask that lets you control and\r\n     *     observe the upload.\r\n     */\r\n    Reference.prototype.put = function (data, metadata) {\r\n        if (metadata === void 0) { metadata = null; }\r\n        validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\r\n        this.throwIfRoot_('put');\r\n        return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data), metadata);\r\n    };\r\n    /**\r\n     * Uploads a string to this object's location.\r\n     * @param value The string to upload.\r\n     * @param format The format of the string to upload.\r\n     * @return An UploadTask that lets you control and\r\n     *     observe the upload.\r\n     */\r\n    Reference.prototype.putString = function (value, format, metadata) {\r\n        if (format === void 0) { format = StringFormat.RAW; }\r\n        validate('putString', [stringSpec(), stringSpec(formatValidator, true), metadataSpec(true)], arguments);\r\n        this.throwIfRoot_('putString');\r\n        var data = dataFromString(format, value);\r\n        var metadataClone = Object.assign({}, metadata);\r\n        if (!isDef(metadataClone['contentType']) &&\r\n            isDef(data.contentType)) {\r\n            metadataClone['contentType'] = data.contentType;\r\n        }\r\n        return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data.data, true), metadataClone);\r\n    };\r\n    /**\r\n     * Deletes the object at this location.\r\n     * @return A promise that resolves if the deletion succeeds.\r\n     */\r\n    Reference.prototype.delete = function () {\r\n        var _this = this;\r\n        validate('delete', [], arguments);\r\n        this.throwIfRoot_('delete');\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = deleteObject(_this.authWrapper, _this.location);\r\n            return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * List all items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * This is a helper method for calling list() repeatedly until there are\r\n     * no more results. The default pagination size is 1000.\r\n     *\r\n     * Note: The results may not be consistent if objects are changed while this\r\n     * operation is running.\r\n     *\r\n     * Warning: listAll may potentially consume too many resources if there are\r\n     * too many results.\r\n     *\r\n     * @return A Promise that resolves with all the items and prefixes under\r\n     *      the current storage reference. `prefixes` contains references to\r\n     *      sub-directories and `items` contains references to objects in this\r\n     *      folder. `nextPageToken` is never returned.\r\n     */\r\n    Reference.prototype.listAll = function () {\r\n        validate('listAll', [], arguments);\r\n        var accumulator = {\r\n            prefixes: [],\r\n            items: []\r\n        };\r\n        return this.listAllHelper(accumulator).then(function () { return accumulator; });\r\n    };\r\n    Reference.prototype.listAllHelper = function (accumulator, pageToken) {\r\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_1__[\"__awaiter\"])(this, void 0, void 0, function () {\r\n            var opt, nextPage;\r\n            var _a, _b;\r\n            return Object(tslib__WEBPACK_IMPORTED_MODULE_1__[\"__generator\"])(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        opt = {\r\n                            // maxResults is 1000 by default.\r\n                            pageToken: pageToken\r\n                        };\r\n                        return [4 /*yield*/, this.list(opt)];\r\n                    case 1:\r\n                        nextPage = _c.sent();\r\n                        (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\r\n                        (_b = accumulator.items).push.apply(_b, nextPage.items);\r\n                        if (!(nextPage.nextPageToken != null)) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, this.listAllHelper(accumulator, nextPage.nextPageToken)];\r\n                    case 2:\r\n                        _c.sent();\r\n                        _c.label = 3;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * List items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * List API is only available for Firebase Rules Version 2.\r\n     *\r\n     * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n     * delimited folder structure.\r\n     * Refer to GCS's List API if you want to learn more.\r\n     *\r\n     * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n     * support objects whose paths end with \"/\" or contain two consecutive\r\n     * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n     * list() may fail if there are too many unsupported objects in the bucket.\r\n     *\r\n     * @param options See ListOptions for details.\r\n     * @return A Promise that resolves with the items and prefixes.\r\n     *      `prefixes` contains references to sub-folders and `items`\r\n     *      contains references to objects in this folder. `nextPageToken`\r\n     *      can be used to get the rest of the results.\r\n     */\r\n    Reference.prototype.list = function (options) {\r\n        validate('list', [listOptionSpec(true)], arguments);\r\n        var self = this;\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var op = options || {};\r\n            var requestInfo = list(self.authWrapper, self.location, \r\n            /*delimiter= */ '/', op.pageToken, op.maxResults);\r\n            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     *     A promise that resolves with the metadata for this object. If this\r\n     *     object doesn't exist or metadata cannot be retreived, the promise is\r\n     *     rejected.\r\n     */\r\n    Reference.prototype.getMetadata = function () {\r\n        var _this = this;\r\n        validate('getMetadata', [], arguments);\r\n        this.throwIfRoot_('getMetadata');\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = getMetadata(_this.authWrapper, _this.location, _this.mappings());\r\n            return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * Updates the metadata for this object.\r\n     * @param metadata The new metadata for the object.\r\n     *     Only values that have been explicitly set will be changed. Explicitly\r\n     *     setting a value to null will remove the metadata.\r\n     * @return A promise that resolves\r\n     *     with the new metadata for this object.\r\n     *     @see firebaseStorage.Reference.prototype.getMetadata\r\n     */\r\n    Reference.prototype.updateMetadata = function (metadata) {\r\n        var _this = this;\r\n        validate('updateMetadata', [metadataSpec()], arguments);\r\n        this.throwIfRoot_('updateMetadata');\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = updateMetadata(_this.authWrapper, _this.location, metadata, _this.mappings());\r\n            return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * @return A promise that resolves with the download\r\n     *     URL for this object.\r\n     */\r\n    Reference.prototype.getDownloadURL = function () {\r\n        var _this = this;\r\n        validate('getDownloadURL', [], arguments);\r\n        this.throwIfRoot_('getDownloadURL');\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = getDownloadUrl(_this.authWrapper, _this.location, _this.mappings());\r\n            return _this.authWrapper\r\n                .makeRequest(requestInfo, authToken)\r\n                .getPromise()\r\n                .then(function (url) {\r\n                if (url === null) {\r\n                    throw noDownloadURL();\r\n                }\r\n                return url;\r\n            });\r\n        });\r\n    };\r\n    Reference.prototype.throwIfRoot_ = function (name) {\r\n        if (this.location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return Reference;\r\n}());\n\n/**\r\n * A request whose promise always fails.\r\n * @struct\r\n * @template T\r\n */\r\nvar FailRequest = /** @class */ (function () {\r\n    function FailRequest(error) {\r\n        this.promise_ = Promise.reject(error);\r\n    }\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.cancel = function (_appDelete) {\r\n    };\r\n    return FailRequest;\r\n}());\n\nvar RequestMap = /** @class */ (function () {\r\n    function RequestMap() {\r\n        this.map = new Map();\r\n        this.id = MIN_SAFE_INTEGER;\r\n    }\r\n    /**\r\n     * Registers the given request with this map.\r\n     * The request is unregistered when it completes.\r\n     *\r\n     * @param request The request to register.\r\n     */\r\n    RequestMap.prototype.addRequest = function (request) {\r\n        var _this = this;\r\n        var id = this.id;\r\n        this.id++;\r\n        this.map.set(id, request);\r\n        request.getPromise().then(function () { return _this.map.delete(id); }, function () { return _this.map.delete(id); });\r\n    };\r\n    /**\r\n     * Cancels all registered requests.\r\n     */\r\n    RequestMap.prototype.clear = function () {\r\n        this.map.forEach(function (v) {\r\n            v && v.cancel(true);\r\n        });\r\n        this.map.clear();\r\n    };\r\n    return RequestMap;\r\n}());\n\n/**\r\n * @param app If null, getAuthToken always resolves with null.\r\n * @param service The storage service associated with this auth wrapper.\r\n *     Untyped to avoid circular type dependencies.\r\n * @struct\r\n */\r\nvar AuthWrapper = /** @class */ (function () {\r\n    function AuthWrapper(app, authProvider, maker, requestMaker, service, pool) {\r\n        var _a;\r\n        this.bucket_ = null;\r\n        this.appId_ = null;\r\n        this.deleted_ = false;\r\n        this.app_ = app;\r\n        if (this.app_ !== null) {\r\n            var options = this.app_.options;\r\n            if (isDef(options)) {\r\n                this.bucket_ = AuthWrapper.extractBucket_(options);\r\n                this.appId_ = (_a = options.appId) !== null && _a !== void 0 ? _a : null;\r\n            }\r\n        }\r\n        this.authProvider_ = authProvider;\r\n        this.storageRefMaker_ = maker;\r\n        this.requestMaker_ = requestMaker;\r\n        this.pool_ = pool;\r\n        this.service_ = service;\r\n        this.maxOperationRetryTime_ = DEFAULT_MAX_OPERATION_RETRY_TIME;\r\n        this.maxUploadRetryTime_ = DEFAULT_MAX_UPLOAD_RETRY_TIME;\r\n        this.requestMap_ = new RequestMap();\r\n    }\r\n    AuthWrapper.extractBucket_ = function (config) {\r\n        var bucketString = config[CONFIG_STORAGE_BUCKET_KEY] || null;\r\n        if (bucketString == null) {\r\n            return null;\r\n        }\r\n        var loc = Location.makeFromBucketSpec(bucketString);\r\n        return loc.bucket;\r\n    };\r\n    AuthWrapper.prototype.getAuthToken = function () {\r\n        var auth = this.authProvider_.getImmediate({ optional: true });\r\n        if (auth) {\r\n            return auth.getToken().then(function (response) {\r\n                if (response !== null) {\r\n                    return response.accessToken;\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }, function () { return null; });\r\n        }\r\n        else {\r\n            return Promise.resolve(null);\r\n        }\r\n    };\r\n    AuthWrapper.prototype.bucket = function () {\r\n        if (this.deleted_) {\r\n            throw appDeleted();\r\n        }\r\n        else {\r\n            return this.bucket_;\r\n        }\r\n    };\r\n    /**\r\n     * The service associated with this auth wrapper. Untyped to avoid circular\r\n     * type dependencies.\r\n     */\r\n    AuthWrapper.prototype.service = function () {\r\n        return this.service_;\r\n    };\r\n    /**\r\n     * Returns a new firebaseStorage.Reference object referencing this AuthWrapper\r\n     * at the given Location.\r\n     * @param loc The Location.\r\n     * @return Actually a firebaseStorage.Reference, typing not allowed\r\n     *     because of circular dependency problems.\r\n     */\r\n    AuthWrapper.prototype.makeStorageReference = function (loc) {\r\n        return this.storageRefMaker_(this, loc);\r\n    };\r\n    AuthWrapper.prototype.makeRequest = function (requestInfo, authToken) {\r\n        if (!this.deleted_) {\r\n            var request = this.requestMaker_(requestInfo, this.appId_, authToken, this.pool_);\r\n            this.requestMap_.addRequest(request);\r\n            return request;\r\n        }\r\n        else {\r\n            return new FailRequest(appDeleted());\r\n        }\r\n    };\r\n    /**\r\n     * Stop running requests and prevent more from being created.\r\n     */\r\n    AuthWrapper.prototype.deleteApp = function () {\r\n        this.deleted_ = true;\r\n        this.app_ = null;\r\n        this.requestMap_.clear();\r\n    };\r\n    AuthWrapper.prototype.maxUploadRetryTime = function () {\r\n        return this.maxUploadRetryTime_;\r\n    };\r\n    AuthWrapper.prototype.setMaxUploadRetryTime = function (time) {\r\n        this.maxUploadRetryTime_ = time;\r\n    };\r\n    AuthWrapper.prototype.maxOperationRetryTime = function () {\r\n        return this.maxOperationRetryTime_;\r\n    };\r\n    AuthWrapper.prototype.setMaxOperationRetryTime = function (time) {\r\n        this.maxOperationRetryTime_ = time;\r\n    };\r\n    return AuthWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\r\nfunction start(f, callback, timeout) {\r\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\r\n    // type instead of a bunch of functions with state shared in the closure)\r\n    var waitSeconds = 1;\r\n    // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\r\n    // TODO: find a way to exclude Node type definition for storage because storage only works in browser\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    var timeoutId = null;\r\n    var hitTimeout = false;\r\n    var cancelState = 0;\r\n    function canceled() {\r\n        return cancelState === 2;\r\n    }\r\n    var triggeredCallback = false;\r\n    // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\r\n    // the no-explicit-any rule when ESlint releases it.\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    function triggerCallback() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (!triggeredCallback) {\r\n            triggeredCallback = true;\r\n            callback.apply(null, args);\r\n        }\r\n    }\r\n    function callWithDelay(millis) {\r\n        timeoutId = setTimeout(function () {\r\n            timeoutId = null;\r\n            f(handler, canceled());\r\n        }, millis);\r\n    }\r\n    // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\r\n    // the no-explicit-any rule when ESlint releases it.\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    function handler(success) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (success) {\r\n            triggerCallback.call.apply(triggerCallback, Object(tslib__WEBPACK_IMPORTED_MODULE_1__[\"__spreadArrays\"])([null, success], args));\r\n            return;\r\n        }\r\n        var mustStop = canceled() || hitTimeout;\r\n        if (mustStop) {\r\n            triggerCallback.call.apply(triggerCallback, Object(tslib__WEBPACK_IMPORTED_MODULE_1__[\"__spreadArrays\"])([null, success], args));\r\n            return;\r\n        }\r\n        if (waitSeconds < 64) {\r\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\r\n            waitSeconds *= 2;\r\n        }\r\n        var waitMillis;\r\n        if (cancelState === 1) {\r\n            cancelState = 2;\r\n            waitMillis = 0;\r\n        }\r\n        else {\r\n            waitMillis = (waitSeconds + Math.random()) * 1000;\r\n        }\r\n        callWithDelay(waitMillis);\r\n    }\r\n    var stopped = false;\r\n    function stop(wasTimeout) {\r\n        if (stopped) {\r\n            return;\r\n        }\r\n        stopped = true;\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (timeoutId !== null) {\r\n            if (!wasTimeout) {\r\n                cancelState = 2;\r\n            }\r\n            clearTimeout(timeoutId);\r\n            callWithDelay(0);\r\n        }\r\n        else {\r\n            if (!wasTimeout) {\r\n                cancelState = 1;\r\n            }\r\n        }\r\n    }\r\n    callWithDelay(0);\r\n    setTimeout(function () {\r\n        hitTimeout = true;\r\n        stop(true);\r\n    }, timeout);\r\n    return stop;\r\n}\r\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\r\nfunction stop(id) {\r\n    id(false);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n * @template T\r\n */\r\nvar NetworkRequest = /** @class */ (function () {\r\n    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\r\n        var _this = this;\r\n        this.pendingXhr_ = null;\r\n        this.backoffId_ = null;\r\n        this.resolve_ = null;\r\n        this.reject_ = null;\r\n        this.canceled_ = false;\r\n        this.appDelete_ = false;\r\n        this.url_ = url;\r\n        this.method_ = method;\r\n        this.headers_ = headers;\r\n        this.body_ = body;\r\n        this.successCodes_ = successCodes.slice();\r\n        this.additionalRetryCodes_ = additionalRetryCodes.slice();\r\n        this.callback_ = callback;\r\n        this.errorCallback_ = errorCallback;\r\n        this.progressCallback_ = progressCallback;\r\n        this.timeout_ = timeout;\r\n        this.pool_ = pool;\r\n        this.promise_ = new Promise(function (resolve, reject) {\r\n            _this.resolve_ = resolve;\r\n            _this.reject_ = reject;\r\n            _this.start_();\r\n        });\r\n    }\r\n    /**\r\n     * Actually starts the retry loop.\r\n     */\r\n    NetworkRequest.prototype.start_ = function () {\r\n        var self = this;\r\n        function doTheRequest(backoffCallback, canceled) {\r\n            if (canceled) {\r\n                backoffCallback(false, new RequestEndStatus(false, null, true));\r\n                return;\r\n            }\r\n            var xhr = self.pool_.createXhrIo();\r\n            self.pendingXhr_ = xhr;\r\n            function progressListener(progressEvent) {\r\n                var loaded = progressEvent.loaded;\r\n                var total = progressEvent.lengthComputable ? progressEvent.total : -1;\r\n                if (self.progressCallback_ !== null) {\r\n                    self.progressCallback_(loaded, total);\r\n                }\r\n            }\r\n            if (self.progressCallback_ !== null) {\r\n                xhr.addUploadProgressListener(progressListener);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            xhr\r\n                .send(self.url_, self.method_, self.body_, self.headers_)\r\n                .then(function (xhr) {\r\n                if (self.progressCallback_ !== null) {\r\n                    xhr.removeUploadProgressListener(progressListener);\r\n                }\r\n                self.pendingXhr_ = null;\r\n                xhr = xhr;\r\n                var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\r\n                var status = xhr.getStatus();\r\n                if (!hitServer || self.isRetryStatusCode_(status)) {\r\n                    var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\r\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\r\n                    return;\r\n                }\r\n                var successCode = self.successCodes_.indexOf(status) !== -1;\r\n                backoffCallback(true, new RequestEndStatus(successCode, xhr));\r\n            });\r\n        }\r\n        /**\r\n         * @param requestWentThrough True if the request eventually went\r\n         *     through, false if it hit the retry limit or was canceled.\r\n         */\r\n        function backoffDone(requestWentThrough, status) {\r\n            var resolve = self.resolve_;\r\n            var reject = self.reject_;\r\n            var xhr = status.xhr;\r\n            if (status.wasSuccessCode) {\r\n                try {\r\n                    var result = self.callback_(xhr, xhr.getResponseText());\r\n                    if (isJustDef(result)) {\r\n                        resolve(result);\r\n                    }\r\n                    else {\r\n                        resolve();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }\r\n            else {\r\n                if (xhr !== null) {\r\n                    var err = unknown();\r\n                    err.setServerResponseProp(xhr.getResponseText());\r\n                    if (self.errorCallback_) {\r\n                        reject(self.errorCallback_(xhr, err));\r\n                    }\r\n                    else {\r\n                        reject(err);\r\n                    }\r\n                }\r\n                else {\r\n                    if (status.canceled) {\r\n                        var err = self.appDelete_ ? appDeleted() : canceled();\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        var err = retryLimitExceeded();\r\n                        reject(err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.canceled_) {\r\n            backoffDone(false, new RequestEndStatus(false, null, true));\r\n        }\r\n        else {\r\n            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.cancel = function (appDelete) {\r\n        this.canceled_ = true;\r\n        this.appDelete_ = appDelete || false;\r\n        if (this.backoffId_ !== null) {\r\n            stop(this.backoffId_);\r\n        }\r\n        if (this.pendingXhr_ !== null) {\r\n            this.pendingXhr_.abort();\r\n        }\r\n    };\r\n    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\r\n        // The codes for which to retry came from this page:\r\n        // https://cloud.google.com/storage/docs/exponential-backoff\r\n        var isFiveHundredCode = status >= 500 && status < 600;\r\n        var extraRetryCodes = [\r\n            // Request Timeout: web server didn't receive full request in time.\r\n            408,\r\n            // Too Many Requests: you're getting rate-limited, basically.\r\n            429\r\n        ];\r\n        var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\r\n        var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\r\n        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\r\n    };\r\n    return NetworkRequest;\r\n}());\r\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled Defaults to false.\r\n * @struct\r\n */\r\nvar RequestEndStatus = /** @class */ (function () {\r\n    function RequestEndStatus(wasSuccessCode, xhr, canceled) {\r\n        this.wasSuccessCode = wasSuccessCode;\r\n        this.xhr = xhr;\r\n        this.canceled = !!canceled;\r\n    }\r\n    return RequestEndStatus;\r\n}());\r\nfunction addAuthHeader_(headers, authToken) {\r\n    if (authToken !== null && authToken.length > 0) {\r\n        headers['Authorization'] = 'Firebase ' + authToken;\r\n    }\r\n}\r\nfunction addVersionHeader_(headers) {\r\n    var version = typeof _firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a !== 'undefined' ? _firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.SDK_VERSION : 'AppManager';\r\n    headers['X-Firebase-Storage-Version'] = 'webjs/' + version;\r\n}\r\nfunction addGmpidHeader_(headers, appId) {\r\n    if (appId) {\r\n        headers['X-Firebase-GMPID'] = appId;\r\n    }\r\n}\r\n/**\r\n * @template T\r\n */\r\nfunction makeRequest(requestInfo, appId, authToken, pool) {\r\n    var queryPart = makeQueryString(requestInfo.urlParams);\r\n    var url = requestInfo.url + queryPart;\r\n    var headers = Object.assign({}, requestInfo.headers);\r\n    addGmpidHeader_(headers, appId);\r\n    addAuthHeader_(headers, authToken);\r\n    addVersionHeader_(headers);\r\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n *\r\n * @struct\r\n */\r\nvar Service = /** @class */ (function () {\r\n    function Service(app, authProvider, pool, url) {\r\n        this.bucket_ = null;\r\n        function maker(authWrapper, loc) {\r\n            return new Reference(authWrapper, loc);\r\n        }\r\n        this.authWrapper_ = new AuthWrapper(app, authProvider, maker, makeRequest, this, pool);\r\n        this.app_ = app;\r\n        if (url != null) {\r\n            this.bucket_ = Location.makeFromBucketSpec(url);\r\n        }\r\n        else {\r\n            var authWrapperBucket = this.authWrapper_.bucket();\r\n            if (authWrapperBucket != null) {\r\n                this.bucket_ = new Location(authWrapperBucket, '');\r\n            }\r\n        }\r\n        this.internals_ = new ServiceInternals(this);\r\n    }\r\n    /**\r\n     * Returns a firebaseStorage.Reference for the given path in the default\r\n     * bucket.\r\n     */\r\n    Service.prototype.ref = function (path) {\r\n        function validator(path) {\r\n            if (typeof path !== 'string') {\r\n                throw 'Path is not a string.';\r\n            }\r\n            if (/^[A-Za-z]+:\\/\\//.test(path)) {\r\n                throw 'Expected child path but got a URL, use refFromURL instead.';\r\n            }\r\n        }\r\n        validate('ref', [stringSpec(validator, true)], arguments);\r\n        if (this.bucket_ == null) {\r\n            throw new Error('No Storage Bucket defined in Firebase Options.');\r\n        }\r\n        var ref = new Reference(this.authWrapper_, this.bucket_);\r\n        if (path != null) {\r\n            return ref.child(path);\r\n        }\r\n        else {\r\n            return ref;\r\n        }\r\n    };\r\n    /**\r\n     * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n     * which must be a gs:// or http[s]:// URL.\r\n     */\r\n    Service.prototype.refFromURL = function (url) {\r\n        function validator(p) {\r\n            if (typeof p !== 'string') {\r\n                throw 'Path is not a string.';\r\n            }\r\n            if (!/^[A-Za-z]+:\\/\\//.test(p)) {\r\n                throw 'Expected full URL but got a child path, use ref instead.';\r\n            }\r\n            try {\r\n                Location.makeFromUrl(p);\r\n            }\r\n            catch (e) {\r\n                throw 'Expected valid full URL but got an invalid one.';\r\n            }\r\n        }\r\n        validate('refFromURL', [stringSpec(validator, false)], arguments);\r\n        return new Reference(this.authWrapper_, url);\r\n    };\r\n    Object.defineProperty(Service.prototype, \"maxUploadRetryTime\", {\r\n        get: function () {\r\n            return this.authWrapper_.maxUploadRetryTime();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Service.prototype.setMaxUploadRetryTime = function (time) {\r\n        validate('setMaxUploadRetryTime', [nonNegativeNumberSpec()], arguments);\r\n        this.authWrapper_.setMaxUploadRetryTime(time);\r\n    };\r\n    Service.prototype.setMaxOperationRetryTime = function (time) {\r\n        validate('setMaxOperationRetryTime', [nonNegativeNumberSpec()], arguments);\r\n        this.authWrapper_.setMaxOperationRetryTime(time);\r\n    };\r\n    Object.defineProperty(Service.prototype, \"app\", {\r\n        get: function () {\r\n            return this.app_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Service.prototype, \"INTERNAL\", {\r\n        get: function () {\r\n            return this.internals_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Service;\r\n}());\r\n/**\r\n * @struct\r\n */\r\nvar ServiceInternals = /** @class */ (function () {\r\n    function ServiceInternals(service) {\r\n        this.service_ = service;\r\n    }\r\n    /**\r\n     * Called when the associated app is deleted.\r\n     * @see {!fbs.AuthWrapper.prototype.deleteApp}\r\n     */\r\n    ServiceInternals.prototype.delete = function () {\r\n        this.service_.authWrapper_.deleteApp();\r\n        return Promise.resolve();\r\n    };\r\n    return ServiceInternals;\r\n}());\n\nvar name = \"@firebase/storage\";\nvar version = \"0.3.34\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Storage.\r\n */\r\nvar STORAGE_TYPE = 'storage';\r\nfunction factory(container, url) {\r\n    // Dependencies\r\n    var app = container.getProvider('app').getImmediate();\r\n    var authProvider = container.getProvider('auth-internal');\r\n    return new Service(app, authProvider, new XhrIoPool(), url);\r\n}\r\nfunction registerStorage(instance) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        TaskState: TaskState,\r\n        TaskEvent: TaskEvent,\r\n        StringFormat: StringFormat,\r\n        Storage: Service,\r\n        Reference: Reference\r\n    };\r\n    instance.INTERNAL.registerComponent(new _firebase_component__WEBPACK_IMPORTED_MODULE_2__[\"Component\"](STORAGE_TYPE, factory, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(namespaceExports)\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterStorage(_firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a);\n\n\n//# sourceMappingURL=index.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@firebase/storage/dist/index.esm.js\n");

/***/ }),

/***/ "./node_modules/@firebase/storage/node_modules/tslib/tslib.es6.js":
/*!************************************************************************!*\
  !*** ./node_modules/@firebase/storage/node_modules/tslib/tslib.es6.js ***!
  \************************************************************************/
/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __exportStar, __values, __read, __spread, __spreadArrays, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault, __classPrivateFieldGet, __classPrivateFieldSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__extends\", function() { return __extends; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__assign\", function() { return __assign; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__rest\", function() { return __rest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__decorate\", function() { return __decorate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__param\", function() { return __param; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__metadata\", function() { return __metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__awaiter\", function() { return __awaiter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__generator\", function() { return __generator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__exportStar\", function() { return __exportStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__values\", function() { return __values; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__read\", function() { return __read; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__spread\", function() { return __spread; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__spreadArrays\", function() { return __spreadArrays; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__await\", function() { return __await; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncGenerator\", function() { return __asyncGenerator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncDelegator\", function() { return __asyncDelegator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncValues\", function() { return __asyncValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__makeTemplateObject\", function() { return __makeTemplateObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importStar\", function() { return __importStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importDefault\", function() { return __importDefault; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__classPrivateFieldGet\", function() { return __classPrivateFieldGet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__classPrivateFieldSet\", function() { return __classPrivateFieldSet; });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@firebase/storage/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "./node_modules/@firebase/util/dist/index.cjs.js":
/*!*******************************************************!*\
  !*** ./node_modules/@firebase/util/dist/index.cjs.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib = __webpack_require__(/*! tslib */ \"./node_modules/@firebase/util/node_modules/tslib/tslib.es6.js\");\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nvar CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n */\r\nvar assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n */\r\nvar assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar stringToByteArray = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [];\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) === 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param bytes Array of numbers representing characters.\r\n * @return Stringification of the array.\r\n */\r\nvar byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [];\r\n    var pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        var c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            var c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            var c4 = bytes[pos++];\r\n            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\r\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\r\n// Static lookup maps, lazily populated by init_()\r\nvar base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeByteArray: function (input, webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        var byteToCharMap = webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length; i += 3) {\r\n            var byte1 = input[i];\r\n            var haveByte2 = i + 1 < input.length;\r\n            var byte2 = haveByte2 ? input[i + 1] : 0;\r\n            var haveByte3 = i + 2 < input.length;\r\n            var byte3 = haveByte3 ? input[i + 2] : 0;\r\n            var outByte1 = byte1 >> 2;\r\n            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            var outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param input A string to encode.\r\n     * @param webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeString: function (input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray(input), webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param input to decode.\r\n     * @param webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return string representing the decoded value.\r\n     */\r\n    decodeString: function (input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param input Input to decode.\r\n     * @param webSafe True if we should use the web-safe alphabet.\r\n     * @return bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray: function (input, webSafe) {\r\n        this.init_();\r\n        var charToByteMap = webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length;) {\r\n            var byte1 = charToByteMap[input.charAt(i++)];\r\n            var haveByte2 = i < input.length;\r\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            var haveByte3 = i < input.length;\r\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            var haveByte4 = i < input.length;\r\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw Error();\r\n            }\r\n            var outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 !== 64) {\r\n                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 !== 64) {\r\n                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_: function () {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * URL-safe base64 encoding\r\n */\r\nvar base64Encode = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param str To be decoded\r\n * @return Decoded result, if possible\r\n */\r\nvar base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            var dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (var prop in source) {\r\n        if (!source.hasOwnProperty(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Deferred = /** @class */ (function () {\r\n    function Deferred() {\r\n        var _this = this;\r\n        this.reject = function () { };\r\n        this.resolve = function () { };\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = resolve;\r\n            _this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     */\r\n    Deferred.prototype.wrapCallback = function (callback) {\r\n        var _this = this;\r\n        return function (error, value) {\r\n            if (error) {\r\n                _this.reject(error);\r\n            }\r\n            else {\r\n                _this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                _this.promise.catch(function () { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    return Deferred;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return user agent string\r\n */\r\nfunction getUA() {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\r\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\r\n * wait for a callback.\r\n */\r\nfunction isMobileCordova() {\r\n    return (typeof window !== 'undefined' &&\r\n        // @ts-ignore Setting up an broadly applicable index signature for Window\r\n        // just to deal with this case would probably be a bad idea.\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n}\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return true if Node.js environment is detected.\r\n */\r\n// Node detection logic from: https://github.com/iliakan/detect-node/\r\nfunction isNode() {\r\n    try {\r\n        return (Object.prototype.toString.call(global.process) === '[object process]');\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Detect Browser Environment\r\n */\r\nfunction isBrowser() {\r\n    return typeof self === 'object' && self.self === self;\r\n}\r\nfunction isBrowserExtension() {\r\n    var runtime = typeof chrome === 'object'\r\n        ? chrome.runtime\r\n        : typeof browser === 'object'\r\n            ? browser.runtime\r\n            : undefined;\r\n    return typeof runtime === 'object' && runtime.id !== undefined;\r\n}\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return true if ReactNative environment is detected.\r\n */\r\nfunction isReactNative() {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n}\r\n/** Detects Electron apps. */\r\nfunction isElectron() {\r\n    return getUA().indexOf('Electron/') >= 0;\r\n}\r\n/** Detects Internet Explorer. */\r\nfunction isIE() {\r\n    var ua = getUA();\r\n    return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\r\n}\r\n/** Detects Universal Windows Platform apps. */\r\nfunction isUWP() {\r\n    return getUA().indexOf('MSAppHost/') >= 0;\r\n}\r\n/**\r\n * Detect whether the current SDK build is the Node version.\r\n *\r\n * @return true if it's the Node SDK build.\r\n */\r\nfunction isNodeSdk() {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ERROR_NAME = 'FirebaseError';\r\n// Based on code from:\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\r\nvar FirebaseError = /** @class */ (function (_super) {\r\n    tslib.__extends(FirebaseError, _super);\r\n    function FirebaseError(code, message) {\r\n        var _this = _super.call(this, message) || this;\r\n        _this.code = code;\r\n        _this.name = ERROR_NAME;\r\n        // Fix For ES5\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(_this, FirebaseError.prototype);\r\n        // Maintains proper stack trace for where our error was thrown.\r\n        // Only available on V8.\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(_this, ErrorFactory.prototype.create);\r\n        }\r\n        return _this;\r\n    }\r\n    return FirebaseError;\r\n}(Error));\r\nvar ErrorFactory = /** @class */ (function () {\r\n    function ErrorFactory(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n    }\r\n    ErrorFactory.prototype.create = function (code) {\r\n        var data = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            data[_i - 1] = arguments[_i];\r\n        }\r\n        var customData = data[0] || {};\r\n        var fullCode = this.service + \"/\" + code;\r\n        var template = this.errors[code];\r\n        var message = template ? replaceTemplate(template, customData) : 'Error';\r\n        // Service Name: Error message (service/code).\r\n        var fullMessage = this.serviceName + \": \" + message + \" (\" + fullCode + \").\";\r\n        var error = new FirebaseError(fullCode, fullMessage);\r\n        // Keys with an underscore at the end of their name are not included in\r\n        // error.data for some reason.\r\n        // TODO: Replace with Object.entries when lib is updated to es2017.\r\n        for (var _a = 0, _b = Object.keys(customData); _a < _b.length; _a++) {\r\n            var key = _b[_a];\r\n            if (key.slice(-1) !== '_') {\r\n                if (key in error) {\r\n                    console.warn(\"Overwriting FirebaseError base field \\\"\" + key + \"\\\" can cause unexpected behavior.\");\r\n                }\r\n                error[key] = customData[key];\r\n            }\r\n        }\r\n        return error;\r\n    };\r\n    return ErrorFactory;\r\n}());\r\nfunction replaceTemplate(template, data) {\r\n    return template.replace(PATTERN, function (_, key) {\r\n        var value = data[key];\r\n        return value != null ? value.toString() : \"<\" + key + \"?>\";\r\n    });\r\n}\r\nvar PATTERN = /\\{\\$([^}]+)}/g;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nvar decode = function (token) {\r\n    var header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        var parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header: header,\r\n        claims: claims,\r\n        data: data,\r\n        signature: signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nvar isValidTimestamp = function (token) {\r\n    var claims = decode(token).claims;\r\n    var now = Math.floor(new Date().getTime() / 1000);\r\n    var validSince = 0, validUntil = 0;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (!!now &&\r\n        !!validSince &&\r\n        !!validUntil &&\r\n        now >= validSince &&\r\n        now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nvar issuedAtTime = function (token) {\r\n    var claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nvar isValidFormat = function (token) {\r\n    var decoded = decode(token), claims = decoded.claims;\r\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nvar isAdmin = function (token) {\r\n    var claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction contains(obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\nfunction safeGet(obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nfunction isEmpty(obj) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction map(obj, fn, contextObj) {\r\n    var res = {};\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            res[key] = fn.call(contextObj, obj[key], key, obj);\r\n        }\r\n    }\r\n    return res;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\r\n * params object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n */\r\nfunction querystring(querystringParams) {\r\n    var params = [];\r\n    var _loop_1 = function (key, value) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(function (arrayVal) {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    };\r\n    for (var _i = 0, _a = Object.entries(querystringParams); _i < _a.length; _i++) {\r\n        var _b = _a[_i], key = _b[0], value = _b[1];\r\n        _loop_1(key, value);\r\n    }\r\n    return params.length ? '&' + params.join('&') : '';\r\n}\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\r\n * (e.g. {arg: 'val', arg2: 'val2'})\r\n */\r\nfunction querystringDecode(querystring) {\r\n    var obj = {};\r\n    var tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(function (token) {\r\n        if (token) {\r\n            var key = token.split('=');\r\n            obj[key[0]] = key[1];\r\n        }\r\n    });\r\n    return obj;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @final\r\n * @struct\r\n */\r\nvar Sha1 = /** @class */ (function () {\r\n    function Sha1() {\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @private\r\n         */\r\n        this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @private\r\n         */\r\n        this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @private\r\n         */\r\n        this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @private\r\n         */\r\n        this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.total_ = 0;\r\n        this.blockSize = 512 / 8;\r\n        this.pad_[0] = 128;\r\n        for (var i = 1; i < this.blockSize; ++i) {\r\n            this.pad_[i] = 0;\r\n        }\r\n        this.reset();\r\n    }\r\n    Sha1.prototype.reset = function () {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    };\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param buf Block to compress.\r\n     * @param offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    Sha1.prototype.compress_ = function (buf, offset) {\r\n        if (!offset) {\r\n            offset = 0;\r\n        }\r\n        var W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (var i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(offset) << 24) |\r\n                        (buf.charCodeAt(offset + 1) << 16) |\r\n                        (buf.charCodeAt(offset + 2) << 8) |\r\n                        buf.charCodeAt(offset + 3);\r\n                offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[offset] << 24) |\r\n                        (buf[offset + 1] << 16) |\r\n                        (buf[offset + 2] << 8) |\r\n                        buf[offset + 3];\r\n                offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (var i = 16; i < 80; i++) {\r\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        var a = this.chain_[0];\r\n        var b = this.chain_[1];\r\n        var c = this.chain_[2];\r\n        var d = this.chain_[3];\r\n        var e = this.chain_[4];\r\n        var f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (var i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    };\r\n    Sha1.prototype.update = function (bytes, length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (length === undefined) {\r\n            length = bytes.length;\r\n        }\r\n        var lengthMinusBlock = length - this.blockSize;\r\n        var n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        var buf = this.buf_;\r\n        var inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf === 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += length;\r\n    };\r\n    /** @override */\r\n    Sha1.prototype.digest = function () {\r\n        var digest = [];\r\n        var totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (var i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        var n = 0;\r\n        for (var i = 0; i < 5; i++) {\r\n            for (var j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    };\r\n    return Sha1;\r\n}());\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    var proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nvar ObserverProxy = /** @class */ (function () {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    function ObserverProxy(executor, onNoObservers) {\r\n        var _this = this;\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(function () {\r\n            executor(_this);\r\n        })\r\n            .catch(function (e) {\r\n            _this.error(e);\r\n        });\r\n    }\r\n    ObserverProxy.prototype.next = function (value) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.next(value);\r\n        });\r\n    };\r\n    ObserverProxy.prototype.error = function (error) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    };\r\n    ObserverProxy.prototype.complete = function () {\r\n        this.forEachObserver(function (observer) {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    };\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\r\n        var _this = this;\r\n        var observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, [\r\n            'next',\r\n            'error',\r\n            'complete'\r\n        ])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error: error,\r\n                complete: complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this.task.then(function () {\r\n                try {\r\n                    if (_this.finalError) {\r\n                        observer.error(_this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    };\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    };\r\n    ObserverProxy.prototype.forEachObserver = function (fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (var i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    };\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    ObserverProxy.prototype.sendOne = function (i, fn) {\r\n        var _this = this;\r\n        // Execute the callback asynchronously\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(function () {\r\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(_this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    ObserverProxy.prototype.close = function (err) {\r\n        var _this = this;\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(function () {\r\n            _this.observers = undefined;\r\n            _this.onNoObservers = undefined;\r\n        });\r\n    };\r\n    return ObserverProxy;\r\n}());\r\n/** Turn synchronous function into one called asynchronously. */\r\nfunction async(fn, onError) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        Promise.resolve(true)\r\n            .then(function () {\r\n            fn.apply(void 0, args);\r\n        })\r\n            .catch(function (error) {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\r\n        var method = methods_1[_i];\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param fnName The function name\r\n * @param minCount The minimum number of arguments to allow for the function call\r\n * @param maxCount The maximum number of argument to allow for the function call\r\n * @param argCount The actual number of arguments provided.\r\n */\r\nvar validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    var argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        var error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param fnName The function name\r\n * @param argumentNumber The index of the argument\r\n * @param optional Whether or not the argument is optional\r\n * @return The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argumentNumber, optional) {\r\n    var argName = '';\r\n    switch (argumentNumber) {\r\n        case 1:\r\n            argName = optional ? 'first' : 'First';\r\n            break;\r\n        case 2:\r\n            argName = optional ? 'second' : 'Second';\r\n            break;\r\n        case 3:\r\n            argName = optional ? 'third' : 'Third';\r\n            break;\r\n        case 4:\r\n            argName = optional ? 'fourth' : 'Fourth';\r\n            break;\r\n        default:\r\n            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');\r\n    }\r\n    var error = fnName + ' failed: ';\r\n    error += argName + ' argument ';\r\n    return error;\r\n}\r\n/**\r\n * @param fnName\r\n * @param argumentNumber\r\n * @param namespace\r\n * @param optional\r\n */\r\nfunction validateNamespace(fnName, argumentNumber, namespace, optional) {\r\n    if (optional && !namespace) {\r\n        return;\r\n    }\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentNumber, callback, optional) {\r\n    if (optional && !callback) {\r\n        return;\r\n    }\r\n    if (typeof callback !== 'function') {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid function.');\r\n    }\r\n}\r\nfunction validateContextObject(fnName, argumentNumber, context, optional) {\r\n    if (optional && !context) {\r\n        return;\r\n    }\r\n    if (typeof context !== 'object' || context === null) {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid context object.');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nvar stringToByteArray$1 = function (str) {\r\n    var out = [];\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            var high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nvar stringLength = function (str) {\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\nexports.CONSTANTS = CONSTANTS;\nexports.Deferred = Deferred;\nexports.ErrorFactory = ErrorFactory;\nexports.FirebaseError = FirebaseError;\nexports.Sha1 = Sha1;\nexports.assert = assert;\nexports.assertionError = assertionError;\nexports.async = async;\nexports.base64 = base64;\nexports.base64Decode = base64Decode;\nexports.base64Encode = base64Encode;\nexports.contains = contains;\nexports.createSubscribe = createSubscribe;\nexports.decode = decode;\nexports.deepCopy = deepCopy;\nexports.deepExtend = deepExtend;\nexports.errorPrefix = errorPrefix;\nexports.getUA = getUA;\nexports.isAdmin = isAdmin;\nexports.isBrowser = isBrowser;\nexports.isBrowserExtension = isBrowserExtension;\nexports.isElectron = isElectron;\nexports.isEmpty = isEmpty;\nexports.isIE = isIE;\nexports.isMobileCordova = isMobileCordova;\nexports.isNode = isNode;\nexports.isNodeSdk = isNodeSdk;\nexports.isReactNative = isReactNative;\nexports.isUWP = isUWP;\nexports.isValidFormat = isValidFormat;\nexports.isValidTimestamp = isValidTimestamp;\nexports.issuedAtTime = issuedAtTime;\nexports.jsonEval = jsonEval;\nexports.map = map;\nexports.querystring = querystring;\nexports.querystringDecode = querystringDecode;\nexports.safeGet = safeGet;\nexports.stringLength = stringLength;\nexports.stringToByteArray = stringToByteArray$1;\nexports.stringify = stringify;\nexports.validateArgCount = validateArgCount;\nexports.validateCallback = validateCallback;\nexports.validateContextObject = validateContextObject;\nexports.validateNamespace = validateNamespace;\n//# sourceMappingURL=index.cjs.js.map\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@firebase/util/dist/index.cjs.js\n");

/***/ }),

/***/ "./node_modules/@firebase/util/node_modules/tslib/tslib.es6.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@firebase/util/node_modules/tslib/tslib.es6.js ***!
  \*********************************************************************/
/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __exportStar, __values, __read, __spread, __spreadArrays, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault, __classPrivateFieldGet, __classPrivateFieldSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__extends\", function() { return __extends; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__assign\", function() { return __assign; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__rest\", function() { return __rest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__decorate\", function() { return __decorate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__param\", function() { return __param; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__metadata\", function() { return __metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__awaiter\", function() { return __awaiter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__generator\", function() { return __generator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__exportStar\", function() { return __exportStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__values\", function() { return __values; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__read\", function() { return __read; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__spread\", function() { return __spread; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__spreadArrays\", function() { return __spreadArrays; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__await\", function() { return __await; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncGenerator\", function() { return __asyncGenerator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncDelegator\", function() { return __asyncDelegator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncValues\", function() { return __asyncValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__makeTemplateObject\", function() { return __makeTemplateObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importStar\", function() { return __importStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importDefault\", function() { return __importDefault; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__classPrivateFieldGet\", function() { return __classPrivateFieldGet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__classPrivateFieldSet\", function() { return __classPrivateFieldSet; });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@firebase/util/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "./node_modules/firebase/app/dist/index.cjs.js":
/*!*****************************************************!*\
  !*** ./node_modules/firebase/app/dist/index.cjs.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(__webpack_require__(/*! @firebase/app */ \"./node_modules/@firebase/app/dist/index.cjs.js\"));\n\nvar name = \"firebase\";\nvar version = \"7.14.5\";\n\n/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfirebase.registerVersion(name, version, 'app');\n\nmodule.exports = firebase;\n//# sourceMappingURL=index.cjs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmlyZWJhc2UvYXBwL2Rpc3QvaW5kZXguY2pzLmpzPzU5Y2EiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsK0JBQStCLGlGQUFpRjs7QUFFaEgsK0JBQStCLG1CQUFPLENBQUMscUVBQWU7O0FBRXREO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2ZpcmViYXNlL2FwcC9kaXN0L2luZGV4LmNqcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gX2ludGVyb3BEZWZhdWx0IChleCkgeyByZXR1cm4gKGV4ICYmICh0eXBlb2YgZXggPT09ICdvYmplY3QnKSAmJiAnZGVmYXVsdCcgaW4gZXgpID8gZXhbJ2RlZmF1bHQnXSA6IGV4OyB9XG5cbnZhciBmaXJlYmFzZSA9IF9pbnRlcm9wRGVmYXVsdChyZXF1aXJlKCdAZmlyZWJhc2UvYXBwJykpO1xuXG52YXIgbmFtZSA9IFwiZmlyZWJhc2VcIjtcbnZhciB2ZXJzaW9uID0gXCI3LjE0LjVcIjtcblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE4IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuZmlyZWJhc2UucmVnaXN0ZXJWZXJzaW9uKG5hbWUsIHZlcnNpb24sICdhcHAnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmaXJlYmFzZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmNqcy5qcy5tYXBcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/firebase/app/dist/index.cjs.js\n");

/***/ }),

/***/ "./node_modules/firebase/auth/dist/index.esm.js":
/*!******************************************************!*\
  !*** ./node_modules/firebase/auth/dist/index.esm.js ***!
  \******************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _firebase_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/auth */ \"./node_modules/@firebase/auth/dist/auth.esm.js\");\n\n//# sourceMappingURL=index.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmlyZWJhc2UvYXV0aC9kaXN0L2luZGV4LmVzbS5qcz9lYTdiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBd0I7QUFDeEIiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZmlyZWJhc2UvYXV0aC9kaXN0L2luZGV4LmVzbS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnQGZpcmViYXNlL2F1dGgnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguZXNtLmpzLm1hcFxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/firebase/auth/dist/index.esm.js\n");

/***/ }),

/***/ "./node_modules/firebase/firebase-database.js":
/*!****************************************************!*\
  !*** ./node_modules/firebase/firebase-database.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {!function(t,e){ true?e(__webpack_require__(/*! @firebase/app */ \"./node_modules/@firebase/app/dist/index.cjs.js\")):undefined}(this,function(Ji){\"use strict\";try{(function(){Ji=Ji&&Object.prototype.hasOwnProperty.call(Ji,\"default\")?Ji.default:Ji;var r=function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)};function t(t,e){function n(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}var u=function(){return(u=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}).apply(this,arguments)};function e(t,s,a,h){return new(a=a||Promise)(function(n,e){function r(t){try{o(h.next(t))}catch(t){e(t)}}function i(t){try{o(h.throw(t))}catch(t){e(t)}}function o(t){var e;t.done?n(t.value):((e=t.value)instanceof a?e:new a(function(t){t(e)})).then(r,i)}o((h=h.apply(t,s||[])).next())})}function n(n,r){var i,o,s,t,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return t={next:e(0),throw:e(1),return:e(2)},\"function\"==typeof Symbol&&(t[Symbol.iterator]=function(){return this}),t;function e(e){return function(t){return function(e){if(i)throw new TypeError(\"Generator is already executing.\");for(;a;)try{if(i=1,o&&(s=2&e[0]?o.return:e[0]?o.throw||((s=o.return)&&s.call(o),0):o.next)&&!(s=s.call(o,e[1])).done)return s;switch(o=0,s&&(e=[2&e[0],s.value]),e[0]){case 0:case 1:s=e;break;case 4:return a.label++,{value:e[1],done:!1};case 5:a.label++,o=e[1],e=[0];continue;case 7:e=a.ops.pop(),a.trys.pop();continue;default:if(!(s=0<(s=a.trys).length&&s[s.length-1])&&(6===e[0]||2===e[0])){a=0;continue}if(3===e[0]&&(!s||e[1]>s[0]&&e[1]<s[3])){a.label=e[1];break}if(6===e[0]&&a.label<s[1]){a.label=s[1],s=e;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(e);break}s[2]&&a.ops.pop(),a.trys.pop();continue}e=r.call(n,a)}catch(t){e=[6,t],o=0}finally{i=s=0}if(5&e[0])throw e[1];return{value:e[0]?e[1]:void 0,done:!0}}([e,t])}}}function _(t){var e=\"function\"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&\"number\"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")}function f(t,e){var n=\"function\"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,o=n.call(t),s=[];try{for(;(void 0===e||0<e--)&&!(r=o.next()).done;)s.push(r.value)}catch(t){i={error:t}}finally{try{r&&!r.done&&(n=o.return)&&n.call(o)}finally{if(i)throw i.error}}return s}function o(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(f(arguments[e]));return t}function s(t){for(var e=[],n=0,r=0;r<t.length;r++){var i=t.charCodeAt(r);i<128?e[n++]=i:(i<2048?e[n++]=i>>6|192:(55296==(64512&i)&&r+1<t.length&&56320==(64512&t.charCodeAt(r+1))?(i=65536+((1023&i)<<10)+(1023&t.charCodeAt(++r)),e[n++]=i>>18|240,e[n++]=i>>12&63|128):e[n++]=i>>12|224,e[n++]=i>>6&63|128),e[n++]=63&i|128)}return e}function a(t){try{return l.decodeString(t,!0)}catch(t){console.error(\"base64Decode failed: \",t)}return null}var h={NODE_CLIENT:!1,NODE_ADMIN:!1,SDK_VERSION:\"${JSCORE_VERSION}\"},C=function(t,e){if(!t)throw c(e)},c=function(t){return new Error(\"Firebase Database (\"+h.SDK_VERSION+\") INTERNAL ASSERT FAILED: \"+t)},l={byteToCharMap_:null,charToByteMap_:null,byteToCharMapWebSafe_:null,charToByteMapWebSafe_:null,ENCODED_VALS_BASE:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\",get ENCODED_VALS(){return this.ENCODED_VALS_BASE+\"+/=\"},get ENCODED_VALS_WEBSAFE(){return this.ENCODED_VALS_BASE+\"-_.\"},HAS_NATIVE_SUPPORT:\"function\"==typeof atob,encodeByteArray:function(t,e){if(!Array.isArray(t))throw Error(\"encodeByteArray takes an array as a parameter\");this.init_();for(var n=e?this.byteToCharMapWebSafe_:this.byteToCharMap_,r=[],i=0;i<t.length;i+=3){var o=t[i],s=i+1<t.length,a=s?t[i+1]:0,h=i+2<t.length,l=h?t[i+2]:0,u=o>>2,c=(3&o)<<4|a>>4,p=(15&a)<<2|l>>6,d=63&l;h||(d=64,s||(p=64)),r.push(n[u],n[c],n[p],n[d])}return r.join(\"\")},encodeString:function(t,e){return this.HAS_NATIVE_SUPPORT&&!e?btoa(t):this.encodeByteArray(s(t),e)},decodeString:function(t,e){return this.HAS_NATIVE_SUPPORT&&!e?atob(t):function(t){for(var e=[],n=0,r=0;n<t.length;){var i=t[n++];if(i<128)e[r++]=String.fromCharCode(i);else if(191<i&&i<224){var o=t[n++];e[r++]=String.fromCharCode((31&i)<<6|63&o)}else if(239<i&&i<365){var s=((7&i)<<18|(63&(o=t[n++]))<<12|(63&(a=t[n++]))<<6|63&t[n++])-65536;e[r++]=String.fromCharCode(55296+(s>>10)),e[r++]=String.fromCharCode(56320+(1023&s))}else{o=t[n++];var a=t[n++];e[r++]=String.fromCharCode((15&i)<<12|(63&o)<<6|63&a)}}return e.join(\"\")}(this.decodeStringToByteArray(t,e))},decodeStringToByteArray:function(t,e){this.init_();for(var n=e?this.charToByteMapWebSafe_:this.charToByteMap_,r=[],i=0;i<t.length;){var o=n[t.charAt(i++)],s=i<t.length?n[t.charAt(i)]:0,a=++i<t.length?n[t.charAt(i)]:64,h=++i<t.length?n[t.charAt(i)]:64;if(++i,null==o||null==s||null==a||null==h)throw Error();var l=o<<2|s>>4;if(r.push(l),64!==a){var u=s<<4&240|a>>2;if(r.push(u),64!==h){var c=a<<6&192|h;r.push(c)}}}return r},init_:function(){if(!this.byteToCharMap_){this.byteToCharMap_={},this.charToByteMap_={},this.byteToCharMapWebSafe_={},this.charToByteMapWebSafe_={};for(var t=0;t<this.ENCODED_VALS.length;t++)this.byteToCharMap_[t]=this.ENCODED_VALS.charAt(t),this.charToByteMap_[this.byteToCharMap_[t]]=t,this.byteToCharMapWebSafe_[t]=this.ENCODED_VALS_WEBSAFE.charAt(t),(this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[t]]=t)>=this.ENCODED_VALS_BASE.length&&(this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(t)]=t,this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(t)]=t)}}};function i(t){return function t(e,n){if(!(n instanceof Object))return n;switch(n.constructor){case Date:var r=n;return new Date(r.getTime());case Object:void 0===e&&(e={});break;case Array:e=[];break;default:return n}for(var i in n)n.hasOwnProperty(i)&&(e[i]=t(e[i],n[i]));return e}(void 0,t)}var p=(d.prototype.wrapCallback=function(n){var r=this;return function(t,e){t?r.reject(t):r.resolve(e),\"function\"==typeof n&&(r.promise.catch(function(){}),1===n.length?n(t):n(t,e))}},d);function d(){var n=this;this.reject=function(){},this.resolve=function(){},this.promise=new Promise(function(t,e){n.resolve=t,n.reject=e})}function y(){return\"undefined\"!=typeof window&&(window.cordova||window.phonegap||window.PhoneGap)&&/ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(\"undefined\"!=typeof navigator&&\"string\"==typeof navigator.userAgent?navigator.userAgent:\"\")}function v(){return!0===h.NODE_ADMIN}var g,m=(t(E,g=Error),E);function E(t,e){var n=g.call(this,e)||this;return n.code=t,n.name=\"FirebaseError\",Object.setPrototypeOf(n,E.prototype),Error.captureStackTrace&&Error.captureStackTrace(n,w.prototype.create),n}var w=(b.prototype.create=function(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];for(var r,i=e[0]||{},o=this.service+\"/\"+t,s=this.errors[t],a=s?(r=i,s.replace(S,function(t,e){var n=r[e];return null!=n?n.toString():\"<\"+e+\"?>\"})):\"Error\",h=this.serviceName+\": \"+a+\" (\"+o+\").\",l=new m(o,h),u=0,c=Object.keys(i);u<c.length;u++){var p=c[u];\"_\"!==p.slice(-1)&&(p in l&&console.warn('Overwriting FirebaseError base field \"'+p+'\" can cause unexpected behavior.'),l[p]=i[p])}return l},b);function b(t,e,n){this.service=t,this.serviceName=e,this.errors=n}var S=/\\{\\$([^}]+)}/g;function T(t){return JSON.parse(t)}function I(t){return JSON.stringify(t)}function N(t){var e={},n={},r={},i=\"\";try{var o=t.split(\".\");e=T(a(o[0])||\"\"),n=T(a(o[1])||\"\"),i=o[2],r=n.d||{},delete n.d}catch(t){}return{header:e,claims:n,data:r,signature:i}}function R(t,e){return Object.prototype.hasOwnProperty.call(t,e)}function P(t,e){return Object.prototype.hasOwnProperty.call(t,e)?t[e]:void 0}function D(t){for(var e in t)if(Object.prototype.hasOwnProperty.call(t,e))return!1;return!0}function O(t,e,n){var r={};for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(r[i]=e.call(n,t[i],i,t));return r}var x=(k.prototype.reset=function(){this.chain_[0]=1732584193,this.chain_[1]=4023233417,this.chain_[2]=2562383102,this.chain_[3]=271733878,this.chain_[4]=3285377520,this.inbuf_=0,this.total_=0},k.prototype.compress_=function(t,e){e=e||0;var n=this.W_;if(\"string\"==typeof t)for(var r=0;r<16;r++)n[r]=t.charCodeAt(e)<<24|t.charCodeAt(e+1)<<16|t.charCodeAt(e+2)<<8|t.charCodeAt(e+3),e+=4;else for(r=0;r<16;r++)n[r]=t[e]<<24|t[e+1]<<16|t[e+2]<<8|t[e+3],e+=4;for(r=16;r<80;r++){var i=n[r-3]^n[r-8]^n[r-14]^n[r-16];n[r]=4294967295&(i<<1|i>>>31)}var o,s,a=this.chain_[0],h=this.chain_[1],l=this.chain_[2],u=this.chain_[3],c=this.chain_[4];for(r=0;r<80;r++)s=r<40?r<20?(o=u^h&(l^u),1518500249):(o=h^l^u,1859775393):r<60?(o=h&l|u&(h|l),2400959708):(o=h^l^u,3395469782),i=(a<<5|a>>>27)+o+c+s+n[r]&4294967295,c=u,u=l,l=4294967295&(h<<30|h>>>2),h=a,a=i;this.chain_[0]=this.chain_[0]+a&4294967295,this.chain_[1]=this.chain_[1]+h&4294967295,this.chain_[2]=this.chain_[2]+l&4294967295,this.chain_[3]=this.chain_[3]+u&4294967295,this.chain_[4]=this.chain_[4]+c&4294967295},k.prototype.update=function(t,e){if(null!=t){void 0===e&&(e=t.length);for(var n=e-this.blockSize,r=0,i=this.buf_,o=this.inbuf_;r<e;){if(0===o)for(;r<=n;)this.compress_(t,r),r+=this.blockSize;if(\"string\"==typeof t){for(;r<e;)if(i[o]=t.charCodeAt(r),++r,++o===this.blockSize){this.compress_(i),o=0;break}}else for(;r<e;)if(i[o]=t[r],++r,++o===this.blockSize){this.compress_(i),o=0;break}}this.inbuf_=o,this.total_+=e}},k.prototype.digest=function(){var t=[],e=8*this.total_;this.inbuf_<56?this.update(this.pad_,56-this.inbuf_):this.update(this.pad_,this.blockSize-(this.inbuf_-56));for(var n=this.blockSize-1;56<=n;n--)this.buf_[n]=255&e,e/=256;this.compress_(this.buf_);var r=0;for(n=0;n<5;n++)for(var i=24;0<=i;i-=8)t[r]=this.chain_[n]>>i&255,++r;return t},k);function k(){this.chain_=[],this.buf_=[],this.W_=[],this.pad_=[],this.inbuf_=0,this.total_=0,this.blockSize=64,this.pad_[0]=128;for(var t=1;t<this.blockSize;++t)this.pad_[t]=0;this.reset()}function F(t,e,n,r){var i;if(r<e?i=\"at least \"+e:n<r&&(i=0===n?\"none\":\"no more than \"+n),i)throw new Error(t+\" failed: Was called with \"+r+(1===r?\" argument.\":\" arguments.\")+\" Expects \"+i+\".\")}function A(t,e,n){var r=\"\";switch(e){case 1:r=n?\"first\":\"First\";break;case 2:r=n?\"second\":\"Second\";break;case 3:r=n?\"third\":\"Third\";break;case 4:r=n?\"fourth\":\"Fourth\";break;default:throw new Error(\"errorPrefix called with argumentNumber > 4.  Need to update it?\")}var i=t+\" failed: \";return i+=r+\" argument \"}function L(t,e,n,r){if((!r||n)&&\"function\"!=typeof n)throw new Error(A(t,e,r)+\"must be a valid function.\")}function M(t,e,n,r){if((!r||n)&&(\"object\"!=typeof n||null===n))throw new Error(A(t,e,r)+\"must be a valid context object.\")}function W(t){for(var e=0,n=0;n<t.length;n++){var r=t.charCodeAt(n);r<128?e++:r<2048?e+=2:55296<=r&&r<=56319?(e+=4,n++):e+=3}return e}var Q,q,U;function V(){for(var t=0,e=0,n=arguments.length;e<n;e++)t+=arguments[e].length;var r=Array(t),i=0;for(e=0;e<n;e++)for(var o=arguments[e],s=0,a=o.length;s<a;s++,i++)r[i]=o[s];return r}(U=q=q||{})[U.DEBUG=0]=\"DEBUG\",U[U.VERBOSE=1]=\"VERBOSE\",U[U.INFO=2]=\"INFO\",U[U.WARN=3]=\"WARN\",U[U.ERROR=4]=\"ERROR\",U[U.SILENT=5]=\"SILENT\";q.DEBUG,q.VERBOSE,q.INFO,q.WARN,q.ERROR,q.SILENT;function H(t,e){for(var n=[],r=2;r<arguments.length;r++)n[r-2]=arguments[r];if(!(e<t.logLevel)){var i=(new Date).toISOString(),o=j[e];if(!o)throw new Error(\"Attempted to log a message with an invalid logType (value: \"+e+\")\");console[o].apply(console,V([\"[\"+i+\"]  \"+t.name+\":\"],n))}}var B=q.INFO,j=((Q={})[q.DEBUG]=\"log\",Q[q.VERBOSE]=\"log\",Q[q.INFO]=\"info\",Q[q.WARN]=\"warn\",Q[q.ERROR]=\"error\",Q),Y=(Object.defineProperty(K.prototype,\"logLevel\",{get:function(){return this._logLevel},set:function(t){if(!(t in q))throw new TypeError(\"Invalid value assigned to `logLevel`\");this._logLevel=t},enumerable:!0,configurable:!0}),Object.defineProperty(K.prototype,\"logHandler\",{get:function(){return this._logHandler},set:function(t){if(\"function\"!=typeof t)throw new TypeError(\"Value assigned to `logHandler` must be a function\");this._logHandler=t},enumerable:!0,configurable:!0}),Object.defineProperty(K.prototype,\"userLogHandler\",{get:function(){return this._userLogHandler},set:function(t){this._userLogHandler=t},enumerable:!0,configurable:!0}),K.prototype.debug=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._userLogHandler&&this._userLogHandler.apply(this,V([this,q.DEBUG],t)),this._logHandler.apply(this,V([this,q.DEBUG],t))},K.prototype.log=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._userLogHandler&&this._userLogHandler.apply(this,V([this,q.VERBOSE],t)),this._logHandler.apply(this,V([this,q.VERBOSE],t))},K.prototype.info=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._userLogHandler&&this._userLogHandler.apply(this,V([this,q.INFO],t)),this._logHandler.apply(this,V([this,q.INFO],t))},K.prototype.warn=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._userLogHandler&&this._userLogHandler.apply(this,V([this,q.WARN],t)),this._logHandler.apply(this,V([this,q.WARN],t))},K.prototype.error=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._userLogHandler&&this._userLogHandler.apply(this,V([this,q.ERROR],t)),this._logHandler.apply(this,V([this,q.ERROR],t))},K);function K(t){this.name=t,this._logLevel=B,this._logHandler=H,this._userLogHandler=null}var z=(G.prototype.setInstantiationMode=function(t){return this.instantiationMode=t,this},G.prototype.setMultipleInstances=function(t){return this.multipleInstances=t,this},G.prototype.setServiceProps=function(t){return this.serviceProps=t,this},G);function G(t,e,n){this.name=t,this.instanceFactory=e,this.type=n,this.multipleInstances=!1,this.serviceProps={},this.instantiationMode=\"LAZY\"}var X=($.prototype.set=function(t,e){null==e?this.domStorage_.removeItem(this.prefixedName_(t)):this.domStorage_.setItem(this.prefixedName_(t),I(e))},$.prototype.get=function(t){var e=this.domStorage_.getItem(this.prefixedName_(t));return null==e?null:T(e)},$.prototype.remove=function(t){this.domStorage_.removeItem(this.prefixedName_(t))},$.prototype.prefixedName_=function(t){return this.prefix_+t},$.prototype.toString=function(){return this.domStorage_.toString()},$);function $(t){this.domStorage_=t,this.prefix_=\"firebase:\"}var J=(Z.prototype.set=function(t,e){null==e?delete this.cache_[t]:this.cache_[t]=e},Z.prototype.get=function(t){return R(this.cache_,t)?this.cache_[t]:null},Z.prototype.remove=function(t){delete this.cache_[t]},Z);function Z(){this.cache_={},this.isInMemoryStorage=!0}function tt(t){try{if(\"undefined\"!=typeof window&&void 0!==window[t]){var e=window[t];return e.setItem(\"firebase:sentinel\",\"cache\"),e.removeItem(\"firebase:sentinel\"),new X(e)}}catch(t){}return new J}function et(t){var e=function(t){for(var e=[],n=0,r=0;r<t.length;r++){var i=t.charCodeAt(r);if(55296<=i&&i<=56319){var o=i-55296;C(++r<t.length,\"Surrogate pair missing trail surrogate.\"),i=65536+(o<<10)+(t.charCodeAt(r)-56320)}i<128?e[n++]=i:(i<2048?e[n++]=i>>6|192:(i<65536?e[n++]=i>>12|224:(e[n++]=i>>18|240,e[n++]=i>>12&63|128),e[n++]=i>>6&63|128),e[n++]=63&i|128)}return e}(t),n=new x;n.update(e);var r=n.digest();return l.encodeByteArray(r)}function nt(t,e){C(!e||!0===t||!1===t,\"Can't turn on custom loggers persistently.\"),!0===t?(_t.logLevel=q.VERBOSE,gt=_t.log.bind(_t),e&&ft.set(\"logging_enabled\",!0)):\"function\"==typeof t?gt=t:(gt=null,ft.remove(\"logging_enabled\"))}function rt(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];if(!0===mt&&(mt=!1,null===gt&&!0===ft.get(\"logging_enabled\")&&nt(!0)),gt){var n=vt.apply(null,t);gt(n)}}function it(n){return function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];rt.apply(void 0,o([n],t))}}function ot(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=\"FIREBASE INTERNAL ERROR: \"+vt.apply(void 0,o(t));_t.error(n)}function st(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=\"FIREBASE FATAL ERROR: \"+vt.apply(void 0,o(t));throw _t.error(n),new Error(n)}function at(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=\"FIREBASE WARNING: \"+vt.apply(void 0,o(t));_t.warn(n)}function ht(t){return\"number\"==typeof t&&(t!=t||t===Number.POSITIVE_INFINITY||t===Number.NEGATIVE_INFINITY)}function lt(t,e){return t===e?0:t<e?-1:1}function ut(t,e){if(e&&t in e)return e[t];throw new Error(\"Missing required key (\"+t+\") in object: \"+I(e))}function ct(t,e){var n=t.length;if(n<=e)return[t];for(var r=[],i=0;i<n;i+=e)n<i+e?r.push(t.substring(i,n)):r.push(t.substring(i,i+e));return r}var pt,dt=tt(\"localStorage\"),ft=tt(\"sessionStorage\"),_t=new Y(\"@firebase/database\"),yt=(pt=1,function(){return pt++}),vt=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];for(var n=\"\",r=0;r<t.length;r++){var i=t[r];Array.isArray(i)||i&&\"object\"==typeof i&&\"number\"==typeof i.length?n+=vt.apply(null,i):n+=\"object\"==typeof i?I(i):i,n+=\" \"}return n},gt=null,mt=!0,Ct=\"[MIN_NAME]\",Et=\"[MAX_NAME]\",wt=function(t,e){if(t===e)return 0;if(t===Ct||e===Et)return-1;if(e===Ct||t===Et)return 1;var n=Pt(t),r=Pt(e);return null!==n?null!==r?n-r==0?t.length-e.length:n-r:-1:null===r&&t<e?-1:1},bt=function(t){if(\"object\"!=typeof t||null===t)return I(t);var e=[];for(var n in t)e.push(n);e.sort();for(var r=\"{\",i=0;i<e.length;i++)0!==i&&(r+=\",\"),r+=I(e[i]),r+=\":\",r+=bt(t[e[i]]);return r+=\"}\"};function St(t,e){for(var n in t)t.hasOwnProperty(n)&&e(n,t[n])}function Tt(t){var e,n,r,i,o;C(!ht(t),\"Invalid JSON number\"),0===t?e=1/t==-1/(r=n=0)?1:0:(e=t<0,r=(t=Math.abs(t))>=Math.pow(2,-1022)?(n=(i=Math.min(Math.floor(Math.log(t)/Math.LN2),1023))+1023,Math.round(t*Math.pow(2,52-i)-Math.pow(2,52))):(n=0,Math.round(t/Math.pow(2,-1074))));var s=[];for(o=52;o;--o)s.push(r%2?1:0),r=Math.floor(r/2);for(o=11;o;--o)s.push(n%2?1:0),n=Math.floor(n/2);s.push(e?1:0),s.reverse();var a=s.join(\"\"),h=\"\";for(o=0;o<64;o+=8){var l=parseInt(a.substr(o,8),2).toString(16);1===l.length&&(l=\"0\"+l),h+=l}return h.toLowerCase()}function It(t){try{t()}catch(e){setTimeout(function(){var t=e.stack||\"\";throw at(\"Exception was thrown by user callback.\",t),e},Math.floor(0))}}function Nt(t,e){var n=setTimeout(t,e);return\"object\"==typeof n&&n.unref&&n.unref(),n}var Rt=new RegExp(\"^-?(0*)\\\\d{1,10}$\"),Pt=function(t){if(Rt.test(t)){var e=Number(t);if(-2147483648<=e&&e<=2147483647)return e}return null},Dt=(Object.defineProperty(Ot,\"Empty\",{get:function(){return new Ot(\"\")},enumerable:!0,configurable:!0}),Ot.prototype.getFront=function(){return this.pieceNum_>=this.pieces_.length?null:this.pieces_[this.pieceNum_]},Ot.prototype.getLength=function(){return this.pieces_.length-this.pieceNum_},Ot.prototype.popFront=function(){var t=this.pieceNum_;return t<this.pieces_.length&&t++,new Ot(this.pieces_,t)},Ot.prototype.getBack=function(){return this.pieceNum_<this.pieces_.length?this.pieces_[this.pieces_.length-1]:null},Ot.prototype.toString=function(){for(var t=\"\",e=this.pieceNum_;e<this.pieces_.length;e++)\"\"!==this.pieces_[e]&&(t+=\"/\"+this.pieces_[e]);return t||\"/\"},Ot.prototype.toUrlEncodedString=function(){for(var t=\"\",e=this.pieceNum_;e<this.pieces_.length;e++)\"\"!==this.pieces_[e]&&(t+=\"/\"+encodeURIComponent(String(this.pieces_[e])));return t||\"/\"},Ot.prototype.slice=function(t){return void 0===t&&(t=0),this.pieces_.slice(this.pieceNum_+t)},Ot.prototype.parent=function(){if(this.pieceNum_>=this.pieces_.length)return null;for(var t=[],e=this.pieceNum_;e<this.pieces_.length-1;e++)t.push(this.pieces_[e]);return new Ot(t,0)},Ot.prototype.child=function(t){for(var e=[],n=this.pieceNum_;n<this.pieces_.length;n++)e.push(this.pieces_[n]);if(t instanceof Ot)for(n=t.pieceNum_;n<t.pieces_.length;n++)e.push(t.pieces_[n]);else{var r=t.split(\"/\");for(n=0;n<r.length;n++)0<r[n].length&&e.push(r[n])}return new Ot(e,0)},Ot.prototype.isEmpty=function(){return this.pieceNum_>=this.pieces_.length},Ot.relativePath=function(t,e){var n=t.getFront(),r=e.getFront();if(null===n)return e;if(n===r)return Ot.relativePath(t.popFront(),e.popFront());throw new Error(\"INTERNAL ERROR: innerPath (\"+e+\") is not within outerPath (\"+t+\")\")},Ot.comparePaths=function(t,e){for(var n=t.slice(),r=e.slice(),i=0;i<n.length&&i<r.length;i++){var o=wt(n[i],r[i]);if(0!==o)return o}return n.length===r.length?0:n.length<r.length?-1:1},Ot.prototype.equals=function(t){if(this.getLength()!==t.getLength())return!1;for(var e=this.pieceNum_,n=t.pieceNum_;e<=this.pieces_.length;e++,n++)if(this.pieces_[e]!==t.pieces_[n])return!1;return!0},Ot.prototype.contains=function(t){var e=this.pieceNum_,n=t.pieceNum_;if(this.getLength()>t.getLength())return!1;for(;e<this.pieces_.length;){if(this.pieces_[e]!==t.pieces_[n])return!1;++e,++n}return!0},Ot);function Ot(t,e){if(void 0===e){this.pieces_=t.split(\"/\");for(var n=0,r=0;r<this.pieces_.length;r++)0<this.pieces_[r].length&&(this.pieces_[n]=this.pieces_[r],n++);this.pieces_.length=n,this.pieceNum_=0}else this.pieces_=t,this.pieceNum_=e}var xt=(Object.defineProperty(kt,\"MAX_PATH_DEPTH\",{get:function(){return 32},enumerable:!0,configurable:!0}),Object.defineProperty(kt,\"MAX_PATH_LENGTH_BYTES\",{get:function(){return 768},enumerable:!0,configurable:!0}),kt.prototype.push=function(t){0<this.parts_.length&&(this.byteLength_+=1),this.parts_.push(t),this.byteLength_+=W(t),this.checkValid_()},kt.prototype.pop=function(){var t=this.parts_.pop();this.byteLength_-=W(t),0<this.parts_.length&&--this.byteLength_},kt.prototype.checkValid_=function(){if(this.byteLength_>kt.MAX_PATH_LENGTH_BYTES)throw new Error(this.errorPrefix_+\"has a key path longer than \"+kt.MAX_PATH_LENGTH_BYTES+\" bytes (\"+this.byteLength_+\").\");if(this.parts_.length>kt.MAX_PATH_DEPTH)throw new Error(this.errorPrefix_+\"path specified exceeds the maximum depth that can be written (\"+kt.MAX_PATH_DEPTH+\") or object contains a cycle \"+this.toErrorString())},kt.prototype.toErrorString=function(){return 0===this.parts_.length?\"\":\"in property '\"+this.parts_.join(\".\")+\"'\"},kt);function kt(t,e){this.errorPrefix_=e,this.parts_=t.slice(),this.byteLength_=Math.max(1,this.parts_.length);for(var n=0;n<this.parts_.length;n++)this.byteLength_+=W(this.parts_[n]);this.checkValid_()}var Ft=\"firebaseio.com\",At=\"websocket\",Lt=\"long_polling\",Mt=(Wt.prototype.needsQueryParam=function(){return this.host!==this.internalHost||this.isCustomHost()||this.includeNamespaceInQueryParams},Wt.prototype.isCacheableHost=function(){return\"s-\"===this.internalHost.substr(0,2)},Wt.prototype.isDemoHost=function(){return\"firebaseio-demo.com\"===this.domain},Wt.prototype.isCustomHost=function(){return\"firebaseio.com\"!==this.domain&&\"firebaseio-demo.com\"!==this.domain},Wt.prototype.updateHost=function(t){t!==this.internalHost&&(this.internalHost=t,this.isCacheableHost()&&dt.set(\"host:\"+this.host,this.internalHost))},Wt.prototype.connectionURL=function(t,e){var n;if(C(\"string\"==typeof t,\"typeof type must == string\"),C(\"object\"==typeof e,\"typeof params must == object\"),t===At)n=(this.secure?\"wss://\":\"ws://\")+this.internalHost+\"/.ws?\";else{if(t!==Lt)throw new Error(\"Unknown connection type: \"+t);n=(this.secure?\"https://\":\"http://\")+this.internalHost+\"/.lp?\"}this.needsQueryParam()&&(e.ns=this.namespace);var r=[];return St(e,function(t,e){r.push(t+\"=\"+e)}),n+r.join(\"&\")},Wt.prototype.toString=function(){var t=this.toURLString();return this.persistenceKey&&(t+=\"<\"+this.persistenceKey+\">\"),t},Wt.prototype.toURLString=function(){return(this.secure?\"https://\":\"http://\")+this.host},Wt);function Wt(t,e,n,r,i,o){void 0===i&&(i=\"\"),void 0===o&&(o=!1),this.secure=e,this.namespace=n,this.webSocketOnly=r,this.persistenceKey=i,this.includeNamespaceInQueryParams=o,this.host=t.toLowerCase(),this.domain=this.host.substr(this.host.indexOf(\".\")+1),this.internalHost=dt.get(\"host:\"+t)||this.host}function Qt(t){var e=$t(t),n=e.namespace;\"firebase.com\"===e.domain&&st(e.host+\" is no longer supported. Please use <YOUR FIREBASE>.firebaseio.com instead\"),n&&\"undefined\"!==n||\"localhost\"===e.domain||st(\"Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com\"),e.secure||\"undefined\"!=typeof window&&window.location&&window.location.protocol&&-1!==window.location.protocol.indexOf(\"https:\")&&at(\"Insecure Firebase access from a secure page. Please use https in calls to new Firebase().\");var r=\"ws\"===e.scheme||\"wss\"===e.scheme;return{repoInfo:new Mt(e.host,e.secure,n,r,\"\",n!==e.subdomain),path:new Dt(e.pathString)}}function qt(t){return\"string\"==typeof t&&0!==t.length&&!Jt.test(t)}function Ut(t){return\"string\"==typeof t&&0!==t.length&&!Zt.test(t)}function Vt(t){return null===t||\"string\"==typeof t||\"number\"==typeof t&&!ht(t)||t&&\"object\"==typeof t&&R(t,\".sv\")}function Ht(t,e,n,r,i){i&&void 0===n||ee(A(t,e,i),n,r)}function Bt(t,e,n,r,i){if(!i||void 0!==n){var o=A(t,e,i);if(!n||\"object\"!=typeof n||Array.isArray(n))throw new Error(o+\" must be an object containing the children to replace.\");var s=[];St(n,function(t,e){var n=new Dt(t);if(ee(o,e,r.child(n)),\".priority\"===n.getBack()&&!Vt(e))throw new Error(o+\"contains an invalid value for '\"+n.toString()+\"', which must be a valid Firebase priority (a string, finite number, server value, or null).\");s.push(n)}),function(t,e){var n,r;for(n=0;n<e.length;n++)for(var i=(r=e[n]).slice(),o=0;o<i.length;o++)if((\".priority\"!==i[o]||o!==i.length-1)&&!qt(i[o]))throw new Error(t+\"contains an invalid key (\"+i[o]+\") in path \"+r.toString()+'. Keys must be non-empty strings and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');e.sort(Dt.comparePaths);var s=null;for(n=0;n<e.length;n++){if(r=e[n],null!==s&&s.contains(r))throw new Error(t+\"contains a path \"+s.toString()+\" that is ancestor of another path \"+r.toString());s=r}}(o,s)}}function jt(t,e,n,r){if(!r||void 0!==n){if(ht(n))throw new Error(A(t,e,r)+\"is \"+n.toString()+\", but must be a valid Firebase priority (a string, finite number, server value, or null).\");if(!Vt(n))throw new Error(A(t,e,r)+\"must be a valid Firebase priority (a string, finite number, server value, or null).\")}}function Yt(t,e,n,r){if(!r||void 0!==n)switch(n){case\"value\":case\"child_added\":case\"child_removed\":case\"child_changed\":case\"child_moved\":break;default:throw new Error(A(t,e,r)+'must be a valid event type = \"value\", \"child_added\", \"child_removed\", \"child_changed\", or \"child_moved\".')}}function Kt(t,e,n,r){if(!(r&&void 0===n||qt(n)))throw new Error(A(t,e,r)+'was an invalid key = \"'+n+'\".  Firebase keys must be non-empty strings and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").')}function zt(t,e,n,r){if(!(r&&void 0===n||Ut(n)))throw new Error(A(t,e,r)+'was an invalid path = \"'+n+'\". Paths must be non-empty strings and can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"')}function Gt(t,e){if(\".info\"===e.getFront())throw new Error(t+\" failed = Can't modify data under /.info/\")}function Xt(t,e,n){var r,i=n.path.toString();if(\"string\"!=typeof n.repoInfo.host||0===n.repoInfo.host.length||!qt(n.repoInfo.namespace)&&\"localhost\"!==n.repoInfo.host.split(\":\")[0]||0!==i.length&&(r=(r=i)&&r.replace(/^\\/*\\.info(\\/|$)/,\"/\"),!Ut(r)))throw new Error(A(t,e,!1)+'must be a valid firebase URL and the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".')}var $t=function(t){var e=\"\",n=\"\",r=\"\",i=\"\",o=\"\",s=!0,a=\"https\",h=443;if(\"string\"==typeof t){var l=t.indexOf(\"//\");0<=l&&(a=t.substring(0,l-1),t=t.substring(l+2));var u=t.indexOf(\"/\");-1===u&&(u=t.length);var c=t.indexOf(\"?\");-1===c&&(c=t.length),e=t.substring(0,Math.min(u,c)),u<c&&(i=function(t){for(var e=\"\",n=t.split(\"/\"),r=0;r<n.length;r++)if(0<n[r].length){var i=n[r];try{i=decodeURIComponent(i.replace(/\\+/g,\" \"))}catch(t){}e+=\"/\"+i}return e}(t.substring(u,c)));var p=function(t){var e,n,r={};\"?\"===t.charAt(0)&&(t=t.substring(1));try{for(var i=_(t.split(\"&\")),o=i.next();!o.done;o=i.next()){var s=o.value;if(0!==s.length){var a=s.split(\"=\");2===a.length?r[decodeURIComponent(a[0])]=decodeURIComponent(a[1]):at(\"Invalid query segment '\"+s+\"' in query '\"+t+\"'\")}}}catch(t){e={error:t}}finally{try{o&&!o.done&&(n=i.return)&&n.call(i)}finally{if(e)throw e.error}}return r}(t.substring(Math.min(t.length,c)));0<=(l=e.indexOf(\":\"))?(s=\"https\"===a||\"wss\"===a,h=parseInt(e.substring(l+1),10)):l=e.length;var d=e.slice(0,l);if(\"localhost\"===d.toLowerCase())n=\"localhost\";else if(d.split(\".\").length<=2)n=d;else{var f=e.indexOf(\".\");r=e.substring(0,f).toLowerCase(),n=e.substring(f+1),o=r}\"ns\"in p&&(o=p.ns)}return{host:e,port:h,domain:n,subdomain:r,secure:s,scheme:a,pathString:i,namespace:o}},Jt=/[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/,Zt=/[\\[\\].#$\\u0000-\\u001F\\u007F]/,te=10485760,ee=function(n,t,e){var r=e instanceof Dt?new xt(e,n):e;if(void 0===t)throw new Error(n+\"contains undefined \"+r.toErrorString());if(\"function\"==typeof t)throw new Error(n+\"contains a function \"+r.toErrorString()+\" with contents = \"+t.toString());if(ht(t))throw new Error(n+\"contains \"+t.toString()+\" \"+r.toErrorString());if(\"string\"==typeof t&&t.length>te/3&&W(t)>te)throw new Error(n+\"contains a string greater than \"+te+\" utf8 bytes \"+r.toErrorString()+\" ('\"+t.substring(0,50)+\"...')\");if(t&&\"object\"==typeof t){var i=!1,o=!1;if(St(t,function(t,e){if(\".value\"===t)i=!0;else if(\".priority\"!==t&&\".sv\"!==t&&(o=!0,!qt(t)))throw new Error(n+\" contains an invalid key (\"+t+\") \"+r.toErrorString()+'.  Keys must be non-empty strings and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');r.push(t),ee(n,e,r),r.pop()}),i&&o)throw new Error(n+' contains \".value\" child '+r.toErrorString()+\" in addition to actual children.\")}},ne=(re.prototype.cancel=function(t){F(\"OnDisconnect.cancel\",0,1,arguments.length),L(\"OnDisconnect.cancel\",1,t,!0);var e=new p;return this.repo_.onDisconnectCancel(this.path_,e.wrapCallback(t)),e.promise},re.prototype.remove=function(t){F(\"OnDisconnect.remove\",0,1,arguments.length),Gt(\"OnDisconnect.remove\",this.path_),L(\"OnDisconnect.remove\",1,t,!0);var e=new p;return this.repo_.onDisconnectSet(this.path_,null,e.wrapCallback(t)),e.promise},re.prototype.set=function(t,e){F(\"OnDisconnect.set\",1,2,arguments.length),Gt(\"OnDisconnect.set\",this.path_),Ht(\"OnDisconnect.set\",1,t,this.path_,!1),L(\"OnDisconnect.set\",2,e,!0);var n=new p;return this.repo_.onDisconnectSet(this.path_,t,n.wrapCallback(e)),n.promise},re.prototype.setWithPriority=function(t,e,n){F(\"OnDisconnect.setWithPriority\",2,3,arguments.length),Gt(\"OnDisconnect.setWithPriority\",this.path_),Ht(\"OnDisconnect.setWithPriority\",1,t,this.path_,!1),jt(\"OnDisconnect.setWithPriority\",2,e,!1),L(\"OnDisconnect.setWithPriority\",3,n,!0);var r=new p;return this.repo_.onDisconnectSetWithPriority(this.path_,t,e,r.wrapCallback(n)),r.promise},re.prototype.update=function(t,e){if(F(\"OnDisconnect.update\",1,2,arguments.length),Gt(\"OnDisconnect.update\",this.path_),Array.isArray(t)){for(var n={},r=0;r<t.length;++r)n[\"\"+r]=t[r];t=n,at(\"Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the existing data, or an Object with integer keys if you really do want to only update some of the children.\")}Bt(\"OnDisconnect.update\",1,t,this.path_,!1),L(\"OnDisconnect.update\",2,e,!0);var i=new p;return this.repo_.onDisconnectUpdate(this.path_,t,i.wrapCallback(e)),i.promise},re);function re(t,e){this.repo_=t,this.path_=e}var ie=(oe.prototype.toJSON=function(){return F(\"TransactionResult.toJSON\",0,1,arguments.length),{committed:this.committed,snapshot:this.snapshot.toJSON()}},oe);function oe(t,e){this.committed=t,this.snapshot=e}var se,ae,he,le=(se=\"-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz\",ae=0,he=[],function(t){var e,n=t===ae;ae=t;var r=new Array(8);for(e=7;0<=e;e--)r[e]=se.charAt(t%64),t=Math.floor(t/64);C(0===t,\"Cannot push at time == 0\");var i=r.join(\"\");if(n){for(e=11;0<=e&&63===he[e];e--)he[e]=0;he[e]++}else for(e=0;e<12;e++)he[e]=Math.floor(64*Math.random());for(e=0;e<12;e++)i+=se.charAt(he[e]);return C(20===i.length,\"nextPushId: Length should be 20.\"),i}),ue=(ce.Wrap=function(t,e){return new ce(t,e)},ce);function ce(t,e){this.name=t,this.node=e}var pe,de=(fe.prototype.getCompare=function(){return this.compare.bind(this)},fe.prototype.indexedValueChanged=function(t,e){var n=new ue(Ct,t),r=new ue(Ct,e);return 0!==this.compare(n,r)},fe.prototype.minPost=function(){return ue.MIN},fe);function fe(){}var _e,ye=(t(ve,_e=de),Object.defineProperty(ve,\"__EMPTY_NODE\",{get:function(){return pe},set:function(t){pe=t},enumerable:!0,configurable:!0}),ve.prototype.compare=function(t,e){return wt(t.name,e.name)},ve.prototype.isDefinedOn=function(t){throw c(\"KeyIndex.isDefinedOn not expected to be called.\")},ve.prototype.indexedValueChanged=function(t,e){return!1},ve.prototype.minPost=function(){return ue.MIN},ve.prototype.maxPost=function(){return new ue(Et,pe)},ve.prototype.makePost=function(t,e){return C(\"string\"==typeof t,\"KeyIndex indexValue must always be a string.\"),new ue(t,pe)},ve.prototype.toString=function(){return\".key\"},ve);function ve(){return null!==_e&&_e.apply(this,arguments)||this}var ge,me=new ye;function Ce(t){return\"number\"==typeof t?\"number:\"+Tt(t):\"string:\"+t}function Ee(t){if(t.isLeafNode()){var e=t.val();C(\"string\"==typeof e||\"number\"==typeof e||\"object\"==typeof e&&R(e,\".sv\"),\"Priority must be a string or number.\")}else C(t===ge||t.isEmpty(),\"priority of unexpected type.\");C(t===ge||t.getPriority().isEmpty(),\"Priority nodes can't have a priority of their own.\")}var we,be,Se,Te,Ie=(Object.defineProperty(Ne,\"__childrenNodeConstructor\",{get:function(){return we},set:function(t){we=t},enumerable:!0,configurable:!0}),Ne.prototype.isLeafNode=function(){return!0},Ne.prototype.getPriority=function(){return this.priorityNode_},Ne.prototype.updatePriority=function(t){return new Ne(this.value_,t)},Ne.prototype.getImmediateChild=function(t){return\".priority\"===t?this.priorityNode_:Ne.__childrenNodeConstructor.EMPTY_NODE},Ne.prototype.getChild=function(t){return t.isEmpty()?this:\".priority\"===t.getFront()?this.priorityNode_:Ne.__childrenNodeConstructor.EMPTY_NODE},Ne.prototype.hasChild=function(){return!1},Ne.prototype.getPredecessorChildName=function(t,e){return null},Ne.prototype.updateImmediateChild=function(t,e){return\".priority\"===t?this.updatePriority(e):e.isEmpty()&&\".priority\"!==t?this:Ne.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(t,e).updatePriority(this.priorityNode_)},Ne.prototype.updateChild=function(t,e){var n=t.getFront();return null===n?e:e.isEmpty()&&\".priority\"!==n?this:(C(\".priority\"!==n||1===t.getLength(),\".priority must be the last token in a path\"),this.updateImmediateChild(n,Ne.__childrenNodeConstructor.EMPTY_NODE.updateChild(t.popFront(),e)))},Ne.prototype.isEmpty=function(){return!1},Ne.prototype.numChildren=function(){return 0},Ne.prototype.forEachChild=function(t,e){return!1},Ne.prototype.val=function(t){return t&&!this.getPriority().isEmpty()?{\".value\":this.getValue(),\".priority\":this.getPriority().val()}:this.getValue()},Ne.prototype.hash=function(){if(null===this.lazyHash_){var t=\"\";this.priorityNode_.isEmpty()||(t+=\"priority:\"+Ce(this.priorityNode_.val())+\":\");var e=typeof this.value_;t+=e+\":\",t+=\"number\"==e?Tt(this.value_):this.value_,this.lazyHash_=et(t)}return this.lazyHash_},Ne.prototype.getValue=function(){return this.value_},Ne.prototype.compareTo=function(t){return t===Ne.__childrenNodeConstructor.EMPTY_NODE?1:t instanceof Ne.__childrenNodeConstructor?-1:(C(t.isLeafNode(),\"Unknown node type\"),this.compareToLeafNode_(t))},Ne.prototype.compareToLeafNode_=function(t){var e=typeof t.value_,n=typeof this.value_,r=Ne.VALUE_TYPE_ORDER.indexOf(e),i=Ne.VALUE_TYPE_ORDER.indexOf(n);return C(0<=r,\"Unknown leaf type: \"+e),C(0<=i,\"Unknown leaf type: \"+n),r===i?\"object\"==n?0:this.value_<t.value_?-1:this.value_===t.value_?0:1:i-r},Ne.prototype.withIndex=function(){return this},Ne.prototype.isIndexed=function(){return!0},Ne.prototype.equals=function(t){return t===this||!!t.isLeafNode()&&(this.value_===t.value_&&this.priorityNode_.equals(t.priorityNode_))},Ne.VALUE_TYPE_ORDER=[\"object\",\"boolean\",\"number\",\"string\"],Ne);function Ne(t,e){void 0===e&&(e=Ne.__childrenNodeConstructor.EMPTY_NODE),this.value_=t,this.priorityNode_=e,this.lazyHash_=null,C(void 0!==this.value_&&null!==this.value_,\"LeafNode shouldn't be created with null/undefined value.\"),Ee(this.priorityNode_)}function Re(){return null!==Te&&Te.apply(this,arguments)||this}var Pe=new(t(Re,Te=de),Re.prototype.compare=function(t,e){var n=t.node.getPriority(),r=e.node.getPriority(),i=n.compareTo(r);return 0===i?wt(t.name,e.name):i},Re.prototype.isDefinedOn=function(t){return!t.getPriority().isEmpty()},Re.prototype.indexedValueChanged=function(t,e){return!t.getPriority().equals(e.getPriority())},Re.prototype.minPost=function(){return ue.MIN},Re.prototype.maxPost=function(){return new ue(Et,new Ie(\"[PRIORITY-POST]\",Se))},Re.prototype.makePost=function(t,e){var n=be(t);return new ue(e,new Ie(\"[PRIORITY-POST]\",n))},Re.prototype.toString=function(){return\".priority\"},Re),De=(Oe.prototype.getNext=function(){if(0===this.nodeStack_.length)return null;var t,e=this.nodeStack_.pop();if(t=this.resultGenerator_?this.resultGenerator_(e.key,e.value):{key:e.key,value:e.value},this.isReverse_)for(e=e.left;!e.isEmpty();)this.nodeStack_.push(e),e=e.right;else for(e=e.right;!e.isEmpty();)this.nodeStack_.push(e),e=e.left;return t},Oe.prototype.hasNext=function(){return 0<this.nodeStack_.length},Oe.prototype.peek=function(){if(0===this.nodeStack_.length)return null;var t=this.nodeStack_[this.nodeStack_.length-1];return this.resultGenerator_?this.resultGenerator_(t.key,t.value):{key:t.key,value:t.value}},Oe);function Oe(t,e,n,r,i){void 0===i&&(i=null),this.isReverse_=r,this.resultGenerator_=i,this.nodeStack_=[];for(var o=1;!t.isEmpty();)if(t=t,o=e?n(t.key,e):1,r&&(o*=-1),o<0)t=this.isReverse_?t.left:t.right;else{if(0===o){this.nodeStack_.push(t);break}this.nodeStack_.push(t),t=this.isReverse_?t.right:t.left}}var xe=(ke.prototype.copy=function(t,e,n,r,i){return new ke(null!=t?t:this.key,null!=e?e:this.value,null!=n?n:this.color,null!=r?r:this.left,null!=i?i:this.right)},ke.prototype.count=function(){return this.left.count()+1+this.right.count()},ke.prototype.isEmpty=function(){return!1},ke.prototype.inorderTraversal=function(t){return this.left.inorderTraversal(t)||!!t(this.key,this.value)||this.right.inorderTraversal(t)},ke.prototype.reverseTraversal=function(t){return this.right.reverseTraversal(t)||t(this.key,this.value)||this.left.reverseTraversal(t)},ke.prototype.min_=function(){return this.left.isEmpty()?this:this.left.min_()},ke.prototype.minKey=function(){return this.min_().key},ke.prototype.maxKey=function(){return this.right.isEmpty()?this.key:this.right.maxKey()},ke.prototype.insert=function(t,e,n){var r=this,i=n(t,r.key);return(r=i<0?r.copy(null,null,null,r.left.insert(t,e,n),null):0===i?r.copy(null,e,null,null,null):r.copy(null,null,null,null,r.right.insert(t,e,n))).fixUp_()},ke.prototype.removeMin_=function(){if(this.left.isEmpty())return Le.EMPTY_NODE;var t=this;return t.left.isRed_()||t.left.left.isRed_()||(t=t.moveRedLeft_()),(t=t.copy(null,null,null,t.left.removeMin_(),null)).fixUp_()},ke.prototype.remove=function(t,e){var n,r;if(e(t,(n=this).key)<0)n.left.isEmpty()||n.left.isRed_()||n.left.left.isRed_()||(n=n.moveRedLeft_()),n=n.copy(null,null,null,n.left.remove(t,e),null);else{if(n.left.isRed_()&&(n=n.rotateRight_()),n.right.isEmpty()||n.right.isRed_()||n.right.left.isRed_()||(n=n.moveRedRight_()),0===e(t,n.key)){if(n.right.isEmpty())return Le.EMPTY_NODE;r=n.right.min_(),n=n.copy(r.key,r.value,null,null,n.right.removeMin_())}n=n.copy(null,null,null,null,n.right.remove(t,e))}return n.fixUp_()},ke.prototype.isRed_=function(){return this.color},ke.prototype.fixUp_=function(){var t=this;return t.right.isRed_()&&!t.left.isRed_()&&(t=t.rotateLeft_()),t.left.isRed_()&&t.left.left.isRed_()&&(t=t.rotateRight_()),t.left.isRed_()&&t.right.isRed_()&&(t=t.colorFlip_()),t},ke.prototype.moveRedLeft_=function(){var t=this.colorFlip_();return t.right.left.isRed_()&&(t=(t=(t=t.copy(null,null,null,null,t.right.rotateRight_())).rotateLeft_()).colorFlip_()),t},ke.prototype.moveRedRight_=function(){var t=this.colorFlip_();return t.left.left.isRed_()&&(t=(t=t.rotateRight_()).colorFlip_()),t},ke.prototype.rotateLeft_=function(){var t=this.copy(null,null,ke.RED,null,this.right.left);return this.right.copy(null,null,this.color,t,null)},ke.prototype.rotateRight_=function(){var t=this.copy(null,null,ke.RED,this.left.right,null);return this.left.copy(null,null,this.color,null,t)},ke.prototype.colorFlip_=function(){var t=this.left.copy(null,null,!this.left.color,null,null),e=this.right.copy(null,null,!this.right.color,null,null);return this.copy(null,null,!this.color,t,e)},ke.prototype.checkMaxDepth_=function(){var t=this.check_();return Math.pow(2,t)<=this.count()+1},ke.prototype.check_=function(){if(this.isRed_()&&this.left.isRed_())throw new Error(\"Red node has red child(\"+this.key+\",\"+this.value+\")\");if(this.right.isRed_())throw new Error(\"Right child of (\"+this.key+\",\"+this.value+\") is red\");var t=this.left.check_();if(t!==this.right.check_())throw new Error(\"Black depths differ\");return t+(this.isRed_()?0:1)},ke.RED=!0,ke.BLACK=!1,ke);function ke(t,e,n,r,i){this.key=t,this.value=e,this.color=null!=n?n:ke.RED,this.left=null!=r?r:Le.EMPTY_NODE,this.right=null!=i?i:Le.EMPTY_NODE}var Fe=(Ae.prototype.copy=function(t,e,n,r,i){return this},Ae.prototype.insert=function(t,e,n){return new xe(t,e,null)},Ae.prototype.remove=function(t,e){return this},Ae.prototype.count=function(){return 0},Ae.prototype.isEmpty=function(){return!0},Ae.prototype.inorderTraversal=function(t){return!1},Ae.prototype.reverseTraversal=function(t){return!1},Ae.prototype.minKey=function(){return null},Ae.prototype.maxKey=function(){return null},Ae.prototype.check_=function(){return 0},Ae.prototype.isRed_=function(){return!1},Ae);function Ae(){}var Le=(Me.prototype.insert=function(t,e){return new Me(this.comparator_,this.root_.insert(t,e,this.comparator_).copy(null,null,xe.BLACK,null,null))},Me.prototype.remove=function(t){return new Me(this.comparator_,this.root_.remove(t,this.comparator_).copy(null,null,xe.BLACK,null,null))},Me.prototype.get=function(t){for(var e,n=this.root_;!n.isEmpty();){if(0===(e=this.comparator_(t,n.key)))return n.value;e<0?n=n.left:0<e&&(n=n.right)}return null},Me.prototype.getPredecessorKey=function(t){for(var e,n=this.root_,r=null;!n.isEmpty();){if(0===(e=this.comparator_(t,n.key))){if(n.left.isEmpty())return r?r.key:null;for(n=n.left;!n.right.isEmpty();)n=n.right;return n.key}e<0?n=n.left:0<e&&(n=(r=n).right)}throw new Error(\"Attempted to find predecessor key for a nonexistent key.  What gives?\")},Me.prototype.isEmpty=function(){return this.root_.isEmpty()},Me.prototype.count=function(){return this.root_.count()},Me.prototype.minKey=function(){return this.root_.minKey()},Me.prototype.maxKey=function(){return this.root_.maxKey()},Me.prototype.inorderTraversal=function(t){return this.root_.inorderTraversal(t)},Me.prototype.reverseTraversal=function(t){return this.root_.reverseTraversal(t)},Me.prototype.getIterator=function(t){return new De(this.root_,null,this.comparator_,!1,t)},Me.prototype.getIteratorFrom=function(t,e){return new De(this.root_,t,this.comparator_,!1,e)},Me.prototype.getReverseIteratorFrom=function(t,e){return new De(this.root_,t,this.comparator_,!0,e)},Me.prototype.getReverseIterator=function(t){return new De(this.root_,null,this.comparator_,!0,t)},Me.EMPTY_NODE=new Fe,Me);function Me(t,e){void 0===e&&(e=Me.EMPTY_NODE),this.comparator_=t,this.root_=e}var We=Math.log(2),Qe=(qe.prototype.nextBitIsOne=function(){var t=!(this.bits_&1<<this.current_);return this.current_--,t},qe);function qe(t){var e;this.count=(e=t+1,parseInt(Math.log(e)/We,10)),this.current_=this.count-1;var n,r=(n=this.count,parseInt(Array(n+1).join(\"1\"),2));this.bits_=t+1&r}var Ue,Ve,He=function(l,t,u,e){l.sort(t);var c=function(t,e){var n,r,i=e-t;if(0==i)return null;if(1==i)return n=l[t],r=u?u(n):n,new xe(r,n.node,xe.BLACK,null,null);var o=parseInt(i/2,10)+t,s=c(t,o),a=c(o+1,e);return n=l[o],r=u?u(n):n,new xe(r,n.node,xe.BLACK,s,a)},n=function(t){for(var e=null,n=null,a=l.length,r=function(t,e){var n=a-t,r=a;a-=t;var i=c(1+n,r),o=l[n],s=u?u(o):o;h(new xe(s,o.node,e,null,i))},h=function(t){e=e?e.left=t:n=t},i=0;i<t.count;++i){var o=t.nextBitIsOne(),s=Math.pow(2,t.count-(i+1));o?r(s,xe.BLACK):(r(s,xe.BLACK),r(s,xe.RED))}return n}(new Qe(l.length));return new Le(e||t,n)},Be={},je=(Object.defineProperty(Ye,\"Default\",{get:function(){return C(Pe,\"ChildrenNode.ts has not been loaded\"),Ue=Ue||new Ye({\".priority\":Be},{\".priority\":Pe})},enumerable:!0,configurable:!0}),Ye.prototype.get=function(t){var e=P(this.indexes_,t);if(!e)throw new Error(\"No index defined for \"+t);return e instanceof Le?e:null},Ye.prototype.hasIndex=function(t){return R(this.indexSet_,t.toString())},Ye.prototype.addIndex=function(t,e){C(t!==me,\"KeyIndex always exists and isn't meant to be added to the IndexMap.\");for(var n,r=[],i=!1,o=e.getIterator(ue.Wrap),s=o.getNext();s;)i=i||t.isDefinedOn(s.node),r.push(s),s=o.getNext();n=i?He(r,t.getCompare()):Be;var a=t.toString(),h=u({},this.indexSet_);h[a]=t;var l=u({},this.indexes_);return l[a]=n,new Ye(l,h)},Ye.prototype.addToIndexes=function(h,l){var u=this;return new Ye(O(this.indexes_,function(t,e){var n=P(u.indexSet_,e);if(C(n,\"Missing index implementation for \"+e),t===Be){if(n.isDefinedOn(h.node)){for(var r=[],i=l.getIterator(ue.Wrap),o=i.getNext();o;)o.name!==h.name&&r.push(o),o=i.getNext();return r.push(h),He(r,n.getCompare())}return Be}var s=l.get(h.name),a=t;return s&&(a=a.remove(new ue(h.name,s))),a.insert(h,h.node)}),this.indexSet_)},Ye.prototype.removeFromIndexes=function(n,r){return new Ye(O(this.indexes_,function(t){if(t===Be)return t;var e=r.get(n.name);return e?t.remove(new ue(n.name,e)):t}),this.indexSet_)},Ye);function Ye(t,e){this.indexes_=t,this.indexSet_=e}function Ke(t,e){return wt(t.name,e.name)}function ze(t,e){return wt(t,e)}var Ge,Xe=(Object.defineProperty($e,\"EMPTY_NODE\",{get:function(){return Ve=Ve||new $e(new Le(ze),null,je.Default)},enumerable:!0,configurable:!0}),$e.prototype.isLeafNode=function(){return!1},$e.prototype.getPriority=function(){return this.priorityNode_||Ve},$e.prototype.updatePriority=function(t){return this.children_.isEmpty()?this:new $e(this.children_,t,this.indexMap_)},$e.prototype.getImmediateChild=function(t){if(\".priority\"===t)return this.getPriority();var e=this.children_.get(t);return null===e?Ve:e},$e.prototype.getChild=function(t){var e=t.getFront();return null===e?this:this.getImmediateChild(e).getChild(t.popFront())},$e.prototype.hasChild=function(t){return null!==this.children_.get(t)},$e.prototype.updateImmediateChild=function(t,e){if(C(e,\"We should always be passing snapshot nodes\"),\".priority\"===t)return this.updatePriority(e);var n=new ue(t,e),r=void 0,i=void 0;i=e.isEmpty()?(r=this.children_.remove(t),this.indexMap_.removeFromIndexes(n,this.children_)):(r=this.children_.insert(t,e),this.indexMap_.addToIndexes(n,this.children_));var o=r.isEmpty()?Ve:this.priorityNode_;return new $e(r,o,i)},$e.prototype.updateChild=function(t,e){var n=t.getFront();if(null===n)return e;C(\".priority\"!==t.getFront()||1===t.getLength(),\".priority must be the last token in a path\");var r=this.getImmediateChild(n).updateChild(t.popFront(),e);return this.updateImmediateChild(n,r)},$e.prototype.isEmpty=function(){return this.children_.isEmpty()},$e.prototype.numChildren=function(){return this.children_.count()},$e.prototype.val=function(n){if(this.isEmpty())return null;var r={},i=0,o=0,s=!0;if(this.forEachChild(Pe,function(t,e){r[t]=e.val(n),i++,s&&$e.INTEGER_REGEXP_.test(t)?o=Math.max(o,Number(t)):s=!1}),!n&&s&&o<2*i){var t=[];for(var e in r)t[e]=r[e];return t}return n&&!this.getPriority().isEmpty()&&(r[\".priority\"]=this.getPriority().val()),r},$e.prototype.hash=function(){if(null===this.lazyHash_){var r=\"\";this.getPriority().isEmpty()||(r+=\"priority:\"+Ce(this.getPriority().val())+\":\"),this.forEachChild(Pe,function(t,e){var n=e.hash();\"\"!==n&&(r+=\":\"+t+\":\"+n)}),this.lazyHash_=\"\"===r?\"\":et(r)}return this.lazyHash_},$e.prototype.getPredecessorChildName=function(t,e,n){var r=this.resolveIndex_(n);if(r){var i=r.getPredecessorKey(new ue(t,e));return i?i.name:null}return this.children_.getPredecessorKey(t)},$e.prototype.getFirstChildName=function(t){var e=this.resolveIndex_(t);if(e){var n=e.minKey();return n&&n.name}return this.children_.minKey()},$e.prototype.getFirstChild=function(t){var e=this.getFirstChildName(t);return e?new ue(e,this.children_.get(e)):null},$e.prototype.getLastChildName=function(t){var e=this.resolveIndex_(t);if(e){var n=e.maxKey();return n&&n.name}return this.children_.maxKey()},$e.prototype.getLastChild=function(t){var e=this.getLastChildName(t);return e?new ue(e,this.children_.get(e)):null},$e.prototype.forEachChild=function(t,e){var n=this.resolveIndex_(t);return n?n.inorderTraversal(function(t){return e(t.name,t.node)}):this.children_.inorderTraversal(e)},$e.prototype.getIterator=function(t){return this.getIteratorFrom(t.minPost(),t)},$e.prototype.getIteratorFrom=function(t,e){var n=this.resolveIndex_(e);if(n)return n.getIteratorFrom(t,function(t){return t});for(var r=this.children_.getIteratorFrom(t.name,ue.Wrap),i=r.peek();null!=i&&e.compare(i,t)<0;)r.getNext(),i=r.peek();return r},$e.prototype.getReverseIterator=function(t){return this.getReverseIteratorFrom(t.maxPost(),t)},$e.prototype.getReverseIteratorFrom=function(t,e){var n=this.resolveIndex_(e);if(n)return n.getReverseIteratorFrom(t,function(t){return t});for(var r=this.children_.getReverseIteratorFrom(t.name,ue.Wrap),i=r.peek();null!=i&&0<e.compare(i,t);)r.getNext(),i=r.peek();return r},$e.prototype.compareTo=function(t){return this.isEmpty()?t.isEmpty()?0:-1:t.isLeafNode()||t.isEmpty()?1:t===Ze?-1:0},$e.prototype.withIndex=function(t){if(t===me||this.indexMap_.hasIndex(t))return this;var e=this.indexMap_.addIndex(t,this.children_);return new $e(this.children_,this.priorityNode_,e)},$e.prototype.isIndexed=function(t){return t===me||this.indexMap_.hasIndex(t)},$e.prototype.equals=function(t){if(t===this)return!0;if(t.isLeafNode())return!1;var e=t;if(this.getPriority().equals(e.getPriority())){if(this.children_.count()!==e.children_.count())return!1;for(var n=this.getIterator(Pe),r=e.getIterator(Pe),i=n.getNext(),o=r.getNext();i&&o;){if(i.name!==o.name||!i.node.equals(o.node))return!1;i=n.getNext(),o=r.getNext()}return null===i&&null===o}return!1},$e.prototype.resolveIndex_=function(t){return t===me?null:this.indexMap_.get(t.toString())},$e.INTEGER_REGEXP_=/^(0|[1-9]\\d*)$/,$e);function $e(t,e,n){this.children_=t,this.priorityNode_=e,this.indexMap_=n,this.lazyHash_=null,this.priorityNode_&&Ee(this.priorityNode_),this.children_.isEmpty()&&C(!this.priorityNode_||this.priorityNode_.isEmpty(),\"An empty node cannot have a priority\")}function Je(){return Ge.call(this,new Le(ze),Xe.EMPTY_NODE,je.Default)||this}var Ze=new(t(Je,Ge=Xe),Je.prototype.compareTo=function(t){return t===this?0:1},Je.prototype.equals=function(t){return t===this},Je.prototype.getPriority=function(){return this},Je.prototype.getImmediateChild=function(t){return Xe.EMPTY_NODE},Je.prototype.isEmpty=function(){return!1},Je);Object.defineProperties(ue,{MIN:{value:new ue(Ct,Xe.EMPTY_NODE)},MAX:{value:new ue(Et,Ze)}}),ye.__EMPTY_NODE=Xe.EMPTY_NODE,Ie.__childrenNodeConstructor=Xe,ge=Ze,Se=Ze;var tn,en=!0;function nn(r,t){if(void 0===t&&(t=null),null===r)return Xe.EMPTY_NODE;if(\"object\"==typeof r&&\".priority\"in r&&(t=r[\".priority\"]),C(null===t||\"string\"==typeof t||\"number\"==typeof t||\"object\"==typeof t&&\".sv\"in t,\"Invalid priority type found: \"+typeof t),\"object\"==typeof r&&\".value\"in r&&null!==r[\".value\"]&&(r=r[\".value\"]),\"object\"!=typeof r||\".sv\"in r)return new Ie(r,nn(t));if(r instanceof Array||!en){var i=Xe.EMPTY_NODE;return St(r,function(t,e){if(R(r,t)&&\".\"!==t.substring(0,1)){var n=nn(e);!n.isLeafNode()&&n.isEmpty()||(i=i.updateImmediateChild(t,n))}}),i.updatePriority(nn(t))}var o=[],s=!1;if(St(r,function(t,e){if(\".\"!==t.substring(0,1)){var n=nn(e);n.isEmpty()||(s=s||!n.getPriority().isEmpty(),o.push(new ue(t,n)))}}),0===o.length)return Xe.EMPTY_NODE;var e=He(o,Ke,function(t){return t.name},ze);if(s){var n=He(o,Pe.getCompare());return new Xe(e,nn(t),new je({\".priority\":n},{\".priority\":Pe}))}return new Xe(e,nn(t),je.Default)}function rn(){return null!==tn&&tn.apply(this,arguments)||this}be=nn;var on,sn=new(t(rn,tn=de),rn.prototype.compare=function(t,e){var n=t.node.compareTo(e.node);return 0===n?wt(t.name,e.name):n},rn.prototype.isDefinedOn=function(t){return!0},rn.prototype.indexedValueChanged=function(t,e){return!t.equals(e)},rn.prototype.minPost=function(){return ue.MIN},rn.prototype.maxPost=function(){return ue.MAX},rn.prototype.makePost=function(t,e){var n=nn(t);return new ue(e,n)},rn.prototype.toString=function(){return\".value\"},rn),an=(t(hn,on=de),hn.prototype.extractChild=function(t){return t.getChild(this.indexPath_)},hn.prototype.isDefinedOn=function(t){return!t.getChild(this.indexPath_).isEmpty()},hn.prototype.compare=function(t,e){var n=this.extractChild(t.node),r=this.extractChild(e.node),i=n.compareTo(r);return 0===i?wt(t.name,e.name):i},hn.prototype.makePost=function(t,e){var n=nn(t),r=Xe.EMPTY_NODE.updateChild(this.indexPath_,n);return new ue(e,r)},hn.prototype.maxPost=function(){var t=Xe.EMPTY_NODE.updateChild(this.indexPath_,Ze);return new ue(Et,t)},hn.prototype.toString=function(){return this.indexPath_.slice().join(\"/\")},hn);function hn(t){var e=on.call(this)||this;return e.indexPath_=t,C(!t.isEmpty()&&\".priority\"!==t.getFront(),\"Can't create PathIndex with empty path or .priority key\"),e}var ln=(un.prototype.val=function(){return F(\"DataSnapshot.val\",0,0,arguments.length),this.node_.val()},un.prototype.exportVal=function(){return F(\"DataSnapshot.exportVal\",0,0,arguments.length),this.node_.val(!0)},un.prototype.toJSON=function(){return F(\"DataSnapshot.toJSON\",0,1,arguments.length),this.exportVal()},un.prototype.exists=function(){return F(\"DataSnapshot.exists\",0,0,arguments.length),!this.node_.isEmpty()},un.prototype.child=function(t){F(\"DataSnapshot.child\",0,1,arguments.length),t=String(t),zt(\"DataSnapshot.child\",1,t,!1);var e=new Dt(t),n=this.ref_.child(e);return new un(this.node_.getChild(e),n,Pe)},un.prototype.hasChild=function(t){F(\"DataSnapshot.hasChild\",1,1,arguments.length),zt(\"DataSnapshot.hasChild\",1,t,!1);var e=new Dt(t);return!this.node_.getChild(e).isEmpty()},un.prototype.getPriority=function(){return F(\"DataSnapshot.getPriority\",0,0,arguments.length),this.node_.getPriority().val()},un.prototype.forEach=function(n){var r=this;return F(\"DataSnapshot.forEach\",1,1,arguments.length),L(\"DataSnapshot.forEach\",1,n,!1),!this.node_.isLeafNode()&&!!this.node_.forEachChild(this.index_,function(t,e){return n(new un(e,r.ref_.child(t),Pe))})},un.prototype.hasChildren=function(){return F(\"DataSnapshot.hasChildren\",0,0,arguments.length),!this.node_.isLeafNode()&&!this.node_.isEmpty()},Object.defineProperty(un.prototype,\"key\",{get:function(){return this.ref_.getKey()},enumerable:!0,configurable:!0}),un.prototype.numChildren=function(){return F(\"DataSnapshot.numChildren\",0,0,arguments.length),this.node_.numChildren()},un.prototype.getRef=function(){return F(\"DataSnapshot.ref\",0,0,arguments.length),this.ref_},Object.defineProperty(un.prototype,\"ref\",{get:function(){return this.getRef()},enumerable:!0,configurable:!0}),un);function un(t,e,n){this.node_=t,this.ref_=e,this.index_=n}var cn=(pn.prototype.getPath=function(){var t=this.snapshot.getRef();return\"value\"===this.eventType?t.path:t.getParent().path},pn.prototype.getEventType=function(){return this.eventType},pn.prototype.getEventRunner=function(){return this.eventRegistration.getEventRunner(this)},pn.prototype.toString=function(){return this.getPath().toString()+\":\"+this.eventType+\":\"+I(this.snapshot.exportVal())},pn);function pn(t,e,n,r){this.eventType=t,this.eventRegistration=e,this.snapshot=n,this.prevName=r}var dn=(fn.prototype.getPath=function(){return this.path},fn.prototype.getEventType=function(){return\"cancel\"},fn.prototype.getEventRunner=function(){return this.eventRegistration.getEventRunner(this)},fn.prototype.toString=function(){return this.path.toString()+\":cancel\"},fn);function fn(t,e,n){this.eventRegistration=t,this.error=e,this.path=n}var _n=(yn.prototype.respondsTo=function(t){return\"value\"===t},yn.prototype.createEvent=function(t,e){var n=e.getQueryParams().getIndex();return new cn(\"value\",this,new ln(t.snapshotNode,e.getRef(),n))},yn.prototype.getEventRunner=function(t){var e=this.context_;if(\"cancel\"===t.getEventType()){C(this.cancelCallback_,\"Raising a cancel event on a listener with no cancel callback\");var n=this.cancelCallback_;return function(){n.call(e,t.error)}}var r=this.callback_;return function(){r.call(e,t.snapshot)}},yn.prototype.createCancelEvent=function(t,e){return this.cancelCallback_?new dn(this,t,e):null},yn.prototype.matches=function(t){return t instanceof yn&&(!t.callback_||!this.callback_||t.callback_===this.callback_&&t.context_===this.context_)},yn.prototype.hasAnyCallback=function(){return null!==this.callback_},yn);function yn(t,e,n){this.callback_=t,this.cancelCallback_=e,this.context_=n}var vn,gn=(mn.prototype.respondsTo=function(t){var e=\"children_added\"===t?\"child_added\":t;return e=\"children_removed\"===e?\"child_removed\":e,R(this.callbacks_,e)},mn.prototype.createCancelEvent=function(t,e){return this.cancelCallback_?new dn(this,t,e):null},mn.prototype.createEvent=function(t,e){C(null!=t.childName,\"Child events should have a childName.\");var n=e.getRef().child(t.childName),r=e.getQueryParams().getIndex();return new cn(t.type,this,new ln(t.snapshotNode,n,r),t.prevName)},mn.prototype.getEventRunner=function(t){var e=this.context_;if(\"cancel\"===t.getEventType()){C(this.cancelCallback_,\"Raising a cancel event on a listener with no cancel callback\");var n=this.cancelCallback_;return function(){n.call(e,t.error)}}var r=this.callbacks_[t.eventType];return function(){r.call(e,t.snapshot,t.prevName)}},mn.prototype.matches=function(e){var n=this;if(e instanceof mn){if(!this.callbacks_||!e.callbacks_)return!0;if(this.context_===e.context_){var t=Object.keys(e.callbacks_),r=Object.keys(this.callbacks_),i=t.length;if(i===r.length){if(1!==i)return r.every(function(t){return e.callbacks_[t]===n.callbacks_[t]});var o=t[0],s=r[0];return!(s!==o||e.callbacks_[o]&&this.callbacks_[s]&&e.callbacks_[o]!==this.callbacks_[s])}}}return!1},mn.prototype.hasAnyCallback=function(){return null!==this.callbacks_},mn);function mn(t,e,n){this.callbacks_=t,this.cancelCallback_=e,this.context_=n}var Cn=(Object.defineProperty(En,\"__referenceConstructor\",{get:function(){return C(vn,\"Reference.ts has not been loaded\"),vn},set:function(t){vn=t},enumerable:!0,configurable:!0}),En.validateQueryEndpoints_=function(t){var e=null,n=null;if(t.hasStart()&&(e=t.getIndexStartValue()),t.hasEnd()&&(n=t.getIndexEndValue()),t.getIndex()===me){var r=\"Query: When ordering by key, you may only pass one argument to startAt(), endAt(), or equalTo().\",i=\"Query: When ordering by key, the argument passed to startAt(), endAt(),or equalTo() must be a string.\";if(t.hasStart()){if(t.getIndexStartName()!==Ct)throw new Error(r);if(\"string\"!=typeof e)throw new Error(i)}if(t.hasEnd()){if(t.getIndexEndName()!==Et)throw new Error(r);if(\"string\"!=typeof n)throw new Error(i)}}else if(t.getIndex()===Pe){if(null!=e&&!Vt(e)||null!=n&&!Vt(n))throw new Error(\"Query: When ordering by priority, the first argument passed to startAt(), endAt(), or equalTo() must be a valid priority value (null, a number, or a string).\")}else if(C(t.getIndex()instanceof an||t.getIndex()===sn,\"unknown index type.\"),null!=e&&\"object\"==typeof e||null!=n&&\"object\"==typeof n)throw new Error(\"Query: First argument passed to startAt(), endAt(), or equalTo() cannot be an object.\")},En.validateLimit_=function(t){if(t.hasStart()&&t.hasEnd()&&t.hasLimit()&&!t.hasAnchoredLimit())throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\")},En.prototype.validateNoPreviousOrderByCall_=function(t){if(!0===this.orderByCalled_)throw new Error(t+\": You can't combine multiple orderBy calls.\")},En.prototype.getQueryParams=function(){return this.queryParams_},En.prototype.getRef=function(){return F(\"Query.ref\",0,0,arguments.length),new En.__referenceConstructor(this.repo,this.path)},En.prototype.on=function(t,e,n,r){F(\"Query.on\",2,4,arguments.length),Yt(\"Query.on\",1,t,!1),L(\"Query.on\",2,e,!1);var i=En.getCancelAndContextArgs_(\"Query.on\",n,r);if(\"value\"===t)this.onValueEvent(e,i.cancel,i.context);else{var o={};o[t]=e,this.onChildEvent(o,i.cancel,i.context)}return e},En.prototype.onValueEvent=function(t,e,n){var r=new _n(t,e||null,n||null);this.repo.addEventCallbackForQuery(this,r)},En.prototype.onChildEvent=function(t,e,n){var r=new gn(t,e,n);this.repo.addEventCallbackForQuery(this,r)},En.prototype.off=function(t,e,n){F(\"Query.off\",0,3,arguments.length),Yt(\"Query.off\",1,t,!0),L(\"Query.off\",2,e,!0),M(\"Query.off\",3,n,!0);var r=null,i=null;\"value\"===t?r=new _n(e||null,null,n||null):t&&(e&&((i={})[t]=e),r=new gn(i,null,n||null)),this.repo.removeEventCallbackForQuery(this,r)},En.prototype.once=function(e,n,t,r){var i=this;F(\"Query.once\",1,4,arguments.length),Yt(\"Query.once\",1,e,!1),L(\"Query.once\",2,n,!0);var o=En.getCancelAndContextArgs_(\"Query.once\",t,r),s=!0,a=new p;a.promise.catch(function(){});var h=function(t){s&&(s=!1,i.off(e,h),n&&n.bind(o.context)(t),a.resolve(t))};return this.on(e,h,function(t){i.off(e,h),o.cancel&&o.cancel.bind(o.context)(t),a.reject(t)}),a.promise},En.prototype.limitToFirst=function(t){if(F(\"Query.limitToFirst\",1,1,arguments.length),\"number\"!=typeof t||Math.floor(t)!==t||t<=0)throw new Error(\"Query.limitToFirst: First argument must be a positive integer.\");if(this.queryParams_.hasLimit())throw new Error(\"Query.limitToFirst: Limit was already set (by another call to limit, limitToFirst, or limitToLast).\");return new En(this.repo,this.path,this.queryParams_.limitToFirst(t),this.orderByCalled_)},En.prototype.limitToLast=function(t){if(F(\"Query.limitToLast\",1,1,arguments.length),\"number\"!=typeof t||Math.floor(t)!==t||t<=0)throw new Error(\"Query.limitToLast: First argument must be a positive integer.\");if(this.queryParams_.hasLimit())throw new Error(\"Query.limitToLast: Limit was already set (by another call to limit, limitToFirst, or limitToLast).\");return new En(this.repo,this.path,this.queryParams_.limitToLast(t),this.orderByCalled_)},En.prototype.orderByChild=function(t){if(F(\"Query.orderByChild\",1,1,arguments.length),\"$key\"===t)throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');if(\"$priority\"===t)throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');if(\"$value\"===t)throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');zt(\"Query.orderByChild\",1,t,!1),this.validateNoPreviousOrderByCall_(\"Query.orderByChild\");var e=new Dt(t);if(e.isEmpty())throw new Error(\"Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.\");var n=new an(e),r=this.queryParams_.orderBy(n);return En.validateQueryEndpoints_(r),new En(this.repo,this.path,r,!0)},En.prototype.orderByKey=function(){F(\"Query.orderByKey\",0,0,arguments.length),this.validateNoPreviousOrderByCall_(\"Query.orderByKey\");var t=this.queryParams_.orderBy(me);return En.validateQueryEndpoints_(t),new En(this.repo,this.path,t,!0)},En.prototype.orderByPriority=function(){F(\"Query.orderByPriority\",0,0,arguments.length),this.validateNoPreviousOrderByCall_(\"Query.orderByPriority\");var t=this.queryParams_.orderBy(Pe);return En.validateQueryEndpoints_(t),new En(this.repo,this.path,t,!0)},En.prototype.orderByValue=function(){F(\"Query.orderByValue\",0,0,arguments.length),this.validateNoPreviousOrderByCall_(\"Query.orderByValue\");var t=this.queryParams_.orderBy(sn);return En.validateQueryEndpoints_(t),new En(this.repo,this.path,t,!0)},En.prototype.startAt=function(t,e){void 0===t&&(t=null),F(\"Query.startAt\",0,2,arguments.length),Ht(\"Query.startAt\",1,t,this.path,!0),Kt(\"Query.startAt\",2,e,!0);var n=this.queryParams_.startAt(t,e);if(En.validateLimit_(n),En.validateQueryEndpoints_(n),this.queryParams_.hasStart())throw new Error(\"Query.startAt: Starting point was already set (by another call to startAt or equalTo).\");return void 0===t&&(e=t=null),new En(this.repo,this.path,n,this.orderByCalled_)},En.prototype.endAt=function(t,e){void 0===t&&(t=null),F(\"Query.endAt\",0,2,arguments.length),Ht(\"Query.endAt\",1,t,this.path,!0),Kt(\"Query.endAt\",2,e,!0);var n=this.queryParams_.endAt(t,e);if(En.validateLimit_(n),En.validateQueryEndpoints_(n),this.queryParams_.hasEnd())throw new Error(\"Query.endAt: Ending point was already set (by another call to endAt or equalTo).\");return new En(this.repo,this.path,n,this.orderByCalled_)},En.prototype.equalTo=function(t,e){if(F(\"Query.equalTo\",1,2,arguments.length),Ht(\"Query.equalTo\",1,t,this.path,!1),Kt(\"Query.equalTo\",2,e,!0),this.queryParams_.hasStart())throw new Error(\"Query.equalTo: Starting point was already set (by another call to startAt or equalTo).\");if(this.queryParams_.hasEnd())throw new Error(\"Query.equalTo: Ending point was already set (by another call to endAt or equalTo).\");return this.startAt(t,e).endAt(t,e)},En.prototype.toString=function(){return F(\"Query.toString\",0,0,arguments.length),this.repo.toString()+this.path.toUrlEncodedString()},En.prototype.toJSON=function(){return F(\"Query.toJSON\",0,1,arguments.length),this.toString()},En.prototype.queryObject=function(){return this.queryParams_.getQueryObject()},En.prototype.queryIdentifier=function(){var t=this.queryObject(),e=bt(t);return\"{}\"===e?\"default\":e},En.prototype.isEqual=function(t){if(F(\"Query.isEqual\",1,1,arguments.length),!(t instanceof En))throw new Error(\"Query.isEqual failed: First argument must be an instance of firebase.database.Query.\");var e=this.repo===t.repo,n=this.path.equals(t.path),r=this.queryIdentifier()===t.queryIdentifier();return e&&n&&r},En.getCancelAndContextArgs_=function(t,e,n){var r={cancel:null,context:null};if(e&&n)r.cancel=e,L(t,3,r.cancel,!0),r.context=n,M(t,4,r.context,!0);else if(e)if(\"object\"==typeof e&&null!==e)r.context=e;else{if(\"function\"!=typeof e)throw new Error(A(t,3,!0)+\" must either be a cancel callback or a context object.\");r.cancel=e}return r},Object.defineProperty(En.prototype,\"ref\",{get:function(){return this.getRef()},enumerable:!0,configurable:!0}),En);function En(t,e,n,r){this.repo=t,this.path=e,this.queryParams_=n,this.orderByCalled_=r}var wn=(bn.prototype.getImmediateChild=function(t){return new bn(this.node_.getImmediateChild(t))},bn.prototype.node=function(){return this.node_},bn);function bn(t){this.node_=t}var Sn=(Tn.prototype.getImmediateChild=function(t){var e=this.path_.child(t);return new Tn(this.syncTree_,e)},Tn.prototype.node=function(){return this.syncTree_.calcCompleteEventCache(this.path_)},Tn);function Tn(t,e){this.syncTree_=t,this.path_=e}function In(t,e,n,r){return On(e,new Sn(n,t),r)}function Nn(t,e,n){return On(t,new wn(e),n)}var Rn=function(t,e,n){return t&&\"object\"==typeof t?(C(\".sv\"in t,\"Unexpected leaf node or priority contents\"),\"string\"==typeof t[\".sv\"]?Pn(t[\".sv\"],e,n):\"object\"==typeof t[\".sv\"]?Dn(t[\".sv\"],e):void C(!1,\"Unexpected server value: \"+JSON.stringify(t,null,2))):t},Pn=function(t,e,n){switch(t){case\"timestamp\":return n.timestamp;default:C(!1,\"Unexpected server value: \"+t)}},Dn=function(t,e,n){t.hasOwnProperty(\"increment\")||C(!1,\"Unexpected server value: \"+JSON.stringify(t,null,2));var r=t.increment;\"number\"!=typeof r&&C(!1,\"Unexpected increment value: \"+r);var i=e.node();if(C(null!=i,\"Expected ChildrenNode.EMPTY_NODE for nulls\"),!i.isLeafNode())return r;var o=i.getValue();return\"number\"!=typeof o?r:o+r};function On(t,r,i){var o,e=t.getPriority().val(),n=Rn(e,r.getImmediateChild(\".priority\"),i);if(t.isLeafNode()){var s=t,a=Rn(s.getValue(),r,i);return a!==s.getValue()||n!==s.getPriority().val()?new Ie(a,nn(n)):t}var h=t;return n!==(o=h).getPriority().val()&&(o=o.updatePriority(new Ie(n))),h.forEachChild(Pe,function(t,e){var n=On(e,r.getImmediateChild(t),i);n!==e&&(o=o.updateImmediateChild(t,n))}),o}var xn,kn,Fn=(An.prototype.find=function(t){if(null!=this.value)return this.value.getChild(t);if(!t.isEmpty()&&0<this.children.size){var e=t.getFront();return t=t.popFront(),this.children.has(e)?this.children.get(e).find(t):null}return null},An.prototype.remember=function(t,e){if(t.isEmpty())this.value=e,this.children.clear();else if(null!==this.value)this.value=this.value.updateChild(t,e);else{var n=t.getFront();this.children.has(n)||this.children.set(n,new An);var r=this.children.get(n);t=t.popFront(),r.remember(t,e)}},An.prototype.forget=function(t){if(t.isEmpty())return this.value=null,this.children.clear(),!0;if(null!==this.value){if(this.value.isLeafNode())return!1;var e=this.value;this.value=null;var n=this;return e.forEachChild(Pe,function(t,e){n.remember(new Dt(t),e)}),this.forget(t)}if(0<this.children.size){var r=t.getFront();return t=t.popFront(),!this.children.has(r)||this.children.get(r).forget(t)&&this.children.delete(r),0===this.children.size}return!0},An.prototype.forEachTree=function(r,i){null!==this.value?i(r,this.value):this.forEachChild(function(t,e){var n=new Dt(r.toString()+\"/\"+t);e.forEachTree(n,i)})},An.prototype.forEachChild=function(n){this.children.forEach(function(t,e){n(e,t)})},An);function An(){this.value=null,this.children=new Map}(kn=xn=xn||{})[kn.OVERWRITE=0]=\"OVERWRITE\",kn[kn.MERGE=1]=\"MERGE\",kn[kn.ACK_USER_WRITE=2]=\"ACK_USER_WRITE\",kn[kn.LISTEN_COMPLETE=3]=\"LISTEN_COMPLETE\";var Ln=(Mn.User=new Mn(!0,!1,null,!1),Mn.Server=new Mn(!1,!0,null,!1),Mn.forServerTaggedQuery=function(t){return new Mn(!1,!0,t,!0)},Mn);function Mn(t,e,n,r){this.fromUser=t,this.fromServer=e,this.queryId=n,this.tagged=r,C(!r||e,\"Tagged queries must be from server.\")}var Wn,Qn=(qn.prototype.operationForChild=function(t){if(this.path.isEmpty()){if(null!=this.affectedTree.value)return C(this.affectedTree.children.isEmpty(),\"affectedTree should not have overlapping affected paths.\"),this;var e=this.affectedTree.subtree(new Dt(t));return new qn(Dt.Empty,e,this.revert)}return C(this.path.getFront()===t,\"operationForChild called for unrelated child.\"),new qn(this.path.popFront(),this.affectedTree,this.revert)},qn);function qn(t,e,n){this.path=t,this.affectedTree=e,this.revert=n,this.type=xn.ACK_USER_WRITE,this.source=Ln.User}var Un=(Vn.fromObject=function(t){var n=Vn.Empty;return St(t,function(t,e){n=n.set(new Dt(t),e)}),n},Vn.prototype.isEmpty=function(){return null===this.value&&this.children.isEmpty()},Vn.prototype.findRootMostMatchingPathAndValue=function(t,e){if(null!=this.value&&e(this.value))return{path:Dt.Empty,value:this.value};if(t.isEmpty())return null;var n=t.getFront(),r=this.children.get(n);if(null===r)return null;var i=r.findRootMostMatchingPathAndValue(t.popFront(),e);return null==i?null:{path:new Dt(n).child(i.path),value:i.value}},Vn.prototype.findRootMostValueAndPath=function(t){return this.findRootMostMatchingPathAndValue(t,function(){return!0})},Vn.prototype.subtree=function(t){if(t.isEmpty())return this;var e=t.getFront(),n=this.children.get(e);return null!==n?n.subtree(t.popFront()):Vn.Empty},Vn.prototype.set=function(t,e){if(t.isEmpty())return new Vn(e,this.children);var n=t.getFront(),r=(this.children.get(n)||Vn.Empty).set(t.popFront(),e),i=this.children.insert(n,r);return new Vn(this.value,i)},Vn.prototype.remove=function(t){if(t.isEmpty())return this.children.isEmpty()?Vn.Empty:new Vn(null,this.children);var e=t.getFront(),n=this.children.get(e);if(n){var r=n.remove(t.popFront()),i=void 0;return i=r.isEmpty()?this.children.remove(e):this.children.insert(e,r),null===this.value&&i.isEmpty()?Vn.Empty:new Vn(this.value,i)}return this},Vn.prototype.get=function(t){if(t.isEmpty())return this.value;var e=t.getFront(),n=this.children.get(e);return n?n.get(t.popFront()):null},Vn.prototype.setTree=function(t,e){if(t.isEmpty())return e;var n=t.getFront(),r=(this.children.get(n)||Vn.Empty).setTree(t.popFront(),e),i=void 0;return i=r.isEmpty()?this.children.remove(n):this.children.insert(n,r),new Vn(this.value,i)},Vn.prototype.fold=function(t){return this.fold_(Dt.Empty,t)},Vn.prototype.fold_=function(n,r){var i={};return this.children.inorderTraversal(function(t,e){i[t]=e.fold_(n.child(t),r)}),r(n,this.value,i)},Vn.prototype.findOnPath=function(t,e){return this.findOnPath_(t,Dt.Empty,e)},Vn.prototype.findOnPath_=function(t,e,n){var r=!!this.value&&n(e,this.value);if(r)return r;if(t.isEmpty())return null;var i=t.getFront(),o=this.children.get(i);return o?o.findOnPath_(t.popFront(),e.child(i),n):null},Vn.prototype.foreachOnPath=function(t,e){return this.foreachOnPath_(t,Dt.Empty,e)},Vn.prototype.foreachOnPath_=function(t,e,n){if(t.isEmpty())return this;this.value&&n(e,this.value);var r=t.getFront(),i=this.children.get(r);return i?i.foreachOnPath_(t.popFront(),e.child(r),n):Vn.Empty},Vn.prototype.foreach=function(t){this.foreach_(Dt.Empty,t)},Vn.prototype.foreach_=function(n,r){this.children.inorderTraversal(function(t,e){e.foreach_(n.child(t),r)}),this.value&&r(n,this.value)},Vn.prototype.foreachChild=function(n){this.children.inorderTraversal(function(t,e){e.value&&n(t,e.value)})},Vn.Empty=new Vn(null),Vn);function Vn(t,e){void 0===e&&(e=Wn=Wn||new Le(lt)),this.value=t,this.children=e}var Hn=(Bn.prototype.operationForChild=function(t){return this.path.isEmpty()?new Bn(this.source,Dt.Empty):new Bn(this.source,this.path.popFront())},Bn);function Bn(t,e){this.source=t,this.path=e,this.type=xn.LISTEN_COMPLETE}var jn=(Yn.prototype.operationForChild=function(t){return this.path.isEmpty()?new Yn(this.source,Dt.Empty,this.snap.getImmediateChild(t)):new Yn(this.source,this.path.popFront(),this.snap)},Yn);function Yn(t,e,n){this.source=t,this.path=e,this.snap=n,this.type=xn.OVERWRITE}var Kn=(zn.prototype.operationForChild=function(t){if(this.path.isEmpty()){var e=this.children.subtree(new Dt(t));return e.isEmpty()?null:e.value?new jn(this.source,Dt.Empty,e.value):new zn(this.source,Dt.Empty,e)}return C(this.path.getFront()===t,\"Can't get a merge for a child not on the path of the operation\"),new zn(this.source,this.path.popFront(),this.children)},zn.prototype.toString=function(){return\"Operation(\"+this.path+\": \"+this.source.toString()+\" merge: \"+this.children.toString()+\")\"},zn);function zn(t,e,n){this.source=t,this.path=e,this.children=n,this.type=xn.MERGE}var Gn=(Xn.prototype.isFullyInitialized=function(){return this.fullyInitialized_},Xn.prototype.isFiltered=function(){return this.filtered_},Xn.prototype.isCompleteForPath=function(t){if(t.isEmpty())return this.isFullyInitialized()&&!this.filtered_;var e=t.getFront();return this.isCompleteForChild(e)},Xn.prototype.isCompleteForChild=function(t){return this.isFullyInitialized()&&!this.filtered_||this.node_.hasChild(t)},Xn.prototype.getNode=function(){return this.node_},Xn);function Xn(t,e,n){this.node_=t,this.fullyInitialized_=e,this.filtered_=n}var $n=(Jn.prototype.updateEventSnap=function(t,e,n){return new Jn(new Gn(t,e,n),this.serverCache_)},Jn.prototype.updateServerSnap=function(t,e,n){return new Jn(this.eventCache_,new Gn(t,e,n))},Jn.prototype.getEventCache=function(){return this.eventCache_},Jn.prototype.getCompleteEventSnap=function(){return this.eventCache_.isFullyInitialized()?this.eventCache_.getNode():null},Jn.prototype.getServerCache=function(){return this.serverCache_},Jn.prototype.getCompleteServerSnap=function(){return this.serverCache_.isFullyInitialized()?this.serverCache_.getNode():null},Jn.Empty=new Jn(new Gn(Xe.EMPTY_NODE,!1,!1),new Gn(Xe.EMPTY_NODE,!1,!1)),Jn);function Jn(t,e){this.eventCache_=t,this.serverCache_=e}var Zn=(tr.valueChange=function(t){return new tr(tr.VALUE,t)},tr.childAddedChange=function(t,e){return new tr(tr.CHILD_ADDED,e,t)},tr.childRemovedChange=function(t,e){return new tr(tr.CHILD_REMOVED,e,t)},tr.childChangedChange=function(t,e,n){return new tr(tr.CHILD_CHANGED,e,t,n)},tr.childMovedChange=function(t,e){return new tr(tr.CHILD_MOVED,e,t)},tr.CHILD_ADDED=\"child_added\",tr.CHILD_REMOVED=\"child_removed\",tr.CHILD_CHANGED=\"child_changed\",tr.CHILD_MOVED=\"child_moved\",tr.VALUE=\"value\",tr);function tr(t,e,n,r,i){this.type=t,this.snapshotNode=e,this.childName=n,this.oldSnap=r,this.prevName=i}var er=(nr.prototype.updateChild=function(t,e,n,r,i,o){C(t.isIndexed(this.index_),\"A node must be indexed if only a child is updated\");var s=t.getImmediateChild(e);return s.getChild(r).equals(n.getChild(r))&&s.isEmpty()===n.isEmpty()?t:(null!=o&&(n.isEmpty()?t.hasChild(e)?o.trackChildChange(Zn.childRemovedChange(e,s)):C(t.isLeafNode(),\"A child remove without an old child only makes sense on a leaf node\"):s.isEmpty()?o.trackChildChange(Zn.childAddedChange(e,n)):o.trackChildChange(Zn.childChangedChange(e,n,s))),t.isLeafNode()&&n.isEmpty()?t:t.updateImmediateChild(e,n).withIndex(this.index_))},nr.prototype.updateFullNode=function(r,n,i){return null!=i&&(r.isLeafNode()||r.forEachChild(Pe,function(t,e){n.hasChild(t)||i.trackChildChange(Zn.childRemovedChange(t,e))}),n.isLeafNode()||n.forEachChild(Pe,function(t,e){if(r.hasChild(t)){var n=r.getImmediateChild(t);n.equals(e)||i.trackChildChange(Zn.childChangedChange(t,e,n))}else i.trackChildChange(Zn.childAddedChange(t,e))})),n.withIndex(this.index_)},nr.prototype.updatePriority=function(t,e){return t.isEmpty()?Xe.EMPTY_NODE:t.updatePriority(e)},nr.prototype.filtersNodes=function(){return!1},nr.prototype.getIndexedFilter=function(){return this},nr.prototype.getIndex=function(){return this.index_},nr);function nr(t){this.index_=t}var rr=(ir.prototype.trackChildChange=function(t){var e=t.type,n=t.childName;C(e===Zn.CHILD_ADDED||e===Zn.CHILD_CHANGED||e===Zn.CHILD_REMOVED,\"Only child changes supported for tracking\"),C(\".priority\"!==n,\"Only non-priority child changes can be tracked.\");var r=this.changeMap.get(n);if(r){var i=r.type;if(e===Zn.CHILD_ADDED&&i===Zn.CHILD_REMOVED)this.changeMap.set(n,Zn.childChangedChange(n,t.snapshotNode,r.snapshotNode));else if(e===Zn.CHILD_REMOVED&&i===Zn.CHILD_ADDED)this.changeMap.delete(n);else if(e===Zn.CHILD_REMOVED&&i===Zn.CHILD_CHANGED)this.changeMap.set(n,Zn.childRemovedChange(n,r.oldSnap));else if(e===Zn.CHILD_CHANGED&&i===Zn.CHILD_ADDED)this.changeMap.set(n,Zn.childAddedChange(n,t.snapshotNode));else{if(e!==Zn.CHILD_CHANGED||i!==Zn.CHILD_CHANGED)throw c(\"Illegal combination of changes: \"+t+\" occurred after \"+r);this.changeMap.set(n,Zn.childChangedChange(n,t.snapshotNode,r.oldSnap))}}else this.changeMap.set(n,t)},ir.prototype.getChanges=function(){return Array.from(this.changeMap.values())},ir);function ir(){this.changeMap=new Map}function or(){}var sr=new(or.prototype.getCompleteChild=function(t){return null},or.prototype.getChildAfterChild=function(t,e,n){return null},or),ar=(hr.prototype.getCompleteChild=function(t){var e=this.viewCache_.getEventCache();if(e.isCompleteForChild(t))return e.getNode().getImmediateChild(t);var n=null!=this.optCompleteServerCache_?new Gn(this.optCompleteServerCache_,!0,!1):this.viewCache_.getServerCache();return this.writes_.calcCompleteChild(t,n)},hr.prototype.getChildAfterChild=function(t,e,n){var r=null!=this.optCompleteServerCache_?this.optCompleteServerCache_:this.viewCache_.getCompleteServerSnap(),i=this.writes_.calcIndexedSlice(r,e,1,n,t);return 0===i.length?null:i[0]},hr);function hr(t,e,n){void 0===n&&(n=null),this.writes_=t,this.viewCache_=e,this.optCompleteServerCache_=n}var lr=function(t,e){this.viewCache=t,this.changes=e},ur=(cr.prototype.assertIndexed=function(t){C(t.getEventCache().getNode().isIndexed(this.filter_.getIndex()),\"Event snap not indexed\"),C(t.getServerCache().getNode().isIndexed(this.filter_.getIndex()),\"Server snap not indexed\")},cr.prototype.applyOperation=function(t,e,n,r){var i,o,s=new rr;if(e.type===xn.OVERWRITE){var a=e;i=a.source.fromUser?this.applyUserOverwrite_(t,a.path,a.snap,n,r,s):(C(a.source.fromServer,\"Unknown source.\"),o=a.source.tagged||t.getServerCache().isFiltered()&&!a.path.isEmpty(),this.applyServerOverwrite_(t,a.path,a.snap,n,r,o,s))}else if(e.type===xn.MERGE){var h=e;i=h.source.fromUser?this.applyUserMerge_(t,h.path,h.children,n,r,s):(C(h.source.fromServer,\"Unknown source.\"),o=h.source.tagged||t.getServerCache().isFiltered(),this.applyServerMerge_(t,h.path,h.children,n,r,o,s))}else if(e.type===xn.ACK_USER_WRITE){var l=e;i=l.revert?this.revertUserWrite_(t,l.path,n,r,s):this.ackUserWrite_(t,l.path,l.affectedTree,n,r,s)}else{if(e.type!==xn.LISTEN_COMPLETE)throw c(\"Unknown operation type: \"+e.type);i=this.listenComplete_(t,e.path,n,s)}var u=s.getChanges();return cr.maybeAddValueEvent_(t,i,u),new lr(i,u)},cr.maybeAddValueEvent_=function(t,e,n){var r=e.getEventCache();if(r.isFullyInitialized()){var i=r.getNode().isLeafNode()||r.getNode().isEmpty(),o=t.getCompleteEventSnap();(0<n.length||!t.getEventCache().isFullyInitialized()||i&&!r.getNode().equals(o)||!r.getNode().getPriority().equals(o.getPriority()))&&n.push(Zn.valueChange(e.getCompleteEventSnap()))}},cr.prototype.generateEventCacheAfterServerEvent_=function(t,e,n,r,i){var o=t.getEventCache();if(null!=n.shadowingWrite(e))return t;var s=void 0,a=void 0;if(e.isEmpty())if(C(t.getServerCache().isFullyInitialized(),\"If change path is empty, we must have complete server data\"),t.getServerCache().isFiltered()){var h=t.getCompleteServerSnap(),l=h instanceof Xe?h:Xe.EMPTY_NODE,u=n.calcCompleteEventChildren(l);s=this.filter_.updateFullNode(t.getEventCache().getNode(),u,i)}else{var c=n.calcCompleteEventCache(t.getCompleteServerSnap());s=this.filter_.updateFullNode(t.getEventCache().getNode(),c,i)}else{var p=e.getFront();if(\".priority\"===p){C(1===e.getLength(),\"Can't have a priority with additional path components\");var d=o.getNode();a=t.getServerCache().getNode();var f=n.calcEventCacheAfterServerOverwrite(e,d,a);s=null!=f?this.filter_.updatePriority(d,f):o.getNode()}else{var _=e.popFront(),y=void 0;if(o.isCompleteForChild(p)){a=t.getServerCache().getNode();var v=n.calcEventCacheAfterServerOverwrite(e,o.getNode(),a);y=null!=v?o.getNode().getImmediateChild(p).updateChild(_,v):o.getNode().getImmediateChild(p)}else y=n.calcCompleteChild(p,t.getServerCache());s=null!=y?this.filter_.updateChild(o.getNode(),p,y,_,r,i):o.getNode()}}return t.updateEventSnap(s,o.isFullyInitialized()||e.isEmpty(),this.filter_.filtersNodes())},cr.prototype.applyServerOverwrite_=function(t,e,n,r,i,o,s){var a,h=t.getServerCache(),l=o?this.filter_:this.filter_.getIndexedFilter();if(e.isEmpty())a=l.updateFullNode(h.getNode(),n,null);else if(l.filtersNodes()&&!h.isFiltered()){var u=h.getNode().updateChild(e,n);a=l.updateFullNode(h.getNode(),u,null)}else{var c=e.getFront();if(!h.isCompleteForPath(e)&&1<e.getLength())return t;var p=e.popFront(),d=h.getNode().getImmediateChild(c).updateChild(p,n);a=\".priority\"===c?l.updatePriority(h.getNode(),d):l.updateChild(h.getNode(),c,d,p,sr,null)}var f=t.updateServerSnap(a,h.isFullyInitialized()||e.isEmpty(),l.filtersNodes()),_=new ar(r,f,i);return this.generateEventCacheAfterServerEvent_(f,e,r,_,s)},cr.prototype.applyUserOverwrite_=function(t,e,n,r,i,o){var s,a,h=t.getEventCache(),l=new ar(r,t,i);if(e.isEmpty())a=this.filter_.updateFullNode(t.getEventCache().getNode(),n,o),s=t.updateEventSnap(a,!0,this.filter_.filtersNodes());else{var u=e.getFront();if(\".priority\"===u)a=this.filter_.updatePriority(t.getEventCache().getNode(),n),s=t.updateEventSnap(a,h.isFullyInitialized(),h.isFiltered());else{var c=e.popFront(),p=h.getNode().getImmediateChild(u),d=void 0;if(c.isEmpty())d=n;else{var f=l.getCompleteChild(u);d=null!=f?\".priority\"===c.getBack()&&f.getChild(c.parent()).isEmpty()?f:f.updateChild(c,n):Xe.EMPTY_NODE}if(p.equals(d))s=t;else{var _=this.filter_.updateChild(h.getNode(),u,d,c,l,o);s=t.updateEventSnap(_,h.isFullyInitialized(),this.filter_.filtersNodes())}}}return s},cr.cacheHasChild_=function(t,e){return t.getEventCache().isCompleteForChild(e)},cr.prototype.applyUserMerge_=function(r,i,t,o,s,a){var h=this,l=r;return t.foreach(function(t,e){var n=i.child(t);cr.cacheHasChild_(r,n.getFront())&&(l=h.applyUserOverwrite_(l,n,e,o,s,a))}),t.foreach(function(t,e){var n=i.child(t);cr.cacheHasChild_(r,n.getFront())||(l=h.applyUserOverwrite_(l,n,e,o,s,a))}),l},cr.prototype.applyMerge_=function(n,t){return t.foreach(function(t,e){n=n.updateChild(t,e)}),n},cr.prototype.applyServerMerge_=function(o,t,e,s,a,h,l){var u=this;if(o.getServerCache().getNode().isEmpty()&&!o.getServerCache().isFullyInitialized())return o;var n,c=o;n=t.isEmpty()?e:Un.Empty.setTree(t,e);var p=o.getServerCache().getNode();return n.children.inorderTraversal(function(t,e){if(p.hasChild(t)){var n=o.getServerCache().getNode().getImmediateChild(t),r=u.applyMerge_(n,e);c=u.applyServerOverwrite_(c,new Dt(t),r,s,a,h,l)}}),n.children.inorderTraversal(function(t,e){var n=!o.getServerCache().isCompleteForChild(t)&&null==e.value;if(!p.hasChild(t)&&!n){var r=o.getServerCache().getNode().getImmediateChild(t),i=u.applyMerge_(r,e);c=u.applyServerOverwrite_(c,new Dt(t),i,s,a,h,l)}}),c},cr.prototype.ackUserWrite_=function(t,r,e,n,i,o){if(null!=n.shadowingWrite(r))return t;var s=t.getServerCache().isFiltered(),a=t.getServerCache();if(null!=e.value){if(r.isEmpty()&&a.isFullyInitialized()||a.isCompleteForPath(r))return this.applyServerOverwrite_(t,r,a.getNode().getChild(r),n,i,s,o);if(r.isEmpty()){var h=Un.Empty;return a.getNode().forEachChild(me,function(t,e){h=h.set(new Dt(t),e)}),this.applyServerMerge_(t,r,h,n,i,s,o)}return t}var l=Un.Empty;return e.foreach(function(t,e){var n=r.child(t);a.isCompleteForPath(n)&&(l=l.set(t,a.getNode().getChild(n)))}),this.applyServerMerge_(t,r,l,n,i,s,o)},cr.prototype.listenComplete_=function(t,e,n,r){var i=t.getServerCache(),o=t.updateServerSnap(i.getNode(),i.isFullyInitialized()||e.isEmpty(),i.isFiltered());return this.generateEventCacheAfterServerEvent_(o,e,n,sr,r)},cr.prototype.revertUserWrite_=function(t,e,n,r,i){var o;if(null!=n.shadowingWrite(e))return t;var s=new ar(n,t,r),a=t.getEventCache().getNode(),h=void 0;if(e.isEmpty()||\".priority\"===e.getFront()){var l=void 0;if(t.getServerCache().isFullyInitialized())l=n.calcCompleteEventCache(t.getCompleteServerSnap());else{var u=t.getServerCache().getNode();C(u instanceof Xe,\"serverChildren would be complete if leaf node\"),l=n.calcCompleteEventChildren(u)}l=l,h=this.filter_.updateFullNode(a,l,i)}else{var c=e.getFront(),p=n.calcCompleteChild(c,t.getServerCache());null==p&&t.getServerCache().isCompleteForChild(c)&&(p=a.getImmediateChild(c)),(h=null!=p?this.filter_.updateChild(a,c,p,e.popFront(),s,i):t.getEventCache().getNode().hasChild(c)?this.filter_.updateChild(a,c,Xe.EMPTY_NODE,e.popFront(),s,i):a).isEmpty()&&t.getServerCache().isFullyInitialized()&&(o=n.calcCompleteEventCache(t.getCompleteServerSnap())).isLeafNode()&&(h=this.filter_.updateFullNode(h,o,i))}return o=t.getServerCache().isFullyInitialized()||null!=n.shadowingWrite(Dt.Empty),t.updateEventSnap(h,o,this.filter_.filtersNodes())},cr);function cr(t){this.filter_=t}var pr=(dr.prototype.generateEventsForChanges=function(t,e,n){var r=this,i=[],o=[];return t.forEach(function(t){t.type===Zn.CHILD_CHANGED&&r.index_.indexedValueChanged(t.oldSnap,t.snapshotNode)&&o.push(Zn.childMovedChange(t.childName,t.snapshotNode))}),this.generateEventsForType_(i,Zn.CHILD_REMOVED,t,n,e),this.generateEventsForType_(i,Zn.CHILD_ADDED,t,n,e),this.generateEventsForType_(i,Zn.CHILD_MOVED,o,n,e),this.generateEventsForType_(i,Zn.CHILD_CHANGED,t,n,e),this.generateEventsForType_(i,Zn.VALUE,t,n,e),i},dr.prototype.generateEventsForType_=function(r,e,t,i,o){var s=this,n=t.filter(function(t){return t.type===e});n.sort(this.compareChanges_.bind(this)),n.forEach(function(e){var n=s.materializeSingleChange_(e,o);i.forEach(function(t){t.respondsTo(e.type)&&r.push(t.createEvent(n,s.query_))})})},dr.prototype.materializeSingleChange_=function(t,e){return\"value\"===t.type||\"child_removed\"===t.type||(t.prevName=e.getPredecessorChildName(t.childName,t.snapshotNode,this.index_)),t},dr.prototype.compareChanges_=function(t,e){if(null==t.childName||null==e.childName)throw c(\"Should only compare child_ events.\");var n=new ue(t.childName,t.snapshotNode),r=new ue(e.childName,e.snapshotNode);return this.index_.compare(n,r)},dr);function dr(t){this.query_=t,this.index_=this.query_.getQueryParams().getIndex()}var fr,_r=(yr.prototype.getQuery=function(){return this.query_},yr.prototype.getServerCache=function(){return this.viewCache_.getServerCache().getNode()},yr.prototype.getCompleteServerCache=function(t){var e=this.viewCache_.getCompleteServerSnap();return e&&(this.query_.getQueryParams().loadsAllData()||!t.isEmpty()&&!e.getImmediateChild(t.getFront()).isEmpty())?e.getChild(t):null},yr.prototype.isEmpty=function(){return 0===this.eventRegistrations_.length},yr.prototype.addEventRegistration=function(t){this.eventRegistrations_.push(t)},yr.prototype.removeEventRegistration=function(t,n){var r=[];if(n){C(null==t,\"A cancel should cancel all event registrations.\");var i=this.query_.path;this.eventRegistrations_.forEach(function(t){n=n;var e=t.createCancelEvent(n,i);e&&r.push(e)})}if(t){for(var e=[],o=0;o<this.eventRegistrations_.length;++o){var s=this.eventRegistrations_[o];if(s.matches(t)){if(t.hasAnyCallback()){e=e.concat(this.eventRegistrations_.slice(o+1));break}}else e.push(s)}this.eventRegistrations_=e}else this.eventRegistrations_=[];return r},yr.prototype.applyOperation=function(t,e,n){t.type===xn.MERGE&&null!==t.source.queryId&&(C(this.viewCache_.getCompleteServerSnap(),\"We should always have a full cache before handling merges\"),C(this.viewCache_.getCompleteEventSnap(),\"Missing event cache, even though we have a server cache\"));var r=this.viewCache_,i=this.processor_.applyOperation(r,t,e,n);return this.processor_.assertIndexed(i.viewCache),C(i.viewCache.getServerCache().isFullyInitialized()||!r.getServerCache().isFullyInitialized(),\"Once a server snap is complete, it should never go back\"),this.viewCache_=i.viewCache,this.generateEventsForChanges_(i.changes,i.viewCache.getEventCache().getNode(),null)},yr.prototype.getInitialEvents=function(t){var e=this.viewCache_.getEventCache(),n=[];return e.getNode().isLeafNode()||e.getNode().forEachChild(Pe,function(t,e){n.push(Zn.childAddedChange(t,e))}),e.isFullyInitialized()&&n.push(Zn.valueChange(e.getNode())),this.generateEventsForChanges_(n,e.getNode(),t)},yr.prototype.generateEventsForChanges_=function(t,e,n){var r=n?[n]:this.eventRegistrations_;return this.eventGenerator_.generateEventsForChanges(t,e,r)},yr);function yr(t,e){this.query_=t,this.eventRegistrations_=[];var n=this.query_.getQueryParams(),r=new er(n.getIndex()),i=n.getNodeFilter();this.processor_=new ur(i);var o=e.getServerCache(),s=e.getEventCache(),a=r.updateFullNode(Xe.EMPTY_NODE,o.getNode(),null),h=i.updateFullNode(Xe.EMPTY_NODE,s.getNode(),null),l=new Gn(a,o.isFullyInitialized(),r.filtersNodes()),u=new Gn(h,s.isFullyInitialized(),i.filtersNodes());this.viewCache_=new $n(u,l),this.eventGenerator_=new pr(this.query_)}var vr=(Object.defineProperty(gr,\"__referenceConstructor\",{get:function(){return C(fr,\"Reference.ts has not been loaded\"),fr},set:function(t){C(!fr,\"__referenceConstructor has already been defined\"),fr=t},enumerable:!0,configurable:!0}),gr.prototype.isEmpty=function(){return 0===this.views.size},gr.prototype.applyOperation=function(t,e,n){var r,i,o=t.source.queryId;if(null!==o){var s=this.views.get(o);return C(null!=s,\"SyncTree gave us an op for an invalid query.\"),s.applyOperation(t,e,n)}var a=[];try{for(var h=_(this.views.values()),l=h.next();!l.done;l=h.next())s=l.value,a=a.concat(s.applyOperation(t,e,n))}catch(t){r={error:t}}finally{try{l&&!l.done&&(i=h.return)&&i.call(h)}finally{if(r)throw r.error}}return a},gr.prototype.addEventRegistration=function(t,e,n,r,i){var o=t.queryIdentifier(),s=this.views.get(o);if(!s){var a=n.calcCompleteEventCache(i?r:null),h=!1;h=!!a||(a=r instanceof Xe?n.calcCompleteEventChildren(r):Xe.EMPTY_NODE,!1);var l=new $n(new Gn(a,h,!1),new Gn(r,i,!1));s=new _r(t,l),this.views.set(o,s)}return s.addEventRegistration(e),s.getInitialEvents(e)},gr.prototype.removeEventRegistration=function(t,e,n){var r,i,o=t.queryIdentifier(),s=[],a=[],h=this.hasCompleteView();if(\"default\"===o)try{for(var l=_(this.views.entries()),u=l.next();!u.done;u=l.next()){var c=f(u.value,2),p=c[0],d=c[1];a=a.concat(d.removeEventRegistration(e,n)),d.isEmpty()&&(this.views.delete(p),d.getQuery().getQueryParams().loadsAllData()||s.push(d.getQuery()))}}catch(t){r={error:t}}finally{try{u&&!u.done&&(i=l.return)&&i.call(l)}finally{if(r)throw r.error}}else(d=this.views.get(o))&&(a=a.concat(d.removeEventRegistration(e,n)),d.isEmpty()&&(this.views.delete(o),d.getQuery().getQueryParams().loadsAllData()||s.push(d.getQuery())));return h&&!this.hasCompleteView()&&s.push(new gr.__referenceConstructor(t.repo,t.path)),{removed:s,events:a}},gr.prototype.getQueryViews=function(){var e,t,n=[];try{for(var r=_(this.views.values()),i=r.next();!i.done;i=r.next()){var o=i.value;o.getQuery().getQueryParams().loadsAllData()||n.push(o)}}catch(t){e={error:t}}finally{try{i&&!i.done&&(t=r.return)&&t.call(r)}finally{if(e)throw e.error}}return n},gr.prototype.getCompleteServerCache=function(t){var e,n,r=null;try{for(var i=_(this.views.values()),o=i.next();!o.done;o=i.next()){var s=o.value;r=r||s.getCompleteServerCache(t)}}catch(t){e={error:t}}finally{try{o&&!o.done&&(n=i.return)&&n.call(i)}finally{if(e)throw e.error}}return r},gr.prototype.viewForQuery=function(t){if(t.getQueryParams().loadsAllData())return this.getCompleteView();var e=t.queryIdentifier();return this.views.get(e)},gr.prototype.viewExistsForQuery=function(t){return null!=this.viewForQuery(t)},gr.prototype.hasCompleteView=function(){return null!=this.getCompleteView()},gr.prototype.getCompleteView=function(){var e,t;try{for(var n=_(this.views.values()),r=n.next();!r.done;r=n.next()){var i=r.value;if(i.getQuery().getQueryParams().loadsAllData())return i}}catch(t){e={error:t}}finally{try{r&&!r.done&&(t=n.return)&&t.call(n)}finally{if(e)throw e.error}}return null},gr);function gr(){this.views=new Map}var mr=(Cr.prototype.addWrite=function(t,e){if(t.isEmpty())return new Cr(new Un(e));var n=this.writeTree_.findRootMostValueAndPath(t);if(null!=n){var r=n.path,i=n.value,o=Dt.relativePath(r,t);return i=i.updateChild(o,e),new Cr(this.writeTree_.set(r,i))}var s=new Un(e);return new Cr(this.writeTree_.setTree(t,s))},Cr.prototype.addWrites=function(n,t){var r=this;return St(t,function(t,e){r=r.addWrite(n.child(t),e)}),r},Cr.prototype.removeWrite=function(t){return t.isEmpty()?Cr.Empty:new Cr(this.writeTree_.setTree(t,Un.Empty))},Cr.prototype.hasCompleteWrite=function(t){return null!=this.getCompleteNode(t)},Cr.prototype.getCompleteNode=function(t){var e=this.writeTree_.findRootMostValueAndPath(t);return null!=e?this.writeTree_.get(e.path).getChild(Dt.relativePath(e.path,t)):null},Cr.prototype.getCompleteChildren=function(){var n=[],t=this.writeTree_.value;return null!=t?t.isLeafNode()||t.forEachChild(Pe,function(t,e){n.push(new ue(t,e))}):this.writeTree_.children.inorderTraversal(function(t,e){null!=e.value&&n.push(new ue(t,e.value))}),n},Cr.prototype.childCompoundWrite=function(t){if(t.isEmpty())return this;var e=this.getCompleteNode(t);return new Cr(null!=e?new Un(e):this.writeTree_.subtree(t))},Cr.prototype.isEmpty=function(){return this.writeTree_.isEmpty()},Cr.prototype.apply=function(t){return function n(r,t,i){if(null!=t.value)return i.updateChild(r,t.value);var o=null;return t.children.inorderTraversal(function(t,e){\".priority\"===t?(C(null!==e.value,\"Priority writes must always be leaf nodes\"),o=e.value):i=n(r.child(t),e,i)}),i.getChild(r).isEmpty()||null===o||(i=i.updateChild(r.child(\".priority\"),o)),i}(Dt.Empty,this.writeTree_,t)},Cr.Empty=new Cr(new Un(null)),Cr);function Cr(t){this.writeTree_=t}var Er=(wr.prototype.childWrites=function(t){return new br(t,this)},wr.prototype.addOverwrite=function(t,e,n,r){C(n>this.lastWriteId_,\"Stacking an older write on top of newer ones\"),void 0===r&&(r=!0),this.allWrites_.push({path:t,snap:e,writeId:n,visible:r}),r&&(this.visibleWrites_=this.visibleWrites_.addWrite(t,e)),this.lastWriteId_=n},wr.prototype.addMerge=function(t,e,n){C(n>this.lastWriteId_,\"Stacking an older merge on top of newer ones\"),this.allWrites_.push({path:t,children:e,writeId:n,visible:!0}),this.visibleWrites_=this.visibleWrites_.addWrites(t,e),this.lastWriteId_=n},wr.prototype.getWrite=function(t){for(var e=0;e<this.allWrites_.length;e++){var n=this.allWrites_[e];if(n.writeId===t)return n}return null},wr.prototype.removeWrite=function(e){var n=this,t=this.allWrites_.findIndex(function(t){return t.writeId===e});C(0<=t,\"removeWrite called with nonexistent writeId.\");var r=this.allWrites_[t];this.allWrites_.splice(t,1);for(var i=r.visible,o=!1,s=this.allWrites_.length-1;i&&0<=s;){var a=this.allWrites_[s];a.visible&&(t<=s&&this.recordContainsPath_(a,r.path)?i=!1:r.path.contains(a.path)&&(o=!0)),s--}return!!i&&(o?this.resetTree_():r.snap?this.visibleWrites_=this.visibleWrites_.removeWrite(r.path):St(r.children,function(t){n.visibleWrites_=n.visibleWrites_.removeWrite(r.path.child(t))}),!0)},wr.prototype.getCompleteWriteData=function(t){return this.visibleWrites_.getCompleteNode(t)},wr.prototype.calcCompleteEventCache=function(e,t,n,r){if(n||r){var i=this.visibleWrites_.childCompoundWrite(e);if(!r&&i.isEmpty())return t;if(r||null!=t||i.hasCompleteWrite(Dt.Empty)){var o=wr.layerTree_(this.allWrites_,function(t){return(t.visible||r)&&(!n||!~n.indexOf(t.writeId))&&(t.path.contains(e)||e.contains(t.path))},e);return h=t||Xe.EMPTY_NODE,o.apply(h)}return null}var s=this.visibleWrites_.getCompleteNode(e);if(null!=s)return s;var a=this.visibleWrites_.childCompoundWrite(e);if(a.isEmpty())return t;if(null!=t||a.hasCompleteWrite(Dt.Empty)){var h=t||Xe.EMPTY_NODE;return a.apply(h)}return null},wr.prototype.calcCompleteEventChildren=function(t,e){var r=Xe.EMPTY_NODE,n=this.visibleWrites_.getCompleteNode(t);if(n)return n.isLeafNode()||n.forEachChild(Pe,function(t,e){r=r.updateImmediateChild(t,e)}),r;if(e){var i=this.visibleWrites_.childCompoundWrite(t);return e.forEachChild(Pe,function(t,e){var n=i.childCompoundWrite(new Dt(t)).apply(e);r=r.updateImmediateChild(t,n)}),i.getCompleteChildren().forEach(function(t){r=r.updateImmediateChild(t.name,t.node)}),r}return this.visibleWrites_.childCompoundWrite(t).getCompleteChildren().forEach(function(t){r=r.updateImmediateChild(t.name,t.node)}),r},wr.prototype.calcEventCacheAfterServerOverwrite=function(t,e,n,r){C(n||r,\"Either existingEventSnap or existingServerSnap must exist\");var i=t.child(e);if(this.visibleWrites_.hasCompleteWrite(i))return null;var o=this.visibleWrites_.childCompoundWrite(i);return o.isEmpty()?r.getChild(e):o.apply(r.getChild(e))},wr.prototype.calcCompleteChild=function(t,e,n){var r=t.child(e),i=this.visibleWrites_.getCompleteNode(r);return null!=i?i:n.isCompleteForChild(e)?this.visibleWrites_.childCompoundWrite(r).apply(n.getNode().getImmediateChild(e)):null},wr.prototype.shadowingWrite=function(t){return this.visibleWrites_.getCompleteNode(t)},wr.prototype.calcIndexedSlice=function(t,e,n,r,i,o){var s,a=this.visibleWrites_.childCompoundWrite(t),h=a.getCompleteNode(Dt.Empty);if(null!=h)s=h;else{if(null==e)return[];s=a.apply(e)}if((s=s.withIndex(o)).isEmpty()||s.isLeafNode())return[];for(var l=[],u=o.getCompare(),c=i?s.getReverseIteratorFrom(n,o):s.getIteratorFrom(n,o),p=c.getNext();p&&l.length<r;)0!==u(p,n)&&l.push(p),p=c.getNext();return l},wr.prototype.recordContainsPath_=function(t,e){if(t.snap)return t.path.contains(e);for(var n in t.children)if(t.children.hasOwnProperty(n)&&t.path.child(n).contains(e))return!0;return!1},wr.prototype.resetTree_=function(){this.visibleWrites_=wr.layerTree_(this.allWrites_,wr.DefaultFilter_,Dt.Empty),0<this.allWrites_.length?this.lastWriteId_=this.allWrites_[this.allWrites_.length-1].writeId:this.lastWriteId_=-1},wr.DefaultFilter_=function(t){return t.visible},wr.layerTree_=function(t,e,n){for(var r=mr.Empty,i=0;i<t.length;++i){var o=t[i];if(e(o)){var s=o.path,a=void 0;if(o.snap)n.contains(s)?(a=Dt.relativePath(n,s),r=r.addWrite(a,o.snap)):s.contains(n)&&(a=Dt.relativePath(s,n),r=r.addWrite(Dt.Empty,o.snap.getChild(a)));else{if(!o.children)throw c(\"WriteRecord should have .snap or .children\");if(n.contains(s))a=Dt.relativePath(n,s),r=r.addWrites(a,o.children);else if(s.contains(n))if((a=Dt.relativePath(s,n)).isEmpty())r=r.addWrites(Dt.Empty,o.children);else{var h=P(o.children,a.getFront());if(h){var l=h.getChild(a.popFront());r=r.addWrite(Dt.Empty,l)}}}}}return r},wr);function wr(){this.visibleWrites_=mr.Empty,this.allWrites_=[],this.lastWriteId_=-1}var br=(Sr.prototype.calcCompleteEventCache=function(t,e,n){return this.writeTree_.calcCompleteEventCache(this.treePath_,t,e,n)},Sr.prototype.calcCompleteEventChildren=function(t){return this.writeTree_.calcCompleteEventChildren(this.treePath_,t)},Sr.prototype.calcEventCacheAfterServerOverwrite=function(t,e,n){return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_,t,e,n)},Sr.prototype.shadowingWrite=function(t){return this.writeTree_.shadowingWrite(this.treePath_.child(t))},Sr.prototype.calcIndexedSlice=function(t,e,n,r,i){return this.writeTree_.calcIndexedSlice(this.treePath_,t,e,n,r,i)},Sr.prototype.calcCompleteChild=function(t,e){return this.writeTree_.calcCompleteChild(this.treePath_,t,e)},Sr.prototype.child=function(t){return new Sr(this.treePath_.child(t),this.writeTree_)},Sr);function Sr(t,e){this.treePath_=t,this.writeTree_=e}var Tr=(Ir.prototype.applyUserOverwrite=function(t,e,n,r){return this.pendingWriteTree_.addOverwrite(t,e,n,r),r?this.applyOperationToSyncPoints_(new jn(Ln.User,t,e)):[]},Ir.prototype.applyUserMerge=function(t,e,n){this.pendingWriteTree_.addMerge(t,e,n);var r=Un.fromObject(e);return this.applyOperationToSyncPoints_(new Kn(Ln.User,t,r))},Ir.prototype.ackUserWrite=function(t,e){void 0===e&&(e=!1);var n=this.pendingWriteTree_.getWrite(t);if(this.pendingWriteTree_.removeWrite(t)){var r=Un.Empty;return null!=n.snap?r=r.set(Dt.Empty,!0):St(n.children,function(t,e){r=r.set(new Dt(t),e)}),this.applyOperationToSyncPoints_(new Qn(n.path,r,e))}return[]},Ir.prototype.applyServerOverwrite=function(t,e){return this.applyOperationToSyncPoints_(new jn(Ln.Server,t,e))},Ir.prototype.applyServerMerge=function(t,e){var n=Un.fromObject(e);return this.applyOperationToSyncPoints_(new Kn(Ln.Server,t,n))},Ir.prototype.applyListenComplete=function(t){return this.applyOperationToSyncPoints_(new Hn(Ln.Server,t))},Ir.prototype.applyTaggedQueryOverwrite=function(t,e,n){var r=this.queryKeyForTag_(n);if(null==r)return[];var i=Ir.parseQueryKey_(r),o=i.path,s=i.queryId,a=Dt.relativePath(o,t),h=new jn(Ln.forServerTaggedQuery(s),a,e);return this.applyTaggedOperation_(o,h)},Ir.prototype.applyTaggedQueryMerge=function(t,e,n){var r=this.queryKeyForTag_(n);if(r){var i=Ir.parseQueryKey_(r),o=i.path,s=i.queryId,a=Dt.relativePath(o,t),h=Un.fromObject(e),l=new Kn(Ln.forServerTaggedQuery(s),a,h);return this.applyTaggedOperation_(o,l)}return[]},Ir.prototype.applyTaggedListenComplete=function(t,e){var n=this.queryKeyForTag_(e);if(n){var r=Ir.parseQueryKey_(n),i=r.path,o=r.queryId,s=Dt.relativePath(i,t),a=new Hn(Ln.forServerTaggedQuery(o),s);return this.applyTaggedOperation_(i,a)}return[]},Ir.prototype.addEventRegistration=function(t,e){var r=t.path,i=null,o=!1;this.syncPointTree_.foreachOnPath(r,function(t,e){var n=Dt.relativePath(t,r);i=i||e.getCompleteServerCache(n),o=o||e.hasCompleteView()});var n,s=this.syncPointTree_.get(r);s?(o=o||s.hasCompleteView(),i=i||s.getCompleteServerCache(Dt.Empty)):(s=new vr,this.syncPointTree_=this.syncPointTree_.set(r,s)),null!=i?n=!0:(n=!1,i=Xe.EMPTY_NODE,this.syncPointTree_.subtree(r).foreachChild(function(t,e){var n=e.getCompleteServerCache(Dt.Empty);n&&(i=i.updateImmediateChild(t,n))}));var a=s.viewExistsForQuery(t);if(!a&&!t.getQueryParams().loadsAllData()){var h=Ir.makeQueryKey_(t);C(!this.queryToTagMap.has(h),\"View does not exist, but we have a tag\");var l=Ir.getNextQueryTag_();this.queryToTagMap.set(h,l),this.tagToQueryMap.set(l,h)}var u=this.pendingWriteTree_.childWrites(r),c=s.addEventRegistration(t,e,u,i,n);if(!a&&!o){var p=s.viewForQuery(t);c=c.concat(this.setupListener_(t,p))}return c},Ir.prototype.removeEventRegistration=function(t,e,n){var r=this,i=t.path,o=this.syncPointTree_.get(i),s=[];if(o&&(\"default\"===t.queryIdentifier()||o.viewExistsForQuery(t))){var a=o.removeEventRegistration(t,e,n);o.isEmpty()&&(this.syncPointTree_=this.syncPointTree_.remove(i));var h=a.removed;s=a.events;var l=-1!==h.findIndex(function(t){return t.getQueryParams().loadsAllData()}),u=this.syncPointTree_.findOnPath(i,function(t,e){return e.hasCompleteView()});if(l&&!u){var c=this.syncPointTree_.subtree(i);if(!c.isEmpty())for(var p=this.collectDistinctViewsForSubTree_(c),d=0;d<p.length;++d){var f=p[d],_=f.getQuery(),y=this.createListenerForView_(f);this.listenProvider_.startListening(Ir.queryForListening_(_),this.tagForQuery_(_),y.hashFn,y.onComplete)}}!u&&0<h.length&&!n&&(l?this.listenProvider_.stopListening(Ir.queryForListening_(t),null):h.forEach(function(t){var e=r.queryToTagMap.get(Ir.makeQueryKey_(t));r.listenProvider_.stopListening(Ir.queryForListening_(t),e)})),this.removeTags_(h)}return s},Ir.prototype.calcCompleteEventCache=function(i,t){var e=this.pendingWriteTree_,n=this.syncPointTree_.findOnPath(i,function(t,e){var n=Dt.relativePath(t,i),r=e.getCompleteServerCache(n);if(r)return r});return e.calcCompleteEventCache(i,n,t,!0)},Ir.prototype.collectDistinctViewsForSubTree_=function(t){return t.fold(function(t,e,n){if(e&&e.hasCompleteView())return[e.getCompleteView()];var r=[];return e&&(r=e.getQueryViews()),St(n,function(t,e){r=r.concat(e)}),r})},Ir.prototype.removeTags_=function(t){for(var e=0;e<t.length;++e){var n=t[e];if(!n.getQueryParams().loadsAllData()){var r=Ir.makeQueryKey_(n),i=this.queryToTagMap.get(r);this.queryToTagMap.delete(r),this.tagToQueryMap.delete(i)}}},Ir.queryForListening_=function(t){return t.getQueryParams().loadsAllData()&&!t.getQueryParams().isDefault()?t.getRef():t},Ir.prototype.setupListener_=function(t,e){var n=t.path,r=this.tagForQuery_(t),i=this.createListenerForView_(e),o=this.listenProvider_.startListening(Ir.queryForListening_(t),r,i.hashFn,i.onComplete),s=this.syncPointTree_.subtree(n);if(r)C(!s.value.hasCompleteView(),\"If we're adding a query, it shouldn't be shadowed\");else for(var a=s.fold(function(t,e,n){if(!t.isEmpty()&&e&&e.hasCompleteView())return[e.getCompleteView().getQuery()];var r=[];return e&&(r=r.concat(e.getQueryViews().map(function(t){return t.getQuery()}))),St(n,function(t,e){r=r.concat(e)}),r}),h=0;h<a.length;++h){var l=a[h];this.listenProvider_.stopListening(Ir.queryForListening_(l),this.tagForQuery_(l))}return o},Ir.prototype.createListenerForView_=function(t){var n=this,r=t.getQuery(),i=this.tagForQuery_(r);return{hashFn:function(){return(t.getServerCache()||Xe.EMPTY_NODE).hash()},onComplete:function(t){if(\"ok\"===t)return i?n.applyTaggedListenComplete(r.path,i):n.applyListenComplete(r.path);var e=function(t,e){var n=\"Unknown Error\";\"too_big\"===t?n=\"The data requested exceeds the maximum size that can be accessed with a single request.\":\"permission_denied\"===t?n=\"Client doesn't have permission to access the desired data.\":\"unavailable\"===t&&(n=\"The service is unavailable\");var r=new Error(t+\" at \"+e.path.toString()+\": \"+n);return r.code=t.toUpperCase(),r}(t,r);return n.removeEventRegistration(r,null,e)}}},Ir.makeQueryKey_=function(t){return t.path.toString()+\"$\"+t.queryIdentifier()},Ir.parseQueryKey_=function(t){var e=t.indexOf(\"$\");return C(-1!==e&&e<t.length-1,\"Bad queryKey.\"),{queryId:t.substr(e+1),path:new Dt(t.substr(0,e))}},Ir.prototype.queryKeyForTag_=function(t){return this.tagToQueryMap.get(t)},Ir.prototype.tagForQuery_=function(t){var e=Ir.makeQueryKey_(t);return this.queryToTagMap.get(e)},Ir.getNextQueryTag_=function(){return Ir.nextQueryTag_++},Ir.prototype.applyTaggedOperation_=function(t,e){var n=this.syncPointTree_.get(t);C(n,\"Missing sync point for query tag that we're tracking\");var r=this.pendingWriteTree_.childWrites(t);return n.applyOperation(e,r,null)},Ir.prototype.applyOperationToSyncPoints_=function(t){return this.applyOperationHelper_(t,this.syncPointTree_,null,this.pendingWriteTree_.childWrites(Dt.Empty))},Ir.prototype.applyOperationHelper_=function(t,e,n,r){if(t.path.isEmpty())return this.applyOperationDescendantsHelper_(t,e,n,r);var i=e.get(Dt.Empty);null==n&&null!=i&&(n=i.getCompleteServerCache(Dt.Empty));var o=[],s=t.path.getFront(),a=t.operationForChild(s),h=e.children.get(s);if(h&&a){var l=n?n.getImmediateChild(s):null,u=r.child(s);o=o.concat(this.applyOperationHelper_(a,h,l,u))}return i&&(o=o.concat(i.applyOperation(t,r,n))),o},Ir.prototype.applyOperationDescendantsHelper_=function(o,t,s,a){var h=this,e=t.get(Dt.Empty);null==s&&null!=e&&(s=e.getCompleteServerCache(Dt.Empty));var l=[];return t.children.inorderTraversal(function(t,e){var n=s?s.getImmediateChild(t):null,r=a.child(t),i=o.operationForChild(t);i&&(l=l.concat(h.applyOperationDescendantsHelper_(i,e,n,r)))}),e&&(l=l.concat(e.applyOperation(o,a,s))),l},Ir.nextQueryTag_=1,Ir);function Ir(t){this.listenProvider_=t,this.syncPointTree_=Un.Empty,this.pendingWriteTree_=new Er,this.tagToQueryMap=new Map,this.queryToTagMap=new Map}var Nr=(Rr.prototype.getNode=function(t){return this.rootNode_.getChild(t)},Rr.prototype.updateSnapshot=function(t,e){this.rootNode_=this.rootNode_.updateChild(t,e)},Rr);function Rr(){this.rootNode_=Xe.EMPTY_NODE}var Pr=(Dr.prototype.getToken=function(t){return this.auth_?this.auth_.getToken(t).catch(function(t){return t&&\"auth/token-not-initialized\"===t.code?(rt(\"Got auth/token-not-initialized error.  Treating as null token.\"),null):Promise.reject(t)}):Promise.resolve(null)},Dr.prototype.addTokenChangeListener=function(e){this.auth_?this.auth_.addAuthTokenListener(e):(setTimeout(function(){return e(null)},0),this.authProvider_.get().then(function(t){return t.addAuthTokenListener(e)}))},Dr.prototype.removeTokenChangeListener=function(e){this.authProvider_.get().then(function(t){return t.removeAuthTokenListener(e)})},Dr.prototype.notifyForInvalidToken=function(){var t='Provided authentication credentials for the app named \"'+this.app_.name+'\" are invalid. This usually indicates your app was not initialized correctly. ';\"credential\"in this.app_.options?t+='Make sure the \"credential\" property provided to initializeApp() is authorized to access the specified \"databaseURL\" and is from the correct project.':\"serviceAccount\"in this.app_.options?t+='Make sure the \"serviceAccount\" property provided to initializeApp() is authorized to access the specified \"databaseURL\" and is from the correct project.':t+='Make sure the \"apiKey\" and \"databaseURL\" properties provided to initializeApp() match the values provided for your app at https://console.firebase.google.com/.',at(t)},Dr);function Dr(t,e){var n=this;this.app_=t,this.authProvider_=e,this.auth_=null,this.auth_=e.getImmediate({optional:!0}),this.auth_||e.get().then(function(t){return n.auth_=t})}var Or=(xr.prototype.incrementCounter=function(t,e){void 0===e&&(e=1),R(this.counters_,t)||(this.counters_[t]=0),this.counters_[t]+=e},xr.prototype.get=function(){return i(this.counters_)},xr);function xr(){this.counters_={}}var kr=(Fr.getCollection=function(t){var e=t.toString();return this.collections_[e]||(this.collections_[e]=new Or),this.collections_[e]},Fr.getOrCreateReporter=function(t,e){var n=t.toString();return this.reporters_[n]||(this.reporters_[n]=e()),this.reporters_[n]},Fr.collections_={},Fr.reporters_={},Fr);function Fr(){}var Ar=(Lr.prototype.get=function(){var t=this.collection_.get(),n=u({},t);return this.last_&&St(this.last_,function(t,e){n[t]=n[t]-e}),this.last_=t,n},Lr);function Lr(t){this.collection_=t,this.last_=null}var Mr=(Wr.prototype.includeStat=function(t){this.statsToReport_[t]=!0},Wr.prototype.reportStats_=function(){var n=this,t=this.statsListener_.get(),r={},i=!1;St(t,function(t,e){0<e&&R(n.statsToReport_,t)&&(r[t]=e,i=!0)}),i&&this.server_.reportStats(r),Nt(this.reportStats_.bind(this),Math.floor(2*Math.random()*3e5))},Wr);function Wr(t,e){this.server_=e,this.statsToReport_={},this.statsListener_=new Ar(t);var n=1e4+2e4*Math.random();Nt(this.reportStats_.bind(this),Math.floor(n))}var Qr=(qr.prototype.queueEvents=function(t){for(var e=null,n=0;n<t.length;n++){var r=t[n],i=r.getPath();null===e||i.equals(e.getPath())||(this.eventLists_.push(e),e=null),null===e&&(e=new Ur(i)),e.add(r)}e&&this.eventLists_.push(e)},qr.prototype.raiseEventsAtPath=function(e,t){this.queueEvents(t),this.raiseQueuedEventsMatchingPredicate_(function(t){return t.equals(e)})},qr.prototype.raiseEventsForChangedPath=function(e,t){this.queueEvents(t),this.raiseQueuedEventsMatchingPredicate_(function(t){return t.contains(e)||e.contains(t)})},qr.prototype.raiseQueuedEventsMatchingPredicate_=function(t){this.recursionDepth_++;for(var e=!0,n=0;n<this.eventLists_.length;n++){var r=this.eventLists_[n];r&&(t(r.getPath())?(this.eventLists_[n].raise(),this.eventLists_[n]=null):e=!1)}e&&(this.eventLists_=[]),this.recursionDepth_--},qr);function qr(){this.eventLists_=[],this.recursionDepth_=0}var Ur=(Vr.prototype.add=function(t){this.events_.push(t)},Vr.prototype.raise=function(){for(var t=0;t<this.events_.length;t++){var e=this.events_[t];if(null!==e){this.events_[t]=null;var n=e.getEventRunner();gt&&rt(\"event: \"+e.toString()),It(n)}}},Vr.prototype.getPath=function(){return this.path_},Vr);function Vr(t){this.path_=t,this.events_=[]}var Hr=(Br.prototype.trigger=function(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];if(Array.isArray(this.listeners_[t]))for(var r=o(this.listeners_[t]),i=0;i<r.length;i++)r[i].callback.apply(r[i].context,e)},Br.prototype.on=function(t,e,n){this.validateEventType_(t),this.listeners_[t]=this.listeners_[t]||[],this.listeners_[t].push({callback:e,context:n});var r=this.getInitialEvent(t);r&&e.apply(n,r)},Br.prototype.off=function(t,e,n){this.validateEventType_(t);for(var r=this.listeners_[t]||[],i=0;i<r.length;i++)if(r[i].callback===e&&(!n||n===r[i].context))return void r.splice(i,1)},Br.prototype.validateEventType_=function(e){C(this.allowedEvents_.find(function(t){return t===e}),\"Unknown event: \"+e)},Br);function Br(t){this.allowedEvents_=t,this.listeners_={},C(Array.isArray(t)&&0<t.length,\"Requires a non-empty array\")}var jr,Yr=(t(Kr,jr=Hr),Kr.getInstance=function(){return new Kr},Kr.prototype.getInitialEvent=function(t){return C(\"visible\"===t,\"Unknown event type: \"+t),[this.visible_]},Kr);function Kr(){var e,t,n=jr.call(this,[\"visible\"])||this;return\"undefined\"!=typeof document&&void 0!==document.addEventListener&&(void 0!==document.hidden?(t=\"visibilitychange\",e=\"hidden\"):void 0!==document.mozHidden?(t=\"mozvisibilitychange\",e=\"mozHidden\"):void 0!==document.msHidden?(t=\"msvisibilitychange\",e=\"msHidden\"):void 0!==document.webkitHidden&&(t=\"webkitvisibilitychange\",e=\"webkitHidden\")),n.visible_=!0,t&&document.addEventListener(t,function(){var t=!document[e];t!==n.visible_&&(n.visible_=t,n.trigger(\"visible\",t))},!1),n}var zr,Gr=(t(Xr,zr=Hr),Xr.getInstance=function(){return new Xr},Xr.prototype.getInitialEvent=function(t){return C(\"online\"===t,\"Unknown event type: \"+t),[this.online_]},Xr.prototype.currentlyOnline=function(){return this.online_},Xr);function Xr(){var t=zr.call(this,[\"online\"])||this;return t.online_=!0,\"undefined\"==typeof window||void 0===window.addEventListener||y()||(window.addEventListener(\"online\",function(){t.online_||(t.online_=!0,t.trigger(\"online\",!0))},!1),window.addEventListener(\"offline\",function(){t.online_&&(t.online_=!1,t.trigger(\"online\",!1))},!1)),t}var $r=(Jr.prototype.closeAfter=function(t,e){this.closeAfterResponse=t,this.onClose=e,this.closeAfterResponse<this.currentResponseNum&&(this.onClose(),this.onClose=null)},Jr.prototype.handleResponse=function(t,e){var r=this;this.pendingResponses[t]=e;for(var n=function(){var e=i.pendingResponses[i.currentResponseNum];delete i.pendingResponses[i.currentResponseNum];for(var t=function(t){e[t]&&It(function(){r.onMessage_(e[t])})},n=0;n<e.length;++n)t(n);if(i.currentResponseNum===i.closeAfterResponse)return i.onClose&&(i.onClose(),i.onClose=null),\"break\";i.currentResponseNum++},i=this;this.pendingResponses[this.currentResponseNum]&&\"break\"!==n(););},Jr);function Jr(t){this.onMessage_=t,this.pendingResponses=[],this.currentResponseNum=0,this.closeAfterResponse=-1,this.onClose=null}var Zr=(ti.prototype.open=function(t,e){var s=this;this.curSegmentNum=0,this.onDisconnect_=e,this.myPacketOrderer=new $r(t),this.isClosed_=!1,this.connectTimeoutTimer_=setTimeout(function(){s.log_(\"Timed out trying to connect.\"),s.onClosed_(),s.connectTimeoutTimer_=null},Math.floor(3e4)),function(t){if(\"complete\"===document.readyState)t();else{var e=!1,n=function(){document.body?e||(e=!0,t()):setTimeout(n,Math.floor(10))};document.addEventListener?(document.addEventListener(\"DOMContentLoaded\",n,!1),window.addEventListener(\"load\",n,!1)):document.attachEvent&&(document.attachEvent(\"onreadystatechange\",function(){\"complete\"===document.readyState&&n()}),window.attachEvent(\"onload\",n))}}(function(){if(!s.isClosed_){s.scriptTagHolder=new ei(function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=f(t,5),r=n[0],i=n[1],o=n[2];if(n[3],n[4],s.incrementIncomingBytes_(t),s.scriptTagHolder)if(s.connectTimeoutTimer_&&(clearTimeout(s.connectTimeoutTimer_),s.connectTimeoutTimer_=null),s.everConnected_=!0,\"start\"===r)s.id=i,s.password=o;else{if(\"close\"!==r)throw new Error(\"Unrecognized command received: \"+r);i?(s.scriptTagHolder.sendNewPolls=!1,s.myPacketOrderer.closeAfter(i,function(){s.onClosed_()})):s.onClosed_()}},function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=f(t,2),r=n[0],i=n[1];s.incrementIncomingBytes_(t),s.myPacketOrderer.handleResponse(r,i)},function(){s.onClosed_()},s.urlFn);var t={start:\"t\"};t.ser=Math.floor(1e8*Math.random()),s.scriptTagHolder.uniqueCallbackIdentifier&&(t.cb=s.scriptTagHolder.uniqueCallbackIdentifier),t.v=\"5\",s.transportSessionId&&(t.s=s.transportSessionId),s.lastSessionId&&(t.ls=s.lastSessionId),\"undefined\"!=typeof location&&location.href&&-1!==location.href.indexOf(Ft)&&(t.r=\"f\");var e=s.urlFn(t);s.log_(\"Connecting via long-poll to \"+e),s.scriptTagHolder.addTag(e,function(){})}})},ti.prototype.start=function(){this.scriptTagHolder.startLongPoll(this.id,this.password),this.addDisconnectPingFrame(this.id,this.password)},ti.forceAllow=function(){ti.forceAllow_=!0},ti.forceDisallow=function(){ti.forceDisallow_=!0},ti.isAvailable=function(){return!!ti.forceAllow_||!(ti.forceDisallow_||\"undefined\"==typeof document||null==document.createElement||\"object\"==typeof window&&window.chrome&&window.chrome.extension&&!/^chrome/.test(window.location.href)||\"object\"==typeof Windows&&\"object\"==typeof Windows.UI)},ti.prototype.markConnectionHealthy=function(){},ti.prototype.shutdown_=function(){this.isClosed_=!0,this.scriptTagHolder&&(this.scriptTagHolder.close(),this.scriptTagHolder=null),this.myDisconnFrame&&(document.body.removeChild(this.myDisconnFrame),this.myDisconnFrame=null),this.connectTimeoutTimer_&&(clearTimeout(this.connectTimeoutTimer_),this.connectTimeoutTimer_=null)},ti.prototype.onClosed_=function(){this.isClosed_||(this.log_(\"Longpoll is closing itself\"),this.shutdown_(),this.onDisconnect_&&(this.onDisconnect_(this.everConnected_),this.onDisconnect_=null))},ti.prototype.close=function(){this.isClosed_||(this.log_(\"Longpoll is being closed.\"),this.shutdown_())},ti.prototype.send=function(t){var e=I(t);this.bytesSent+=e.length,this.stats_.incrementCounter(\"bytes_sent\",e.length);for(var n,r=(n=s(e),l.encodeByteArray(n,!0)),i=ct(r,1840),o=0;o<i.length;o++)this.scriptTagHolder.enqueueSegment(this.curSegmentNum,i.length,i[o]),this.curSegmentNum++},ti.prototype.addDisconnectPingFrame=function(t,e){this.myDisconnFrame=document.createElement(\"iframe\");var n={dframe:\"t\"};n.id=t,n.pw=e,this.myDisconnFrame.src=this.urlFn(n),this.myDisconnFrame.style.display=\"none\",document.body.appendChild(this.myDisconnFrame)},ti.prototype.incrementIncomingBytes_=function(t){var e=I(t).length;this.bytesReceived+=e,this.stats_.incrementCounter(\"bytes_received\",e)},ti);function ti(t,e,n,r){this.connId=t,this.repoInfo=e,this.transportSessionId=n,this.lastSessionId=r,this.bytesSent=0,this.bytesReceived=0,this.everConnected_=!1,this.log_=it(t),this.stats_=kr.getCollection(e),this.urlFn=function(t){return e.connectionURL(Lt,t)}}var ei=(ni.createIFrame_=function(){var e=document.createElement(\"iframe\");if(e.style.display=\"none\",!document.body)throw\"Document body has not initialized. Wait to initialize Firebase until after the document is ready.\";document.body.appendChild(e);try{e.contentWindow.document||rt(\"No IE domain setting required\")}catch(t){var n=document.domain;e.src=\"javascript:void((function(){document.open();document.domain='\"+n+\"';document.close();})())\"}return e.contentDocument?e.doc=e.contentDocument:e.contentWindow?e.doc=e.contentWindow.document:e.document&&(e.doc=e.document),e},ni.prototype.close=function(){var t=this;this.alive=!1,this.myIFrame&&(this.myIFrame.doc.body.innerHTML=\"\",setTimeout(function(){null!==t.myIFrame&&(document.body.removeChild(t.myIFrame),t.myIFrame=null)},Math.floor(0)));var e=this.onDisconnect;e&&(this.onDisconnect=null,e())},ni.prototype.startLongPoll=function(t,e){for(this.myID=t,this.myPW=e,this.alive=!0;this.newRequest_(););},ni.prototype.newRequest_=function(){if(this.alive&&this.sendNewPolls&&this.outstandingRequests.size<(0<this.pendingSegs.length?2:1)){this.currentSerial++;var t={};t.id=this.myID,t.pw=this.myPW,t.ser=this.currentSerial;for(var e=this.urlFn(t),n=\"\",r=0;0<this.pendingSegs.length&&this.pendingSegs[0].d.length+30+n.length<=1870;){var i=this.pendingSegs.shift();n=n+\"&seg\"+r+\"=\"+i.seg+\"&ts\"+r+\"=\"+i.ts+\"&d\"+r+\"=\"+i.d,r++}return e+=n,this.addLongPollTag_(e,this.currentSerial),!0}return!1},ni.prototype.enqueueSegment=function(t,e,n){this.pendingSegs.push({seg:t,ts:e,d:n}),this.alive&&this.newRequest_()},ni.prototype.addLongPollTag_=function(t,e){var n=this;function r(){n.outstandingRequests.delete(e),n.newRequest_()}this.outstandingRequests.add(e);var i=setTimeout(r,Math.floor(25e3));this.addTag(t,function(){clearTimeout(i),r()})},ni.prototype.addTag=function(t,n){var r=this;setTimeout(function(){try{if(!r.sendNewPolls)return;var e=r.myIFrame.doc.createElement(\"script\");e.type=\"text/javascript\",e.async=!0,e.src=t,e.onload=e.onreadystatechange=function(){var t=e.readyState;t&&\"loaded\"!==t&&\"complete\"!==t||(e.onload=e.onreadystatechange=null,e.parentNode&&e.parentNode.removeChild(e),n())},e.onerror=function(){rt(\"Long-poll script failed to load: \"+t),r.sendNewPolls=!1,r.close()},r.myIFrame.doc.body.appendChild(e)}catch(t){}},Math.floor(1))},ni);function ni(t,e,n,r){this.onDisconnect=n,this.urlFn=r,this.outstandingRequests=new Set,this.pendingSegs=[],this.currentSerial=Math.floor(1e8*Math.random()),this.sendNewPolls=!0,this.uniqueCallbackIdentifier=yt(),window[\"pLPCommand\"+this.uniqueCallbackIdentifier]=t,window[\"pRTLPCB\"+this.uniqueCallbackIdentifier]=e,this.myIFrame=ni.createIFrame_();var i=\"\";this.myIFrame.src&&\"javascript:\"===this.myIFrame.src.substr(0,\"javascript:\".length)&&(i='<script>document.domain=\"'+document.domain+'\";<\\/script>');var o=\"<html><body>\"+i+\"</body></html>\";try{this.myIFrame.doc.open(),this.myIFrame.doc.write(o),this.myIFrame.doc.close()}catch(t){rt(\"frame writing exception\"),t.stack&&rt(t.stack),rt(t)}}var ri=\"\";var ii=null;\"undefined\"!=typeof MozWebSocket?ii=MozWebSocket:\"undefined\"!=typeof WebSocket&&(ii=WebSocket);var oi=(si.connectionURL_=function(t,e,n){var r={v:\"5\"};return\"undefined\"!=typeof location&&location.href&&-1!==location.href.indexOf(Ft)&&(r.r=\"f\"),e&&(r.s=e),n&&(r.ls=n),t.connectionURL(At,r)},si.prototype.open=function(t,e){var n=this;this.onDisconnect=e,this.onMessage=t,this.log_(\"Websocket connecting to \"+this.connURL),this.everConnected_=!1,dt.set(\"previous_websocket_failure\",!0);try{if(v()){var r=h.NODE_ADMIN?\"AdminNode\":\"Node\",i={headers:{\"User-Agent\":\"Firebase/5/\"+ri+\"/\"+process.platform+\"/\"+r}},o=process.env,s=0===this.connURL.indexOf(\"wss://\")?o.HTTPS_PROXY||o.https_proxy:o.HTTP_PROXY||o.http_proxy;s&&(i.proxy={origin:s}),this.mySock=new ii(this.connURL,[],i)}else this.mySock=new ii(this.connURL)}catch(t){this.log_(\"Error instantiating WebSocket.\");var a=t.message||t.data;return a&&this.log_(a),void this.onClosed_()}this.mySock.onopen=function(){n.log_(\"Websocket connected.\"),n.everConnected_=!0},this.mySock.onclose=function(){n.log_(\"Websocket connection was disconnected.\"),n.mySock=null,n.onClosed_()},this.mySock.onmessage=function(t){n.handleIncomingFrame(t)},this.mySock.onerror=function(t){n.log_(\"WebSocket error.  Closing connection.\");var e=t.message||t.data;e&&n.log_(e),n.onClosed_()}},si.prototype.start=function(){},si.forceDisallow=function(){si.forceDisallow_=!0},si.isAvailable=function(){var t=!1;if(\"undefined\"!=typeof navigator&&navigator.userAgent){var e=navigator.userAgent.match(/Android ([0-9]{0,}\\.[0-9]{0,})/);e&&1<e.length&&parseFloat(e[1])<4.4&&(t=!0)}return!t&&null!==ii&&!si.forceDisallow_},si.previouslyFailed=function(){return dt.isInMemoryStorage||!0===dt.get(\"previous_websocket_failure\")},si.prototype.markConnectionHealthy=function(){dt.remove(\"previous_websocket_failure\")},si.prototype.appendFrame_=function(t){if(this.frames.push(t),this.frames.length===this.totalFrames){var e=this.frames.join(\"\");this.frames=null;var n=T(e);this.onMessage(n)}},si.prototype.handleNewFrameCount_=function(t){this.totalFrames=t,this.frames=[]},si.prototype.extractFrameCount_=function(t){if(C(null===this.frames,\"We already have a frame buffer\"),t.length<=6){var e=Number(t);if(!isNaN(e))return this.handleNewFrameCount_(e),null}return this.handleNewFrameCount_(1),t},si.prototype.handleIncomingFrame=function(t){if(null!==this.mySock){var e=t.data;if(this.bytesReceived+=e.length,this.stats_.incrementCounter(\"bytes_received\",e.length),this.resetKeepAlive(),null!==this.frames)this.appendFrame_(e);else{var n=this.extractFrameCount_(e);null!==n&&this.appendFrame_(n)}}},si.prototype.send=function(t){this.resetKeepAlive();var e=I(t);this.bytesSent+=e.length,this.stats_.incrementCounter(\"bytes_sent\",e.length);var n=ct(e,16384);1<n.length&&this.sendString_(String(n.length));for(var r=0;r<n.length;r++)this.sendString_(n[r])},si.prototype.shutdown_=function(){this.isClosed_=!0,this.keepaliveTimer&&(clearInterval(this.keepaliveTimer),this.keepaliveTimer=null),this.mySock&&(this.mySock.close(),this.mySock=null)},si.prototype.onClosed_=function(){this.isClosed_||(this.log_(\"WebSocket is closing itself\"),this.shutdown_(),this.onDisconnect&&(this.onDisconnect(this.everConnected_),this.onDisconnect=null))},si.prototype.close=function(){this.isClosed_||(this.log_(\"WebSocket is being closed\"),this.shutdown_())},si.prototype.resetKeepAlive=function(){var t=this;clearInterval(this.keepaliveTimer),this.keepaliveTimer=setInterval(function(){t.mySock&&t.sendString_(\"0\"),t.resetKeepAlive()},Math.floor(45e3))},si.prototype.sendString_=function(t){try{this.mySock.send(t)}catch(t){this.log_(\"Exception thrown from WebSocket.send():\",t.message||t.data,\"Closing connection.\"),setTimeout(this.onClosed_.bind(this),0)}},si.responsesRequiredToBeHealthy=2,si.healthyTimeout=3e4,si);function si(t,e,n,r){this.connId=t,this.keepaliveTimer=null,this.frames=null,this.totalFrames=0,this.bytesSent=0,this.bytesReceived=0,this.log_=it(this.connId),this.stats_=kr.getCollection(e),this.connURL=si.connectionURL_(e,n,r)}var ai=(Object.defineProperty(hi,\"ALL_TRANSPORTS\",{get:function(){return[Zr,oi]},enumerable:!0,configurable:!0}),hi.prototype.initTransports_=function(t){var e,n,r=oi&&oi.isAvailable(),i=r&&!oi.previouslyFailed();if(t.webSocketOnly&&(r||at(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"),i=!0),i)this.transports_=[oi];else{var o=this.transports_=[];try{for(var s=_(hi.ALL_TRANSPORTS),a=s.next();!a.done;a=s.next()){var h=a.value;h&&h.isAvailable()&&o.push(h)}}catch(t){e={error:t}}finally{try{a&&!a.done&&(n=s.return)&&n.call(s)}finally{if(e)throw e.error}}}},hi.prototype.initialTransport=function(){if(0<this.transports_.length)return this.transports_[0];throw new Error(\"No transports available\")},hi.prototype.upgradeTransport=function(){return 1<this.transports_.length?this.transports_[1]:null},hi);function hi(t){this.initTransports_(t)}var li=(ui.prototype.start_=function(){var t=this,e=this.transportManager_.initialTransport();this.conn_=new e(this.nextTransportId_(),this.repoInfo_,void 0,this.lastSessionId),this.primaryResponsesRequired_=e.responsesRequiredToBeHealthy||0;var n=this.connReceiver_(this.conn_),r=this.disconnReceiver_(this.conn_);this.tx_=this.conn_,this.rx_=this.conn_,this.secondaryConn_=null,this.isHealthy_=!1,setTimeout(function(){t.conn_&&t.conn_.open(n,r)},Math.floor(0));var i=e.healthyTimeout||0;0<i&&(this.healthyTimeout_=Nt(function(){t.healthyTimeout_=null,t.isHealthy_||(t.conn_&&102400<t.conn_.bytesReceived?(t.log_(\"Connection exceeded healthy timeout but has received \"+t.conn_.bytesReceived+\" bytes.  Marking connection healthy.\"),t.isHealthy_=!0,t.conn_.markConnectionHealthy()):t.conn_&&10240<t.conn_.bytesSent?t.log_(\"Connection exceeded healthy timeout but has sent \"+t.conn_.bytesSent+\" bytes.  Leaving connection alive.\"):(t.log_(\"Closing unhealthy connection after timeout.\"),t.close()))},Math.floor(i)))},ui.prototype.nextTransportId_=function(){return\"c:\"+this.id+\":\"+this.connectionCount++},ui.prototype.disconnReceiver_=function(e){var n=this;return function(t){e===n.conn_?n.onConnectionLost_(t):e===n.secondaryConn_?(n.log_(\"Secondary connection lost.\"),n.onSecondaryConnectionLost_()):n.log_(\"closing an old connection\")}},ui.prototype.connReceiver_=function(e){var n=this;return function(t){2!==n.state_&&(e===n.rx_?n.onPrimaryMessageReceived_(t):e===n.secondaryConn_?n.onSecondaryMessageReceived_(t):n.log_(\"message on old connection\"))}},ui.prototype.sendRequest=function(t){var e={t:\"d\",d:t};this.sendData_(e)},ui.prototype.tryCleanupConnection=function(){this.tx_===this.secondaryConn_&&this.rx_===this.secondaryConn_&&(this.log_(\"cleaning up and promoting a connection: \"+this.secondaryConn_.connId),this.conn_=this.secondaryConn_,this.secondaryConn_=null)},ui.prototype.onSecondaryControl_=function(t){if(\"t\"in t){var e=t.t;\"a\"===e?this.upgradeIfSecondaryHealthy_():\"r\"===e?(this.log_(\"Got a reset on secondary, closing it\"),this.secondaryConn_.close(),this.tx_!==this.secondaryConn_&&this.rx_!==this.secondaryConn_||this.close()):\"o\"===e&&(this.log_(\"got pong on secondary.\"),this.secondaryResponsesRequired_--,this.upgradeIfSecondaryHealthy_())}},ui.prototype.onSecondaryMessageReceived_=function(t){var e=ut(\"t\",t),n=ut(\"d\",t);if(\"c\"===e)this.onSecondaryControl_(n);else{if(\"d\"!==e)throw new Error(\"Unknown protocol layer: \"+e);this.pendingDataMessages.push(n)}},ui.prototype.upgradeIfSecondaryHealthy_=function(){this.secondaryResponsesRequired_<=0?(this.log_(\"Secondary connection is healthy.\"),this.isHealthy_=!0,this.secondaryConn_.markConnectionHealthy(),this.proceedWithUpgrade_()):(this.log_(\"sending ping on secondary.\"),this.secondaryConn_.send({t:\"c\",d:{t:\"p\",d:{}}}))},ui.prototype.proceedWithUpgrade_=function(){this.secondaryConn_.start(),this.log_(\"sending client ack on secondary\"),this.secondaryConn_.send({t:\"c\",d:{t:\"a\",d:{}}}),this.log_(\"Ending transmission on primary\"),this.conn_.send({t:\"c\",d:{t:\"n\",d:{}}}),this.tx_=this.secondaryConn_,this.tryCleanupConnection()},ui.prototype.onPrimaryMessageReceived_=function(t){var e=ut(\"t\",t),n=ut(\"d\",t);\"c\"===e?this.onControl_(n):\"d\"===e&&this.onDataMessage_(n)},ui.prototype.onDataMessage_=function(t){this.onPrimaryResponse_(),this.onMessage_(t)},ui.prototype.onPrimaryResponse_=function(){this.isHealthy_||(this.primaryResponsesRequired_--,this.primaryResponsesRequired_<=0&&(this.log_(\"Primary connection is healthy.\"),this.isHealthy_=!0,this.conn_.markConnectionHealthy()))},ui.prototype.onControl_=function(t){var e=ut(\"t\",t);if(\"d\"in t){var n=t.d;if(\"h\"===e)this.onHandshake_(n);else if(\"n\"===e){this.log_(\"recvd end transmission on primary\"),this.rx_=this.secondaryConn_;for(var r=0;r<this.pendingDataMessages.length;++r)this.onDataMessage_(this.pendingDataMessages[r]);this.pendingDataMessages=[],this.tryCleanupConnection()}else\"s\"===e?this.onConnectionShutdown_(n):\"r\"===e?this.onReset_(n):\"e\"===e?ot(\"Server Error: \"+n):\"o\"===e?(this.log_(\"got pong on primary.\"),this.onPrimaryResponse_(),this.sendPingOnPrimaryIfNecessary_()):ot(\"Unknown control packet command: \"+e)}},ui.prototype.onHandshake_=function(t){var e=t.ts,n=t.v,r=t.h;this.sessionId=t.s,this.repoInfo_.updateHost(r),0===this.state_&&(this.conn_.start(),this.onConnectionEstablished_(this.conn_,e),\"5\"!==n&&at(\"Protocol version mismatch detected\"),this.tryStartUpgrade_())},ui.prototype.tryStartUpgrade_=function(){var t=this.transportManager_.upgradeTransport();t&&this.startUpgrade_(t)},ui.prototype.startUpgrade_=function(t){var e=this;this.secondaryConn_=new t(this.nextTransportId_(),this.repoInfo_,this.sessionId),this.secondaryResponsesRequired_=t.responsesRequiredToBeHealthy||0;var n=this.connReceiver_(this.secondaryConn_),r=this.disconnReceiver_(this.secondaryConn_);this.secondaryConn_.open(n,r),Nt(function(){e.secondaryConn_&&(e.log_(\"Timed out trying to upgrade.\"),e.secondaryConn_.close())},Math.floor(6e4))},ui.prototype.onReset_=function(t){this.log_(\"Reset packet received.  New host: \"+t),this.repoInfo_.updateHost(t),1===this.state_?this.close():(this.closeConnections_(),this.start_())},ui.prototype.onConnectionEstablished_=function(t,e){var n=this;this.log_(\"Realtime connection established.\"),this.conn_=t,this.state_=1,this.onReady_&&(this.onReady_(e,this.sessionId),this.onReady_=null),0===this.primaryResponsesRequired_?(this.log_(\"Primary connection is healthy.\"),this.isHealthy_=!0):Nt(function(){n.sendPingOnPrimaryIfNecessary_()},Math.floor(5e3))},ui.prototype.sendPingOnPrimaryIfNecessary_=function(){this.isHealthy_||1!==this.state_||(this.log_(\"sending ping on primary.\"),this.sendData_({t:\"c\",d:{t:\"p\",d:{}}}))},ui.prototype.onSecondaryConnectionLost_=function(){var t=this.secondaryConn_;this.secondaryConn_=null,this.tx_!==t&&this.rx_!==t||this.close()},ui.prototype.onConnectionLost_=function(t){this.conn_=null,t||0!==this.state_?1===this.state_&&this.log_(\"Realtime connection lost.\"):(this.log_(\"Realtime connection failed.\"),this.repoInfo_.isCacheableHost()&&(dt.remove(\"host:\"+this.repoInfo_.host),this.repoInfo_.internalHost=this.repoInfo_.host)),this.close()},ui.prototype.onConnectionShutdown_=function(t){this.log_(\"Connection shutdown command received. Shutting down...\"),this.onKill_&&(this.onKill_(t),this.onKill_=null),this.onDisconnect_=null,this.close()},ui.prototype.sendData_=function(t){if(1!==this.state_)throw\"Connection is not connected\";this.tx_.send(t)},ui.prototype.close=function(){2!==this.state_&&(this.log_(\"Closing realtime connection.\"),this.state_=2,this.closeConnections_(),this.onDisconnect_&&(this.onDisconnect_(),this.onDisconnect_=null))},ui.prototype.closeConnections_=function(){this.log_(\"Shutting down all connections\"),this.conn_&&(this.conn_.close(),this.conn_=null),this.secondaryConn_&&(this.secondaryConn_.close(),this.secondaryConn_=null),this.healthyTimeout_&&(clearTimeout(this.healthyTimeout_),this.healthyTimeout_=null)},ui);function ui(t,e,n,r,i,o,s){this.id=t,this.repoInfo_=e,this.onMessage_=n,this.onReady_=r,this.onDisconnect_=i,this.onKill_=o,this.lastSessionId=s,this.connectionCount=0,this.pendingDataMessages=[],this.state_=0,this.log_=it(\"c:\"+this.id+\":\"),this.transportManager_=new ai(e),this.log_(\"Connection created\"),this.start_()}var ci=(pi.prototype.put=function(t,e,n,r){},pi.prototype.merge=function(t,e,n,r){},pi.prototype.refreshAuthToken=function(t){},pi.prototype.onDisconnectPut=function(t,e,n){},pi.prototype.onDisconnectMerge=function(t,e,n){},pi.prototype.onDisconnectCancel=function(t,e){},pi.prototype.reportStats=function(t){},pi);function pi(){}var di,fi=(t(_i,di=ci),_i.prototype.sendRequest=function(t,e,n){var r=++this.requestNumber_,i={r:r,a:t,b:e};this.log_(I(i)),C(this.connected_,\"sendRequest call when we're not connected not allowed.\"),this.realtime_.sendRequest(i),n&&(this.requestCBHash_[r]=n)},_i.prototype.listen=function(t,e,n,r){var i=t.queryIdentifier(),o=t.path.toString();this.log_(\"Listen called for \"+o+\" \"+i),this.listens.has(o)||this.listens.set(o,new Map),C(t.getQueryParams().isDefault()||!t.getQueryParams().loadsAllData(),\"listen() called for non-default but complete query\"),C(!this.listens.get(o).has(i),\"listen() called twice for same path/queryId.\");var s={onComplete:r,hashFn:e,query:t,tag:n};this.listens.get(o).set(i,s),this.connected_&&this.sendListen_(s)},_i.prototype.sendListen_=function(r){var i=this,o=r.query,s=o.path.toString(),a=o.queryIdentifier();this.log_(\"Listen on \"+s+\" for \"+a);var t={p:s};r.tag&&(t.q=o.queryObject(),t.t=r.tag),t.h=r.hashFn(),this.sendRequest(\"q\",t,function(t){var e=t.d,n=t.s;_i.warnOnListenWarnings_(e,o),(i.listens.get(s)&&i.listens.get(s).get(a))===r&&(i.log_(\"listen response\",t),\"ok\"!==n&&i.removeListen_(s,a),r.onComplete&&r.onComplete(n,e))})},_i.warnOnListenWarnings_=function(t,e){if(t&&\"object\"==typeof t&&R(t,\"w\")){var n=P(t,\"w\");if(Array.isArray(n)&&~n.indexOf(\"no_index\")){var r='\".indexOn\": \"'+e.getQueryParams().getIndex().toString()+'\"',i=e.path.toString();at(\"Using an unspecified index. Your data will be downloaded and filtered on the client. Consider adding \"+r+\" at \"+i+\" to your security rules for better performance.\")}}},_i.prototype.refreshAuthToken=function(t){this.authToken_=t,this.log_(\"Auth token refreshed\"),this.authToken_?this.tryAuth():this.connected_&&this.sendRequest(\"unauth\",{},function(){}),this.reduceReconnectDelayIfAdminCredential_(t)},_i.prototype.reduceReconnectDelayIfAdminCredential_=function(t){var e;(t&&40===t.length||\"object\"==typeof(e=N(t).claims)&&!0===e.admin)&&(this.log_(\"Admin auth credential detected.  Reducing max reconnect time.\"),this.maxReconnectDelay_=3e4)},_i.prototype.tryAuth=function(){var t,r=this;if(this.connected_&&this.authToken_){var i=this.authToken_,e=(t=N(i).claims)&&\"object\"==typeof t&&t.hasOwnProperty(\"iat\")?\"auth\":\"gauth\",n={cred:i};null===this.authOverride_?n.noauth=!0:\"object\"==typeof this.authOverride_&&(n.authvar=this.authOverride_),this.sendRequest(e,n,function(t){var e=t.s,n=t.d||\"error\";r.authToken_===i&&(\"ok\"===e?r.invalidAuthTokenCount_=0:r.onAuthRevoked_(e,n))})}},_i.prototype.unlisten=function(t,e){var n=t.path.toString(),r=t.queryIdentifier();this.log_(\"Unlisten called for \"+n+\" \"+r),C(t.getQueryParams().isDefault()||!t.getQueryParams().loadsAllData(),\"unlisten() called for non-default but complete query\"),this.removeListen_(n,r)&&this.connected_&&this.sendUnlisten_(n,r,t.queryObject(),e)},_i.prototype.sendUnlisten_=function(t,e,n,r){this.log_(\"Unlisten on \"+t+\" for \"+e);var i={p:t};r&&(i.q=n,i.t=r),this.sendRequest(\"n\",i)},_i.prototype.onDisconnectPut=function(t,e,n){this.connected_?this.sendOnDisconnect_(\"o\",t,e,n):this.onDisconnectRequestQueue_.push({pathString:t,action:\"o\",data:e,onComplete:n})},_i.prototype.onDisconnectMerge=function(t,e,n){this.connected_?this.sendOnDisconnect_(\"om\",t,e,n):this.onDisconnectRequestQueue_.push({pathString:t,action:\"om\",data:e,onComplete:n})},_i.prototype.onDisconnectCancel=function(t,e){this.connected_?this.sendOnDisconnect_(\"oc\",t,null,e):this.onDisconnectRequestQueue_.push({pathString:t,action:\"oc\",data:null,onComplete:e})},_i.prototype.sendOnDisconnect_=function(t,e,n,r){var i={p:e,d:n};this.log_(\"onDisconnect \"+t,i),this.sendRequest(t,i,function(t){r&&setTimeout(function(){r(t.s,t.d)},Math.floor(0))})},_i.prototype.put=function(t,e,n,r){this.putInternal(\"p\",t,e,n,r)},_i.prototype.merge=function(t,e,n,r){this.putInternal(\"m\",t,e,n,r)},_i.prototype.putInternal=function(t,e,n,r,i){var o={p:e,d:n};void 0!==i&&(o.h=i),this.outstandingPuts_.push({action:t,request:o,onComplete:r}),this.outstandingPutCount_++;var s=this.outstandingPuts_.length-1;this.connected_?this.sendPut_(s):this.log_(\"Buffering put: \"+e)},_i.prototype.sendPut_=function(e){var n=this,r=this.outstandingPuts_[e].action,t=this.outstandingPuts_[e].request,i=this.outstandingPuts_[e].onComplete;this.outstandingPuts_[e].queued=this.connected_,this.sendRequest(r,t,function(t){n.log_(r+\" response\",t),delete n.outstandingPuts_[e],n.outstandingPutCount_--,0===n.outstandingPutCount_&&(n.outstandingPuts_=[]),i&&i(t.s,t.d)})},_i.prototype.reportStats=function(t){var n=this;if(this.connected_){var e={c:t};this.log_(\"reportStats\",e),this.sendRequest(\"s\",e,function(t){if(\"ok\"!==t.s){var e=t.d;n.log_(\"reportStats\",\"Error sending stats: \"+e)}})}},_i.prototype.onDataMessage_=function(t){if(\"r\"in t){this.log_(\"from server: \"+I(t));var e=t.r,n=this.requestCBHash_[e];n&&(delete this.requestCBHash_[e],n(t.b))}else{if(\"error\"in t)throw\"A server-side error has occurred: \"+t.error;\"a\"in t&&this.onDataPush_(t.a,t.b)}},_i.prototype.onDataPush_=function(t,e){this.log_(\"handleServerMessage\",t,e),\"d\"===t?this.onDataUpdate_(e.p,e.d,!1,e.t):\"m\"===t?this.onDataUpdate_(e.p,e.d,!0,e.t):\"c\"===t?this.onListenRevoked_(e.p,e.q):\"ac\"===t?this.onAuthRevoked_(e.s,e.d):\"sd\"===t?this.onSecurityDebugPacket_(e):ot(\"Unrecognized action received from server: \"+I(t)+\"\\nAre you using the latest client?\")},_i.prototype.onReady_=function(t,e){this.log_(\"connection ready\"),this.connected_=!0,this.lastConnectionEstablishedTime_=(new Date).getTime(),this.handleTimestamp_(t),this.lastSessionId=e,this.firstConnection_&&this.sendConnectStats_(),this.restoreState_(),this.firstConnection_=!1,this.onConnectStatus_(!0)},_i.prototype.scheduleConnect_=function(t){var e=this;C(!this.realtime_,\"Scheduling a connect when we're already connected/ing?\"),this.establishConnectionTimer_&&clearTimeout(this.establishConnectionTimer_),this.establishConnectionTimer_=setTimeout(function(){e.establishConnectionTimer_=null,e.establishConnection_()},Math.floor(t))},_i.prototype.onVisible_=function(t){t&&!this.visible_&&this.reconnectDelay_===this.maxReconnectDelay_&&(this.log_(\"Window became visible.  Reducing delay.\"),this.reconnectDelay_=1e3,this.realtime_||this.scheduleConnect_(0)),this.visible_=t},_i.prototype.onOnline_=function(t){t?(this.log_(\"Browser went online.\"),this.reconnectDelay_=1e3,this.realtime_||this.scheduleConnect_(0)):(this.log_(\"Browser went offline.  Killing connection.\"),this.realtime_&&this.realtime_.close())},_i.prototype.onRealtimeDisconnect_=function(){if(this.log_(\"data client disconnected\"),this.connected_=!1,this.realtime_=null,this.cancelSentTransactions_(),this.requestCBHash_={},this.shouldReconnect_()){this.visible_?this.lastConnectionEstablishedTime_&&(3e4<(new Date).getTime()-this.lastConnectionEstablishedTime_&&(this.reconnectDelay_=1e3),this.lastConnectionEstablishedTime_=null):(this.log_(\"Window isn't visible.  Delaying reconnect.\"),this.reconnectDelay_=this.maxReconnectDelay_,this.lastConnectionAttemptTime_=(new Date).getTime());var t=(new Date).getTime()-this.lastConnectionAttemptTime_,e=Math.max(0,this.reconnectDelay_-t);e=Math.random()*e,this.log_(\"Trying to reconnect in \"+e+\"ms\"),this.scheduleConnect_(e),this.reconnectDelay_=Math.min(this.maxReconnectDelay_,1.3*this.reconnectDelay_)}this.onConnectStatus_(!1)},_i.prototype.establishConnection_=function(){if(this.shouldReconnect_()){this.log_(\"Making a connection attempt\"),this.lastConnectionAttemptTime_=(new Date).getTime(),this.lastConnectionEstablishedTime_=null;var e=this.onDataMessage_.bind(this),n=this.onReady_.bind(this),r=this.onRealtimeDisconnect_.bind(this),i=this.id+\":\"+_i.nextConnectionId_++,o=this,s=this.lastSessionId,a=!1,h=null,l=function(){h?h.close():(a=!0,r())};this.realtime_={close:l,sendRequest:function(t){C(h,\"sendRequest call when we're not connected not allowed.\"),h.sendRequest(t)}};var t=this.forceTokenRefresh_;this.forceTokenRefresh_=!1,this.authTokenProvider_.getToken(t).then(function(t){a?rt(\"getToken() completed but was canceled\"):(rt(\"getToken() completed. Creating connection.\"),o.authToken_=t&&t.accessToken,h=new li(i,o.repoInfo_,e,n,r,function(t){at(t+\" (\"+o.repoInfo_.toString()+\")\"),o.interrupt(\"server_kill\")},s))}).then(null,function(t){o.log_(\"Failed to get token: \"+t),a||l()})}},_i.prototype.interrupt=function(t){rt(\"Interrupting connection for reason: \"+t),this.interruptReasons_[t]=!0,this.realtime_?this.realtime_.close():(this.establishConnectionTimer_&&(clearTimeout(this.establishConnectionTimer_),this.establishConnectionTimer_=null),this.connected_&&this.onRealtimeDisconnect_())},_i.prototype.resume=function(t){rt(\"Resuming connection for reason: \"+t),delete this.interruptReasons_[t],D(this.interruptReasons_)&&(this.reconnectDelay_=1e3,this.realtime_||this.scheduleConnect_(0))},_i.prototype.handleTimestamp_=function(t){var e=t-(new Date).getTime();this.onServerInfoUpdate_({serverTimeOffset:e})},_i.prototype.cancelSentTransactions_=function(){for(var t=0;t<this.outstandingPuts_.length;t++){var e=this.outstandingPuts_[t];e&&\"h\"in e.request&&e.queued&&(e.onComplete&&e.onComplete(\"disconnect\"),delete this.outstandingPuts_[t],this.outstandingPutCount_--)}0===this.outstandingPutCount_&&(this.outstandingPuts_=[])},_i.prototype.onListenRevoked_=function(t,e){var n;n=e?e.map(function(t){return bt(t)}).join(\"$\"):\"default\";var r=this.removeListen_(t,n);r&&r.onComplete&&r.onComplete(\"permission_denied\")},_i.prototype.removeListen_=function(t,e){var n,r=new Dt(t).toString();if(this.listens.has(r)){var i=this.listens.get(r);n=i.get(e),i.delete(e),0===i.size&&this.listens.delete(r)}else n=void 0;return n},_i.prototype.onAuthRevoked_=function(t,e){rt(\"Auth token revoked: \"+t+\"/\"+e),this.authToken_=null,this.forceTokenRefresh_=!0,this.realtime_.close(),\"invalid_token\"!==t&&\"permission_denied\"!==t||(this.invalidAuthTokenCount_++,3<=this.invalidAuthTokenCount_&&(this.reconnectDelay_=3e4,this.authTokenProvider_.notifyForInvalidToken()))},_i.prototype.onSecurityDebugPacket_=function(t){this.securityDebugCallback_?this.securityDebugCallback_(t):\"msg\"in t&&console.log(\"FIREBASE: \"+t.msg.replace(\"\\n\",\"\\nFIREBASE: \"))},_i.prototype.restoreState_=function(){var e,t,n,r;this.tryAuth();try{for(var i=_(this.listens.values()),o=i.next();!o.done;o=i.next()){var s=o.value;try{for(var a=(n=void 0,_(s.values())),h=a.next();!h.done;h=a.next()){var l=h.value;this.sendListen_(l)}}catch(t){n={error:t}}finally{try{h&&!h.done&&(r=a.return)&&r.call(a)}finally{if(n)throw n.error}}}}catch(t){e={error:t}}finally{try{o&&!o.done&&(t=i.return)&&t.call(i)}finally{if(e)throw e.error}}for(var u=0;u<this.outstandingPuts_.length;u++)this.outstandingPuts_[u]&&this.sendPut_(u);for(;this.onDisconnectRequestQueue_.length;){var c=this.onDisconnectRequestQueue_.shift();this.sendOnDisconnect_(c.action,c.pathString,c.data,c.onComplete)}},_i.prototype.sendConnectStats_=function(){var t={};t[\"sdk.js.\"+ri.replace(/\\./g,\"-\")]=1,y()?t[\"framework.cordova\"]=1:\"object\"==typeof navigator&&\"ReactNative\"===navigator.product&&(t[\"framework.reactnative\"]=1),this.reportStats(t)},_i.prototype.shouldReconnect_=function(){var t=Gr.getInstance().currentlyOnline();return D(this.interruptReasons_)&&t},_i.nextPersistentConnectionId_=0,_i.nextConnectionId_=0,_i);function _i(t,e,n,r,i,o){var s=di.call(this)||this;if(s.repoInfo_=t,s.onDataUpdate_=e,s.onConnectStatus_=n,s.onServerInfoUpdate_=r,s.authTokenProvider_=i,s.authOverride_=o,s.id=_i.nextPersistentConnectionId_++,s.log_=it(\"p:\"+s.id+\":\"),s.interruptReasons_={},s.listens=new Map,s.outstandingPuts_=[],s.outstandingPutCount_=0,s.onDisconnectRequestQueue_=[],s.connected_=!1,s.reconnectDelay_=1e3,s.maxReconnectDelay_=3e5,s.securityDebugCallback_=null,s.lastSessionId=null,s.establishConnectionTimer_=null,s.visible_=!1,s.requestCBHash_={},s.requestNumber_=0,s.realtime_=null,s.authToken_=null,s.forceTokenRefresh_=!1,s.invalidAuthTokenCount_=0,s.firstConnection_=!0,s.lastConnectionAttemptTime_=null,s.lastConnectionEstablishedTime_=null,o&&!v())throw new Error(\"Auth override specified in options, but not supported on non Node.js platforms\");return s.scheduleConnect_(0),Yr.getInstance().on(\"visible\",s.onVisible_,s),-1===t.host.indexOf(\"fblocal\")&&Gr.getInstance().on(\"online\",s.onOnline_,s),s}var yi,vi=(t(gi,yi=ci),gi.prototype.reportStats=function(t){throw new Error(\"Method not implemented.\")},gi.getListenId_=function(t,e){return void 0!==e?\"tag$\"+e:(C(t.getQueryParams().isDefault(),\"should have a tag if it's not a default query.\"),t.path.toString())},gi.prototype.listen=function(t,e,r,i){var o=this,s=t.path.toString();this.log_(\"Listen called for \"+s+\" \"+t.queryIdentifier());var a=gi.getListenId_(t,r),h={};this.listens_[a]=h;var n=t.getQueryParams().toRestQueryStringParameters();this.restRequest_(s+\".json\",n,function(t,e){var n=e;404===t&&(t=n=null),null===t&&o.onDataUpdate_(s,n,!1,r),P(o.listens_,a)===h&&i(t?401===t?\"permission_denied\":\"rest_error:\"+t:\"ok\",null)})},gi.prototype.unlisten=function(t,e){var n=gi.getListenId_(t,e);delete this.listens_[n]},gi.prototype.refreshAuthToken=function(t){},gi.prototype.restRequest_=function(i,o,s){var a=this;void 0===o&&(o={}),o.format=\"export\",this.authTokenProvider_.getToken(!1).then(function(t){var e=t&&t.accessToken;e&&(o.auth=e);var n=(a.repoInfo_.secure?\"https://\":\"http://\")+a.repoInfo_.host+i+\"?ns=\"+a.repoInfo_.namespace+function(t){for(var n=[],e=function(e,t){Array.isArray(t)?t.forEach(function(t){n.push(encodeURIComponent(e)+\"=\"+encodeURIComponent(t))}):n.push(encodeURIComponent(e)+\"=\"+encodeURIComponent(t))},r=0,i=Object.entries(t);r<i.length;r++){var o=i[r];e(o[0],o[1])}return n.length?\"&\"+n.join(\"&\"):\"\"}(o);a.log_(\"Sending REST request for \"+n);var r=new XMLHttpRequest;r.onreadystatechange=function(){if(s&&4===r.readyState){a.log_(\"REST Response for \"+n+\" received. status:\",r.status,\"response:\",r.responseText);var t=null;if(200<=r.status&&r.status<300){try{t=T(r.responseText)}catch(t){at(\"Failed to parse JSON response for \"+n+\": \"+r.responseText)}s(null,t)}else 401!==r.status&&404!==r.status&&at(\"Got unsuccessful REST response for \"+n+\" Status: \"+r.status),s(r.status);s=null}},r.open(\"GET\",n,!0),r.send()})},gi);function gi(t,e,n){var r=yi.call(this)||this;return r.repoInfo_=t,r.onDataUpdate_=e,r.authTokenProvider_=n,r.log_=it(\"p:rest:\"),r.listens_={},r}var mi=\"repo_interrupt\",Ci=(Ei.prototype.toString=function(){return(this.repoInfo_.secure?\"https://\":\"http://\")+this.repoInfo_.host},Ei.prototype.name=function(){return this.repoInfo_.namespace},Ei.prototype.serverTime=function(){var t=this.infoData_.getNode(new Dt(\".info/serverTimeOffset\")).val()||0;return(new Date).getTime()+t},Ei.prototype.generateServerValues=function(){return(t=t={timestamp:this.serverTime()}).timestamp=t.timestamp||(new Date).getTime(),t;var t},Ei.prototype.onDataUpdate_=function(t,e,n,r){this.dataUpdateCount++;var i=new Dt(t);e=this.interceptServerDataCallback_?this.interceptServerDataCallback_(t,e):e;var o=[];if(r)if(n){var s=O(e,function(t){return nn(t)});o=this.serverSyncTree_.applyTaggedQueryMerge(i,s,r)}else{var a=nn(e);o=this.serverSyncTree_.applyTaggedQueryOverwrite(i,a,r)}else if(n){var h=O(e,function(t){return nn(t)});o=this.serverSyncTree_.applyServerMerge(i,h)}else{var l=nn(e);o=this.serverSyncTree_.applyServerOverwrite(i,l)}var u=i;0<o.length&&(u=this.rerunTransactions_(i)),this.eventQueue_.raiseEventsForChangedPath(u,o)},Ei.prototype.interceptServerData_=function(t){this.interceptServerDataCallback_=t},Ei.prototype.onConnectStatus_=function(t){this.updateInfo_(\"connected\",t),!1===t&&this.runOnDisconnectEvents_()},Ei.prototype.onServerInfoUpdate_=function(t){var n=this;St(t,function(t,e){n.updateInfo_(t,e)})},Ei.prototype.updateInfo_=function(t,e){var n=new Dt(\"/.info/\"+t),r=nn(e);this.infoData_.updateSnapshot(n,r);var i=this.infoSyncTree_.applyServerOverwrite(n,r);this.eventQueue_.raiseEventsForChangedPath(n,i)},Ei.prototype.getNextWriteId_=function(){return this.nextWriteId_++},Ei.prototype.setWithPriority=function(i,t,e,o){var s=this;this.log_(\"set\",{path:i.toString(),value:t,priority:e});var n=this.generateServerValues(),r=nn(t,e),a=this.serverSyncTree_.calcCompleteEventCache(i),h=Nn(r,a,n),l=this.getNextWriteId_(),u=this.serverSyncTree_.applyUserOverwrite(i,h,l,!0);this.eventQueue_.queueEvents(u),this.server_.put(i.toString(),r.val(!0),function(t,e){var n=\"ok\"===t;n||at(\"set at \"+i+\" failed: \"+t);var r=s.serverSyncTree_.ackUserWrite(l,!n);s.eventQueue_.raiseEventsForChangedPath(i,r),s.callOnCompleteCallback(o,t,e)});var c=this.abortTransactions_(i);this.rerunTransactions_(c),this.eventQueue_.raiseEventsForChangedPath(c,[])},Ei.prototype.update=function(o,t,s){var a=this;this.log_(\"update\",{path:o.toString(),value:t});var n=!0,r=this.generateServerValues(),i={};if(St(t,function(t,e){n=!1,i[t]=In(o.child(t),nn(e),a.serverSyncTree_,r)}),n)rt(\"update() called with empty data.  Don't do anything.\"),this.callOnCompleteCallback(s,\"ok\");else{var h=this.getNextWriteId_(),e=this.serverSyncTree_.applyUserMerge(o,i,h);this.eventQueue_.queueEvents(e),this.server_.merge(o.toString(),t,function(t,e){var n=\"ok\"===t;n||at(\"update at \"+o+\" failed: \"+t);var r=a.serverSyncTree_.ackUserWrite(h,!n),i=0<r.length?a.rerunTransactions_(o):o;a.eventQueue_.raiseEventsForChangedPath(i,r),a.callOnCompleteCallback(s,t,e)}),St(t,function(t){var e=a.abortTransactions_(o.child(t));a.rerunTransactions_(e)}),this.eventQueue_.raiseEventsForChangedPath(o,[])}},Ei.prototype.runOnDisconnectEvents_=function(){var r=this;this.log_(\"onDisconnectEvents\");var i=this.generateServerValues(),o=new Fn;this.onDisconnect_.forEachTree(Dt.Empty,function(t,e){var n=In(t,e,r.serverSyncTree_,i);o.remember(t,n)});var s=[];o.forEachTree(Dt.Empty,function(t,e){s=s.concat(r.serverSyncTree_.applyServerOverwrite(t,e));var n=r.abortTransactions_(t);r.rerunTransactions_(n)}),this.onDisconnect_=new Fn,this.eventQueue_.raiseEventsForChangedPath(Dt.Empty,s)},Ei.prototype.onDisconnectCancel=function(n,r){var i=this;this.server_.onDisconnectCancel(n.toString(),function(t,e){\"ok\"===t&&i.onDisconnect_.forget(n),i.callOnCompleteCallback(r,t,e)})},Ei.prototype.onDisconnectSet=function(n,t,r){var i=this,o=nn(t);this.server_.onDisconnectPut(n.toString(),o.val(!0),function(t,e){\"ok\"===t&&i.onDisconnect_.remember(n,o),i.callOnCompleteCallback(r,t,e)})},Ei.prototype.onDisconnectSetWithPriority=function(n,t,e,r){var i=this,o=nn(t,e);this.server_.onDisconnectPut(n.toString(),o.val(!0),function(t,e){\"ok\"===t&&i.onDisconnect_.remember(n,o),i.callOnCompleteCallback(r,t,e)})},Ei.prototype.onDisconnectUpdate=function(r,n,i){var o=this;if(D(n))return rt(\"onDisconnect().update() called with empty data.  Don't do anything.\"),void this.callOnCompleteCallback(i,\"ok\");this.server_.onDisconnectMerge(r.toString(),n,function(t,e){\"ok\"===t&&St(n,function(t,e){var n=nn(e);o.onDisconnect_.remember(r.child(t),n)}),o.callOnCompleteCallback(i,t,e)})},Ei.prototype.addEventCallbackForQuery=function(t,e){var n;n=\".info\"===t.path.getFront()?this.infoSyncTree_.addEventRegistration(t,e):this.serverSyncTree_.addEventRegistration(t,e),this.eventQueue_.raiseEventsAtPath(t.path,n)},Ei.prototype.removeEventCallbackForQuery=function(t,e){var n;n=\".info\"===t.path.getFront()?this.infoSyncTree_.removeEventRegistration(t,e):this.serverSyncTree_.removeEventRegistration(t,e),this.eventQueue_.raiseEventsAtPath(t.path,n)},Ei.prototype.interrupt=function(){this.persistentConnection_&&this.persistentConnection_.interrupt(mi)},Ei.prototype.resume=function(){this.persistentConnection_&&this.persistentConnection_.resume(mi)},Ei.prototype.stats=function(t){if(void 0===t&&(t=!1),\"undefined\"!=typeof console){var e;e=t?(this.statsListener_||(this.statsListener_=new Ar(this.stats_)),this.statsListener_.get()):this.stats_.get();var i=Object.keys(e).reduce(function(t,e){return Math.max(e.length,t)},0);St(e,function(t,e){for(var n=t,r=t.length;r<i+2;r++)n+=\" \";console.log(n+e)})}},Ei.prototype.statsIncrementCounter=function(t){this.stats_.incrementCounter(t),this.statsReporter_.includeStat(t)},Ei.prototype.log_=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=\"\";this.persistentConnection_&&(n=this.persistentConnection_.id+\":\"),rt.apply(void 0,o([n],t))},Ei.prototype.callOnCompleteCallback=function(r,i,o){r&&It(function(){if(\"ok\"===i)r(null);else{var t=(i||\"error\").toUpperCase(),e=t;o&&(e+=\": \"+o);var n=new Error(e);n.code=t,r(n)}})},Object.defineProperty(Ei.prototype,\"database\",{get:function(){return this.__database||(this.__database=new qi(this))},enumerable:!0,configurable:!0}),Ei);function Ei(t,e,n,r){var s=this;this.repoInfo_=t,this.app=n,this.dataUpdateCount=0,this.statsListener_=null,this.eventQueue_=new Qr,this.nextWriteId_=1,this.interceptServerDataCallback_=null,this.onDisconnect_=new Fn,this.persistentConnection_=null;var i=new Pr(n,r);if(this.stats_=kr.getCollection(t),e||0<=(\"object\"==typeof window&&window.navigator&&window.navigator.userAgent||\"\").search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i))this.server_=new vi(this.repoInfo_,this.onDataUpdate_.bind(this),i),setTimeout(this.onConnectStatus_.bind(this,!0),0);else{var o=n.options.databaseAuthVariableOverride;if(null!=o){if(\"object\"!=typeof o)throw new Error(\"Only objects are supported for option databaseAuthVariableOverride\");try{I(o)}catch(t){throw new Error(\"Invalid authOverride provided: \"+t)}}this.persistentConnection_=new fi(this.repoInfo_,this.onDataUpdate_.bind(this),this.onConnectStatus_.bind(this),this.onServerInfoUpdate_.bind(this),i,o),this.server_=this.persistentConnection_}i.addTokenChangeListener(function(t){s.server_.refreshAuthToken(t)}),this.statsReporter_=kr.getOrCreateReporter(t,function(){return new Mr(s.stats_,s.server_)}),this.transactionsInit_(),this.infoData_=new Nr,this.infoSyncTree_=new Tr({startListening:function(t,e,n,r){var i=[],o=s.infoData_.getNode(t.path);return o.isEmpty()||(i=s.infoSyncTree_.applyServerOverwrite(t.path,o),setTimeout(function(){r(\"ok\")},0)),i},stopListening:function(){}}),this.updateInfo_(\"connected\",!1),this.serverSyncTree_=new Tr({startListening:function(r,t,e,i){return s.server_.listen(r,e,t,function(t,e){var n=i(t,e);s.eventQueue_.raiseEventsForChangedPath(r.path,n)}),[]},stopListening:function(t,e){s.server_.unlisten(t,e)}})}var wi=(bi.prototype.getStartPost=function(){return this.startPost_},bi.prototype.getEndPost=function(){return this.endPost_},bi.prototype.matches=function(t){return this.index_.compare(this.getStartPost(),t)<=0&&this.index_.compare(t,this.getEndPost())<=0},bi.prototype.updateChild=function(t,e,n,r,i,o){return this.matches(new ue(e,n))||(n=Xe.EMPTY_NODE),this.indexedFilter_.updateChild(t,e,n,r,i,o)},bi.prototype.updateFullNode=function(t,e,n){e.isLeafNode()&&(e=Xe.EMPTY_NODE);var r=e.withIndex(this.index_);r=r.updatePriority(Xe.EMPTY_NODE);var i=this;return e.forEachChild(Pe,function(t,e){i.matches(new ue(t,e))||(r=r.updateImmediateChild(t,Xe.EMPTY_NODE))}),this.indexedFilter_.updateFullNode(t,r,n)},bi.prototype.updatePriority=function(t,e){return t},bi.prototype.filtersNodes=function(){return!0},bi.prototype.getIndexedFilter=function(){return this.indexedFilter_},bi.prototype.getIndex=function(){return this.index_},bi.getStartPost_=function(t){if(t.hasStart()){var e=t.getIndexStartName();return t.getIndex().makePost(t.getIndexStartValue(),e)}return t.getIndex().minPost()},bi.getEndPost_=function(t){if(t.hasEnd()){var e=t.getIndexEndName();return t.getIndex().makePost(t.getIndexEndValue(),e)}return t.getIndex().maxPost()},bi);function bi(t){this.indexedFilter_=new er(t.getIndex()),this.index_=t.getIndex(),this.startPost_=bi.getStartPost_(t),this.endPost_=bi.getEndPost_(t)}var Si=(Ti.prototype.updateChild=function(t,e,n,r,i,o){return this.rangedFilter_.matches(new ue(e,n))||(n=Xe.EMPTY_NODE),t.getImmediateChild(e).equals(n)?t:t.numChildren()<this.limit_?this.rangedFilter_.getIndexedFilter().updateChild(t,e,n,r,i,o):this.fullLimitUpdateChild_(t,e,n,i,o)},Ti.prototype.updateFullNode=function(t,e,n){var r;if(e.isLeafNode()||e.isEmpty())r=Xe.EMPTY_NODE.withIndex(this.index_);else if(2*this.limit_<e.numChildren()&&e.isIndexed(this.index_)){r=Xe.EMPTY_NODE.withIndex(this.index_);var i=void 0;i=this.reverse_?e.getReverseIteratorFrom(this.rangedFilter_.getEndPost(),this.index_):e.getIteratorFrom(this.rangedFilter_.getStartPost(),this.index_);for(var o=0;i.hasNext()&&o<this.limit_;){var s=i.getNext();if(!(this.reverse_?this.index_.compare(this.rangedFilter_.getStartPost(),s)<=0:this.index_.compare(s,this.rangedFilter_.getEndPost())<=0))break;r=r.updateImmediateChild(s.name,s.node),o++}}else{r=(r=e.withIndex(this.index_)).updatePriority(Xe.EMPTY_NODE);var a=void 0,h=void 0,l=void 0;if(i=void 0,this.reverse_){i=r.getReverseIterator(this.index_),a=this.rangedFilter_.getEndPost(),h=this.rangedFilter_.getStartPost();var u=this.index_.getCompare();l=function(t,e){return u(e,t)}}else i=r.getIterator(this.index_),a=this.rangedFilter_.getStartPost(),h=this.rangedFilter_.getEndPost(),l=this.index_.getCompare();o=0;for(var c=!1;i.hasNext();)s=i.getNext(),!c&&l(a,s)<=0&&(c=!0),c&&o<this.limit_&&l(s,h)<=0?o++:r=r.updateImmediateChild(s.name,Xe.EMPTY_NODE)}return this.rangedFilter_.getIndexedFilter().updateFullNode(t,r,n)},Ti.prototype.updatePriority=function(t,e){return t},Ti.prototype.filtersNodes=function(){return!0},Ti.prototype.getIndexedFilter=function(){return this.rangedFilter_.getIndexedFilter()},Ti.prototype.getIndex=function(){return this.index_},Ti.prototype.fullLimitUpdateChild_=function(t,e,n,r,i){var o;if(this.reverse_){var s=this.index_.getCompare();o=function(t,e){return s(e,t)}}else o=this.index_.getCompare();var a=t;C(a.numChildren()===this.limit_,\"\");var h=new ue(e,n),l=this.reverse_?a.getFirstChild(this.index_):a.getLastChild(this.index_),u=this.rangedFilter_.matches(h);if(a.hasChild(e)){for(var c=a.getImmediateChild(e),p=r.getChildAfterChild(this.index_,l,this.reverse_);null!=p&&(p.name===e||a.hasChild(p.name));)p=r.getChildAfterChild(this.index_,p,this.reverse_);var d=null==p?1:o(p,h);if(u&&!n.isEmpty()&&0<=d)return null!=i&&i.trackChildChange(Zn.childChangedChange(e,n,c)),a.updateImmediateChild(e,n);null!=i&&i.trackChildChange(Zn.childRemovedChange(e,c));var f=a.updateImmediateChild(e,Xe.EMPTY_NODE);return null!=p&&this.rangedFilter_.matches(p)?(null!=i&&i.trackChildChange(Zn.childAddedChange(p.name,p.node)),f.updateImmediateChild(p.name,p.node)):f}return!n.isEmpty()&&u&&0<=o(l,h)?(null!=i&&(i.trackChildChange(Zn.childRemovedChange(l.name,l.node)),i.trackChildChange(Zn.childAddedChange(e,n))),a.updateImmediateChild(e,n).updateImmediateChild(l.name,Xe.EMPTY_NODE)):t},Ti);function Ti(t){this.rangedFilter_=new wi(t),this.index_=t.getIndex(),this.limit_=t.getLimit(),this.reverse_=!t.isViewFromLeft()}var Ii=(Ni.prototype.hasStart=function(){return this.startSet_},Ni.prototype.isViewFromLeft=function(){return\"\"===this.viewFrom_?this.startSet_:this.viewFrom_===Ni.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT},Ni.prototype.getIndexStartValue=function(){return C(this.startSet_,\"Only valid if start has been set\"),this.indexStartValue_},Ni.prototype.getIndexStartName=function(){return C(this.startSet_,\"Only valid if start has been set\"),this.startNameSet_?this.indexStartName_:Ct},Ni.prototype.hasEnd=function(){return this.endSet_},Ni.prototype.getIndexEndValue=function(){return C(this.endSet_,\"Only valid if end has been set\"),this.indexEndValue_},Ni.prototype.getIndexEndName=function(){return C(this.endSet_,\"Only valid if end has been set\"),this.endNameSet_?this.indexEndName_:Et},Ni.prototype.hasLimit=function(){return this.limitSet_},Ni.prototype.hasAnchoredLimit=function(){return this.limitSet_&&\"\"!==this.viewFrom_},Ni.prototype.getLimit=function(){return C(this.limitSet_,\"Only valid if limit has been set\"),this.limit_},Ni.prototype.getIndex=function(){return this.index_},Ni.prototype.copy_=function(){var t=new Ni;return t.limitSet_=this.limitSet_,t.limit_=this.limit_,t.startSet_=this.startSet_,t.indexStartValue_=this.indexStartValue_,t.startNameSet_=this.startNameSet_,t.indexStartName_=this.indexStartName_,t.endSet_=this.endSet_,t.indexEndValue_=this.indexEndValue_,t.endNameSet_=this.endNameSet_,t.indexEndName_=this.indexEndName_,t.index_=this.index_,t.viewFrom_=this.viewFrom_,t},Ni.prototype.limit=function(t){var e=this.copy_();return e.limitSet_=!0,e.limit_=t,e.viewFrom_=\"\",e},Ni.prototype.limitToFirst=function(t){var e=this.copy_();return e.limitSet_=!0,e.limit_=t,e.viewFrom_=Ni.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT,e},Ni.prototype.limitToLast=function(t){var e=this.copy_();return e.limitSet_=!0,e.limit_=t,e.viewFrom_=Ni.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT,e},Ni.prototype.startAt=function(t,e){var n=this.copy_();return n.startSet_=!0,void 0===t&&(t=null),n.indexStartValue_=t,null!=e?(n.startNameSet_=!0,n.indexStartName_=e):(n.startNameSet_=!1,n.indexStartName_=\"\"),n},Ni.prototype.endAt=function(t,e){var n=this.copy_();return n.endSet_=!0,void 0===t&&(t=null),n.indexEndValue_=t,void 0!==e?(n.endNameSet_=!0,n.indexEndName_=e):(n.endNameSet_=!1,n.indexEndName_=\"\"),n},Ni.prototype.orderBy=function(t){var e=this.copy_();return e.index_=t,e},Ni.prototype.getQueryObject=function(){var t=Ni.WIRE_PROTOCOL_CONSTANTS_,e={};if(this.startSet_&&(e[t.INDEX_START_VALUE]=this.indexStartValue_,this.startNameSet_&&(e[t.INDEX_START_NAME]=this.indexStartName_)),this.endSet_&&(e[t.INDEX_END_VALUE]=this.indexEndValue_,this.endNameSet_&&(e[t.INDEX_END_NAME]=this.indexEndName_)),this.limitSet_){e[t.LIMIT]=this.limit_;var n=this.viewFrom_;\"\"===n&&(n=this.isViewFromLeft()?t.VIEW_FROM_LEFT:t.VIEW_FROM_RIGHT),e[t.VIEW_FROM]=n}return this.index_!==Pe&&(e[t.INDEX]=this.index_.toString()),e},Ni.prototype.loadsAllData=function(){return!(this.startSet_||this.endSet_||this.limitSet_)},Ni.prototype.isDefault=function(){return this.loadsAllData()&&this.index_===Pe},Ni.prototype.getNodeFilter=function(){return this.loadsAllData()?new er(this.getIndex()):new(this.hasLimit()?Si:wi)(this)},Ni.prototype.toRestQueryStringParameters=function(){var t,e=Ni.REST_QUERY_CONSTANTS_,n={};return this.isDefault()||(t=this.index_===Pe?e.PRIORITY_INDEX:this.index_===sn?e.VALUE_INDEX:this.index_===me?e.KEY_INDEX:(C(this.index_ instanceof an,\"Unrecognized index type!\"),this.index_.toString()),n[e.ORDER_BY]=I(t),this.startSet_&&(n[e.START_AT]=I(this.indexStartValue_),this.startNameSet_&&(n[e.START_AT]+=\",\"+I(this.indexStartName_))),this.endSet_&&(n[e.END_AT]=I(this.indexEndValue_),this.endNameSet_&&(n[e.END_AT]+=\",\"+I(this.indexEndName_))),this.limitSet_&&(this.isViewFromLeft()?n[e.LIMIT_TO_FIRST]=this.limit_:n[e.LIMIT_TO_LAST]=this.limit_)),n},Ni.WIRE_PROTOCOL_CONSTANTS_={INDEX_START_VALUE:\"sp\",INDEX_START_NAME:\"sn\",INDEX_END_VALUE:\"ep\",INDEX_END_NAME:\"en\",LIMIT:\"l\",VIEW_FROM:\"vf\",VIEW_FROM_LEFT:\"l\",VIEW_FROM_RIGHT:\"r\",INDEX:\"i\"},Ni.REST_QUERY_CONSTANTS_={ORDER_BY:\"orderBy\",PRIORITY_INDEX:\"$priority\",VALUE_INDEX:\"$value\",KEY_INDEX:\"$key\",START_AT:\"startAt\",END_AT:\"endAt\",LIMIT_TO_FIRST:\"limitToFirst\",LIMIT_TO_LAST:\"limitToLast\"},Ni.DEFAULT=new Ni,Ni);function Ni(){this.limitSet_=!1,this.startSet_=!1,this.startNameSet_=!1,this.endSet_=!1,this.endNameSet_=!1,this.limit_=0,this.viewFrom_=\"\",this.indexStartValue_=null,this.indexStartName_=\"\",this.indexEndValue_=null,this.indexEndName_=\"\",this.index_=Pe}var Ri,Pi=(t(Di,Ri=Cn),Di.prototype.getKey=function(){return F(\"Reference.key\",0,0,arguments.length),this.path.isEmpty()?null:this.path.getBack()},Di.prototype.child=function(t){var e,n,r,i;return F(\"Reference.child\",1,1,arguments.length),\"number\"==typeof t?t=String(t):t instanceof Dt||(null===this.path.getFront()?(e=\"Reference.child\",i=!(n=1),r=(r=t)&&r.replace(/^\\/*\\.info(\\/|$)/,\"/\"),zt(e,n,r,i)):zt(\"Reference.child\",1,t,!1)),new Di(this.repo,this.path.child(t))},Di.prototype.getParent=function(){F(\"Reference.parent\",0,0,arguments.length);var t=this.path.parent();return null===t?null:new Di(this.repo,t)},Di.prototype.getRoot=function(){F(\"Reference.root\",0,0,arguments.length);for(var t=this;null!==t.getParent();)t=t.getParent();return t},Di.prototype.databaseProp=function(){return this.repo.database},Di.prototype.set=function(t,e){F(\"Reference.set\",1,2,arguments.length),Gt(\"Reference.set\",this.path),Ht(\"Reference.set\",1,t,this.path,!1),L(\"Reference.set\",2,e,!0);var n=new p;return this.repo.setWithPriority(this.path,t,null,n.wrapCallback(e)),n.promise},Di.prototype.update=function(t,e){if(F(\"Reference.update\",1,2,arguments.length),Gt(\"Reference.update\",this.path),Array.isArray(t)){for(var n={},r=0;r<t.length;++r)n[\"\"+r]=t[r];t=n,at(\"Passing an Array to Firebase.update() is deprecated. Use set() if you want to overwrite the existing data, or an Object with integer keys if you really do want to only update some of the children.\")}Bt(\"Reference.update\",1,t,this.path,!1),L(\"Reference.update\",2,e,!0);var i=new p;return this.repo.update(this.path,t,i.wrapCallback(e)),i.promise},Di.prototype.setWithPriority=function(t,e,n){if(F(\"Reference.setWithPriority\",2,3,arguments.length),Gt(\"Reference.setWithPriority\",this.path),Ht(\"Reference.setWithPriority\",1,t,this.path,!1),jt(\"Reference.setWithPriority\",2,e,!1),L(\"Reference.setWithPriority\",3,n,!0),\".length\"===this.getKey()||\".keys\"===this.getKey())throw\"Reference.setWithPriority failed: \"+this.getKey()+\" is a read-only object.\";var r=new p;return this.repo.setWithPriority(this.path,t,e,r.wrapCallback(n)),r.promise},Di.prototype.remove=function(t){return F(\"Reference.remove\",0,1,arguments.length),Gt(\"Reference.remove\",this.path),L(\"Reference.remove\",1,t,!0),this.set(null,t)},Di.prototype.transaction=function(t,r,e){if(F(\"Reference.transaction\",1,3,arguments.length),Gt(\"Reference.transaction\",this.path),L(\"Reference.transaction\",1,t,!1),L(\"Reference.transaction\",2,r,!0),function(t,e,n,r){if((!r||void 0!==n)&&\"boolean\"!=typeof n)throw new Error(A(t,e,r)+\"must be a boolean.\")}(\"Reference.transaction\",3,e,!0),\".length\"===this.getKey()||\".keys\"===this.getKey())throw\"Reference.transaction failed: \"+this.getKey()+\" is a read-only object.\";void 0===e&&(e=!0);var i=new p;return\"function\"==typeof r&&i.promise.catch(function(){}),this.repo.startTransaction(this.path,t,function(t,e,n){t?i.reject(t):i.resolve(new ie(e,n)),\"function\"==typeof r&&r(t,e,n)},e),i.promise},Di.prototype.setPriority=function(t,e){F(\"Reference.setPriority\",1,2,arguments.length),Gt(\"Reference.setPriority\",this.path),jt(\"Reference.setPriority\",1,t,!1),L(\"Reference.setPriority\",2,e,!0);var n=new p;return this.repo.setWithPriority(this.path.child(\".priority\"),t,null,n.wrapCallback(e)),n.promise},Di.prototype.push=function(t,e){F(\"Reference.push\",0,2,arguments.length),Gt(\"Reference.push\",this.path),Ht(\"Reference.push\",1,t,this.path,!0),L(\"Reference.push\",2,e,!0);var n,r=this.repo.serverTime(),i=le(r),o=this.child(i),s=this.child(i);return n=null!=t?o.set(t,e).then(function(){return s}):Promise.resolve(s),o.then=n.then.bind(n),o.catch=n.then.bind(n,void 0),\"function\"==typeof e&&n.catch(function(){}),o},Di.prototype.onDisconnect=function(){return Gt(\"Reference.onDisconnect\",this.path),new ne(this.repo,this.path)},Object.defineProperty(Di.prototype,\"database\",{get:function(){return this.databaseProp()},enumerable:!0,configurable:!0}),Object.defineProperty(Di.prototype,\"key\",{get:function(){return this.getKey()},enumerable:!0,configurable:!0}),Object.defineProperty(Di.prototype,\"parent\",{get:function(){return this.getParent()},enumerable:!0,configurable:!0}),Object.defineProperty(Di.prototype,\"root\",{get:function(){return this.getRoot()},enumerable:!0,configurable:!0}),Di);function Di(t,e){if(!(t instanceof Ci))throw new Error(\"new Reference() no longer supported - use app.database().\");return Ri.call(this,t,e,Ii.DEFAULT,!1)||this}Cn.__referenceConstructor=Pi,vr.__referenceConstructor=Pi;var Oi,xi,ki=function(){this.children={},this.childCount=0,this.value=null},Fi=(Ai.prototype.subTree=function(t){for(var e=t instanceof Dt?t:new Dt(t),n=this,r=e.getFront();null!==r;)n=new Ai(r,n,P(n.node_.children,r)||new ki),r=(e=e.popFront()).getFront();return n},Ai.prototype.getValue=function(){return this.node_.value},Ai.prototype.setValue=function(t){C(void 0!==t,\"Cannot set value to undefined\"),this.node_.value=t,this.updateParents_()},Ai.prototype.clear=function(){this.node_.value=null,this.node_.children={},this.node_.childCount=0,this.updateParents_()},Ai.prototype.hasChildren=function(){return 0<this.node_.childCount},Ai.prototype.isEmpty=function(){return null===this.getValue()&&!this.hasChildren()},Ai.prototype.forEachChild=function(n){var r=this;St(this.node_.children,function(t,e){n(new Ai(t,r,e))})},Ai.prototype.forEachDescendant=function(e,t,n){t&&!n&&e(this),this.forEachChild(function(t){t.forEachDescendant(e,!0,n)}),t&&n&&e(this)},Ai.prototype.forEachAncestor=function(t,e){for(var n=e?this:this.parent();null!==n;){if(t(n))return!0;n=n.parent()}return!1},Ai.prototype.forEachImmediateDescendantWithValue=function(e){this.forEachChild(function(t){null!==t.getValue()?e(t):t.forEachImmediateDescendantWithValue(e)})},Ai.prototype.path=function(){return new Dt(null===this.parent_?this.name_:this.parent_.path()+\"/\"+this.name_)},Ai.prototype.name=function(){return this.name_},Ai.prototype.parent=function(){return this.parent_},Ai.prototype.updateParents_=function(){null!==this.parent_&&this.parent_.updateChild_(this.name_,this)},Ai.prototype.updateChild_=function(t,e){var n=e.isEmpty(),r=R(this.node_.children,t);n&&r?(delete this.node_.children[t],this.node_.childCount--,this.updateParents_()):n||r||(this.node_.children[t]=e.node_,this.node_.childCount++,this.updateParents_())},Ai);function Ai(t,e,n){void 0===t&&(t=\"\"),void 0===e&&(e=null),void 0===n&&(n=new ki),this.name_=t,this.parent_=e,this.node_=n}(xi=Oi=Oi||{})[xi.RUN=0]=\"RUN\",xi[xi.SENT=1]=\"SENT\",xi[xi.COMPLETED=2]=\"COMPLETED\",xi[xi.SENT_NEEDS_ABORT=3]=\"SENT_NEEDS_ABORT\",xi[xi.NEEDS_ABORT=4]=\"NEEDS_ABORT\",Ci.MAX_TRANSACTION_RETRIES_=25,Ci.prototype.transactionsInit_=function(){this.transactionQueueTree_=new Fi},Ci.prototype.startTransaction=function(t,e,n,r){this.log_(\"transaction on \"+t);function i(){}var o=new Pi(this,t);o.on(\"value\",i);var s={path:t,update:e,onComplete:n,status:null,order:yt(),applyLocally:r,retryCount:0,unwatcher:function(){o.off(\"value\",i)},abortReason:null,currentWriteId:null,currentInputSnapshot:null,currentOutputSnapshotRaw:null,currentOutputSnapshotResolved:null},a=this.getLatestState_(t);s.currentInputSnapshot=a;var h=s.update(a.val());if(void 0===h){if(s.unwatcher(),s.currentOutputSnapshotRaw=null,s.currentOutputSnapshotResolved=null,s.onComplete){var l=new ln(s.currentInputSnapshot,new Pi(this,s.path),Pe);s.onComplete(null,!1,l)}}else{ee(\"transaction failed: Data returned \",h,s.path),s.status=Oi.RUN;var u=this.transactionQueueTree_.subTree(t),c=u.getValue()||[];c.push(s),u.setValue(c);var p=void 0;if(\"object\"==typeof h&&null!==h&&R(h,\".priority\"))p=P(h,\".priority\"),C(Vt(p),\"Invalid priority returned by transaction. Priority must be a valid string, finite number, server value, or null.\");else p=(this.serverSyncTree_.calcCompleteEventCache(t)||Xe.EMPTY_NODE).getPriority().val();p=p;var d=this.generateServerValues(),f=nn(h,p),_=Nn(f,a,d);s.currentOutputSnapshotRaw=f,s.currentOutputSnapshotResolved=_,s.currentWriteId=this.getNextWriteId_();var y=this.serverSyncTree_.applyUserOverwrite(t,_,s.currentWriteId,s.applyLocally);this.eventQueue_.raiseEventsForChangedPath(t,y),this.sendReadyTransactions_()}},Ci.prototype.getLatestState_=function(t,e){return this.serverSyncTree_.calcCompleteEventCache(t,e)||Xe.EMPTY_NODE},Ci.prototype.sendReadyTransactions_=function(t){var e=this;if(void 0===t&&(t=this.transactionQueueTree_),t||this.pruneCompletedTransactionsBelowNode_(t),null!==t.getValue()){var n=this.buildTransactionQueue_(t);C(0<n.length,\"Sending zero length transaction queue\"),n.every(function(t){return t.status===Oi.RUN})&&this.sendTransactionQueue_(t.path(),n)}else t.hasChildren()&&t.forEachChild(function(t){e.sendReadyTransactions_(t)})},Ci.prototype.sendTransactionQueue_=function(a,h){for(var l=this,t=h.map(function(t){return t.currentWriteId}),e=this.getLatestState_(a,t),n=e,r=e.hash(),i=0;i<h.length;i++){var o=h[i];C(o.status===Oi.RUN,\"tryToSendTransactionQueue_: items in queue should all be run.\"),o.status=Oi.SENT,o.retryCount++;var s=Dt.relativePath(a,o.path);n=n.updateChild(s,o.currentOutputSnapshotRaw)}var u=n.val(!0),c=a;this.server_.put(c.toString(),u,function(t){l.log_(\"transaction put response\",{path:c.toString(),status:t});var e=[];if(\"ok\"===t){for(var n=[],r=0;r<h.length;r++){if(h[r].status=Oi.COMPLETED,e=e.concat(l.serverSyncTree_.ackUserWrite(h[r].currentWriteId)),h[r].onComplete){var i=h[r].currentOutputSnapshotResolved,o=new Pi(l,h[r].path),s=new ln(i,o,Pe);n.push(h[r].onComplete.bind(null,null,!0,s))}h[r].unwatcher()}l.pruneCompletedTransactionsBelowNode_(l.transactionQueueTree_.subTree(a)),l.sendReadyTransactions_(),l.eventQueue_.raiseEventsForChangedPath(a,e);for(r=0;r<n.length;r++)It(n[r])}else{if(\"datastale\"===t)for(r=0;r<h.length;r++)h[r].status===Oi.SENT_NEEDS_ABORT?h[r].status=Oi.NEEDS_ABORT:h[r].status=Oi.RUN;else{at(\"transaction at \"+c.toString()+\" failed: \"+t);for(r=0;r<h.length;r++)h[r].status=Oi.NEEDS_ABORT,h[r].abortReason=t}l.rerunTransactions_(a)}},r)},Ci.prototype.rerunTransactions_=function(t){var e=this.getAncestorTransactionNode_(t),n=e.path(),r=this.buildTransactionQueue_(e);return this.rerunTransactionQueue_(r,n),n},Ci.prototype.rerunTransactionQueue_=function(t,e){if(0!==t.length){for(var n,r=[],i=[],o=t.filter(function(t){return t.status===Oi.RUN}).map(function(t){return t.currentWriteId}),s=0;s<t.length;s++){var a=t[s],h=Dt.relativePath(e,a.path),l=!1,u=void 0;if(C(null!==h,\"rerunTransactionsUnderNode_: relativePath should not be null.\"),a.status===Oi.NEEDS_ABORT)l=!0,u=a.abortReason,i=i.concat(this.serverSyncTree_.ackUserWrite(a.currentWriteId,!0));else if(a.status===Oi.RUN)if(a.retryCount>=Ci.MAX_TRANSACTION_RETRIES_)l=!0,u=\"maxretry\",i=i.concat(this.serverSyncTree_.ackUserWrite(a.currentWriteId,!0));else{var c=this.getLatestState_(a.path,o);a.currentInputSnapshot=c;var p=t[s].update(c.val());if(void 0!==p){ee(\"transaction failed: Data returned \",p,a.path);var d=nn(p);\"object\"==typeof p&&null!=p&&R(p,\".priority\")||(d=d.updatePriority(c.getPriority()));var f=a.currentWriteId,_=this.generateServerValues(),y=Nn(d,c,_);a.currentOutputSnapshotRaw=d,a.currentOutputSnapshotResolved=y,a.currentWriteId=this.getNextWriteId_(),o.splice(o.indexOf(f),1),i=(i=i.concat(this.serverSyncTree_.applyUserOverwrite(a.path,y,a.currentWriteId,a.applyLocally))).concat(this.serverSyncTree_.ackUserWrite(f,!0))}else l=!0,u=\"nodata\",i=i.concat(this.serverSyncTree_.ackUserWrite(a.currentWriteId,!0))}if(this.eventQueue_.raiseEventsForChangedPath(e,i),i=[],l&&(t[s].status=Oi.COMPLETED,n=t[s].unwatcher,setTimeout(n,Math.floor(0)),t[s].onComplete))if(\"nodata\"===u){var v=new Pi(this,t[s].path),g=t[s].currentInputSnapshot,m=new ln(g,v,Pe);r.push(t[s].onComplete.bind(null,null,!1,m))}else r.push(t[s].onComplete.bind(null,new Error(u),!1,null))}this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);for(s=0;s<r.length;s++)It(r[s]);this.sendReadyTransactions_()}},Ci.prototype.getAncestorTransactionNode_=function(t){var e,n=this.transactionQueueTree_;for(e=t.getFront();null!==e&&null===n.getValue();)n=n.subTree(e),e=(t=t.popFront()).getFront();return n},Ci.prototype.buildTransactionQueue_=function(t){var e=[];return this.aggregateTransactionQueuesForNode_(t,e),e.sort(function(t,e){return t.order-e.order}),e},Ci.prototype.aggregateTransactionQueuesForNode_=function(t,e){var n=this,r=t.getValue();if(null!==r)for(var i=0;i<r.length;i++)e.push(r[i]);t.forEachChild(function(t){n.aggregateTransactionQueuesForNode_(t,e)})},Ci.prototype.pruneCompletedTransactionsBelowNode_=function(t){var e=this,n=t.getValue();if(n){for(var r=0,i=0;i<n.length;i++)n[i].status!==Oi.COMPLETED&&(n[r]=n[i],r++);n.length=r,t.setValue(0<n.length?n:null)}t.forEachChild(function(t){e.pruneCompletedTransactionsBelowNode_(t)})},Ci.prototype.abortTransactions_=function(t){var e=this,n=this.getAncestorTransactionNode_(t).path(),r=this.transactionQueueTree_.subTree(t);return r.forEachAncestor(function(t){e.abortTransactionsOnNode_(t)}),this.abortTransactionsOnNode_(r),r.forEachDescendant(function(t){e.abortTransactionsOnNode_(t)}),n},Ci.prototype.abortTransactionsOnNode_=function(t){var e=t.getValue();if(null!==e){for(var n=[],r=[],i=-1,o=0;o<e.length;o++)if(e[o].status!==Oi.SENT_NEEDS_ABORT)if(e[o].status===Oi.SENT)C(i===o-1,\"All SENT items should be at beginning of queue.\"),e[i=o].status=Oi.SENT_NEEDS_ABORT,e[o].abortReason=\"set\";else if(C(e[o].status===Oi.RUN,\"Unexpected transaction status in abort\"),e[o].unwatcher(),r=r.concat(this.serverSyncTree_.ackUserWrite(e[o].currentWriteId,!0)),e[o].onComplete){n.push(e[o].onComplete.bind(null,new Error(\"set\"),!1,null))}-1===i?t.setValue(null):e.length=i+1,this.eventQueue_.raiseEventsForChangedPath(t.path(),r);for(o=0;o<n.length;o++)It(n[o])}};var Li,Mi=\"databaseURL\",Wi=(Qi.getInstance=function(){return Li=Li||new Qi},Qi.prototype.interrupt=function(){var e,t,n,r;try{for(var i=_(Object.keys(this.repos_)),o=i.next();!o.done;o=i.next()){var s=o.value;try{for(var a=(n=void 0,_(Object.keys(this.repos_[s]))),h=a.next();!h.done;h=a.next()){var l=h.value;this.repos_[s][l].interrupt()}}catch(t){n={error:t}}finally{try{h&&!h.done&&(r=a.return)&&r.call(a)}finally{if(n)throw n.error}}}}catch(t){e={error:t}}finally{try{o&&!o.done&&(t=i.return)&&t.call(i)}finally{if(e)throw e.error}}},Qi.prototype.resume=function(){var e,t,n,r;try{for(var i=_(Object.keys(this.repos_)),o=i.next();!o.done;o=i.next()){var s=o.value;try{for(var a=(n=void 0,_(Object.keys(this.repos_[s]))),h=a.next();!h.done;h=a.next()){var l=h.value;this.repos_[s][l].resume()}}catch(t){n={error:t}}finally{try{h&&!h.done&&(r=a.return)&&r.call(a)}finally{if(n)throw n.error}}}}catch(t){e={error:t}}finally{try{o&&!o.done&&(t=i.return)&&t.call(i)}finally{if(e)throw e.error}}},Qi.prototype.databaseFromApp=function(t,e,n){var r=n||t.options[Mi];void 0===r&&st(\"Can't determine Firebase Database URL.  Be sure to include \"+Mi+\" option when calling firebase.initializeApp().\");var i=Qt(r),o=i.repoInfo,s=void 0;return\"undefined\"!=typeof process&&(s=process.env.FIREBASE_DATABASE_EMULATOR_HOST),s&&(r=\"http://\"+s+\"?ns=\"+o.namespace,o=(i=Qt(r)).repoInfo),Xt(\"Invalid Firebase Database URL\",1,i),i.path.isEmpty()||st(\"Database URL must point to the root of a Firebase Database (not including a child path).\"),this.createRepo(o,t,e).database},Qi.prototype.deleteRepo=function(t){var e=P(this.repos_,t.app.name);e&&P(e,t.repoInfo_.toURLString())===t||st(\"Database \"+t.app.name+\"(\"+t.repoInfo_+\") has already been deleted.\"),t.interrupt(),delete e[t.repoInfo_.toURLString()]},Qi.prototype.createRepo=function(t,e,n){var r=P(this.repos_,e.name);r||(r={},this.repos_[e.name]=r);var i=P(r,t.toURLString());return i&&st(\"Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.\"),i=new Ci(t,this.useRestClient_,e,n),r[t.toURLString()]=i},Qi.prototype.forceRestClient=function(t){this.useRestClient_=t},Qi);function Qi(){this.repos_={},this.useRestClient_=!1}var qi=(Object.defineProperty(Ui.prototype,\"app\",{get:function(){return this.repo_.app},enumerable:!0,configurable:!0}),Ui.prototype.ref=function(t){return this.checkDeleted_(\"ref\"),F(\"database.ref\",0,1,arguments.length),t instanceof Pi?this.refFromURL(t.toString()):void 0!==t?this.root_.child(t):this.root_},Ui.prototype.refFromURL=function(t){var e=\"database.refFromURL\";this.checkDeleted_(e),F(e,1,1,arguments.length);var n=Qt(t);Xt(e,1,n);var r=n.repoInfo;return r.host!==this.repo_.repoInfo_.host&&st(e+\": Host name does not match the current database: (found \"+r.host+\" but expected \"+this.repo_.repoInfo_.host+\")\"),this.ref(n.path.toString())},Ui.prototype.checkDeleted_=function(t){null===this.repo_&&st(\"Cannot call \"+t+\" on a deleted database.\")},Ui.prototype.goOffline=function(){F(\"database.goOffline\",0,0,arguments.length),this.checkDeleted_(\"goOffline\"),this.repo_.interrupt()},Ui.prototype.goOnline=function(){F(\"database.goOnline\",0,0,arguments.length),this.checkDeleted_(\"goOnline\"),this.repo_.resume()},Ui.ServerValue={TIMESTAMP:{\".sv\":\"timestamp\"},increment:function(t){return{\".sv\":{increment:t}}}},Ui);function Ui(t){(this.repo_=t)instanceof Ci||st(\"Don't call new Database() directly - please use firebase.database().\"),this.root_=new Pi(t,Dt.Empty),this.INTERNAL=new Vi(this)}var Vi=(Hi.prototype.delete=function(){return e(this,void 0,void 0,function(){return n(this,function(t){return this.database.checkDeleted_(\"delete\"),Wi.getInstance().deleteRepo(this.database.repo_),this.database.repo_=null,this.database.root_=null,this.database.INTERNAL=null,this.database=null,[2]})})},Hi);function Hi(t){this.database=t}var Bi=Object.freeze({__proto__:null,forceLongPolling:function(){oi.forceDisallow(),Zr.forceAllow()},forceWebSockets:function(){Zr.forceDisallow()},isWebSocketsAvailable:function(){return oi.isAvailable()},setSecurityDebugCallback:function(t,e){t.repo.persistentConnection_.securityDebugCallback_=e},stats:function(t,e){t.repo.stats(e)},statsIncrementCounter:function(t,e){t.repo.statsIncrementCounter(e)},dataUpdateCount:function(t){return t.repo.dataUpdateCount},interceptServerData:function(t,e){return t.repo.interceptServerData_(e)}}),ji=fi;fi.prototype.simpleListen=function(t,e){this.sendRequest(\"q\",{p:t},e)},fi.prototype.echo=function(t,e){this.sendRequest(\"echo\",{d:t},e)};var Yi,Ki,zi=li,Gi=Mt,Xi=Object.freeze({__proto__:null,DataConnection:ji,RealTimeConnection:zi,hijackHash:function(i){var o=fi.prototype.put;return fi.prototype.put=function(t,e,n,r){void 0!==r&&(r=i()),o.call(this,t,e,n,r)},function(){fi.prototype.put=o}},ConnectionTarget:Gi,queryIdentifier:function(t){return t.queryIdentifier()},forceRestClient:function(t){Wi.getInstance().forceRestClient(t)}}),$i=qi.ServerValue;Ki=(Yi=Ji).SDK_VERSION,ri=Ki,Yi.INTERNAL.registerComponent(new z(\"database\",function(t,e){var n=t.getProvider(\"app\").getImmediate(),r=t.getProvider(\"auth-internal\");return Wi.getInstance().databaseFromApp(n,r,e)},\"PUBLIC\").setServiceProps({Reference:Pi,Query:Cn,Database:qi,DataSnapshot:ln,enableLogging:nt,INTERNAL:Bi,ServerValue:$i,TEST_ACCESS:Xi}).setMultipleInstances(!0)),Yi.registerVersion(\"@firebase/database\",\"0.6.3\")}).apply(this,arguments)}catch(t){throw console.error(t),new Error(\"Cannot instantiate firebase-database.js - be sure to load firebase-app.js first.\")}});\n//# sourceMappingURL=firebase-database.js.map\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/firebase/firebase-database.js\n");

/***/ }),

/***/ "./node_modules/firebase/firebase-firestore.js":
/*!*****************************************************!*\
  !*** ./node_modules/firebase/firebase-firestore.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {!function(t,e){ true?e(__webpack_require__(/*! @firebase/app */ \"./node_modules/@firebase/app/dist/index.cjs.js\")):undefined}(this,function(lp){\"use strict\";try{(function(){lp=lp&&Object.prototype.hasOwnProperty.call(lp,\"default\")?lp.default:lp;var t,l,e,r=function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)};function n(t,e){function n(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}function y(t,s,u,a){return new(u=u||Promise)(function(n,e){function r(t){try{o(a.next(t))}catch(t){e(t)}}function i(t){try{o(a.throw(t))}catch(t){e(t)}}function o(t){var e;t.done?n(t.value):((e=t.value)instanceof u?e:new u(function(t){t(e)})).then(r,i)}o((a=a.apply(t,s||[])).next())})}function v(n,r){var i,o,s,t,u={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return t={next:e(0),throw:e(1),return:e(2)},\"function\"==typeof Symbol&&(t[Symbol.iterator]=function(){return this}),t;function e(e){return function(t){return function(e){if(i)throw new TypeError(\"Generator is already executing.\");for(;u;)try{if(i=1,o&&(s=2&e[0]?o.return:e[0]?o.throw||((s=o.return)&&s.call(o),0):o.next)&&!(s=s.call(o,e[1])).done)return s;switch(o=0,s&&(e=[2&e[0],s.value]),e[0]){case 0:case 1:s=e;break;case 4:return u.label++,{value:e[1],done:!1};case 5:u.label++,o=e[1],e=[0];continue;case 7:e=u.ops.pop(),u.trys.pop();continue;default:if(!(s=0<(s=u.trys).length&&s[s.length-1])&&(6===e[0]||2===e[0])){u=0;continue}if(3===e[0]&&(!s||e[1]>s[0]&&e[1]<s[3])){u.label=e[1];break}if(6===e[0]&&u.label<s[1]){u.label=s[1],s=e;break}if(s&&u.label<s[2]){u.label=s[2],u.ops.push(e);break}s[2]&&u.ops.pop(),u.trys.pop();continue}e=r.call(n,u)}catch(t){e=[6,t],o=0}finally{i=s=0}if(5&e[0])throw e[1];return{value:e[0]?e[1]:void 0,done:!0}}([e,t])}}}function i(){for(var t=0,e=0,n=arguments.length;e<n;e++)t+=arguments[e].length;var r=Array(t),i=0;for(e=0;e<n;e++)for(var o=arguments[e],s=0,u=o.length;s<u;s++,i++)r[i]=o[s];return r}function s(){for(var t=0,e=0,n=arguments.length;e<n;e++)t+=arguments[e].length;var r=Array(t),i=0;for(e=0;e<n;e++)for(var o=arguments[e],s=0,u=o.length;s<u;s++,i++)r[i]=o[s];return r}(e=l=l||{})[e.DEBUG=0]=\"DEBUG\",e[e.VERBOSE=1]=\"VERBOSE\",e[e.INFO=2]=\"INFO\",e[e.WARN=3]=\"WARN\",e[e.ERROR=4]=\"ERROR\",e[e.SILENT=5]=\"SILENT\";l.DEBUG,l.VERBOSE,l.INFO,l.WARN,l.ERROR,l.SILENT;function o(t,e){for(var n=[],r=2;r<arguments.length;r++)n[r-2]=arguments[r];if(!(e<t.logLevel)){var i=(new Date).toISOString(),o=a[e];if(!o)throw new Error(\"Attempted to log a message with an invalid logType (value: \"+e+\")\");console[o].apply(console,s([\"[\"+i+\"]  \"+t.name+\":\"],n))}}var u=l.INFO,a=((t={})[l.DEBUG]=\"log\",t[l.VERBOSE]=\"log\",t[l.INFO]=\"info\",t[l.WARN]=\"warn\",t[l.ERROR]=\"error\",t),h=(Object.defineProperty(c.prototype,\"logLevel\",{get:function(){return this._logLevel},set:function(t){if(!(t in l))throw new TypeError(\"Invalid value assigned to `logLevel`\");this._logLevel=t},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,\"logHandler\",{get:function(){return this._logHandler},set:function(t){if(\"function\"!=typeof t)throw new TypeError(\"Value assigned to `logHandler` must be a function\");this._logHandler=t},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,\"userLogHandler\",{get:function(){return this._userLogHandler},set:function(t){this._userLogHandler=t},enumerable:!0,configurable:!0}),c.prototype.debug=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._userLogHandler&&this._userLogHandler.apply(this,s([this,l.DEBUG],t)),this._logHandler.apply(this,s([this,l.DEBUG],t))},c.prototype.log=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._userLogHandler&&this._userLogHandler.apply(this,s([this,l.VERBOSE],t)),this._logHandler.apply(this,s([this,l.VERBOSE],t))},c.prototype.info=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._userLogHandler&&this._userLogHandler.apply(this,s([this,l.INFO],t)),this._logHandler.apply(this,s([this,l.INFO],t))},c.prototype.warn=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._userLogHandler&&this._userLogHandler.apply(this,s([this,l.WARN],t)),this._logHandler.apply(this,s([this,l.WARN],t))},c.prototype.error=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._userLogHandler&&this._userLogHandler.apply(this,s([this,l.ERROR],t)),this._logHandler.apply(this,s([this,l.ERROR],t))},c);function c(t){this.name=t,this._logLevel=u,this._logHandler=o,this._userLogHandler=null}function p(){return\"undefined\"!=typeof navigator&&\"string\"==typeof navigator.userAgent?navigator.userAgent:\"\"}var f,d=(n(m,f=Error),m);function m(t,e){var n=f.call(this,e)||this;return n.code=t,n.name=\"FirebaseError\",Object.setPrototypeOf(n,m.prototype),Error.captureStackTrace&&Error.captureStackTrace(n,g.prototype.create),n}var g=(w.prototype.create=function(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];for(var r,i=e[0]||{},o=this.service+\"/\"+t,s=this.errors[t],u=s?(r=i,s.replace(b,function(t,e){var n=r[e];return null!=n?n.toString():\"<\"+e+\"?>\"})):\"Error\",a=this.serviceName+\": \"+u+\" (\"+o+\").\",h=new d(o,a),c=0,f=Object.keys(i);c<f.length;c++){var l=f[c];\"_\"!==l.slice(-1)&&(l in h&&console.warn('Overwriting FirebaseError base field \"'+l+'\" can cause unexpected behavior.'),h[l]=i[l])}return h},w);function w(t,e,n){this.service=t,this.serviceName=e,this.errors=n}var b=/\\{\\$([^}]+)}/g,E=(T.prototype.setInstantiationMode=function(t){return this.instantiationMode=t,this},T.prototype.setMultipleInstances=function(t){return this.multipleInstances=t,this},T.prototype.setServiceProps=function(t){return this.serviceProps=t,this},T);function T(t,e,n){this.name=t,this.instanceFactory=e,this.type=n,this.multipleInstances=!1,this.serviceProps={},this.instantiationMode=\"LAZY\"}function I(t){var e=\"function\"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&\"number\"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")}var N,_=\"undefined\"!=typeof globalThis?globalThis:\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:{},A=A||{},S=_||self;function D(){}function k(t){var e=typeof t;if(\"object\"==e){if(!t)return\"null\";if(t instanceof Array)return\"array\";if(t instanceof Object)return e;var n=Object.prototype.toString.call(t);if(\"[object Window]\"==n)return\"object\";if(\"[object Array]\"==n||\"number\"==typeof t.length&&void 0!==t.splice&&void 0!==t.propertyIsEnumerable&&!t.propertyIsEnumerable(\"splice\"))return\"array\";if(\"[object Function]\"==n||void 0!==t.call&&void 0!==t.propertyIsEnumerable&&!t.propertyIsEnumerable(\"call\"))return\"function\"}else if(\"function\"==e&&void 0===t.call)return\"object\";return e}function x(t){var e=k(t);return\"array\"==e||\"object\"==e&&\"number\"==typeof t.length}function O(t){var e=typeof t;return\"object\"==e&&null!=t||\"function\"==e}var R=\"closure_uid_\"+(1e9*Math.random()>>>0),V=0;function P(t,e,n){return t.call.apply(t.bind,arguments)}function L(e,n,t){if(!e)throw Error();if(2<arguments.length){var r=Array.prototype.slice.call(arguments,2);return function(){var t=Array.prototype.slice.call(arguments);return Array.prototype.unshift.apply(t,r),e.apply(n,t)}}return function(){return e.apply(n,arguments)}}function C(t,e,n){return(C=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?P:L).apply(null,arguments)}function M(e,t){var n=Array.prototype.slice.call(arguments,1);return function(){var t=n.slice();return t.push.apply(t,arguments),e.apply(this,t)}}var j=Date.now||function(){return+new Date};function U(t,e){function n(){}n.prototype=e.prototype,t.M=e.prototype,t.prototype=new n,t.prototype.constructor=t}function q(){this.j=this.j,this.i=this.i}q.prototype.j=!1,q.prototype.da=function(){if(!this.j&&(this.j=!0,this.C(),0))t=this,Object.prototype.hasOwnProperty.call(t,R)&&t[R]||(t[R]=++V);var t},q.prototype.C=function(){if(this.i)for(;this.i.length;)this.i.shift()()};var F=Array.prototype.indexOf?function(t,e){return Array.prototype.indexOf.call(t,e,void 0)}:function(t,e){if(\"string\"==typeof t)return\"string\"!=typeof e||1!=e.length?-1:t.indexOf(e,0);for(var n=0;n<t.length;n++)if(n in t&&t[n]===e)return n;return-1},B=Array.prototype.forEach?function(t,e,n){Array.prototype.forEach.call(t,e,n)}:function(t,e,n){for(var r=t.length,i=\"string\"==typeof t?t.split(\"\"):t,o=0;o<r;o++)o in i&&e.call(n,i[o],o,t)};function G(t){return Array.prototype.concat.apply([],arguments)}function z(t){var e=t.length;if(0<e){for(var n=Array(e),r=0;r<e;r++)n[r]=t[r];return n}return[]}function W(t){return/^[\\s\\xa0]*$/.test(t)}var Q,H=String.prototype.trim?function(t){return t.trim()}:function(t){return/^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(t)[1]};function K(t,e){return-1!=t.indexOf(e)}function Y(t,e){return t<e?-1:e<t?1:0}t:{var X=S.navigator;if(X){var $=X.userAgent;if($){Q=$;break t}}Q=\"\"}function J(t,e,n){for(var r in t)e.call(n,t[r],r,t)}function Z(t){var e={};for(var n in t)e[n]=t[n];return e}var tt=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");function et(t,e){for(var n,r,i=1;i<arguments.length;i++){for(n in r=arguments[i])t[n]=r[n];for(var o=0;o<tt.length;o++)n=tt[o],Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}}function nt(t){return nt[\" \"](t),t}nt[\" \"]=D;var rt,it,ot=K(Q,\"Opera\"),st=K(Q,\"Trident\")||K(Q,\"MSIE\"),ut=K(Q,\"Edge\"),at=ut||st,ht=K(Q,\"Gecko\")&&!(K(Q.toLowerCase(),\"webkit\")&&!K(Q,\"Edge\"))&&!(K(Q,\"Trident\")||K(Q,\"MSIE\"))&&!K(Q,\"Edge\"),ct=K(Q.toLowerCase(),\"webkit\")&&!K(Q,\"Edge\");function ft(){var t=S.document;return t?t.documentMode:void 0}t:{var lt=\"\",pt=(it=Q,ht?/rv:([^\\);]+)(\\)|;)/.exec(it):ut?/Edge\\/([\\d\\.]+)/.exec(it):st?/\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(it):ct?/WebKit\\/(\\S+)/.exec(it):ot?/(?:Version)[ \\/]?(\\S+)/.exec(it):void 0);if(pt&&(lt=pt?pt[1]:\"\"),st){var dt=ft();if(null!=dt&&dt>parseFloat(lt)){rt=String(dt);break t}}rt=lt}var yt,vt={};function mt(u){return t=u,e=function(){for(var t=0,e=H(String(rt)).split(\".\"),n=H(String(u)).split(\".\"),r=Math.max(e.length,n.length),i=0;0==t&&i<r;i++){var o=e[i]||\"\",s=n[i]||\"\";do{if(o=/(\\d*)(\\D*)(.*)/.exec(o)||[\"\",\"\",\"\",\"\"],s=/(\\d*)(\\D*)(.*)/.exec(s)||[\"\",\"\",\"\",\"\"],0==o[0].length&&0==s[0].length)break;t=Y(0==o[1].length?0:parseInt(o[1],10),0==s[1].length?0:parseInt(s[1],10))||Y(0==o[2].length,0==s[2].length)||Y(o[2],s[2]),o=o[3],s=s[3]}while(0==t)}return 0<=t},n=vt,Object.prototype.hasOwnProperty.call(n,t)?n[t]:n[t]=e(t);var t,e,n}if(S.document&&st){var gt=ft();yt=gt||(parseInt(rt,10)||void 0)}else yt=void 0;var wt=yt,bt=!st||9<=Number(wt),Et=st&&!mt(\"9\"),Tt=function(){if(!S.addEventListener||!Object.defineProperty)return!1;var t=!1,e=Object.defineProperty({},\"passive\",{get:function(){t=!0}});try{S.addEventListener(\"test\",D,e),S.removeEventListener(\"test\",D,e)}catch(t){}return t}();function It(t,e){this.type=t,this.a=this.target=e,this.defaultPrevented=!1}function Nt(t,e){if(It.call(this,t?t.type:\"\"),this.relatedTarget=this.a=this.target=null,this.button=this.screenY=this.screenX=this.clientY=this.clientX=0,this.key=\"\",this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1,this.pointerId=0,this.pointerType=\"\",this.c=null,t){var n=this.type=t.type,r=t.changedTouches&&t.changedTouches.length?t.changedTouches[0]:null;if(this.target=t.target||t.srcElement,this.a=e,e=t.relatedTarget){if(ht){t:{try{nt(e.nodeName);var i=!0;break t}catch(t){}i=!1}i||(e=null)}}else\"mouseover\"==n?e=t.fromElement:\"mouseout\"==n&&(e=t.toElement);this.relatedTarget=e,r?(this.clientX=void 0!==r.clientX?r.clientX:r.pageX,this.clientY=void 0!==r.clientY?r.clientY:r.pageY,this.screenX=r.screenX||0,this.screenY=r.screenY||0):(this.clientX=void 0!==t.clientX?t.clientX:t.pageX,this.clientY=void 0!==t.clientY?t.clientY:t.pageY,this.screenX=t.screenX||0,this.screenY=t.screenY||0),this.button=t.button,this.key=t.key||\"\",this.ctrlKey=t.ctrlKey,this.altKey=t.altKey,this.shiftKey=t.shiftKey,this.metaKey=t.metaKey,this.pointerId=t.pointerId||0,this.pointerType=\"string\"==typeof t.pointerType?t.pointerType:_t[t.pointerType]||\"\",(this.c=t).defaultPrevented&&this.b()}}It.prototype.b=function(){this.defaultPrevented=!0},U(Nt,It);var _t={2:\"touch\",3:\"pen\",4:\"mouse\"};Nt.prototype.b=function(){Nt.M.b.call(this);var t=this.c;if(t.preventDefault)t.preventDefault();else if(t.returnValue=!1,Et)try{(t.ctrlKey||112<=t.keyCode&&t.keyCode<=123)&&(t.keyCode=-1)}catch(t){}};var At=\"closure_listenable_\"+(1e6*Math.random()|0),St=0;function Dt(t,e,n,r,i){this.listener=t,this.proxy=null,this.src=e,this.type=n,this.capture=!!r,this.aa=i,this.key=++St,this.V=this.X=!1}function kt(t){t.V=!0,t.listener=null,t.proxy=null,t.src=null,t.aa=null}function xt(t){this.src=t,this.a={},this.b=0}function Ot(t,e){var n=e.type;if(n in t.a){var r,i=t.a[n],o=F(i,e);(r=0<=o)&&Array.prototype.splice.call(i,o,1),r&&(kt(e),0==t.a[n].length&&(delete t.a[n],t.b--))}}function Rt(t,e,n,r){for(var i=0;i<t.length;++i){var o=t[i];if(!o.V&&o.listener==e&&o.capture==!!n&&o.aa==r)return i}return-1}xt.prototype.add=function(t,e,n,r,i){var o=t.toString();(t=this.a[o])||(t=this.a[o]=[],this.b++);var s=Rt(t,e,r,i);return-1<s?(e=t[s],n||(e.X=!1)):((e=new Dt(e,this.src,o,!!r,i)).X=n,t.push(e)),e};var Vt=\"closure_lm_\"+(1e6*Math.random()|0),Pt={};function Lt(t,e,n,r,i){if(r&&r.once)return function t(e,n,r,i,o){if(Array.isArray(n)){for(var s=0;s<n.length;s++)t(e,n[s],r,i,o);return null}r=Gt(r);return e&&e[At]?e.sa(n,r,O(i)?!!i.capture:!!i,o):Ct(e,n,r,!0,i,o)}(t,e,n,r,i);if(Array.isArray(e)){for(var o=0;o<e.length;o++)Lt(t,e[o],n,r,i);return null}return n=Gt(n),t&&t[At]?t.ra(e,n,O(r)?!!r.capture:!!r,i):Ct(t,e,n,!1,r,i)}function Ct(t,e,n,r,i,o){if(!e)throw Error(\"Invalid event type\");var s=O(i)?!!i.capture:!!i;if(s&&!bt)return null;var u,a,h=Ft(t);if(h||(t[Vt]=h=new xt(t)),(n=h.add(e,n,r,s,o)).proxy)return n;if(u=qt,r=a=bt?function(t){return u.call(a.src,a.listener,t)}:function(t){if(!(t=u.call(a.src,a.listener,t)))return t},(n.proxy=r).src=t,r.listener=n,t.addEventListener)Tt||(i=s),void 0===i&&(i=!1),t.addEventListener(e.toString(),r,i);else if(t.attachEvent)t.attachEvent(jt(e.toString()),r);else{if(!t.addListener||!t.removeListener)throw Error(\"addEventListener and attachEvent are unavailable.\");t.addListener(r)}return n}function Mt(t){if(\"number\"!=typeof t&&t&&!t.V){var e=t.src;if(e&&e[At])Ot(e.c,t);else{var n=t.type,r=t.proxy;e.removeEventListener?e.removeEventListener(n,r,t.capture):e.detachEvent?e.detachEvent(jt(n),r):e.addListener&&e.removeListener&&e.removeListener(r),(n=Ft(e))?(Ot(n,t),0==n.b&&(n.src=null,e[Vt]=null)):kt(t)}}}function jt(t){return t in Pt?Pt[t]:Pt[t]=\"on\"+t}function Ut(t,e){var n=t.listener,r=t.aa||t.src;return t.X&&Mt(t),n.call(r,e)}function qt(t,e){if(t.V)return!0;if(bt)return Ut(t,new Nt(e,this));if(!e)t:{e=[\"window\",\"event\"];for(var n=S,r=0;r<e.length;r++)if(null==(n=n[e[r]])){e=null;break t}e=n}return Ut(t,e=new Nt(e,this))}function Ft(t){return(t=t[Vt])instanceof xt?t:null}var Bt=\"__closure_events_fn_\"+(1e9*Math.random()>>>0);function Gt(e){return\"function\"==k(e)?e:(e[Bt]||(e[Bt]=function(t){return e.handleEvent(t)}),e[Bt])}function zt(){q.call(this),this.c=new xt(this),(this.J=this).A=null}function Wt(t,e,n,r){if(!(e=t.c.a[String(e)]))return!0;e=e.concat();for(var i=!0,o=0;o<e.length;++o){var s=e[o];if(s&&!s.V&&s.capture==n){var u=s.listener,a=s.aa||s.src;s.X&&Ot(t.c,s),i=!1!==u.call(a,r)&&i}}return i&&!r.defaultPrevented}U(zt,q),zt.prototype[At]=!0,(N=zt.prototype).addEventListener=function(t,e,n,r){Lt(this,t,e,n,r)},N.removeEventListener=function(t,e,n,r){!function t(e,n,r,i,o){if(Array.isArray(n))for(var s=0;s<n.length;s++)t(e,n[s],r,i,o);else i=O(i)?!!i.capture:!!i,r=Gt(r),e&&e[At]?(e=e.c,(n=String(n).toString())in e.a&&-1<(r=Rt(s=e.a[n],r,i,o))&&(kt(s[r]),Array.prototype.splice.call(s,r,1),0==s.length&&(delete e.a[n],e.b--))):(e=e&&Ft(e))&&(n=e.a[n.toString()],e=-1,n&&(e=Rt(n,r,i,o)),(r=-1<e?n[e]:null)&&Mt(r))}(this,t,e,n,r)},N.dispatchEvent=function(t){var e,n=this.A;if(n)for(e=[];n;n=n.A)e.push(n);n=this.J;var r=t.type||t;if(\"string\"==typeof t)t=new It(t,n);else if(t instanceof It)t.target=t.target||n;else{var i=t;et(t=new It(r,n),i)}if(i=!0,e)for(var o=e.length-1;0<=o;o--){var s=t.a=e[o];i=Wt(s,r,!0,t)&&i}if(i=Wt(s=t.a=n,r,!0,t)&&i,i=Wt(s,r,!1,t)&&i,e)for(o=0;o<e.length;o++)i=Wt(s=t.a=e[o],r,!1,t)&&i;return i},N.C=function(){if(zt.M.C.call(this),this.c){var t,e=this.c;for(t in e.a){for(var n=e.a[t],r=0;r<n.length;r++)kt(n[r]);delete e.a[t],e.b--}}this.A=null},N.ra=function(t,e,n,r){return this.c.add(String(t),e,!1,n,r)},N.sa=function(t,e,n,r){return this.c.add(String(t),e,!0,n,r)};var Qt=S.JSON.stringify;function Ht(){this.b=this.a=null}var Kt,Yt=(Xt.prototype.get=function(){var t;return 0<this.b?(this.b--,t=this.a,this.a=t.next,t.next=null):t=this.c(),t},new Xt(function(){return new $t},function(t){t.reset()},100));function Xt(t,e,n){this.f=n,this.c=t,this.g=e,this.b=0,this.a=null}function $t(){this.next=this.b=this.a=null}function Jt(t){S.setTimeout(function(){throw t},0)}function Zt(t,e){var n;Kt||(n=S.Promise.resolve(void 0),Kt=function(){n.then(ne)}),te||(Kt(),te=!0),ee.add(t,e)}Ht.prototype.add=function(t,e){var n=Yt.get();n.set(t,e),this.b?this.b.next=n:this.a=n,this.b=n},$t.prototype.set=function(t,e){this.a=t,this.b=e,this.next=null};var te=!($t.prototype.reset=function(){this.next=this.b=this.a=null}),ee=new Ht;function ne(){for(var t;r=n=void 0,r=null,(n=ee).a&&(r=n.a,n.a=n.a.next,n.a||(n.b=null),r.next=null),t=r;){try{t.a.call(t.b)}catch(t){Jt(t)}var e=Yt;e.g(t),e.b<e.f&&(e.b++,t.next=e.a,e.a=t)}var n,r;te=!1}function re(t,e){zt.call(this),this.b=t||1,this.a=e||S,this.f=C(this.Ua,this),this.g=j()}function ie(t){t.Z=!1,t.L&&(t.a.clearTimeout(t.L),t.L=null)}function oe(t,e,n){if(\"function\"==k(t))n&&(t=C(t,n));else{if(!t||\"function\"!=typeof t.handleEvent)throw Error(\"Invalid listener argument\");t=C(t.handleEvent,t)}return 2147483647<Number(e)?-1:S.setTimeout(t,e||0)}function se(t,e,n){q.call(this),this.f=null!=n?C(t,n):t,this.c=e,this.b=C(this.Pa,this),this.a=[]}function ue(t){t.T=oe(t.b,t.c),t.f.apply(null,t.a)}function ae(t){q.call(this),this.b=t,this.a={}}U(re,zt),(N=re.prototype).Z=!1,N.L=null,N.Ua=function(){if(this.Z){var t=j()-this.g;0<t&&t<.8*this.b?this.L=this.a.setTimeout(this.f,this.b-t):(this.L&&(this.a.clearTimeout(this.L),this.L=null),this.dispatchEvent(\"tick\"),this.Z&&(ie(this),this.start()))}},N.start=function(){this.Z=!0,this.L||(this.L=this.a.setTimeout(this.f,this.b),this.g=j())},N.C=function(){re.M.C.call(this),ie(this),delete this.a},U(se,q),(N=se.prototype).ba=!1,N.T=null,N.Ia=function(t){this.a=arguments,this.T?this.ba=!0:ue(this)},N.C=function(){se.M.C.call(this),this.T&&(S.clearTimeout(this.T),this.T=null,this.ba=!1,this.a=[])},N.Pa=function(){this.T=null,this.ba&&(this.ba=!1,ue(this))},U(ae,q);var he=[];function ce(t,e,n,r){Array.isArray(n)||(n&&(he[0]=n.toString()),n=he);for(var i=0;i<n.length;i++){var o=Lt(e,n[i],r||t.handleEvent,!1,t.b||t);if(!o)break;t.a[o.key]=o}}function fe(t){J(t.a,function(t,e){this.a.hasOwnProperty(e)&&Mt(t)},t),t.a={}}function le(){}ae.prototype.C=function(){ae.M.C.call(this),fe(this)},ae.prototype.handleEvent=function(){throw Error(\"EventHandler.handleEvent not implemented\")};var pe=null;function de(){return pe=pe||new zt}function ye(t){It.call(this,\"serverreachability\",t)}function ve(t){var e=de();e.dispatchEvent(new ye(e))}function me(t){It.call(this,\"statevent\",t)}function ge(t){var e=de();e.dispatchEvent(new me(e))}function we(t){It.call(this,\"timingevent\",t)}function be(t,e){if(\"function\"!=k(t))throw Error(\"Fn must not be null and must be a function\");return S.setTimeout(function(){t()},e)}U(ye,It),U(me,It),U(we,It);var Ee={NO_ERROR:0,Va:1,bb:2,ab:3,Ya:4,$a:5,cb:6,za:7,TIMEOUT:8,gb:9},Te={Xa:\"complete\",kb:\"success\",Aa:\"error\",za:\"abort\",ib:\"ready\",jb:\"readystatechange\",TIMEOUT:\"timeout\",eb:\"incrementaldata\",hb:\"progress\",Za:\"downloadprogress\",lb:\"uploadprogress\"};function Ie(){}function Ne(t){var e;return(e=t.a)||(e=t.a={}),e}function _e(){}Ie.prototype.a=null;var Ae,Se={OPEN:\"a\",Wa:\"b\",Aa:\"c\",fb:\"d\"};function De(){It.call(this,\"d\")}function ke(){It.call(this,\"c\")}function xe(){}function Oe(t,e,n){this.g=t,this.W=e,this.U=n||1,this.G=new ae(this),this.N=Re,t=at?125:void 0,this.O=new re(t),this.m=null,this.b=!1,this.j=this.A=this.f=this.B=this.s=this.P=this.h=null,this.i=[],this.a=null,this.w=0,this.c=this.v=null,this.H=-1,this.l=!1,this.J=0,this.D=null,this.o=this.R=this.F=!1}U(De,It),U(ke,It),U(xe,Ie),Ae=new xe;var Re=45e3,Ve={},Pe={};function Le(t,e,n){t.B=1,t.f=rn($e(e)),t.j=n,t.F=!0,Ce(t,null)}function Ce(t,e){t.s=j(),Ue(t),t.A=$e(t.f);var n=t.A,r=t.U;Array.isArray(r)||(r=[String(r)]),mn(n.b,\"t\",r),t.w=0,t.a=ar(t.g,t.g.w?e:null),0<t.J&&(t.D=new se(C(t.ya,t,t.a),t.J)),ce(t.G,t.a,\"readystatechange\",t.Sa),e=t.m?Z(t.m):{},t.j?(t.v||(t.v=\"POST\"),e[\"Content-Type\"]=\"application/x-www-form-urlencoded\",t.a.$(t.A,t.v,t.j,e)):(t.v=\"GET\",t.a.$(t.A,t.v,null,e)),ve(1)}function Me(t,e,n){for(var r=!0;!t.l&&t.w<n.length;){var i=je(t,n);if(i==Pe){4==e&&(t.c=4,ge(14),r=!1);break}if(i==Ve){t.c=4,ge(15),r=!1;break}ze(t,i)}4==e&&0==n.length&&(t.c=1,ge(16),r=!1),t.b=t.b&&r,r||(Ge(t),Be(t))}function je(t,e){var n=t.w,r=e.indexOf(\"\\n\",n);return-1==r?Pe:(n=Number(e.substring(n,r)),isNaN(n)?Ve:(r+=1)+n>e.length?Pe:(e=e.substr(r,n),t.w=r+n,e))}function Ue(t){t.P=j()+t.N,qe(t,t.N)}function qe(t,e){if(null!=t.h)throw Error(\"WatchDog timer not null\");t.h=be(C(t.Qa,t),e)}function Fe(t){t.h&&(S.clearTimeout(t.h),t.h=null)}function Be(t){0==t.g.u||t.l||rr(t.g,t)}function Ge(t){Fe(t);var e=t.D;e&&\"function\"==typeof e.da&&e.da(),t.D=null,ie(t.O),fe(t.G),t.a&&(e=t.a,t.a=null,e.abort(),e.da())}function ze(t,e){try{var n=t.g;if(0!=n.u&&(n.a==t||Nn(n.b,t)))if(n.A=t.H,!t.o&&Nn(n.b,t)&&3==n.u){try{var r=n.ja.a.parse(e)}catch(t){r=null}if(Array.isArray(r)&&3==r.length){var i=r;if(0==i[0]){t:if(!n.i){if(n.a){if(!(n.a.s+3e3<t.s))break t;nr(n),n.a.cancel(),n.a=null}er(n),ge(18)}}else n.ia=i[1],0<n.ia-n.G&&i[2]<37500&&n.U&&0==n.m&&!n.l&&(n.l=be(C(n.Na,n),6e3));if(In(n.b)<=1&&n.O){try{n.O()}catch(t){}n.O=void 0}}else or(n,11)}else if(!t.o&&n.a!=t||nr(n),!W(e))for(e=r=n.ja.a.parse(e),r=0;r<e.length;r++)if(i=e[r],n.G=i[0],i=i[1],2==n.u)if(\"c\"==i[0]){n.B=i[1],n.R=i[2];var o=i[3];null!=o&&(n.oa=o);var s=i[5];null!=s&&\"number\"==typeof s&&0<s&&(n.D=1.5*s);var u=n,a=t.a;if(a){var h=a.a?a.a.getResponseHeader(\"X-Client-Wire-Protocol\"):null;if(h){var c=u.b;!c.a&&(K(h,\"spdy\")||K(h,\"quic\")||K(h,\"h2\"))&&(c.f=c.g,c.a=new Set,c.b&&(_n(c,c.b),c.b=null))}if(u.s){var f=a.a?a.a.getResponseHeader(\"X-HTTP-Session-Id\"):null;f&&(u.ha=f,nn(u.v,u.s,f))}}n.u=3,n.c&&n.c.na();var l=t;if((u=n).ea=ur(u,u.w?u.R:null,u.P),l.o){An(u.b,l);var p=l,d=u.D;d&&p.setTimeout(d),p.h&&(Fe(p),Ue(p)),u.a=l}else tr(u);0<n.f.length&&Xn(n)}else\"stop\"!=i[0]&&\"close\"!=i[0]||or(n,7);else 3==n.u&&(\"stop\"==i[0]||\"close\"==i[0]?\"stop\"==i[0]?or(n,7):Hn(n):\"noop\"!=i[0]&&n.c&&n.c.ma(i),n.m=0);ve(4)}catch(t){}}function We(t,e){if(t.forEach&&\"function\"==typeof t.forEach)t.forEach(e,void 0);else if(x(t)||\"string\"==typeof t)B(t,e,void 0);else{if(t.K&&\"function\"==typeof t.K)var n=t.K();else if(t.I&&\"function\"==typeof t.I)n=void 0;else if(x(t)||\"string\"==typeof t){n=[];for(var r=t.length,i=0;i<r;i++)n.push(i)}else for(i in n=[],r=0,t)n[r++]=i;i=(r=function(t){if(t.I&&\"function\"==typeof t.I)return t.I();if(\"string\"==typeof t)return t.split(\"\");if(x(t)){for(var e=[],n=t.length,r=0;r<n;r++)e.push(t[r]);return e}for(r in e=[],n=0,t)e[n++]=t[r];return e}(t)).length;for(var o=0;o<i;o++)e.call(void 0,r[o],n&&n[o],t)}}function Qe(t,e){this.b={},this.a=[],this.c=0;var n=arguments.length;if(1<n){if(n%2)throw Error(\"Uneven number of arguments\");for(var r=0;r<n;r+=2)this.set(arguments[r],arguments[r+1])}else if(t)if(t instanceof Qe)for(n=t.K(),r=0;r<n.length;r++)this.set(n[r],t.get(n[r]));else for(r in t)this.set(r,t[r])}function He(t){if(t.c!=t.a.length){for(var e=0,n=0;e<t.a.length;){var r=t.a[e];Ke(t.b,r)&&(t.a[n++]=r),e++}t.a.length=n}if(t.c!=t.a.length){var i={};for(n=e=0;e<t.a.length;)Ke(i,r=t.a[e])||(i[t.a[n++]=r]=1),e++;t.a.length=n}}function Ke(t,e){return Object.prototype.hasOwnProperty.call(t,e)}(N=Oe.prototype).setTimeout=function(t){this.N=t},N.Sa=function(t){t=t.target;var e=this.D;e&&3==Gn(t)?e.Ia():this.ya(t)},N.ya=function(t){try{if(t==this.a)t:{var e=Gn(this.a),n=this.a.qa(),r=this.a.S();if(!(e<3||3==e&&!at&&!this.a.Y())){this.l||4!=e||7==n||ve(8==n||r<=0?3:2),Fe(this);var i=this.a.S();this.H=i;var o=this.a.Y();if(this.b=200==i){if(this.R&&!this.o){e:{if(this.a){var s,u=this.a;if((s=u.a?u.a.getResponseHeader(\"X-HTTP-Initial-Response\"):null)&&!W(s)){var a=s;break e}}a=null}if(!a){this.b=!1,this.c=3,ge(12),Ge(this),Be(this);break t}this.o=!0,ze(this,a)}this.F?(Me(this,e,o),at&&this.b&&3==e&&(ce(this.G,this.O,\"tick\",this.Ra),this.O.start())):ze(this,o),4==e&&Ge(this),this.b&&!this.l&&(4==e?rr(this.g,this):(this.b=!1,Ue(this)))}else 400==i&&0<o.indexOf(\"Unknown SID\")?(this.c=3,ge(12)):(this.c=0,ge(13)),Ge(this),Be(this)}}}catch(t){}},N.Ra=function(){if(this.a){var t=Gn(this.a),e=this.a.Y();this.w<e.length&&(Fe(this),Me(this,t,e),this.b&&4!=t&&Ue(this))}},N.cancel=function(){this.l=!0,Ge(this)},N.Qa=function(){this.h=null;var t=j();0<=t-this.P?(2!=this.B&&(ve(3),ge(17)),Ge(this),this.c=2,Be(this)):qe(this,this.P-t)},(N=Qe.prototype).I=function(){He(this);for(var t=[],e=0;e<this.a.length;e++)t.push(this.b[this.a[e]]);return t},N.K=function(){return He(this),this.a.concat()},N.get=function(t,e){return Ke(this.b,t)?this.b[t]:e},N.set=function(t,e){Ke(this.b,t)||(this.c++,this.a.push(t)),this.b[t]=e},N.forEach=function(t,e){for(var n=this.K(),r=0;r<n.length;r++){var i=n[r],o=this.get(i);t.call(e,o,i,this)}};var Ye=/^(?:([^:/?#.]+):)?(?:\\/\\/(?:([^\\\\/?#]*)@)?([^\\\\/?#]*?)(?::([0-9]+))?(?=[\\\\/?#]|$))?([^?#]+)?(?:\\?([^#]*))?(?:#([\\s\\S]*))?$/;function Xe(t,e){if(this.c=this.j=this.f=\"\",this.h=null,this.i=this.g=\"\",this.a=!1,t instanceof Xe){this.a=void 0!==e?e:t.a,Je(this,t.f),this.j=t.j,Ze(this,t.c),tn(this,t.h),this.g=t.g,e=t.b;var n=new pn;n.c=e.c,e.a&&(n.a=new Qe(e.a),n.b=e.b),en(this,n),this.i=t.i}else t&&(n=String(t).match(Ye))?(this.a=!!e,Je(this,n[1]||\"\",!0),this.j=on(n[2]||\"\"),Ze(this,n[3]||\"\",!0),tn(this,n[4]),this.g=on(n[5]||\"\",!0),en(this,n[6]||\"\",!0),this.i=on(n[7]||\"\")):(this.a=!!e,this.b=new pn(null,this.a))}function $e(t){return new Xe(t)}function Je(t,e,n){t.f=n?on(e,!0):e,t.f&&(t.f=t.f.replace(/:$/,\"\"))}function Ze(t,e,n){t.c=n?on(e,!0):e}function tn(t,e){if(e){if(e=Number(e),isNaN(e)||e<0)throw Error(\"Bad port number \"+e);t.h=e}else t.h=null}function en(t,e,n){var r,i;e instanceof pn?(t.b=e,r=t.b,(i=t.a)&&!r.f&&(dn(r),r.c=null,r.a.forEach(function(t,e){var n=e.toLowerCase();e!=n&&(yn(this,e),mn(this,n,t))},r)),r.f=i):(n||(e=sn(e,fn)),t.b=new pn(e,t.a))}function nn(t,e,n){t.b.set(e,n)}function rn(t){return nn(t,\"zx\",Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^j()).toString(36)),t}function on(t,e){return t?e?decodeURI(t.replace(/%25/g,\"%2525\")):decodeURIComponent(t):\"\"}function sn(t,e,n){return\"string\"==typeof t?(t=encodeURI(t).replace(e,un),n&&(t=t.replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),t):null}function un(t){return\"%\"+((t=t.charCodeAt(0))>>4&15).toString(16)+(15&t).toString(16)}Xe.prototype.toString=function(){var t=[],e=this.f;e&&t.push(sn(e,an,!0),\":\");var n=this.c;return!n&&\"file\"!=e||(t.push(\"//\"),(e=this.j)&&t.push(sn(e,an,!0),\"@\"),t.push(encodeURIComponent(String(n)).replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),null!=(n=this.h)&&t.push(\":\",String(n))),(n=this.g)&&(this.c&&\"/\"!=n.charAt(0)&&t.push(\"/\"),t.push(sn(n,\"/\"==n.charAt(0)?cn:hn,!0))),(n=this.b.toString())&&t.push(\"?\",n),(n=this.i)&&t.push(\"#\",sn(n,ln)),t.join(\"\")};var an=/[#\\/\\?@]/g,hn=/[#\\?:]/g,cn=/[#\\?]/g,fn=/[#\\?@]/g,ln=/#/g;function pn(t,e){this.b=this.a=null,this.c=t||null,this.f=!!e}function dn(n){n.a||(n.a=new Qe,n.b=0,n.c&&function(t,e){if(t){t=t.split(\"&\");for(var n=0;n<t.length;n++){var r=t[n].indexOf(\"=\"),i=null;if(0<=r){var o=t[n].substring(0,r);i=t[n].substring(r+1)}else o=t[n];e(o,i?decodeURIComponent(i.replace(/\\+/g,\" \")):\"\")}}}(n.c,function(t,e){n.add(decodeURIComponent(t.replace(/\\+/g,\" \")),e)}))}function yn(t,e){dn(t),e=gn(t,e),Ke(t.a.b,e)&&(t.c=null,t.b-=t.a.get(e).length,Ke((t=t.a).b,e)&&(delete t.b[e],t.c--,t.a.length>2*t.c&&He(t)))}function vn(t,e){return dn(t),e=gn(t,e),Ke(t.a.b,e)}function mn(t,e,n){yn(t,e),0<n.length&&(t.c=null,t.a.set(gn(t,e),z(n)),t.b+=n.length)}function gn(t,e){return e=String(e),t.f&&(e=e.toLowerCase()),e}function wn(t,e){this.b=t,this.a=e}function bn(t){this.g=t||En,t=S.PerformanceNavigationTiming?0<(t=S.performance.getEntriesByType(\"navigation\")).length&&(\"hq\"==t[0].nextHopProtocol||\"h2\"==t[0].nextHopProtocol):!!(S.ca&&S.ca.ua&&S.ca.ua()&&S.ca.ua().mb),this.f=t?this.g:1,this.a=null,1<this.f&&(this.a=new Set),this.b=null,this.c=[]}(N=pn.prototype).add=function(t,e){dn(this),this.c=null,t=gn(this,t);var n=this.a.get(t);return n||this.a.set(t,n=[]),n.push(e),this.b+=1,this},N.forEach=function(n,r){dn(this),this.a.forEach(function(t,e){B(t,function(t){n.call(r,t,e,this)},this)},this)},N.K=function(){dn(this);for(var t=this.a.I(),e=this.a.K(),n=[],r=0;r<e.length;r++)for(var i=t[r],o=0;o<i.length;o++)n.push(e[r]);return n},N.I=function(t){dn(this);var e=[];if(\"string\"==typeof t)vn(this,t)&&(e=G(e,this.a.get(gn(this,t))));else{t=this.a.I();for(var n=0;n<t.length;n++)e=G(e,t[n])}return e},N.set=function(t,e){return dn(this),this.c=null,vn(this,t=gn(this,t))&&(this.b-=this.a.get(t).length),this.a.set(t,[e]),this.b+=1,this},N.get=function(t,e){return t&&0<(t=this.I(t)).length?String(t[0]):e},N.toString=function(){if(this.c)return this.c;if(!this.a)return\"\";for(var t=[],e=this.a.K(),n=0;n<e.length;n++){var r=e[n],i=encodeURIComponent(String(r));r=this.I(r);for(var o=0;o<r.length;o++){var s=i;\"\"!==r[o]&&(s+=\"=\"+encodeURIComponent(String(r[o]))),t.push(s)}}return this.c=t.join(\"&\")};var En=10;function Tn(t){return t.b||t.a&&t.a.size>=t.f}function In(t){return t.b?1:t.a?t.a.size:0}function Nn(t,e){return t.b?t.b==e:t.a&&t.a.has(e)}function _n(t,e){t.a?t.a.add(e):t.b=e}function An(t,e){t.b&&t.b==e?t.b=null:t.a&&t.a.has(e)&&t.a.delete(e)}function Sn(t){var e,n;if(null!=t.b)return t.c.concat(t.b.i);if(null==t.a||0===t.a.size)return z(t.c);var r=t.c;try{for(var i=I(t.a.values()),o=i.next();!o.done;o=i.next()){var s=o.value;r=r.concat(s.i)}}catch(t){e={error:t}}finally{try{o&&!o.done&&(n=i.return)&&n.call(i)}finally{if(e)throw e.error}}return r}function Dn(){}function kn(){this.a=new Dn}function xn(t,r,e){var i=e||\"\";try{We(t,function(t,e){var n=t;O(t)&&(n=Qt(t)),r.push(i+e+\"=\"+encodeURIComponent(n))})}catch(t){throw r.push(i+\"type=\"+encodeURIComponent(\"_badmap\")),t}}function On(t,e,n,r,i){try{e.onload=null,e.onerror=null,e.onabort=null,e.ontimeout=null,i(r)}catch(t){}}bn.prototype.cancel=function(){var e,t;if(this.c=Sn(this),this.b)this.b.cancel(),this.b=null;else if(this.a&&0!==this.a.size){try{for(var n=I(this.a.values()),r=n.next();!r.done;r=n.next()){r.value.cancel()}}catch(t){e={error:t}}finally{try{r&&!r.done&&(t=n.return)&&t.call(n)}finally{if(e)throw e.error}}this.a.clear()}},Dn.prototype.stringify=function(t){return S.JSON.stringify(t,void 0)},Dn.prototype.parse=function(t){return S.JSON.parse(t,void 0)};var Rn=S.JSON.parse;function Vn(t){zt.call(this),this.headers=new Qe,this.G=t||null,this.b=!1,this.s=this.a=null,this.D=\"\",this.h=0,this.f=\"\",this.g=this.w=this.l=this.v=!1,this.o=0,this.m=null,this.H=Pn,this.B=this.F=!1}U(Vn,zt);var Pn=\"\",Ln=/^https?$/i,Cn=[\"POST\",\"PUT\"];function Mn(t){return\"content-type\"==t.toLowerCase()}function jn(t,e){t.b=!1,t.a&&(t.g=!0,t.a.abort(),t.g=!1),t.f=e,t.h=5,Un(t),Fn(t)}function Un(t){t.v||(t.v=!0,t.dispatchEvent(\"complete\"),t.dispatchEvent(\"error\"))}function qn(t){if(t.b&&void 0!==A&&(!t.s[1]||4!=Gn(t)||2!=t.S()))if(t.l&&4==Gn(t))oe(t.va,0,t);else if(t.dispatchEvent(\"readystatechange\"),4==Gn(t)){t.b=!1;try{var e,n=t.S();t:switch(n){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var r=!0;break t;default:r=!1}if(!(e=r)){var i;if(i=0===n){var o=String(t.D).match(Ye)[1]||null;if(!o&&S.self&&S.self.location){var s=S.self.location.protocol;o=s.substr(0,s.length-1)}i=!Ln.test(o?o.toLowerCase():\"\")}e=i}if(e)t.dispatchEvent(\"complete\"),t.dispatchEvent(\"success\");else{t.h=6;try{var u=2<Gn(t)?t.a.statusText:\"\"}catch(t){u=\"\"}t.f=u+\" [\"+t.S()+\"]\",Un(t)}}finally{Fn(t)}}}function Fn(t,e){if(t.a){Bn(t);var n=t.a,r=t.s[0]?D:null;t.a=null,t.s=null,e||t.dispatchEvent(\"ready\");try{n.onreadystatechange=r}catch(t){}}}function Bn(t){t.a&&t.B&&(t.a.ontimeout=null),t.m&&(S.clearTimeout(t.m),t.m=null)}function Gn(t){return t.a?t.a.readyState:0}function zn(t,e,n){t:{for(r in n){var r=!1;break t}r=!0}var i;r||(i=\"\",J(n,function(t,e){i+=e,i+=\":\",i+=t,i+=\"\\r\\n\"}),n=i,\"string\"==typeof t?null!=n&&encodeURIComponent(String(n)):nn(t,e,n))}function Wn(t,e,n){return n&&n.internalChannelParams&&n.internalChannelParams[t]||e}function Qn(t){this.f=[],this.R=this.ea=this.v=this.P=this.a=this.ha=this.s=this.N=this.h=this.F=this.j=null,this.Fa=this.H=0,this.Ca=Wn(\"failFast\",!1,t),this.U=this.l=this.i=this.g=this.c=null,this.W=!0,this.A=this.ia=this.G=-1,this.J=this.m=this.o=0,this.Ba=Wn(\"baseRetryDelayMs\",5e3,t),this.Ga=Wn(\"retryDelaySeedMs\",1e4,t),this.Da=Wn(\"forwardChannelMaxRetries\",2,t),this.ga=Wn(\"forwardChannelRequestTimeoutMs\",2e4,t),this.Ea=t&&t.nb||void 0,this.D=void 0,this.w=t&&t.supportsCrossDomainXhr||!1,this.B=\"\",this.b=new bn(t&&t.concurrentRequestLimit),this.ja=new kn,this.fa=t&&t.fastHandshake||!1,t&&t.forceLongPolling&&(this.W=!1),this.O=void 0}function Hn(t){if(Kn(t),3==t.u){var e=t.H++,n=$e(t.v);nn(n,\"SID\",t.B),nn(n,\"RID\",e),nn(n,\"TYPE\",\"terminate\"),Jn(t,n),(e=new Oe(t,e,void 0)).B=2,e.f=rn($e(n)),n=!1,S.navigator&&S.navigator.sendBeacon&&(n=S.navigator.sendBeacon(e.f.toString(),\"\")),!n&&S.Image&&((new Image).src=e.f,n=!0),n||(e.a=ar(e.g,null),e.a.$(e.f)),e.s=j(),Ue(e)}sr(t)}function Kn(t){t.a&&(t.a.cancel(),t.a=null),t.i&&(S.clearTimeout(t.i),t.i=null),nr(t),t.b.cancel(),t.g&&(\"number\"==typeof t.g&&S.clearTimeout(t.g),t.g=null)}function Yn(t,e){t.f.push(new wn(t.Fa++,e)),3==t.u&&Xn(t)}function Xn(t){Tn(t.b)||t.g||(t.g=!0,Zt(t.xa,t),t.o=0)}function $n(t,e){var n;n=e?e.W:t.H++;var r=$e(t.v);nn(r,\"SID\",t.B),nn(r,\"RID\",n),nn(r,\"AID\",t.G),Jn(t,r),t.h&&t.j&&zn(r,t.h,t.j),n=new Oe(t,n,t.o+1),null===t.h&&(n.m=t.j),e&&(t.f=e.i.concat(t.f)),e=Zn(t,n,1e3),n.setTimeout(Math.round(.5*t.ga)+Math.round(.5*t.ga*Math.random())),_n(t.b,n),Le(n,r,e)}function Jn(t,n){t.c&&We({},function(t,e){nn(n,e,t)})}function Zn(t,e,n){n=Math.min(t.f.length,n);var r=t.c?C(t.c.Ha,t.c,t):null;t:for(var i=t.f,o=-1;;){var s=[\"count=\"+n];-1==o?0<n?(o=i[0].b,s.push(\"ofs=\"+o)):o=0:s.push(\"ofs=\"+o);for(var u=!0,a=0;a<n;a++){var h=i[a].b,c=i[a].a;if((h-=o)<0)o=Math.max(0,i[a].b-100),u=!1;else try{xn(c,s,\"req\"+h+\"_\")}catch(t){r&&r(c)}}if(u){r=s.join(\"&\");break t}}return t=t.f.splice(0,n),e.i=t,r}function tr(t){t.a||t.i||(t.J=1,Zt(t.wa,t),t.m=0)}function er(t){return!(t.a||t.i||3<=t.m)&&(t.J++,t.i=be(C(t.wa,t),ir(t,t.m)),t.m++,1)}function nr(t){null!=t.l&&(S.clearTimeout(t.l),t.l=null)}function rr(t,e){var n=null;if(t.a==e){nr(t),t.a=null;var r=2}else{if(!Nn(t.b,e))return;n=e.i,An(t.b,e),r=1}if(t.A=e.H,0!=t.u)if(e.b)if(1==r){n=e.j?e.j.length:0,e=j()-e.s;var i=t.o;(r=de()).dispatchEvent(new we(r)),Xn(t)}else tr(t);else if(3==(i=e.c)||0==i&&0<t.A||!(1==r&&function(t,e){if(!(In(t.b)>=t.b.f-(t.g?1:0))){if(t.g)return t.f=e.i.concat(t.f),1;if(!(1==t.u||2==t.u||t.o>=(t.Ca?0:t.Da)))return t.g=be(C(t.xa,t,e),ir(t,t.o)),t.o++,1}}(t,e)||2==r&&er(t)))switch(n&&0<n.length&&(e=t.b,e.c=e.c.concat(n)),i){case 1:or(t,5);break;case 4:or(t,10);break;case 3:or(t,6);break;default:or(t,2)}}function ir(t,e){var n=t.Ba+Math.floor(Math.random()*t.Ga);return t.c||(n*=2),n*e}function or(t,e){if(2==e){var n=null;t.c&&(n=null);var r=C(t.Ta,t);n||(n=new Xe(\"//www.google.com/images/cleardot.gif\"),S.location&&\"http\"==S.location.protocol||Je(n,\"https\"),rn(n)),function(t,e){var n=new le;if(S.Image){var r=new Image;r.onload=M(On,n,r,\"TestLoadImage: loaded\",!0,e),r.onerror=M(On,n,r,\"TestLoadImage: error\",!1,e),r.onabort=M(On,n,r,\"TestLoadImage: abort\",!1,e),r.ontimeout=M(On,n,r,\"TestLoadImage: timeout\",!1,e),S.setTimeout(function(){r.ontimeout&&r.ontimeout()},1e4),r.src=t}else e(!1)}(n.toString(),r)}else ge(2);t.u=0,t.c&&t.c.la(e),sr(t),Kn(t)}function sr(t){t.u=0,t.A=-1,t.c&&(0==Sn(t.b).length&&0==t.f.length||(t.b.c.length=0,z(t.f),t.f.length=0),t.c.ka())}function ur(t,e,n){var r,i,o,s,u,a,h=(r=n)instanceof Xe?$e(r):new Xe(r,void 0);if(\"\"!=h.c)e&&Ze(h,e+\".\"+h.c),tn(h,h.h);else{var c=S.location;i=c.protocol,o=e?e+\".\"+c.hostname:c.hostname,s=+c.port,u=n,a=new Xe(null,void 0),i&&Je(a,i),o&&Ze(a,o),s&&tn(a,s),u&&(a.g=u),h=a}return t.N&&J(t.N,function(t,e){nn(h,e,t)}),e=t.s,n=t.ha,e&&n&&nn(h,e,n),nn(h,\"VER\",t.oa),Jn(t,h),h}function ar(t,e){if(e&&!t.w)throw Error(\"Can't create secondary domain capable XhrIo object.\");return(e=new Vn(t.Ea)).F=t.w,e}function hr(){}function cr(){if(st&&!(10<=Number(wt)))throw Error(\"Environmental error: no available transport.\")}function fr(t,e){zt.call(this),this.a=new Qn(e),this.l=t,this.b=e&&e.messageUrlParams||null,t=e&&e.messageHeaders||null,e&&e.clientProtocolHeaderRequired&&(t?t[\"X-Client-Protocol\"]=\"webchannel\":t={\"X-Client-Protocol\":\"webchannel\"}),this.a.j=t,t=e&&e.initMessageHeaders||null,e&&e.messageContentType&&(t?t[\"X-WebChannel-Content-Type\"]=e.messageContentType:t={\"X-WebChannel-Content-Type\":e.messageContentType}),e&&e.pa&&(t?t[\"X-WebChannel-Client-Profile\"]=e.pa:t={\"X-WebChannel-Client-Profile\":e.pa}),this.a.F=t,(t=e&&e.httpHeadersOverwriteParam)&&!W(t)&&(this.a.h=t),this.h=e&&e.supportsCrossDomainXhr||!1,this.g=e&&e.sendRawJson||!1,(e=e&&e.httpSessionIdParam)&&!W(e)&&(this.a.s=e,null!==(t=this.b)&&e in t&&(e in(t=this.b)&&delete t[e])),this.f=new dr(this)}function lr(t){De.call(this);var e=t.__sm__;if(e){t:{for(var n in e){t=n;break t}t=void 0}(this.c=t)?(t=this.c,this.data=null!==e&&t in e?e[t]:void 0):this.data=e}else this.data=t}function pr(){ke.call(this),this.status=1}function dr(t){this.a=t}(N=Vn.prototype).$=function(t,e,n,r){if(this.a)throw Error(\"[goog.net.XhrIo] Object is active with another request=\"+this.D+\"; newUri=\"+t);e=e?e.toUpperCase():\"GET\",this.D=t,this.f=\"\",this.h=0,this.v=!1,this.b=!0,this.a=new XMLHttpRequest,this.s=this.G?Ne(this.G):Ne(Ae),this.a.onreadystatechange=C(this.va,this);try{this.w=!0,this.a.open(e,String(t),!0),this.w=!1}catch(t){return void jn(this,t)}t=n||\"\";var i,o=new Qe(this.headers);r&&We(r,function(t,e){o.set(e,t)}),r=function(t){t:{for(var e=Mn,n=t.length,r=\"string\"==typeof t?t.split(\"\"):t,i=0;i<n;i++)if(i in r&&e.call(void 0,r[i],i,t)){e=i;break t}e=-1}return e<0?null:\"string\"==typeof t?t.charAt(e):t[e]}(o.K()),n=S.FormData&&t instanceof S.FormData,0<=F(Cn,e)&&!r&&!n&&o.set(\"Content-Type\",\"application/x-www-form-urlencoded;charset=utf-8\"),o.forEach(function(t,e){this.a.setRequestHeader(e,t)},this),this.H&&(this.a.responseType=this.H),\"withCredentials\"in this.a&&this.a.withCredentials!==this.F&&(this.a.withCredentials=this.F);try{Bn(this),0<this.o&&((this.B=(i=this.a,st&&mt(9)&&\"number\"==typeof i.timeout&&void 0!==i.ontimeout))?(this.a.timeout=this.o,this.a.ontimeout=C(this.ta,this)):this.m=oe(this.ta,this.o,this)),this.l=!0,this.a.send(t),this.l=!1}catch(t){jn(this,t)}},N.ta=function(){void 0!==A&&this.a&&(this.f=\"Timed out after \"+this.o+\"ms, aborting\",this.h=8,this.dispatchEvent(\"timeout\"),this.abort(8))},N.abort=function(t){this.a&&this.b&&(this.b=!1,this.g=!0,this.a.abort(),this.g=!1,this.h=t||7,this.dispatchEvent(\"complete\"),this.dispatchEvent(\"abort\"),Fn(this))},N.C=function(){this.a&&(this.b&&(this.b=!1,this.g=!0,this.a.abort(),this.g=!1),Fn(this,!0)),Vn.M.C.call(this)},N.va=function(){this.j||(this.w||this.l||this.g?qn(this):this.Oa())},N.Oa=function(){qn(this)},N.S=function(){try{return 2<Gn(this)?this.a.status:-1}catch(t){return-1}},N.Y=function(){try{return this.a?this.a.responseText:\"\"}catch(t){return\"\"}},N.Ja=function(t){if(this.a){var e=this.a.responseText;return t&&0==e.indexOf(t)&&(e=e.substring(t.length)),Rn(e)}},N.qa=function(){return this.h},N.Ma=function(){return\"string\"==typeof this.f?this.f:String(this.f)},(N=Qn.prototype).oa=8,N.u=1,N.xa=function(t){if(this.g)if(this.g=null,1==this.u){if(!t){this.H=Math.floor(1e5*Math.random()),t=this.H++;var e,n=new Oe(this,t,void 0),r=this.j;if(this.F&&(r?et(r=Z(r),this.F):r=this.F),null===this.h&&(n.m=r),this.fa)t:{for(var i=e=0;i<this.f.length;i++){var o=this.f[i];if(\"__data__\"in o.a&&\"string\"==typeof(o=o.a.__data__)?o=o.length:o=void 0,void 0===o)break;if(4096<(e+=o)){e=i;break t}if(4096===e||i===this.f.length-1){e=i+1;break t}}e=1e3}else e=1e3;e=Zn(this,n,e),nn(i=$e(this.v),\"RID\",t),nn(i,\"CVER\",22),this.s&&nn(i,\"X-HTTP-Session-Id\",this.s),Jn(this,i),this.h&&r&&zn(i,this.h,r),_n(this.b,n),this.fa?(nn(i,\"$req\",e),nn(i,\"SID\",\"null\"),n.R=!0,Le(n,i,null)):Le(n,i,e),this.u=2}}else 3==this.u&&(t?$n(this,t):0==this.f.length||Tn(this.b)||$n(this))},N.wa=function(){this.i=null,this.a=new Oe(this,\"rpc\",this.J),null===this.h&&(this.a.m=this.j),this.a.J=0;var t=$e(this.ea);nn(t,\"RID\",\"rpc\"),nn(t,\"SID\",this.B),nn(t,\"CI\",this.U?\"0\":\"1\"),nn(t,\"AID\",this.G),Jn(this,t),nn(t,\"TYPE\",\"xmlhttp\"),this.h&&this.j&&zn(t,this.h,this.j),this.D&&this.a.setTimeout(this.D);var e=this.a,n=this.R;e.B=1,e.f=rn($e(t)),e.j=null,e.F=!0,Ce(e,n)},N.Na=function(){null!=this.l&&(this.l=null,this.a.cancel(),this.a=null,er(this),ge(19))},N.Ta=function(t){ge(t?2:1)},(N=hr.prototype).na=function(){},N.ma=function(){},N.la=function(){},N.ka=function(){},N.Ha=function(){},cr.prototype.a=function(t,e){return new fr(t,e)},U(fr,zt),(N=fr.prototype).addEventListener=function(t,e,n,r){fr.M.addEventListener.call(this,t,e,n,r)},N.removeEventListener=function(t,e,n,r){fr.M.removeEventListener.call(this,t,e,n,r)},N.Ka=function(){this.a.c=this.f,this.h&&(this.a.w=!0);var t=this.a,e=this.l,n=this.b||void 0;ge(0),t.P=e,t.N=n||{},t.U=t.W,t.v=ur(t,null,t.P),Xn(t)},N.close=function(){Hn(this.a)},N.La=function(t){if(\"string\"==typeof t){var e={};e.__data__=t,Yn(this.a,e)}else this.g?((e={}).__data__=Qt(t),Yn(this.a,e)):Yn(this.a,t)},N.C=function(){this.a.c=null,delete this.f,Hn(this.a),delete this.a,fr.M.C.call(this)},U(lr,De),U(pr,ke),U(dr,hr),dr.prototype.na=function(){this.a.dispatchEvent(\"a\")},dr.prototype.ma=function(t){this.a.dispatchEvent(new lr(t))},dr.prototype.la=function(t){this.a.dispatchEvent(new pr)},dr.prototype.ka=function(){this.a.dispatchEvent(\"b\")},cr.prototype.createWebChannel=cr.prototype.a,fr.prototype.send=fr.prototype.La,fr.prototype.open=fr.prototype.Ka,fr.prototype.close=fr.prototype.close,Ee.NO_ERROR=0,Ee.TIMEOUT=8,Ee.HTTP_ERROR=6,Te.COMPLETE=\"complete\",(_e.EventType=Se).OPEN=\"a\",Se.CLOSE=\"b\",Se.ERROR=\"c\",Se.MESSAGE=\"d\",zt.prototype.listen=zt.prototype.ra,Vn.prototype.listenOnce=Vn.prototype.sa,Vn.prototype.getLastError=Vn.prototype.Ma,Vn.prototype.getLastErrorCode=Vn.prototype.qa,Vn.prototype.getStatus=Vn.prototype.S,Vn.prototype.getResponseJson=Vn.prototype.Ja,Vn.prototype.getResponseText=Vn.prototype.Y,Vn.prototype.send=Vn.prototype.$;var yr={createWebChannelTransport:function(){return new cr},ErrorCode:Ee,EventType:Te,WebChannel:_e,XhrIo:Vn},vr=yr.createWebChannelTransport,mr=yr.ErrorCode,gr=yr.EventType,wr=yr.WebChannel,br=yr.XhrIo,Er=lp.SDK_VERSION,Tr=(Ir.prototype.t=function(){return null!=this.uid},Ir.prototype.s=function(){return this.t()?\"uid:\"+this.uid:\"anonymous-user\"},Ir.prototype.isEqual=function(t){return t.uid===this.uid},Ir);function Ir(t){this.uid=t}Tr.UNAUTHENTICATED=new Tr(null),Tr.i=new Tr(\"google-credentials-uid\"),Tr.h=new Tr(\"first-party-uid\");function Nr(t,e){this.user=e,this.type=\"OAuth\",this.o={},this.o.Authorization=\"Bearer \"+t}var _r,Ar,Sr={OK:\"ok\",CANCELLED:\"cancelled\",UNKNOWN:\"unknown\",INVALID_ARGUMENT:\"invalid-argument\",DEADLINE_EXCEEDED:\"deadline-exceeded\",NOT_FOUND:\"not-found\",ALREADY_EXISTS:\"already-exists\",PERMISSION_DENIED:\"permission-denied\",UNAUTHENTICATED:\"unauthenticated\",RESOURCE_EXHAUSTED:\"resource-exhausted\",FAILED_PRECONDITION:\"failed-precondition\",ABORTED:\"aborted\",OUT_OF_RANGE:\"out-of-range\",UNIMPLEMENTED:\"unimplemented\",INTERNAL:\"internal\",UNAVAILABLE:\"unavailable\",DATA_LOSS:\"data-loss\"},Dr=(n(Wr,Ar=Error),Wr),kr=(zr.prototype.getToken=function(){return Promise.resolve(null)},zr.prototype._=function(){},zr.prototype.l=function(t){(this.u=t)(Tr.UNAUTHENTICATED)},zr.prototype.T=function(){this.u=null},zr),xr=(Gr.prototype.getToken=function(){var e=this,n=this.m,t=this.forceRefresh;return this.forceRefresh=!1,this.auth?this.auth.getToken(t).then(function(t){if(e.m!==n)throw new Dr(Sr.ABORTED,\"getToken aborted due to token change.\");return t?(Zs(\"string\"==typeof t.accessToken),new Nr(t.accessToken,e.currentUser)):null}):Promise.resolve(null)},Gr.prototype._=function(){this.forceRefresh=!0},Gr.prototype.l=function(t){this.u=t,this.R&&t(this.currentUser)},Gr.prototype.T=function(){this.auth&&this.auth.removeAuthTokenListener(this.I),this.I=null,this.u=null},Gr.prototype.A=function(){var t=this.auth&&this.auth.getUid();return Zs(null===t||\"string\"==typeof t),new Tr(t)},Gr),Or=(Object.defineProperty(Br.prototype,\"o\",{get:function(){var t={\"X-Goog-AuthUser\":this.V},e=this.P.auth.g([]);return e&&(t.Authorization=e),t},enumerable:!0,configurable:!0}),Br),Rr=(Fr.prototype.getToken=function(){return Promise.resolve(new Or(this.P,this.V))},Fr.prototype.l=function(t){t(Tr.h)},Fr.prototype.T=function(){},Fr.prototype._=function(){},Fr),Vr=(qr.now=function(){return qr.fromMillis(Date.now())},qr.fromDate=function(t){return qr.fromMillis(t.getTime())},qr.fromMillis=function(t){var e=Math.floor(t/1e3);return new qr(e,1e6*(t-1e3*e))},qr.prototype.toDate=function(){return new Date(this.toMillis())},qr.prototype.toMillis=function(){return 1e3*this.seconds+this.nanoseconds/1e6},qr.prototype.p=function(t){return this.seconds===t.seconds?ru(this.nanoseconds,t.nanoseconds):ru(this.seconds,t.seconds)},qr.prototype.isEqual=function(t){return t.seconds===this.seconds&&t.nanoseconds===this.nanoseconds},qr.prototype.toString=function(){return\"Timestamp(seconds=\"+this.seconds+\", nanoseconds=\"+this.nanoseconds+\")\"},qr.prototype.valueOf=function(){var t=this.seconds- -62135596800;return String(t).padStart(12,\"0\")+\".\"+String(this.nanoseconds).padStart(9,\"0\")},qr),Pr=(Ur.v=function(t){return new Ur(t)},Ur.min=function(){return new Ur(new Vr(0,0))},Ur.prototype.S=function(t){return this.timestamp.p(t.timestamp)},Ur.prototype.isEqual=function(t){return this.timestamp.isEqual(t.timestamp)},Ur.prototype.D=function(){return 1e6*this.timestamp.seconds+this.timestamp.nanoseconds/1e3},Ur.prototype.toString=function(){return\"SnapshotVersion(\"+this.timestamp.toString()+\")\"},Ur.prototype.C=function(){return this.timestamp},Ur),Lr=(Object.defineProperty(jr.prototype,\"length\",{get:function(){return this.F},enumerable:!0,configurable:!0}),jr.prototype.isEqual=function(t){return 0===jr.N(this,t)},jr.prototype.child=function(t){var e=this.segments.slice(this.offset,this.limit());return t instanceof jr?t.forEach(function(t){e.push(t)}):e.push(t),this.$(e)},jr.prototype.limit=function(){return this.offset+this.length},jr.prototype.k=function(t){return t=void 0===t?1:t,this.$(this.segments,this.offset+t,this.length-t)},jr.prototype.M=function(){return this.$(this.segments,this.offset,this.length-1)},jr.prototype.L=function(){return this.segments[this.offset]},jr.prototype.O=function(){return this.get(this.length-1)},jr.prototype.get=function(t){return this.segments[this.offset+t]},jr.prototype.B=function(){return 0===this.length},jr.prototype.q=function(t){if(t.length<this.length)return!1;for(var e=0;e<this.length;e++)if(this.get(e)!==t.get(e))return!1;return!0},jr.prototype.U=function(t){if(this.length+1!==t.length)return!1;for(var e=0;e<this.length;e++)if(this.get(e)!==t.get(e))return!1;return!0},jr.prototype.forEach=function(t){for(var e=this.offset,n=this.limit();e<n;e++)t(this.segments[e])},jr.prototype.W=function(){return this.segments.slice(this.offset,this.limit())},jr.N=function(t,e){for(var n=Math.min(t.length,e.length),r=0;r<n;r++){var i=t.get(r),o=e.get(r);if(i<o)return-1;if(o<i)return 1}return t.length<e.length?-1:t.length>e.length?1:0},jr),Cr=(n(Mr,_r=Lr),Mr.prototype.$=function(t,e,n){return new Mr(t,e,n)},Mr.prototype.j=function(){return this.W().join(\"/\")},Mr.prototype.toString=function(){return this.j()},Mr.K=function(t){if(0<=t.indexOf(\"//\"))throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid path (\"+t+\"). Paths must not contain // in them.\");return new Mr(t.split(\"/\").filter(function(t){return 0<t.length}))},Mr);function Mr(){return null!==_r&&_r.apply(this,arguments)||this}function jr(t,e,n){void 0===e?e=0:e>t.length&&Js(),void 0===n?n=t.length-e:n>t.length-e&&Js(),this.segments=t,this.offset=e,this.F=n}function Ur(t){this.timestamp=t}function qr(t,e){if(this.seconds=t,(this.nanoseconds=e)<0)throw new Dr(Sr.INVALID_ARGUMENT,\"Timestamp nanoseconds out of range: \"+e);if(1e9<=e)throw new Dr(Sr.INVALID_ARGUMENT,\"Timestamp nanoseconds out of range: \"+e);if(t<-62135596800)throw new Dr(Sr.INVALID_ARGUMENT,\"Timestamp seconds out of range: \"+t);if(253402300800<=t)throw new Dr(Sr.INVALID_ARGUMENT,\"Timestamp seconds out of range: \"+t)}function Fr(t,e){this.P=t,this.V=e}function Br(t,e){this.P=t,this.V=e,this.type=\"FirstParty\",this.user=Tr.h}function Gr(t){var e=this;this.I=null,this.currentUser=Tr.UNAUTHENTICATED,this.R=!1,this.m=0,this.u=null,this.forceRefresh=!1,this.I=function(){e.m++,e.currentUser=e.A(),e.R=!0,e.u&&e.u(e.currentUser)},this.m=0,this.auth=t.getImmediate({optional:!0}),this.auth?this.auth.addAuthTokenListener(this.I):(this.I(null),t.get().then(function(t){e.auth=t,e.I&&e.auth.addAuthTokenListener(e.I)},function(){}))}function zr(){this.u=null}function Wr(t,e){var n=this;return(n=Ar.call(this,e)||this).code=t,n.message=e,n.name=\"FirebaseError\",n.toString=function(){return n.name+\": [code=\"+n.code+\"]: \"+n.message},n}Cr.G=new Cr([]);var Qr,Hr=/^[_a-zA-Z][_a-zA-Z0-9]*$/,Kr=(n(Yr,Qr=Lr),Yr.prototype.$=function(t,e,n){return new Yr(t,e,n)},Yr.H=function(t){return Hr.test(t)},Yr.prototype.j=function(){return this.W().map(function(t){return t=t.replace(\"\\\\\",\"\\\\\\\\\").replace(\"`\",\"\\\\`\"),Yr.H(t)||(t=\"`\"+t+\"`\"),t}).join(\".\")},Yr.prototype.toString=function(){return this.j()},Yr.prototype.Y=function(){return 1===this.length&&\"__name__\"===this.get(0)},Yr.J=function(){return new Yr([\"__name__\"])},Yr.X=function(t){for(var e=[],n=\"\",r=0,i=function(){if(0===n.length)throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid field path (\"+t+\"). Paths must not be empty, begin with '.', end with '.', or contain '..'\");e.push(n),n=\"\"},o=!1;r<t.length;){var s=t[r];if(\"\\\\\"===s){if(r+1===t.length)throw new Dr(Sr.INVALID_ARGUMENT,\"Path has trailing escape character: \"+t);var u=t[r+1];if(\"\\\\\"!==u&&\".\"!==u&&\"`\"!==u)throw new Dr(Sr.INVALID_ARGUMENT,\"Path has invalid escape sequence: \"+t);n+=u,r+=2}else\"`\"===s?o=!o:\".\"!==s||o?n+=s:i(),r++}if(i(),o)throw new Dr(Sr.INVALID_ARGUMENT,\"Unterminated ` in path: \"+t);return new Yr(e)},Yr);function Yr(){return null!==Qr&&Qr.apply(this,arguments)||this}Kr.G=new Kr([]);var Xr=($r.Z=function(t){return new $r(Cr.K(t).k(5))},$r.prototype.tt=function(t){return 2<=this.path.length&&this.path.get(this.path.length-2)===t},$r.prototype.isEqual=function(t){return null!==t&&0===Cr.N(this.path,t.path)},$r.prototype.toString=function(){return this.path.toString()},$r.N=function(t,e){return Cr.N(t.path,e.path)},$r.et=function(t){return t.length%2==0},$r.st=function(t){return new $r(new Cr(t.slice()))},$r);function $r(t){this.path=t}function Jr(t){var e=0;for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&e++;return e}function Zr(t,e){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&e(n,t[n])}function ti(t){for(var e in t)if(Object.prototype.hasOwnProperty.call(t,e))return!1;return!0}Xr.EMPTY=new Xr(new Cr([]));var ei=(ni.fromBase64String=function(t){return new ni(zs.nt().atob(t))},ni.fromUint8Array=function(t){return new ni(function(t){for(var e=\"\",n=0;n<t.length;++n)e+=String.fromCharCode(t[n]);return e}(t))},ni.prototype.toBase64=function(){return zs.nt().btoa(this.it)},ni.prototype.toUint8Array=function(){return function(t){for(var e=new Uint8Array(t.length),n=0;n<t.length;n++)e[n]=t.charCodeAt(n);return e}(this.it)},ni.prototype.rt=function(){return 2*this.it.length},ni.prototype.S=function(t){return ru(this.it,t.it)},ni.prototype.isEqual=function(t){return this.it===t.it},ni);function ni(t){this.it=t}function ri(t){return null==t}function ii(t){return-0===t&&1/t==-1/0}function oi(t){return\"number\"==typeof t&&Number.isInteger(t)&&!ii(t)&&t<=Number.MAX_SAFE_INTEGER&&t>=Number.MIN_SAFE_INTEGER}function si(t){var e,n;return\"server_timestamp\"===(null===(n=((null===(e=null==t?void 0:t.mapValue)||void 0===e?void 0:e.fields)||{}).__type__)||void 0===n?void 0:n.stringValue)}function ui(t){var e=yi(t.mapValue.fields.__local_write_time__.timestampValue);return new Vr(e.seconds,e.nanos)}ei.ht=new ei(\"\");var ai=new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);function hi(t){return\"nullValue\"in t?0:\"booleanValue\"in t?1:\"integerValue\"in t||\"doubleValue\"in t?2:\"timestampValue\"in t?3:\"stringValue\"in t?5:\"bytesValue\"in t?6:\"referenceValue\"in t?7:\"geoPointValue\"in t?8:\"arrayValue\"in t?9:\"mapValue\"in t?si(t)?4:10:Js()}function ci(i,t){var e,n,r,o=hi(i);if(o!==hi(t))return!1;switch(o){case 0:return!0;case 1:return i.booleanValue===t.booleanValue;case 4:return ui(i).isEqual(ui(t));case 3:return function(t){if(\"string\"==typeof i.timestampValue&&\"string\"==typeof t.timestampValue&&i.timestampValue.length===t.timestampValue.length)return i.timestampValue===t.timestampValue;var e=yi(i.timestampValue),n=yi(t.timestampValue);return e.seconds===n.seconds&&e.nanos===n.nanos}(t);case 5:return i.stringValue===t.stringValue;case 6:return r=t,mi(i.bytesValue).isEqual(mi(r.bytesValue));case 7:return i.referenceValue===t.referenceValue;case 8:return n=t,vi((e=i).geoPointValue.latitude)===vi(n.geoPointValue.latitude)&&vi(e.geoPointValue.longitude)===vi(n.geoPointValue.longitude);case 2:return function(t,e){if(\"integerValue\"in t&&\"integerValue\"in e)return vi(t.integerValue)===vi(e.integerValue);if(\"doubleValue\"in t&&\"doubleValue\"in e){var n=vi(t.doubleValue),r=vi(e.doubleValue);return n===r?ii(n)===ii(r):isNaN(n)&&isNaN(r)}return!1}(i,t);case 9:return iu(i.arrayValue.values||[],t.arrayValue.values||[],ci);case 10:return function(t){var e=i.mapValue.fields||{},n=t.mapValue.fields||{};if(Jr(e)!==Jr(n))return!1;for(var r in e)if(e.hasOwnProperty(r)&&(void 0===n[r]||!ci(e[r],n[r])))return!1;return!0}(t);default:return Js()}}function fi(t,e){return void 0!==(t.values||[]).find(function(t){return ci(t,e)})}function li(t,e){var n,r,i,o,s,u,a,h,c,f,l=hi(t),p=hi(e);if(l!==p)return ru(l,p);switch(l){case 0:return 0;case 1:return ru(t.booleanValue,e.booleanValue);case 2:return h=e,c=vi(t.integerValue||t.doubleValue),f=vi(h.integerValue||h.doubleValue),c<f?-1:f<c?1:c===f?0:isNaN(c)?isNaN(f)?0:-1:1;case 3:return pi(t.timestampValue,e.timestampValue);case 4:return pi(ui(t),ui(e));case 5:return ru(t.stringValue,e.stringValue);case 6:return o=t.bytesValue,s=e.bytesValue,u=mi(o),a=mi(s),u.S(a);case 7:return function(t,e){for(var n=t.split(\"/\"),r=e.split(\"/\"),i=0;i<n.length&&i<r.length;i++){var o=ru(n[i],r[i]);if(0!==o)return o}return ru(n.length,r.length)}(t.referenceValue,e.referenceValue);case 8:return n=t.geoPointValue,r=e.geoPointValue,0!==(i=ru(vi(n.latitude),vi(r.latitude)))?i:ru(vi(n.longitude),vi(r.longitude));case 9:return function(t,e){for(var n=t.values||[],r=e.values||[],i=0;i<n.length&&i<r.length;++i){var o=li(n[i],r[i]);if(o)return o}return ru(n.length,r.length)}(t.arrayValue,e.arrayValue);case 10:return function(t,e){var n=t.fields||{},r=Object.keys(n),i=e.fields||{},o=Object.keys(i);r.sort(),o.sort();for(var s=0;s<r.length&&s<o.length;++s){var u=ru(r[s],o[s]);if(0!==u)return u;var a=li(n[r[s]],i[o[s]]);if(0!==a)return a}return ru(r.length,o.length)}(t.mapValue,e.mapValue);default:throw Js()}}function pi(t,e){if(\"string\"==typeof t&&\"string\"==typeof e&&t.length===e.length)return ru(t,e);var n=yi(t),r=yi(e),i=ru(n.seconds,r.seconds);return 0!==i?i:ru(n.nanos,r.nanos)}function di(t){return function s(i){return\"nullValue\"in i?\"null\":\"booleanValue\"in i?\"\"+i.booleanValue:\"integerValue\"in i?\"\"+i.integerValue:\"doubleValue\"in i?\"\"+i.doubleValue:\"timestampValue\"in i?\"time(\"+(t=yi(i.timestampValue)).seconds+\",\"+t.nanos+\")\":\"stringValue\"in i?i.stringValue:\"bytesValue\"in i?mi(i.bytesValue).toBase64():\"referenceValue\"in i?(n=i.referenceValue,Xr.Z(n).toString()):\"geoPointValue\"in i?\"geo(\"+(e=i.geoPointValue).latitude+\",\"+e.longitude+\")\":\"arrayValue\"in i?function(){for(var t=\"[\",e=!0,n=0,r=i.arrayValue.values||[];n<r.length;n++){e?e=!1:t+=\",\",t+=s(r[n])}return t+\"]\"}():\"mapValue\"in i?function(t){for(var e=\"{\",n=!0,r=0,i=Object.keys(t.fields||{}).sort();r<i.length;r++){var o=i[r];n?n=!1:e+=\",\",e+=o+\":\"+s(t.fields[o])}return e+\"}\"}(i.mapValue):Js();var t,e,n}(t)}function yi(t){if(Zs(!!t),\"string\"!=typeof t)return{seconds:vi(t.seconds),nanos:vi(t.nanos)};var e=0,n=ai.exec(t);if(Zs(!!n),n[1]){var r=n[1];r=(r+\"000000000\").substr(0,9),e=Number(r)}var i=new Date(t);return{seconds:Math.floor(i.getTime()/1e3),nanos:e}}function vi(t){return\"number\"==typeof t?t:\"string\"==typeof t?Number(t):0}function mi(t){return\"string\"==typeof t?ei.fromBase64String(t):ei.fromUint8Array(t)}function gi(t,e){return{referenceValue:\"projects/\"+t.projectId+\"/databases/\"+t.database+\"/documents/\"+e.path.j()}}function wi(t){return t&&\"integerValue\"in t}function bi(t){return!!t&&\"arrayValue\"in t}function Ei(t){return t&&\"nullValue\"in t}function Ti(t){return t&&\"doubleValue\"in t&&isNaN(Number(t.doubleValue))}function Ii(t){return t&&\"mapValue\"in t}var Ni=(_i.prototype.ot=function(t,e){return n={fields:{__type__:{stringValue:\"server_timestamp\"},__local_write_time__:{timestampValue:{seconds:e.seconds,nanos:e.nanoseconds}}}},t&&(n.fields.__previous_value__=t),{mapValue:n};var n},_i.prototype.at=function(t,e){return e},_i.prototype.ut=function(t){return null},_i.prototype.isEqual=function(t){return t instanceof _i},_i);function _i(){}Ni.instance=new Ni;var Ai=(Oi.prototype.ot=function(t,e){return this.apply(t)},Oi.prototype.at=function(t,e){return this.apply(t)},Oi.prototype.apply=function(t){for(var n=Ri(t),e=function(e){n.some(function(t){return ci(t,e)})||n.push(e)},r=0,i=this.elements;r<i.length;r++)e(i[r]);return{arrayValue:{values:n}}},Oi.prototype.ut=function(t){return null},Oi.prototype.isEqual=function(t){return t instanceof Oi&&iu(this.elements,t.elements,ci)},Oi),Si=(xi.prototype.ot=function(t,e){return this.apply(t)},xi.prototype.at=function(t,e){return this.apply(t)},xi.prototype.apply=function(t){for(var n=Ri(t),e=function(e){n=n.filter(function(t){return!ci(t,e)})},r=0,i=this.elements;r<i.length;r++)e(i[r]);return{arrayValue:{values:n}}},xi.prototype.ut=function(t){return null},xi.prototype.isEqual=function(t){return t instanceof xi&&iu(this.elements,t.elements,ci)},xi),Di=(ki.prototype.ot=function(t,e){var n=this.ut(t),r=this.asNumber(n)+this.asNumber(this.ct);return wi(n)&&wi(this.ct)?this.serializer._t(r):this.serializer.lt(r)},ki.prototype.at=function(t,e){return e},ki.prototype.ut=function(t){return wi(e=t)||e&&\"doubleValue\"in e?t:{integerValue:0};var e},ki.prototype.isEqual=function(t){return t instanceof ki&&ci(this.ct,t.ct)},ki.prototype.asNumber=function(t){return vi(t.integerValue||t.doubleValue)},ki);function ki(t,e){this.serializer=t,this.ct=e}function xi(t){this.elements=t}function Oi(t){this.elements=t}function Ri(t){return bi(t)&&t.arrayValue.values?t.arrayValue.values.slice():[]}function Vi(t,e){this.version=t,this.transformResults=e}var Pi,Li,Ci,Mi,ji,Ui=(so.prototype.dt=function(t){for(var e=0,n=this.fields;e<n.length;e++)if(n[e].q(t))return!0;return!1},so.prototype.isEqual=function(t){return iu(this.fields,t.fields,function(t,e){return t.isEqual(e)})},so),qi=(oo.prototype.isEqual=function(t){return this.field.isEqual(t.field)&&this.transform.isEqual(t.transform)},oo),Fi=(io.ft=function(){return new io},io.exists=function(t){return new io(void 0,t)},io.updateTime=function(t){return new io(t)},Object.defineProperty(io.prototype,\"Tt\",{get:function(){return void 0===this.updateTime&&void 0===this.exists},enumerable:!0,configurable:!0}),io.prototype.Et=function(t){return void 0!==this.updateTime?t instanceof To&&t.version.isEqual(this.updateTime):void 0===this.exists||this.exists===t instanceof To},io.prototype.isEqual=function(t){return this.exists===t.exists&&(this.updateTime?!!t.updateTime&&this.updateTime.isEqual(t.updateTime):!t.updateTime)},io),Bi=(ro.prototype.It=function(t){},ro.wt=function(t){return t instanceof To?t.version:Pr.min()},ro),Gi=(n(no,ji=Bi),no.prototype.at=function(t,e){this.It(t);var n=e.version;return new To(this.key,n,this.value,{hasCommittedMutations:!0})},no.prototype.ot=function(t,e,n){if(this.It(t),!this.Rt.Et(t))return t;var r=Bi.wt(t);return new To(this.key,r,this.value,{At:!0})},no.prototype.Pt=function(t){return null},no.prototype.isEqual=function(t){return t instanceof no&&this.key.isEqual(t.key)&&this.value.isEqual(t.value)&&this.Rt.isEqual(t.Rt)},no),zi=(n(eo,Mi=Bi),eo.prototype.at=function(t,e){if(this.It(t),!this.Rt.Et(t))return new No(this.key,e.version);var n=this.gt(t);return new To(this.key,e.version,n,{hasCommittedMutations:!0})},eo.prototype.ot=function(t,e,n){if(this.It(t),!this.Rt.Et(t))return t;var r=Bi.wt(t),i=this.gt(t);return new To(this.key,r,i,{At:!0})},eo.prototype.Pt=function(t){return null},eo.prototype.isEqual=function(t){return t instanceof eo&&this.key.isEqual(t.key)&&this.Vt.isEqual(t.Vt)&&this.Rt.isEqual(t.Rt)},eo.prototype.gt=function(t){var e;return e=t instanceof To?t.data():Ki.empty(),this.pt(e)},eo.prototype.pt=function(t){var n=this,r=new Yi(t);return this.Vt.fields.forEach(function(t){if(!t.B()){var e=n.data.field(t);null!==e?r.set(t,e):r.delete(t)}}),r.yt()},eo),Wi=(n(to,Ci=Bi),to.prototype.at=function(t,e){if(this.It(t),Zs(null!=e.transformResults),!this.Rt.Et(t))return new No(this.key,e.version);var n=this.bt(t),r=this.vt(t,e.transformResults),i=e.version,o=this.St(n.data(),r);return new To(this.key,i,o,{hasCommittedMutations:!0})},to.prototype.ot=function(t,e,n){if(this.It(t),!this.Rt.Et(t))return t;var r=this.bt(t),i=this.Dt(n,t,e),o=this.St(r.data(),i);return new To(this.key,r.version,o,{At:!0})},to.prototype.Pt=function(t){for(var e=null,n=0,r=this.fieldTransforms;n<r.length;n++){var i=r[n],o=t instanceof To?t.field(i.field):void 0,s=i.transform.ut(o||null);null!=s&&(e=null==e?(new Yi).set(i.field,s):e.set(i.field,s))}return e?e.yt():null},to.prototype.isEqual=function(t){return t instanceof to&&this.key.isEqual(t.key)&&iu(this.fieldTransforms,t.fieldTransforms,function(t,e){return t.isEqual(e)})&&this.Rt.isEqual(t.Rt)},to.prototype.bt=function(t){return t},to.prototype.vt=function(t,e){var n=[];Zs(this.fieldTransforms.length===e.length);for(var r=0;r<e.length;r++){var i=this.fieldTransforms[r],o=i.transform,s=null;t instanceof To&&(s=t.field(i.field)),n.push(o.at(s,e[r]))}return n},to.prototype.Dt=function(t,e,n){for(var r=[],i=0,o=this.fieldTransforms;i<o.length;i++){var s=o[i],u=s.transform,a=null;e instanceof To&&(a=e.field(s.field)),null===a&&n instanceof To&&(a=n.field(s.field)),r.push(u.ot(a,t))}return r},to.prototype.St=function(t,e){for(var n=new Yi(t),r=0;r<this.fieldTransforms.length;r++){var i=this.fieldTransforms[r].field;n.set(i,e[r])}return n.yt()},to),Qi=(n(Zi,Li=Bi),Zi.prototype.at=function(t,e){return this.It(t),new Io(this.key,e.version,{hasCommittedMutations:!0})},Zi.prototype.ot=function(t,e,n){return this.It(t),this.Rt.Et(t)?new Io(this.key,Pr.min()):t},Zi.prototype.Pt=function(t){return null},Zi.prototype.isEqual=function(t){return t instanceof Zi&&this.key.isEqual(t.key)&&this.Rt.isEqual(t.Rt)},Zi),Hi=(n(Ji,Pi=Bi),Ji.prototype.at=function(t,e){Js()},Ji.prototype.ot=function(t,e,n){Js()},Ji.prototype.Pt=function(t){Js()},Ji.prototype.isEqual=function(t){return t instanceof Ji&&this.key.isEqual(t.key)&&this.Rt.isEqual(t.Rt)},Ji),Ki=($i.empty=function(){return new $i({mapValue:{}})},$i.prototype.field=function(t){if(t.B())return this.proto;for(var e=this.proto,n=0;n<t.length-1;++n){if(!e.mapValue.fields)return null;if(!Ii(e=e.mapValue.fields[t.get(n)]))return null}return(e=(e.mapValue.fields||{})[t.O()])||null},$i.prototype.isEqual=function(t){return ci(this.proto,t.proto)},$i),Yi=(Xi.prototype.set=function(t,e){return this.Nt(t,e),this},Xi.prototype.delete=function(t){return this.Nt(t,null),this},Xi.prototype.Nt=function(t,e){for(var n=this.Ft,r=0;r<t.length-1;++r){var i=t.get(r),o=n.get(i);o instanceof Map||(o=o&&10===hi(o)?new Map(Object.entries(o.mapValue.fields||{})):new Map,n.set(i,o)),n=o}n.set(t.O(),e)},Xi.prototype.yt=function(){var t=this.$t(Kr.G,this.Ft);return null!=t?new Ki(t):this.Ct},Xi.prototype.$t=function(r,t){var i=this,o=!1,e=this.Ct.field(r),s=Ii(e)?Object.assign({},e.mapValue.fields):{};return t.forEach(function(t,e){if(t instanceof Map){var n=i.$t(r.child(e),t);null!=n&&(s[e]=n,o=!0)}else null!==t?(s[e]=t,o=!0):s.hasOwnProperty(e)&&(delete s[e],o=!0)}),o?{mapValue:{fields:s}}:null},Xi);function Xi(t){void 0===t&&(t=Ki.empty()),this.Ct=t,this.Ft=new Map}function $i(t){this.proto=t}function Ji(t,e){var n=this;return(n=Pi.call(this)||this).key=t,n.Rt=e,n.type=4,n}function Zi(t,e){var n=this;return(n=Li.call(this)||this).key=t,n.Rt=e,n.type=3,n}function to(t,e){var n=this;return(n=Ci.call(this)||this).key=t,n.fieldTransforms=e,n.type=2,n.Rt=Fi.exists(!0),n}function eo(t,e,n,r){var i=this;return(i=Mi.call(this)||this).key=t,i.data=e,i.Vt=n,i.Rt=r,i.type=1,i}function no(t,e,n){var r=this;return(r=ji.call(this)||this).key=t,r.value=e,r.Rt=n,r.type=0,r}function ro(){}function io(t,e){this.updateTime=t,this.exists=e}function oo(t,e){this.field=t,this.transform=e}function so(t){(this.fields=t).sort(Kr.N)}function uo(t){var u=[];return Zr(t.fields||{},function(t,e){var n=new Kr([t]);if(Ii(e)){var r=uo(e.mapValue).fields;if(0===r.length)u.push(n);else for(var i=0,o=r;i<o.length;i++){var s=o[i];u.push(n.child(s))}}else u.push(n)}),new Ui(u)}function ao(t,e){this.key=t,this.version=e}function ho(t){this.count=t}var co,fo,lo,po,yo,vo,mo,go,wo,bo,Eo,To=(n(Yo,Eo=ao),Yo.prototype.field=function(t){return this.kt.field(t)},Yo.prototype.data=function(){return this.kt},Yo.prototype.Mt=function(){return this.kt.proto},Yo.prototype.isEqual=function(t){return t instanceof Yo&&this.key.isEqual(t.key)&&this.version.isEqual(t.version)&&this.At===t.At&&this.hasCommittedMutations===t.hasCommittedMutations&&this.kt.isEqual(t.kt)},Yo.prototype.toString=function(){return\"Document(\"+this.key+\", \"+this.version+\", \"+this.kt.toString()+\", {hasLocalMutations: \"+this.At+\"}), {hasCommittedMutations: \"+this.hasCommittedMutations+\"})\"},Object.defineProperty(Yo.prototype,\"hasPendingWrites\",{get:function(){return this.At||this.hasCommittedMutations},enumerable:!0,configurable:!0}),Yo),Io=(n(Ko,bo=ao),Ko.prototype.toString=function(){return\"NoDocument(\"+this.key+\", \"+this.version+\")\"},Object.defineProperty(Ko.prototype,\"hasPendingWrites\",{get:function(){return this.hasCommittedMutations},enumerable:!0,configurable:!0}),Ko.prototype.isEqual=function(t){return t instanceof Ko&&t.hasCommittedMutations===this.hasCommittedMutations&&t.version.isEqual(this.version)&&t.key.isEqual(this.key)},Ko),No=(n(Ho,wo=ao),Ho.prototype.toString=function(){return\"UnknownDocument(\"+this.key+\", \"+this.version+\")\"},Object.defineProperty(Ho.prototype,\"hasPendingWrites\",{get:function(){return!0},enumerable:!0,configurable:!0}),Ho.prototype.isEqual=function(t){return t instanceof Ho&&t.version.isEqual(this.version)&&t.key.isEqual(this.key)},Ho),_o=(Qo.prototype.canonicalId=function(){if(null===this.Lt){var t=this.path.j();null!==this.collectionGroup&&(t+=\"|cg:\"+this.collectionGroup),t+=\"|f:\",t+=this.filters.map(function(t){return t.canonicalId()}).join(\",\"),t+=\"|ob:\",t+=this.orderBy.map(function(t){return t.canonicalId()}).join(\",\"),ri(this.limit)||(t+=\"|l:\",t+=this.limit),this.startAt&&(t+=\"|lb:\",t+=this.startAt.canonicalId()),this.endAt&&(t+=\"|ub:\",t+=this.endAt.canonicalId()),this.Lt=t}return this.Lt},Qo.prototype.toString=function(){var t=this.path.j();return null!==this.collectionGroup&&(t+=\" collectionGroup=\"+this.collectionGroup),0<this.filters.length&&(t+=\", filters: [\"+this.filters.join(\", \")+\"]\"),ri(this.limit)||(t+=\", limit: \"+this.limit),0<this.orderBy.length&&(t+=\", orderBy: [\"+this.orderBy.join(\", \")+\"]\"),this.startAt&&(t+=\", startAt: \"+this.startAt.canonicalId()),this.endAt&&(t+=\", endAt: \"+this.endAt.canonicalId()),\"Target(\"+t+\")\"},Qo.prototype.isEqual=function(t){if(this.limit!==t.limit)return!1;if(this.orderBy.length!==t.orderBy.length)return!1;for(var e=0;e<this.orderBy.length;e++)if(!this.orderBy[e].isEqual(t.orderBy[e]))return!1;if(this.filters.length!==t.filters.length)return!1;for(var n=0;n<this.filters.length;n++)if(!this.filters[n].isEqual(t.filters[n]))return!1;return this.collectionGroup===t.collectionGroup&&!!this.path.isEqual(t.path)&&!!(null!==this.startAt?this.startAt.isEqual(t.startAt):null===t.startAt)&&(null!==this.endAt?this.endAt.isEqual(t.endAt):null===t.endAt)},Qo.prototype.Ot=function(){return Xr.et(this.path)&&null===this.collectionGroup&&0===this.filters.length},Qo),Ao=(Wo.Wt=function(t){return new Wo(t)},Object.defineProperty(Wo.prototype,\"orderBy\",{get:function(){if(null===this.qt){this.qt=[];var t=this.jt(),e=this.Kt();if(null!==t&&null===e)t.Y()||this.qt.push(new Po(t)),this.qt.push(new Po(Kr.J(),\"asc\"));else{for(var n=!1,r=0,i=this.xt;r<i.length;r++){var o=i[r];this.qt.push(o),o.field.Y()&&(n=!0)}if(!n){var s=0<this.xt.length?this.xt[this.xt.length-1].dir:\"asc\";this.qt.push(new Po(Kr.J(),s))}}}return this.qt},enumerable:!0,configurable:!0}),Wo.prototype.Gt=function(t){var e=this.filters.concat([t]);return new Wo(this.path,this.collectionGroup,this.xt.slice(),e,this.limit,this.Bt,this.startAt,this.endAt)},Wo.prototype.zt=function(t){var e=this.xt.concat([t]);return new Wo(this.path,this.collectionGroup,e,this.filters.slice(),this.limit,this.Bt,this.startAt,this.endAt)},Wo.prototype.Ht=function(t){return new Wo(this.path,this.collectionGroup,this.xt.slice(),this.filters.slice(),t,\"F\",this.startAt,this.endAt)},Wo.prototype.Yt=function(t){return new Wo(this.path,this.collectionGroup,this.xt.slice(),this.filters.slice(),t,\"L\",this.startAt,this.endAt)},Wo.prototype.Jt=function(t){return new Wo(this.path,this.collectionGroup,this.xt.slice(),this.filters.slice(),this.limit,this.Bt,t,this.endAt)},Wo.prototype.Xt=function(t){return new Wo(this.path,this.collectionGroup,this.xt.slice(),this.filters.slice(),this.limit,this.Bt,this.startAt,t)},Wo.prototype.Zt=function(t){return new Wo(t,null,this.xt.slice(),this.filters.slice(),this.limit,this.Bt,this.startAt,this.endAt)},Wo.prototype.te=function(){return 0===this.filters.length&&null===this.limit&&null==this.startAt&&null==this.endAt&&(0===this.xt.length||1===this.xt.length&&this.xt[0].field.Y())},Wo.prototype.canonicalId=function(){return this.ee().canonicalId()+\"|lt:\"+this.Bt},Wo.prototype.toString=function(){return\"Query(target=\"+this.ee().toString()+\"; limitType=\"+this.Bt+\")\"},Wo.prototype.isEqual=function(t){return this.ee().isEqual(t.ee())&&this.Bt===t.Bt},Wo.prototype.se=function(t,e){for(var n=!1,r=0,i=this.orderBy;r<i.length;r++){var o=i[r],s=o.compare(t,e);if(0!==s)return s;n=n||o.field.Y()}return 0},Wo.prototype.matches=function(t){return this.ie(t)&&this.ne(t)&&this.re(t)&&this.he(t)},Wo.prototype.oe=function(){return!ri(this.limit)&&\"F\"===this.Bt},Wo.prototype.ae=function(){return!ri(this.limit)&&\"L\"===this.Bt},Wo.prototype.Kt=function(){return 0<this.xt.length?this.xt[0].field:null},Wo.prototype.jt=function(){for(var t=0,e=this.filters;t<e.length;t++){var n=e[t];if(n instanceof So&&n.ue())return n.field}return null},Wo.prototype.ce=function(t){for(var e=0,n=this.filters;e<n.length;e++){var r=n[e];if(r instanceof So&&0<=t.indexOf(r.op))return r.op}return null},Wo.prototype.Ot=function(){return this.ee().Ot()},Wo.prototype._e=function(){return null!==this.collectionGroup},Wo.prototype.ee=function(){if(!this.Ut)if(\"F\"===this.Bt)this.Ut=new _o(this.path,this.collectionGroup,this.orderBy,this.filters,this.limit,this.startAt,this.endAt);else{for(var t=[],e=0,n=this.orderBy;e<n.length;e++){var r=n[e],i=\"desc\"===r.dir?\"asc\":\"desc\";t.push(new Po(r.field,i))}var o=this.endAt?new Vo(this.endAt.position,!this.endAt.before):null,s=this.startAt?new Vo(this.startAt.position,!this.startAt.before):null;this.Ut=new _o(this.path,this.collectionGroup,t,this.filters,this.limit,o,s)}return this.Ut},Wo.prototype.ie=function(t){var e=t.key.path;return null!==this.collectionGroup?t.key.tt(this.collectionGroup)&&this.path.q(e):Xr.et(this.path)?this.path.isEqual(e):this.path.U(e)},Wo.prototype.ne=function(t){for(var e=0,n=this.xt;e<n.length;e++){var r=n[e];if(!r.field.Y()&&null===t.field(r.field))return!1}return!0},Wo.prototype.re=function(t){for(var e=0,n=this.filters;e<n.length;e++)if(!n[e].matches(t))return!1;return!0},Wo.prototype.he=function(t){return!(this.startAt&&!this.startAt.le(this.orderBy,t)||this.endAt&&this.endAt.le(this.orderBy,t))},Wo.prototype.Qt=function(t){},Wo),So=(n(zo,go=function(){}),zo.create=function(t,e,n){if(t.Y())return\"in\"===e?new ko(t,n):new Do(t,e,n);if(Ei(n)){if(\"==\"!==e)throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid query. Null supports only equality comparisons.\");return new zo(t,e,n)}if(Ti(n)){if(\"==\"!==e)throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid query. NaN supports only equality comparisons.\");return new zo(t,e,n)}return\"array-contains\"===e?new xo(t,n):\"in\"===e?new Oo(t,n):\"array-contains-any\"===e?new Ro(t,n):new zo(t,e,n)},zo.prototype.matches=function(t){var e=t.field(this.field);return null!==e&&hi(this.value)===hi(e)&&this.de(li(e,this.value))},zo.prototype.de=function(t){switch(this.op){case\"<\":return t<0;case\"<=\":return t<=0;case\"==\":return 0===t;case\">\":return 0<t;case\">=\":return 0<=t;default:return Js()}},zo.prototype.ue=function(){return 0<=[\"<\",\"<=\",\">\",\">=\"].indexOf(this.op)},zo.prototype.canonicalId=function(){return this.field.j()+this.op.toString()+di(this.value)},zo.prototype.isEqual=function(t){return t instanceof zo&&this.op===t.op&&this.field.isEqual(t.field)&&ci(this.value,t.value)},zo.prototype.toString=function(){return this.field.j()+\" \"+this.op+\" \"+di(this.value)},zo),Do=(n(Go,mo=So),Go.prototype.matches=function(t){var e=Xr.N(t.key,this.key);return this.de(e)},Go),ko=(n(Bo,vo=So),Bo.prototype.matches=function(e){return this.keys.some(function(t){return t.isEqual(e.key)})},Bo),xo=(n(Fo,yo=So),Fo.prototype.matches=function(t){var e=t.field(this.field);return bi(e)&&fi(e.arrayValue,this.value)},Fo),Oo=(n(qo,po=So),qo.prototype.matches=function(t){var e=t.field(this.field);return null!==e&&fi(this.value.arrayValue,e)},qo),Ro=(n(Uo,lo=So),Uo.prototype.matches=function(t){var e=this,n=t.field(this.field);return!(!bi(n)||!n.arrayValue.values)&&n.arrayValue.values.some(function(t){return fi(e.value.arrayValue,t)})},Uo),Vo=(jo.prototype.canonicalId=function(){return(this.before?\"b\":\"a\")+\":\"+this.position.map(function(t){return di(t)}).join(\",\")},jo.prototype.le=function(t,e){for(var n=0,r=0;r<this.position.length;r++){var i=t[r],o=this.position[r];if(n=i.field.Y()?Xr.N(Xr.Z(o.referenceValue),e.key):li(o,e.field(i.field)),\"desc\"===i.dir&&(n*=-1),0!==n)break}return this.before?n<=0:n<0},jo.prototype.isEqual=function(t){if(null===t)return!1;if(this.before!==t.before||this.position.length!==t.position.length)return!1;for(var e=0;e<this.position.length;e++)if(!ci(this.position[e],t.position[e]))return!1;return!0},jo),Po=(Mo.prototype.compare=function(t,e){var n,r,i,o,s=this.fe?Xr.N(t.key,e.key):(n=this.field,r=e,i=t.field(n),o=r.field(n),null!==i&&null!==o?li(i,o):Js());switch(this.dir){case\"asc\":return s;case\"desc\":return-1*s;default:return Js()}},Mo.prototype.canonicalId=function(){return this.field.j()+this.dir.toString()},Mo.prototype.toString=function(){return this.field.j()+\" (\"+this.dir+\")\"},Mo.prototype.isEqual=function(t){return this.dir===t.dir&&this.field.isEqual(t.field)},Mo),Lo=(Co.prototype.Ie=function(t){return new Co(this.target,this.targetId,this.Te,t,this.Ee,this.lastLimboFreeSnapshotVersion,this.resumeToken)},Co.prototype.we=function(t,e){return new Co(this.target,this.targetId,this.Te,this.sequenceNumber,e,this.lastLimboFreeSnapshotVersion,t)},Co.prototype.Re=function(t){return new Co(this.target,this.targetId,this.Te,this.sequenceNumber,this.Ee,t,this.resumeToken)},Co);function Co(t,e,n,r,i,o,s){void 0===i&&(i=Pr.min()),void 0===o&&(o=Pr.min()),void 0===s&&(s=ei.ht),this.target=t,this.targetId=e,this.Te=n,this.sequenceNumber=r,this.Ee=i,this.lastLimboFreeSnapshotVersion=o,this.resumeToken=s}function Mo(t,e){this.field=t,void 0===e&&(e=\"asc\"),this.dir=e,this.fe=t.Y()}function jo(t,e){this.position=t,this.before=e}function Uo(t,e){return lo.call(this,t,\"array-contains-any\",e)||this}function qo(t,e){return po.call(this,t,\"in\",e)||this}function Fo(t,e){return yo.call(this,t,\"array-contains\",e)||this}function Bo(t,e){var n=this;return(n=vo.call(this,t,\"in\",e)||this).keys=(e.arrayValue.values||[]).map(function(t){return Xr.Z(t.referenceValue)}),n}function Go(t,e,n){var r=this;return(r=mo.call(this,t,e,n)||this).key=Xr.Z(n.referenceValue),r}function zo(t,e,n){var r=this;return(r=go.call(this)||this).field=t,r.op=e,r.value=n,r}function Wo(t,e,n,r,i,o,s,u){void 0===e&&(e=null),void 0===n&&(n=[]),void 0===r&&(r=[]),void 0===i&&(i=null),void 0===o&&(o=\"F\"),void 0===s&&(s=null),void 0===u&&(u=null),this.path=t,this.collectionGroup=e,this.xt=n,this.filters=r,this.limit=i,this.Bt=o,this.startAt=s,this.endAt=u,this.qt=null,this.Ut=null,this.startAt&&this.Qt(this.startAt),this.endAt&&this.Qt(this.endAt)}function Qo(t,e,n,r,i,o,s){void 0===e&&(e=null),void 0===n&&(n=[]),void 0===r&&(r=[]),void 0===i&&(i=null),void 0===o&&(o=null),void 0===s&&(s=null),this.path=t,this.collectionGroup=e,this.orderBy=n,this.filters=r,this.limit=i,this.startAt=o,this.endAt=s,this.Lt=null}function Ho(){return null!==wo&&wo.apply(this,arguments)||this}function Ko(t,e,n){var r=this;return(r=bo.call(this,t,e)||this).hasCommittedMutations=!(!n||!n.hasCommittedMutations),r}function Yo(t,e,n,r){var i=this;return(i=Eo.call(this,t,e)||this).kt=n,i.At=!!r.At,i.hasCommittedMutations=!!r.hasCommittedMutations,i}function Xo(t){switch(t){case Sr.OK:return Js();case Sr.CANCELLED:case Sr.UNKNOWN:case Sr.DEADLINE_EXCEEDED:case Sr.RESOURCE_EXHAUSTED:case Sr.INTERNAL:case Sr.UNAVAILABLE:case Sr.UNAUTHENTICATED:return;case Sr.INVALID_ARGUMENT:case Sr.NOT_FOUND:case Sr.ALREADY_EXISTS:case Sr.PERMISSION_DENIED:case Sr.FAILED_PRECONDITION:case Sr.ABORTED:case Sr.OUT_OF_RANGE:case Sr.UNIMPLEMENTED:case Sr.DATA_LOSS:return 1;default:return Js()}}function $o(t){if(void 0===t)return Xs(\"GRPC error has no .code\"),Sr.UNKNOWN;switch(t){case co.OK:return Sr.OK;case co.CANCELLED:return Sr.CANCELLED;case co.UNKNOWN:return Sr.UNKNOWN;case co.DEADLINE_EXCEEDED:return Sr.DEADLINE_EXCEEDED;case co.RESOURCE_EXHAUSTED:return Sr.RESOURCE_EXHAUSTED;case co.INTERNAL:return Sr.INTERNAL;case co.UNAVAILABLE:return Sr.UNAVAILABLE;case co.UNAUTHENTICATED:return Sr.UNAUTHENTICATED;case co.INVALID_ARGUMENT:return Sr.INVALID_ARGUMENT;case co.NOT_FOUND:return Sr.NOT_FOUND;case co.ALREADY_EXISTS:return Sr.ALREADY_EXISTS;case co.PERMISSION_DENIED:return Sr.PERMISSION_DENIED;case co.FAILED_PRECONDITION:return Sr.FAILED_PRECONDITION;case co.ABORTED:return Sr.ABORTED;case co.OUT_OF_RANGE:return Sr.OUT_OF_RANGE;case co.UNIMPLEMENTED:return Sr.UNIMPLEMENTED;case co.DATA_LOSS:return Sr.DATA_LOSS;default:return Js()}}(fo=co=co||{})[fo.OK=0]=\"OK\",fo[fo.CANCELLED=1]=\"CANCELLED\",fo[fo.UNKNOWN=2]=\"UNKNOWN\",fo[fo.INVALID_ARGUMENT=3]=\"INVALID_ARGUMENT\",fo[fo.DEADLINE_EXCEEDED=4]=\"DEADLINE_EXCEEDED\",fo[fo.NOT_FOUND=5]=\"NOT_FOUND\",fo[fo.ALREADY_EXISTS=6]=\"ALREADY_EXISTS\",fo[fo.PERMISSION_DENIED=7]=\"PERMISSION_DENIED\",fo[fo.UNAUTHENTICATED=16]=\"UNAUTHENTICATED\",fo[fo.RESOURCE_EXHAUSTED=8]=\"RESOURCE_EXHAUSTED\",fo[fo.FAILED_PRECONDITION=9]=\"FAILED_PRECONDITION\",fo[fo.ABORTED=10]=\"ABORTED\",fo[fo.OUT_OF_RANGE=11]=\"OUT_OF_RANGE\",fo[fo.UNIMPLEMENTED=12]=\"UNIMPLEMENTED\",fo[fo.INTERNAL=13]=\"INTERNAL\",fo[fo.UNAVAILABLE=14]=\"UNAVAILABLE\",fo[fo.DATA_LOSS=15]=\"DATA_LOSS\";var Jo=(rs.prototype.me=function(t,e){return new rs(this.N,this.root.me(t,e,this.N).Ae(null,null,ts.Pe,null,null))},rs.prototype.remove=function(t){return new rs(this.N,this.root.remove(t,this.N).Ae(null,null,ts.Pe,null,null))},rs.prototype.get=function(t){for(var e=this.root;!e.B();){var n=this.N(t,e.key);if(0===n)return e.value;n<0?e=e.left:0<n&&(e=e.right)}return null},rs.prototype.indexOf=function(t){for(var e=0,n=this.root;!n.B();){var r=this.N(t,n.key);if(0===r)return e+n.left.size;n=r<0?n.left:(e+=n.left.size+1,n.right)}return-1},rs.prototype.B=function(){return this.root.B()},Object.defineProperty(rs.prototype,\"size\",{get:function(){return this.root.size},enumerable:!0,configurable:!0}),rs.prototype.Ve=function(){return this.root.Ve()},rs.prototype.ge=function(){return this.root.ge()},rs.prototype.pe=function(t){return this.root.pe(t)},rs.prototype.forEach=function(n){this.pe(function(t,e){return n(t,e),!1})},rs.prototype.toString=function(){var n=[];return this.pe(function(t,e){return n.push(t+\":\"+e),!1}),\"{\"+n.join(\", \")+\"}\"},rs.prototype.ye=function(t){return this.root.ye(t)},rs.prototype.be=function(){return new Zo(this.root,null,this.N,!1)},rs.prototype.ve=function(t){return new Zo(this.root,t,this.N,!1)},rs.prototype.Se=function(){return new Zo(this.root,null,this.N,!0)},rs.prototype.De=function(t){return new Zo(this.root,t,this.N,!0)},rs),Zo=(ns.prototype.Ne=function(){var t=this.Fe.pop(),e={key:t.key,value:t.value};if(this.Ce)for(t=t.left;!t.B();)this.Fe.push(t),t=t.right;else for(t=t.right;!t.B();)this.Fe.push(t),t=t.left;return e},ns.prototype.$e=function(){return 0<this.Fe.length},ns.prototype.ke=function(){if(0===this.Fe.length)return null;var t=this.Fe[this.Fe.length-1];return{key:t.key,value:t.value}},ns),ts=(es.prototype.Ae=function(t,e,n,r,i){return new es(null!=t?t:this.key,null!=e?e:this.value,null!=n?n:this.color,null!=r?r:this.left,null!=i?i:this.right)},es.prototype.B=function(){return!1},es.prototype.pe=function(t){return this.left.pe(t)||t(this.key,this.value)||this.right.pe(t)},es.prototype.ye=function(t){return this.right.ye(t)||t(this.key,this.value)||this.left.ye(t)},es.prototype.min=function(){return this.left.B()?this:this.left.min()},es.prototype.Ve=function(){return this.min().key},es.prototype.ge=function(){return this.right.B()?this.key:this.right.ge()},es.prototype.me=function(t,e,n){var r=this,i=n(t,r.key);return(r=i<0?r.Ae(null,null,null,r.left.me(t,e,n),null):0===i?r.Ae(null,e,null,null,null):r.Ae(null,null,null,null,r.right.me(t,e,n))).Me()},es.prototype.Le=function(){if(this.left.B())return es.EMPTY;var t=this;return t.left.Oe()||t.left.left.Oe()||(t=t.xe()),(t=t.Ae(null,null,null,t.left.Le(),null)).Me()},es.prototype.remove=function(t,e){var n,r=this;if(e(t,r.key)<0)r.left.B()||r.left.Oe()||r.left.left.Oe()||(r=r.xe()),r=r.Ae(null,null,null,r.left.remove(t,e),null);else{if(r.left.Oe()&&(r=r.Be()),r.right.B()||r.right.Oe()||r.right.left.Oe()||(r=r.qe()),0===e(t,r.key)){if(r.right.B())return es.EMPTY;n=r.right.min(),r=r.Ae(n.key,n.value,null,null,r.right.Le())}r=r.Ae(null,null,null,null,r.right.remove(t,e))}return r.Me()},es.prototype.Oe=function(){return this.color},es.prototype.Me=function(){var t=this;return t.right.Oe()&&!t.left.Oe()&&(t=t.Ue()),t.left.Oe()&&t.left.left.Oe()&&(t=t.Be()),t.left.Oe()&&t.right.Oe()&&(t=t.Qe()),t},es.prototype.xe=function(){var t=this.Qe();return t.right.left.Oe()&&(t=(t=(t=t.Ae(null,null,null,null,t.right.Be())).Ue()).Qe()),t},es.prototype.qe=function(){var t=this.Qe();return t.left.left.Oe()&&(t=(t=t.Be()).Qe()),t},es.prototype.Ue=function(){var t=this.Ae(null,null,es.RED,null,this.right.left);return this.right.Ae(null,null,this.color,t,null)},es.prototype.Be=function(){var t=this.Ae(null,null,es.RED,this.left.right,null);return this.left.Ae(null,null,this.color,null,t)},es.prototype.Qe=function(){var t=this.left.Ae(null,null,!this.left.color,null,null),e=this.right.Ae(null,null,!this.right.color,null,null);return this.Ae(null,null,!this.color,t,e)},es.prototype.We=function(){var t=this.je();return Math.pow(2,t)<=this.size+1},es.prototype.je=function(){if(this.Oe()&&this.left.Oe())throw Js();if(this.right.Oe())throw Js();var t=this.left.je();if(t!==this.right.je())throw Js();return t+(this.Oe()?0:1)},es);function es(t,e,n,r,i){this.key=t,this.value=e,this.color=null!=n?n:es.RED,this.left=null!=r?r:es.EMPTY,this.right=null!=i?i:es.EMPTY,this.size=this.left.size+1+this.right.size}function ns(t,e,n,r){this.Ce=r,this.Fe=[];for(var i=1;!t.B();)if(i=e?n(t.key,e):1,r&&(i*=-1),i<0)t=this.Ce?t.left:t.right;else{if(0===i){this.Fe.push(t);break}this.Fe.push(t),t=this.Ce?t.right:t.left}}function rs(t,e){this.N=t,this.root=e||ts.EMPTY}function is(){this.size=0}ts.EMPTY=null,ts.RED=!0,ts.Pe=!1,ts.EMPTY=(Object.defineProperty(is.prototype,\"key\",{get:function(){throw Js()},enumerable:!0,configurable:!0}),Object.defineProperty(is.prototype,\"value\",{get:function(){throw Js()},enumerable:!0,configurable:!0}),Object.defineProperty(is.prototype,\"color\",{get:function(){throw Js()},enumerable:!0,configurable:!0}),Object.defineProperty(is.prototype,\"left\",{get:function(){throw Js()},enumerable:!0,configurable:!0}),Object.defineProperty(is.prototype,\"right\",{get:function(){throw Js()},enumerable:!0,configurable:!0}),is.prototype.Ae=function(t,e,n,r,i){return this},is.prototype.me=function(t,e,n){return new ts(t,e)},is.prototype.remove=function(t,e){return this},is.prototype.B=function(){return!0},is.prototype.pe=function(t){return!1},is.prototype.ye=function(t){return!1},is.prototype.Ve=function(){return null},is.prototype.ge=function(){return null},is.prototype.Oe=function(){return!1},is.prototype.We=function(){return!0},is.prototype.je=function(){return 0},new is);var os=(hs.prototype.has=function(t){return null!==this.data.get(t)},hs.prototype.first=function(){return this.data.Ve()},hs.prototype.last=function(){return this.data.ge()},Object.defineProperty(hs.prototype,\"size\",{get:function(){return this.data.size},enumerable:!0,configurable:!0}),hs.prototype.indexOf=function(t){return this.data.indexOf(t)},hs.prototype.forEach=function(n){this.data.pe(function(t,e){return n(t),!1})},hs.prototype.Ke=function(t,e){for(var n=this.data.ve(t[0]);n.$e();){var r=n.Ne();if(0<=this.N(r.key,t[1]))return;e(r.key)}},hs.prototype.Ge=function(t,e){var n;for(n=void 0!==e?this.data.ve(e):this.data.be();n.$e();)if(!t(n.Ne().key))return},hs.prototype.ze=function(t){var e=this.data.ve(t);return e.$e()?e.Ne().key:null},hs.prototype.be=function(){return new ss(this.data.be())},hs.prototype.ve=function(t){return new ss(this.data.ve(t))},hs.prototype.add=function(t){return this.Ae(this.data.remove(t).me(t,!0))},hs.prototype.delete=function(t){return this.has(t)?this.Ae(this.data.remove(t)):this},hs.prototype.B=function(){return this.data.B()},hs.prototype.He=function(t){var e=this;return e.size<t.size&&(e=t,t=this),t.forEach(function(t){e=e.add(t)}),e},hs.prototype.isEqual=function(t){if(!(t instanceof hs))return!1;if(this.size!==t.size)return!1;for(var e=this.data.be(),n=t.data.be();e.$e();){var r=e.Ne().key,i=n.Ne().key;if(0!==this.N(r,i))return!1}return!0},hs.prototype.W=function(){var e=[];return this.forEach(function(t){e.push(t)}),e},hs.prototype.toString=function(){var e=[];return this.forEach(function(t){return e.push(t)}),\"SortedSet(\"+e.toString()+\")\"},hs.prototype.Ae=function(t){var e=new hs(this.N);return e.data=t,e},hs),ss=(as.prototype.Ne=function(){return this.Ye.Ne().key},as.prototype.$e=function(){return this.Ye.$e()},as),us=new Jo(Xr.N);function as(t){this.Ye=t}function hs(t){this.N=t,this.data=new Jo(this.N)}function cs(){return us}function fs(){return cs()}var ls=new Jo(Xr.N);function ps(){return ls}var ds=new Jo(Xr.N);function ys(){return ds}var vs=new os(Xr.N);function ms(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];for(var n=vs,r=0,i=t;r<i.length;r++){var o=i[r];n=n.add(o)}return n}var gs=new os(ru);function ws(){return gs}function bs(t,e,n,r){this.ws=t,this.removedTargetIds=e,this.key=n,this.Rs=r}function Es(t,e){this.targetId=t,this.ms=e}function Ts(t,e,n,r){void 0===n&&(n=ei.ht),void 0===r&&(r=null),this.state=t,this.targetIds=e,this.resumeToken=n,this.cause=r}var Is=(Cs.Ze=function(t){return new Cs(t.N)},Cs.prototype.has=function(t){return null!=this.Je.get(t)},Cs.prototype.get=function(t){return this.Je.get(t)},Cs.prototype.first=function(){return this.Xe.Ve()},Cs.prototype.last=function(){return this.Xe.ge()},Cs.prototype.B=function(){return this.Xe.B()},Cs.prototype.indexOf=function(t){var e=this.Je.get(t);return e?this.Xe.indexOf(e):-1},Object.defineProperty(Cs.prototype,\"size\",{get:function(){return this.Xe.size},enumerable:!0,configurable:!0}),Cs.prototype.forEach=function(n){this.Xe.pe(function(t,e){return n(t),!1})},Cs.prototype.add=function(t){var e=this.delete(t.key);return e.Ae(e.Je.me(t.key,t),e.Xe.me(t,null))},Cs.prototype.delete=function(t){var e=this.get(t);return e?this.Ae(this.Je.remove(t),this.Xe.remove(e)):this},Cs.prototype.isEqual=function(t){if(!(t instanceof Cs))return!1;if(this.size!==t.size)return!1;for(var e=this.Xe.be(),n=t.Xe.be();e.$e();){var r=e.Ne().key,i=n.Ne().key;if(!r.isEqual(i))return!1}return!0},Cs.prototype.toString=function(){var e=[];return this.forEach(function(t){e.push(t.toString())}),0===e.length?\"DocumentSet ()\":\"DocumentSet (\\n  \"+e.join(\"  \\n\")+\"\\n)\"},Cs.prototype.Ae=function(t,e){var n=new Cs;return n.N=this.N,n.Je=t,n.Xe=e,n},Cs),Ns=(Ls.prototype.track=function(t){var e=t.doc.key,n=this.ts.get(e);!n||0!==t.type&&3===n.type?this.ts=this.ts.me(e,t):3===t.type&&1!==n.type?this.ts=this.ts.me(e,{type:n.type,doc:t.doc}):2===t.type&&2===n.type?this.ts=this.ts.me(e,{type:2,doc:t.doc}):2===t.type&&0===n.type?this.ts=this.ts.me(e,{type:0,doc:t.doc}):1===t.type&&0===n.type?this.ts=this.ts.remove(e):1===t.type&&2===n.type?this.ts=this.ts.me(e,{type:1,doc:n.doc}):0===t.type&&1===n.type?this.ts=this.ts.me(e,{type:2,doc:t.doc}):Js()},Ls.prototype.es=function(){var n=[];return this.ts.pe(function(t,e){n.push(e)}),n},Ls),_s=(Ps.os=function(t,e,n,r){var i=[];return e.forEach(function(t){i.push({type:0,doc:t})}),new Ps(t,e,Is.Ze(e),i,n,r,!0,!1)},Object.defineProperty(Ps.prototype,\"hasPendingWrites\",{get:function(){return!this.ns.B()},enumerable:!0,configurable:!0}),Ps.prototype.isEqual=function(t){if(!(this.fromCache===t.fromCache&&this.rs===t.rs&&this.ns.isEqual(t.ns)&&this.query.isEqual(t.query)&&this.docs.isEqual(t.docs)&&this.ss.isEqual(t.ss)))return!1;var e=this.docChanges,n=t.docChanges;if(e.length!==n.length)return!1;for(var r=0;r<e.length;r++)if(e[r].type!==n[r].type||!e[r].doc.isEqual(n[r].doc))return!1;return!0},Ps),As=(Vs.ls=function(t,e){var n=new Map;return n.set(t,Ss.ds(t,e)),new Vs(Pr.min(),n,ws(),cs(),ms())},Vs),Ss=(Rs.ds=function(t,e){return new Rs(ei.ht,e,ms(),ms(),ms())},Rs),Ds=(Object.defineProperty(Os.prototype,\"fs\",{get:function(){return this.gs},enumerable:!0,configurable:!0}),Object.defineProperty(Os.prototype,\"resumeToken\",{get:function(){return this.Vs},enumerable:!0,configurable:!0}),Object.defineProperty(Os.prototype,\"ys\",{get:function(){return 0!==this.As},enumerable:!0,configurable:!0}),Object.defineProperty(Os.prototype,\"bs\",{get:function(){return this.ps},enumerable:!0,configurable:!0}),Os.prototype.vs=function(t){0<t.rt()&&(this.ps=!0,this.Vs=t)},Os.prototype.Ss=function(){var n=ms(),r=ms(),i=ms();return this.Ps.forEach(function(t,e){switch(e){case 0:n=n.add(t);break;case 2:r=r.add(t);break;case 1:i=i.add(t);break;default:Js()}}),new Ss(this.Vs,this.gs,n,r,i)},Os.prototype.Ds=function(){this.ps=!1,this.Ps=js()},Os.prototype.Cs=function(t,e){this.ps=!0,this.Ps=this.Ps.me(t,e)},Os.prototype.Fs=function(t){this.ps=!0,this.Ps=this.Ps.remove(t)},Os.prototype.Ns=function(){this.As+=1},Os.prototype.$s=function(){--this.As},Os.prototype.ks=function(){this.ps=!0,this.gs=!0},Os),ks=(xs.prototype.qs=function(t){for(var e=0,n=t.ws;e<n.length;e++){var r=n[e];t.Rs instanceof To?this.Us(r,t.Rs):t.Rs instanceof Io&&this.Qs(r,t.key,t.Rs)}for(var i=0,o=t.removedTargetIds;i<o.length;i++){var s=o[i];this.Qs(s,t.key,t.Rs)}},xs.prototype.Ws=function(n){var r=this;this.js(n,function(t){var e=r.Ks(t);switch(n.state){case 0:r.Gs(t)&&e.vs(n.resumeToken);break;case 1:e.$s(),e.ys||e.Ds(),e.vs(n.resumeToken);break;case 2:e.$s(),e.ys||r.removeTarget(t);break;case 3:r.Gs(t)&&(e.ks(),e.vs(n.resumeToken));break;case 4:r.Gs(t)&&(r.zs(t),e.vs(n.resumeToken));break;default:Js()}})},xs.prototype.js=function(t,n){var r=this;0<t.targetIds.length?t.targetIds.forEach(n):this.Ls.forEach(function(t,e){r.Gs(e)&&n(e)})},xs.prototype.Hs=function(t){var e=t.targetId,n=t.ms.count,r=this.Ys(e);if(r){var i=r.target;if(i.Ot())if(0===n){var o=new Xr(i.path);this.Qs(e,o,new Io(o,Pr.min()))}else Zs(1===n);else this.Js(e)!==n&&(this.zs(e),this.Bs=this.Bs.add(e))}},xs.prototype.Xs=function(i){var o=this,s=new Map;this.Ls.forEach(function(t,e){var n=o.Ys(e);if(n){if(t.fs&&n.target.Ot()){var r=new Xr(n.target.path);null!==o.Os.get(r)||o.Zs(e,r)||o.Qs(e,r,new Io(r,i))}t.bs&&(s.set(e,t.Ss()),t.Ds())}});var r=ms();this.xs.forEach(function(t,e){var n=!0;e.Ge(function(t){var e=o.Ys(t);return!e||2===e.Te||(n=!1)}),n&&(r=r.add(t))});var t=new As(i,s,this.Bs,this.Os,r);return this.Os=cs(),this.xs=Ms(),this.Bs=new os(ru),t},xs.prototype.Us=function(t,e){if(this.Gs(t)){var n=this.Zs(t,e.key)?2:0;this.Ks(t).Cs(e.key,n),this.Os=this.Os.me(e.key,e),this.xs=this.xs.me(e.key,this.ti(e.key).add(t))}},xs.prototype.Qs=function(t,e,n){if(this.Gs(t)){var r=this.Ks(t);this.Zs(t,e)?r.Cs(e,1):r.Fs(e),this.xs=this.xs.me(e,this.ti(e).delete(t)),n&&(this.Os=this.Os.me(e,n))}},xs.prototype.removeTarget=function(t){this.Ls.delete(t)},xs.prototype.Js=function(t){var e=this.Ks(t).Ss();return this.Ms.ei(t).size+e.Ts.size-e.Is.size},xs.prototype.Ns=function(t){this.Ks(t).Ns()},xs.prototype.Ks=function(t){var e=this.Ls.get(t);return e||(e=new Ds,this.Ls.set(t,e)),e},xs.prototype.ti=function(t){var e=this.xs.get(t);return e||(e=new os(ru),this.xs=this.xs.me(t,e)),e},xs.prototype.Gs=function(t){var e=null!==this.Ys(t);return e||Ys(\"WatchChangeAggregator\",\"Detected inactive target\",t),e},xs.prototype.Ys=function(t){var e=this.Ls.get(t);return e&&e.ys?null:this.Ms.si(t)},xs.prototype.zs=function(e){var n=this;this.Ls.set(e,new Ds),this.Ms.ei(e).forEach(function(t){n.Qs(e,t,null)})},xs.prototype.Zs=function(t,e){return this.Ms.ei(t).has(e)},xs);function xs(t){this.Ms=t,this.Ls=new Map,this.Os=cs(),this.xs=Ms(),this.Bs=new os(ru)}function Os(){this.As=0,this.Ps=js(),this.Vs=ei.ht,this.gs=!1,this.ps=!0}function Rs(t,e,n,r,i){this.resumeToken=t,this.fs=e,this.Ts=n,this.Es=r,this.Is=i}function Vs(t,e,n,r,i){this.Ee=t,this.as=e,this.us=n,this.cs=r,this._s=i}function Ps(t,e,n,r,i,o,s,u){this.query=t,this.docs=e,this.ss=n,this.docChanges=r,this.ns=i,this.fromCache=o,this.rs=s,this.hs=u}function Ls(){this.ts=new Jo(Xr.N)}function Cs(n){this.N=n?function(t,e){return n(t,e)||Xr.N(t.key,e.key)}:function(t,e){return Xr.N(t.key,e.key)},this.Je=ps(),this.Xe=new Jo(this.N)}function Ms(){return new Jo(Xr.N)}function js(){return new Jo(Xr.N)}var Us={asc:\"ASCENDING\",desc:\"DESCENDING\"},qs={\"<\":\"LESS_THAN\",\"<=\":\"LESS_THAN_OR_EQUAL\",\">\":\"GREATER_THAN\",\">=\":\"GREATER_THAN_OR_EQUAL\",\"==\":\"EQUAL\",\"array-contains\":\"ARRAY_CONTAINS\",in:\"IN\",\"array-contains-any\":\"ARRAY_CONTAINS_ANY\"},Fs=(Bs.prototype.ni=function(t){var e=void 0===t.code?Sr.UNKNOWN:$o(t.code);return new Dr(e,t.message||\"\")},Bs.prototype.ri=function(t){return this.options.hi||ri(t)?t:{value:t}},Bs.prototype.oi=function(t){var e;return ri(e=\"object\"==typeof t?t.value:t)?null:e},Bs.prototype._t=function(t){return{integerValue:\"\"+t}},Bs.prototype.lt=function(t){if(this.options.hi){if(isNaN(t))return{doubleValue:\"NaN\"};if(t===1/0)return{doubleValue:\"Infinity\"};if(t===-1/0)return{doubleValue:\"-Infinity\"}}return{doubleValue:ii(t)?\"-0\":t}},Bs.prototype.ai=function(t){return oi(t)?this._t(t):this.lt(t)},Bs.prototype.C=function(t){return this.options.hi?new Date(1e3*t.seconds).toISOString().replace(/\\.\\d*/,\"\").replace(\"Z\",\"\")+\".\"+(\"000000000\"+t.nanoseconds).slice(-9)+\"Z\":{seconds:\"\"+t.seconds,nanos:t.nanoseconds}},Bs.prototype.v=function(t){var e=yi(t);return new Vr(e.seconds,e.nanos)},Bs.prototype.ui=function(t){return this.options.hi?t.toBase64():t.toUint8Array()},Bs.prototype.ci=function(t){return this.options.hi?(Zs(void 0===t||\"string\"==typeof t),ei.fromBase64String(t||\"\")):(Zs(void 0===t||t instanceof Uint8Array),ei.fromUint8Array(t||new Uint8Array))},Bs.prototype.toVersion=function(t){return this.C(t.C())},Bs.prototype.fromVersion=function(t){return Zs(!!t),Pr.v(this.v(t))},Bs.prototype._i=function(t,e){return this.li(e||this.ii).child(\"documents\").child(t).j()},Bs.prototype.di=function(t){var e=Cr.K(t);return Zs(Gs(e)),e},Bs.prototype.fi=function(t){return this._i(t.path)},Bs.prototype.Z=function(t){var e=this.di(t);return Zs(e.get(1)===this.ii.projectId),Zs(!e.get(3)&&!this.ii.database||e.get(3)===this.ii.database),new Xr(this.Ti(e))},Bs.prototype.Ei=function(t){return this._i(t)},Bs.prototype.Ii=function(t){var e=this.di(t);return 4===e.length?Cr.G:this.Ti(e)},Object.defineProperty(Bs.prototype,\"wi\",{get:function(){return new Cr([\"projects\",this.ii.projectId,\"databases\",this.ii.database]).j()},enumerable:!0,configurable:!0}),Bs.prototype.li=function(t){return new Cr([\"projects\",t.projectId,\"databases\",t.database])},Bs.prototype.Ti=function(t){return Zs(4<t.length&&\"documents\"===t.get(4)),t.k(5)},Bs.prototype.Ri=function(t,e){return{name:this.fi(t),fields:e.proto.mapValue.fields}},Bs.prototype.mi=function(t){return{name:this.fi(t.key),fields:t.Mt().mapValue.fields,updateTime:this.C(t.version.C())}},Bs.prototype.Ai=function(t,e){var n=this.Z(t.name),r=this.fromVersion(t.updateTime),i=new Ki({mapValue:{fields:t.fields}});return new To(n,r,i,{hasCommittedMutations:!!e})},Bs.prototype.Pi=function(t){Zs(!!t.found),t.found.name,t.found.updateTime;var e=this.Z(t.found.name),n=this.fromVersion(t.found.updateTime),r=new Ki({mapValue:{fields:t.found.fields}});return new To(e,n,r,{})},Bs.prototype.Vi=function(t){Zs(!!t.missing),Zs(!!t.readTime);var e=this.Z(t.missing),n=this.fromVersion(t.readTime);return new Io(e,n)},Bs.prototype.gi=function(t){return\"found\"in t?this.Pi(t):\"missing\"in t?this.Vi(t):Js()},Bs.prototype.pi=function(t){var e;if(\"targetChange\"in t){t.targetChange;var n=this.yi(t.targetChange.targetChangeType||\"NO_CHANGE\"),r=t.targetChange.targetIds||[],i=this.ci(t.targetChange.resumeToken),o=t.targetChange.cause,s=o&&this.ni(o);e=new Ts(n,r,i,s||null)}else if(\"documentChange\"in t){t.documentChange;var u=t.documentChange;u.document,u.document.name,u.document.updateTime;var a=this.Z(u.document.name),h=this.fromVersion(u.document.updateTime),c=new Ki({mapValue:{fields:u.document.fields}}),f=new To(a,h,c,{}),l=u.targetIds||[],p=u.removedTargetIds||[];e=new bs(l,p,f.key,f)}else if(\"documentDelete\"in t){t.documentDelete;var d=t.documentDelete;d.document;var y=this.Z(d.document),v=d.readTime?this.fromVersion(d.readTime):Pr.min(),m=new Io(y,v),g=d.removedTargetIds||[];e=new bs([],g,m.key,m)}else if(\"documentRemove\"in t){t.documentRemove;var w=t.documentRemove;w.document;var b=this.Z(w.document),E=w.removedTargetIds||[];e=new bs([],E,b,null)}else{if(!(\"filter\"in t))return Js();t.filter;var T=t.filter;T.targetId;var I=T.count||0,N=new ho(I),_=T.targetId;e=new Es(_,N)}return e},Bs.prototype.yi=function(t){return\"NO_CHANGE\"===t?0:\"ADD\"===t?1:\"REMOVE\"===t?2:\"CURRENT\"===t?3:\"RESET\"===t?4:Js()},Bs.prototype.bi=function(t){if(!(\"targetChange\"in t))return Pr.min();var e=t.targetChange;return e.targetIds&&e.targetIds.length||!e.readTime?Pr.min():this.fromVersion(e.readTime)},Bs.prototype.vi=function(t){var e,n=this;if(t instanceof Gi)e={update:this.Ri(t.key,t.value)};else if(t instanceof Qi)e={delete:this.fi(t.key)};else if(t instanceof zi)e={update:this.Ri(t.key,t.data),updateMask:this.Si(t.Vt)};else if(t instanceof Wi)e={transform:{document:this.fi(t.key),fieldTransforms:t.fieldTransforms.map(function(t){return n.Di(t)})}};else{if(!(t instanceof Hi))return Js();e={verify:this.fi(t.key)}}return t.Rt.Tt||(e.currentDocument=this.Ci(t.Rt)),e},Bs.prototype.Fi=function(t){var e=this,n=t.currentDocument?this.Ni(t.currentDocument):Fi.ft();if(t.update){t.update.name;var r=this.Z(t.update.name),i=new Ki({mapValue:{fields:t.update.fields}});if(t.updateMask){var o=this.$i(t.updateMask);return new zi(r,i,o,n)}return new Gi(r,i,n)}if(t.delete){var s=this.Z(t.delete);return new Qi(s,n)}if(t.transform){var u=this.Z(t.transform.document),a=t.transform.fieldTransforms.map(function(t){return e.ki(t)});return Zs(!0===n.exists),new Wi(u,a)}if(t.verify){var h=this.Z(t.verify);return new Hi(h,n)}return Js()},Bs.prototype.Ci=function(t){return void 0!==t.updateTime?{updateTime:this.toVersion(t.updateTime)}:void 0!==t.exists?{exists:t.exists}:Js()},Bs.prototype.Ni=function(t){return void 0!==t.updateTime?Fi.updateTime(this.fromVersion(t.updateTime)):void 0!==t.exists?Fi.exists(t.exists):Fi.ft()},Bs.prototype.Mi=function(t,e){var n=t.updateTime?this.fromVersion(t.updateTime):this.fromVersion(e);n.isEqual(Pr.min())&&(n=this.fromVersion(e));var r=null;return t.transformResults&&0<t.transformResults.length&&(r=t.transformResults),new Vi(n,r)},Bs.prototype.Li=function(t,e){var n=this;return t&&0<t.length?(Zs(void 0!==e),t.map(function(t){return n.Mi(t,e)})):[]},Bs.prototype.Di=function(t){var e=t.transform;if(e instanceof Ni)return{fieldPath:t.field.j(),setToServerValue:\"REQUEST_TIME\"};if(e instanceof Ai)return{fieldPath:t.field.j(),appendMissingElements:{values:e.elements}};if(e instanceof Si)return{fieldPath:t.field.j(),removeAllFromArray:{values:e.elements}};if(e instanceof Di)return{fieldPath:t.field.j(),increment:e.ct};throw Js()},Bs.prototype.ki=function(t){var e=null;if(\"setToServerValue\"in t)Zs(\"REQUEST_TIME\"===t.setToServerValue),e=Ni.instance;else if(\"appendMissingElements\"in t){var n=t.appendMissingElements.values||[];e=new Ai(n)}else if(\"removeAllFromArray\"in t){var r=t.removeAllFromArray.values||[];e=new Si(r)}else\"increment\"in t?e=new Di(this,t.increment):Js();var i=Kr.X(t.fieldPath);return new qi(i,e)},Bs.prototype.Oi=function(t){return{documents:[this.Ei(t.path)]}},Bs.prototype.xi=function(t){Zs(1===t.documents.length);var e=t.documents[0];return Ao.Wt(this.Ii(e)).ee()},Bs.prototype.Bi=function(t){var e={structuredQuery:{}},n=t.path;null!==t.collectionGroup?(e.parent=this.Ei(n),e.structuredQuery.from=[{collectionId:t.collectionGroup,allDescendants:!0}]):(e.parent=this.Ei(n.M()),e.structuredQuery.from=[{collectionId:n.O()}]);var r=this.qi(t.filters);r&&(e.structuredQuery.where=r);var i=this.Ui(t.orderBy);i&&(e.structuredQuery.orderBy=i);var o=this.ri(t.limit);return null!==o&&(e.structuredQuery.limit=o),t.startAt&&(e.structuredQuery.startAt=this.Qi(t.startAt)),t.endAt&&(e.structuredQuery.endAt=this.Qi(t.endAt)),e},Bs.prototype.Wi=function(t){var e=this.Ii(t.parent),n=t.structuredQuery,r=n.from?n.from.length:0,i=null;if(0<r){Zs(1===r);var o=n.from[0];o.allDescendants?i=o.collectionId:e=e.child(o.collectionId)}var s=[];n.where&&(s=this.ji(n.where));var u=[];n.orderBy&&(u=this.Ki(n.orderBy));var a=null;n.limit&&(a=this.oi(n.limit));var h=null;n.startAt&&(h=this.Gi(n.startAt));var c=null;return n.endAt&&(c=this.Gi(n.endAt)),new Ao(e,i,u,s,a,\"F\",h,c).ee()},Bs.prototype.zi=function(t){var e=this.Hi(t.Te);return null==e?null:{\"goog-listen-tags\":e}},Bs.prototype.Hi=function(t){switch(t){case 0:return null;case 1:return\"existence-filter-mismatch\";case 2:return\"limbo-document\";default:return Js()}},Bs.prototype.ee=function(t){var e,n=t.target;return(e=n.Ot()?{documents:this.Oi(n)}:{query:this.Bi(n)}).targetId=t.targetId,0<t.resumeToken.rt()&&(e.resumeToken=this.ui(t.resumeToken)),e},Bs.prototype.qi=function(t){var e=this;if(0!==t.length){var n=t.map(function(t){return t instanceof So?e.Yi(t):Js()});return 1===n.length?n[0]:{compositeFilter:{op:\"AND\",filters:n}}}},Bs.prototype.ji=function(t){var e=this;return t?void 0!==t.unaryFilter?[this.Ji(t)]:void 0!==t.fieldFilter?[this.Xi(t)]:void 0!==t.compositeFilter?t.compositeFilter.filters.map(function(t){return e.ji(t)}).reduce(function(t,e){return t.concat(e)}):Js():[]},Bs.prototype.Ui=function(t){var e=this;if(0!==t.length)return t.map(function(t){return e.Zi(t)})},Bs.prototype.Ki=function(t){var e=this;return t.map(function(t){return e.tn(t)})},Bs.prototype.Qi=function(t){return{before:t.before,values:t.position}},Bs.prototype.Gi=function(t){var e=!!t.before,n=t.values||[];return new Vo(n,e)},Bs.prototype.en=function(t){return Us[t]},Bs.prototype.sn=function(t){switch(t){case\"ASCENDING\":return\"asc\";case\"DESCENDING\":return\"desc\";default:return}},Bs.prototype.nn=function(t){return qs[t]},Bs.prototype.rn=function(t){switch(t){case\"EQUAL\":return\"==\";case\"GREATER_THAN\":return\">\";case\"GREATER_THAN_OR_EQUAL\":return\">=\";case\"LESS_THAN\":return\"<\";case\"LESS_THAN_OR_EQUAL\":return\"<=\";case\"ARRAY_CONTAINS\":return\"array-contains\";case\"IN\":return\"in\";case\"ARRAY_CONTAINS_ANY\":return\"array-contains-any\";case\"OPERATOR_UNSPECIFIED\":default:return Js()}},Bs.prototype.hn=function(t){return{fieldPath:t.j()}},Bs.prototype.on=function(t){return Kr.X(t.fieldPath)},Bs.prototype.Zi=function(t){return{field:this.hn(t.field),direction:this.en(t.dir)}},Bs.prototype.tn=function(t){return new Po(this.on(t.field),this.sn(t.direction))},Bs.prototype.Xi=function(t){return So.create(this.on(t.fieldFilter.field),this.rn(t.fieldFilter.op),t.fieldFilter.value)},Bs.prototype.Yi=function(t){if(\"==\"===t.op){if(Ti(t.value))return{unaryFilter:{field:this.hn(t.field),op:\"IS_NAN\"}};if(Ei(t.value))return{unaryFilter:{field:this.hn(t.field),op:\"IS_NULL\"}}}return{fieldFilter:{field:this.hn(t.field),op:this.nn(t.op),value:t.value}}},Bs.prototype.Ji=function(t){switch(t.unaryFilter.op){case\"IS_NAN\":var e=this.on(t.unaryFilter.field);return So.create(e,\"==\",{doubleValue:NaN});case\"IS_NULL\":var n=this.on(t.unaryFilter.field);return So.create(n,\"==\",{nullValue:\"NULL_VALUE\"});case\"OPERATOR_UNSPECIFIED\":default:return Js()}},Bs.prototype.Si=function(t){var e=[];return t.fields.forEach(function(t){return e.push(t.j())}),{fieldPaths:e}},Bs.prototype.$i=function(t){var e=t.fieldPaths||[];return new Ui(e.map(function(t){return Kr.X(t)}))},Bs);function Bs(t,e){this.ii=t,this.options=e}function Gs(t){return 4<=t.length&&\"projects\"===t.get(0)&&\"databases\"===t.get(2)}var zs=(Qs.an=function(t){Qs.platform&&Js(),Qs.platform=t},Qs.nt=function(){return Qs.platform||Js(),Qs.platform},Qs),Ws=new h(\"@firebase/firestore\");function Qs(){}function Hs(){return Ws.logLevel}function Ks(t){Ws.logLevel=t}function Ys(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];if(Ws.logLevel<=l.DEBUG){var r=e.map($s);Ws.debug.apply(Ws,i([\"Firestore (\"+Er+\"): \"+t],r))}}function Xs(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];if(Ws.logLevel<=l.ERROR){var r=e.map($s);Ws.error.apply(Ws,i([\"Firestore (\"+Er+\"): \"+t],r))}}function $s(t){if(\"string\"==typeof t)return t;var e=zs.nt();try{return e.un(t)}catch(e){return t}}function Js(t){void 0===t&&(t=\"Unexpected state\");var e=\"FIRESTORE (\"+Er+\") INTERNAL ASSERTION FAILED: \"+t;throw Xs(e),new Error(e)}function Zs(t){t||Js()}function tu(t){return t}var eu=(nu.cn=function(){for(var t=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\",e=Math.floor(256/t.length)*t.length,n=\"\";n.length<20;)for(var r=zs.nt()._n(40),i=0;i<r.length;++i)n.length<20&&r[i]<e&&(n+=t.charAt(r[i]%t.length));return n},nu);function nu(){}function ru(t,e){return t<e?-1:e<t?1:0}function iu(t,n,r){return t.length===n.length&&t.every(function(t,e){return r(t,n[e])})}function ou(t){return t+\"\\0\"}function su(t,e,n,r,i){this.ii=t,this.persistenceKey=e,this.host=n,this.ssl=r,this.forceLongPolling=i}var uu=(Object.defineProperty(Su.prototype,\"ln\",{get:function(){return\"(default)\"===this.database},enumerable:!0,configurable:!0}),Su.prototype.isEqual=function(t){return t instanceof Su&&t.projectId===this.projectId&&t.database===this.database},Su.prototype.S=function(t){return ru(this.projectId,t.projectId)||ru(this.database,t.database)},Su),au=(Au.prototype.get=function(t){var e=this.dn(t),n=this.fn[e];if(void 0!==n)for(var r=0,i=n;r<i.length;r++){var o=i[r],s=o[0],u=o[1];if(s.isEqual(t))return u}},Au.prototype.has=function(t){return void 0!==this.get(t)},Au.prototype.set=function(t,e){var n=this.dn(t),r=this.fn[n];if(void 0!==r){for(var i=0;i<r.length;i++)if(r[i][0].isEqual(t))return void(r[i]=[t,e]);r.push([t,e])}else this.fn[n]=[[t,e]]},Au.prototype.delete=function(t){var e=this.dn(t),n=this.fn[e];if(void 0===n)return!1;for(var r=0;r<n.length;r++)if(n[r][0].isEqual(t))return 1===n.length?delete this.fn[e]:n.splice(r,1),!0;return!1},Au.prototype.forEach=function(u){Zr(this.fn,function(t,e){for(var n=0,r=e;n<r.length;n++){var i=r[n],o=i[0],s=i[1];u(o,s)}})},Au.prototype.B=function(){return ti(this.fn)},Au),hu=(_u.prototype.at=function(t,e,n){for(var r=n.En,i=0;i<this.mutations.length;i++){var o=this.mutations[i];if(o.key.isEqual(t)){var s=r[i];e=o.at(e,s)}}return e},_u.prototype.ot=function(t,e){for(var n=0,r=this.baseMutations;n<r.length;n++){var i=r[n];i.key.isEqual(t)&&(e=i.ot(e,e,this.Tn))}for(var o=e,s=0,u=this.mutations;s<u.length;s++){var a=u[s];a.key.isEqual(t)&&(e=a.ot(e,o,this.Tn))}return e},_u.prototype.In=function(n){var r=this,i=n;return this.mutations.forEach(function(t){var e=r.ot(t.key,n.get(t.key));e&&(i=i.me(t.key,e))}),i},_u.prototype.keys=function(){return this.mutations.reduce(function(t,e){return t.add(e.key)},ms())},_u.prototype.isEqual=function(t){return this.batchId===t.batchId&&iu(this.mutations,t.mutations,function(t,e){return t.isEqual(e)})&&iu(this.baseMutations,t.baseMutations,function(t,e){return t.isEqual(e)})},_u),cu=(Nu.from=function(t,e,n,r){Zs(t.mutations.length===n.length);for(var i=ys(),o=t.mutations,s=0;s<o.length;s++)i=i.me(o[s].key,n[s].version);return new Nu(t,e,n,r,i)},Nu),fu=(Iu.prototype.catch=function(t){return this.next(void 0,t)},Iu.prototype.next=function(r,i){var o=this;return this.Vn&&Js(),this.Vn=!0,this.Pn?this.error?this.gn(i,this.error):this.pn(r,this.result):new Iu(function(e,n){o.mn=function(t){o.pn(r,t).next(e,n)},o.An=function(t){o.gn(i,t).next(e,n)}})},Iu.prototype.yn=function(){var n=this;return new Promise(function(t,e){n.next(t,e)})},Iu.prototype.bn=function(t){try{var e=t();return e instanceof Iu?e:Iu.resolve(e)}catch(t){return Iu.reject(t)}},Iu.prototype.pn=function(t,e){return t?this.bn(function(){return t(e)}):Iu.resolve(e)},Iu.prototype.gn=function(t,e){return t?this.bn(function(){return t(e)}):Iu.reject(e)},Iu.resolve=function(n){return new Iu(function(t,e){t(n)})},Iu.reject=function(n){return new Iu(function(t,e){e(n)})},Iu.vn=function(t){return new Iu(function(e,n){var r=0,i=0,o=!1;t.forEach(function(t){++r,t.next(function(){++i,o&&i===r&&e()},function(t){return n(t)})}),o=!0,i===r&&e()})},Iu.Sn=function(t){for(var n=Iu.resolve(!1),e=function(e){n=n.next(function(t){return t?Iu.resolve(t):e()})},r=0,i=t;r<i.length;r++)e(i[r]);return n},Iu.forEach=function(t,n){var r=this,i=[];return t.forEach(function(t,e){i.push(n.call(r,t,e))}),this.vn(i)},Iu),lu=(Object.defineProperty(Tu.prototype,\"readTime\",{get:function(){return this.Fn},set:function(t){this.Fn=t},enumerable:!0,configurable:!0}),Tu.prototype.Nn=function(t,e){this.$n(),this.readTime=e,this.Dn.set(t.key,t)},Tu.prototype.kn=function(t,e){this.$n(),e&&(this.readTime=e),this.Dn.set(t,null)},Tu.prototype.Mn=function(t,e){this.$n();var n=this.Dn.get(e);return void 0!==n?fu.resolve(n):this.Ln(t,e)},Tu.prototype.getEntries=function(t,e){return this.On(t,e)},Tu.prototype.apply=function(t){return this.$n(),this.Cn=!0,this.xn(t)},Tu.prototype.$n=function(){},Tu),pu=\"The current tab is not in the required state to perform this operation. It might be necessary to refresh the browser tab.\",du=(Eu.prototype.qn=function(t){this.Bn.push(t)},Eu.prototype.Un=function(){this.Bn.forEach(function(t){return t()})},Eu),yu=(bu.prototype.Kn=function(e,n){var r=this;return this.Wn.Gn(e,n).next(function(t){return r.zn(e,n,t)})},bu.prototype.zn=function(t,r,i){return this.Qn.Mn(t,r).next(function(t){for(var e=0,n=i;e<n.length;e++)t=n[e].ot(r,t);return t})},bu.prototype.Hn=function(t,e,i){var o=fs();return e.forEach(function(t,e){for(var n=0,r=i;n<r.length;n++)e=r[n].ot(t,e);o=o.me(t,e)}),o},bu.prototype.Yn=function(e,t){var n=this;return this.Qn.getEntries(e,t).next(function(t){return n.Jn(e,t)})},bu.prototype.Jn=function(r,i){var o=this;return this.Wn.Xn(r,i).next(function(t){var e=o.Hn(r,i,t),n=cs();return e.forEach(function(t,e){e=e||new Io(t,Pr.min()),n=n.me(t,e)}),n})},bu.prototype.Zn=function(t,e,n){return e.Ot()?this.tr(t,e.path):e._e()?this.er(t,e,n):this.sr(t,e,n)},bu.prototype.tr=function(t,e){return this.Kn(t,new Xr(e)).next(function(t){var e=ps();return t instanceof To&&(e=e.me(t.key,t)),e})},bu.prototype.er=function(n,r,i){var o=this,s=r.collectionGroup,u=ps();return this.jn.ir(n,s).next(function(t){return fu.forEach(t,function(t){var e=r.Zt(t.child(s));return o.sr(n,e,i).next(function(t){t.forEach(function(t,e){u=u.me(t,e)})})}).next(function(){return u})})},bu.prototype.sr=function(e,n,t){var c,f,r=this;return this.Qn.Zn(e,n,t).next(function(t){return c=t,r.Wn.nr(e,n)}).next(function(t){return f=t,r.rr(e,f,c).next(function(t){c=t;for(var e=0,n=f;e<n.length;e++)for(var r=n[e],i=0,o=r.mutations;i<o.length;i++){var s=o[i],u=s.key,a=c.get(u),h=s.ot(a,a,r.Tn);c=h instanceof To?c.me(u,h):c.remove(u)}})}).next(function(){return c.forEach(function(t,e){n.matches(e)||(c=c.remove(t))}),c})},bu.prototype.rr=function(t,e,n){for(var r=ms(),i=0,o=e;i<o.length;i++)for(var s=0,u=o[i].mutations;s<u.length;s++){var a=u[s];a instanceof zi&&null===n.get(a.key)&&(r=r.add(a.key))}var h=n;return this.Qn.getEntries(t,r).next(function(t){return t.forEach(function(t,e){null!==e&&e instanceof To&&(h=h.me(t,e))}),h})},bu),vu=(wu.ar=function(t,e){for(var n=ms(),r=ms(),i=0,o=e.docChanges;i<o.length;i++){var s=o[i];switch(s.type){case 0:n=n.add(s.doc.key);break;case 1:r=r.add(s.doc.key)}}return new wu(t,e.fromCache,n,r)},wu),mu=(gu.prototype.cr=function(t){return this.previousValue=Math.max(t,this.previousValue),this.previousValue},gu.prototype.next=function(){var t=++this.previousValue;return this._r&&this._r(t),t},gu);function gu(t,e){var n=this;this.previousValue=t,e&&(e.ur=function(t){return n.cr(t)},this._r=function(t){return e.lr(t)})}function wu(t,e,n,r){this.targetId=t,this.fromCache=e,this.hr=n,this.or=r}function bu(t,e,n){this.Qn=t,this.Wn=e,this.jn=n}function Eu(){this.Bn=[]}function Tu(){this.Dn=new au(function(t){return t.toString()}),this.Cn=!1}function Iu(t){var e=this;this.mn=null,this.An=null,this.result=void 0,this.error=void 0,this.Pn=!1,this.Vn=!1,t(function(t){e.Pn=!0,e.result=t,e.mn&&e.mn(t)},function(t){e.Pn=!0,e.error=t,e.An&&e.An(t)})}function Nu(t,e,n,r,i){this.batch=t,this.wn=e,this.En=n,this.streamToken=r,this.Rn=i}function _u(t,e,n,r){this.batchId=t,this.Tn=e,this.baseMutations=n,this.mutations=r}function Au(t){this.dn=t,this.fn={}}function Su(t,e){this.projectId=t,this.database=e||\"(default)\"}mu.dr=-1;function Du(){var n=this;this.promise=new Promise(function(t,e){n.resolve=t,n.reject=e})}var ku=(xu.prototype.reset=function(){this.mr=0},xu.prototype.Vr=function(){this.mr=this.Rr},xu.prototype.gr=function(t){var e=this;this.cancel();var n=Math.floor(this.mr+this.pr()),r=Math.max(0,Date.now()-this.Pr),i=Math.max(0,n-r);0<i&&Ys(\"ExponentialBackoff\",\"Backing off for \"+i+\" ms (base delay: \"+this.mr+\" ms, delay with jitter: \"+n+\" ms, last attempt: \"+r+\" ms ago)\"),this.Ar=this.Tr.yr(this.Er,i,function(){return e.Pr=Date.now(),t()}),this.mr*=this.wr,this.mr<this.Ir&&(this.mr=this.Ir),this.mr>this.Rr&&(this.mr=this.Rr)},xu.prototype.cancel=function(){null!==this.Ar&&(this.Ar.cancel(),this.Ar=null)},xu.prototype.pr=function(){return(Math.random()-.5)*this.mr},xu);function xu(t,e,n,r,i){void 0===n&&(n=1e3),void 0===r&&(r=1.5),void 0===i&&(i=6e4),this.Tr=t,this.Er=e,this.Ir=n,this.wr=r,this.Rr=i,this.mr=0,this.Ar=null,this.Pr=Date.now(),this.reset()}function Ou(t){for(var e=\"\",n=0;n<t.length;n++)0<e.length&&(e=Vu(e)),e=Ru(t.get(n),e);return Vu(e)}function Ru(t,e){for(var n=e,r=t.length,i=0;i<r;i++){var o=t.charAt(i);switch(o){case\"\\0\":n+=\"\u0001\u0010\";break;case\"\u0001\":n+=\"\u0001\u0011\";break;default:n+=o}}return n}function Vu(t){return t+\"\u0001\u0001\"}function Pu(t){var e=t.length;if(Zs(2<=e),2===e)return Zs(\"\u0001\"===t.charAt(0)&&\"\u0001\"===t.charAt(1)),Cr.G;for(var n=e-2,r=[],i=\"\",o=0;o<e;){var s=t.indexOf(\"\u0001\",o);switch((s<0||n<s)&&Js(),t.charAt(s+1)){case\"\u0001\":var u=t.substring(o,s),a=void 0;0===i.length?a=u:(a=i+=u,i=\"\"),r.push(a);break;case\"\u0010\":i+=t.substring(o,s),i+=\"\\0\";break;case\"\u0011\":i+=t.substring(o,s+1);break;default:Js()}o=s+2}return new Cr(r)}var Lu=(qu.prototype.vr=function(t,e){return this.br.add(e),fu.resolve()},qu.prototype.ir=function(t,e){return fu.resolve(this.br.getEntries(e))},qu),Cu=(Uu.prototype.add=function(t){var e=t.O(),n=t.M(),r=this.index[e]||new os(Cr.N),i=!r.has(n);return this.index[e]=r.add(n),i},Uu.prototype.has=function(t){var e=t.O(),n=t.M(),r=this.index[e];return r&&r.has(n)},Uu.prototype.getEntries=function(t){return(this.index[t]||new os(Cr.N)).W()},Uu),Mu=(ju.prototype.vr=function(t,e){var n=this;if(this.Sr.has(e))return fu.resolve();var r=e.O(),i=e.M();t.qn(function(){n.Sr.add(e)});var o={collectionId:r,parent:Ou(i)};return Fu(t).put(o)},ju.prototype.ir=function(t,i){var o=[],e=IDBKeyRange.bound([i,\"\"],[ou(i),\"\"],!1,!0);return Fu(t).Dr(e).next(function(t){for(var e=0,n=t;e<n.length;e++){var r=n[e];if(r.collectionId!==i)break;o.push(Pu(r.parent))}return o})},ju);function ju(){this.Sr=new Cu}function Uu(){this.index={}}function qu(){this.br=new Cu}function Fu(t){return aa.Cr(t,qa.store)}var Bu,Gu=(zu.prototype.Nn=function(t,e,n){return Qu(t).put(Hu(e),n)},zu.prototype.kn=function(t,e){var n=Qu(t),r=Hu(e);return n.delete(r)},zu.prototype.updateMetadata=function(e,n){var r=this;return this.getMetadata(e).next(function(t){return t.byteSize+=n,r.Fr(e,t)})},zu.prototype.Mn=function(t,e){var n=this;return Qu(t).get(Hu(e)).next(function(t){return n.Nr(t)})},zu.prototype.$r=function(t,e){var n=this;return Qu(t).get(Hu(e)).next(function(t){var e=n.Nr(t);return e?{kr:e,size:Ku(t)}:null})},zu.prototype.getEntries=function(t,e){var r=this,i=fs();return this.Mr(t,e,function(t,e){var n=r.Nr(e);i=i.me(t,n)}).next(function(){return i})},zu.prototype.Lr=function(t,e){var r=this,i=fs(),o=new Jo(Xr.N);return this.Mr(t,e,function(t,e){var n=r.Nr(e);o=n?(i=i.me(t,n),o.me(t,Ku(e))):(i=i.me(t,null),o.me(t,0))}).next(function(){return{Or:i,xr:o}})},zu.prototype.Mr=function(t,e,i){if(e.B())return fu.resolve();var n=IDBKeyRange.bound(e.first().path.W(),e.last().path.W()),o=e.be(),s=o.Ne();return Qu(t).Br({range:n},function(t,e,n){for(var r=Xr.st(t);s&&Xr.N(s,r)<0;)i(s,null),s=o.Ne();s&&s.isEqual(r)&&(i(s,e),s=o.$e()?o.Ne():null),s?n.qr(s.path.W()):n.done()}).next(function(){for(;s;)i(s,null),s=o.$e()?o.Ne():null})},zu.prototype.Zn=function(t,i,e){var o=this,s=ps(),u=i.path.length+1,n={};if(e.isEqual(Pr.min())){var r=i.path.W();n.range=IDBKeyRange.lowerBound(r)}else{var a=i.path.W(),h=this.serializer.Ur(e);n.range=IDBKeyRange.lowerBound([a,h],!0),n.index=La.collectionReadTimeIndex}return Qu(t).Br(n,function(t,e,n){if(t.length===u){var r=o.serializer.Qr(e);i.path.q(r.key.path)?r instanceof To&&i.matches(r)&&(s=s.me(r.key,r)):n.done()}}).next(function(){return s})},zu.prototype.Wr=function(t,e){var r=this,i=cs(),o=this.serializer.Ur(e),n=Qu(t),s=IDBKeyRange.lowerBound(o,!0);return n.Br({index:La.readTimeIndex,range:s},function(t,e){var n=r.serializer.Qr(e);i=i.me(n.key,n),o=e.readTime}).next(function(){return{jr:i,readTime:r.serializer.Kr(o)}})},zu.prototype.Gr=function(t){var r=this,e=Qu(t),i=Pr.min();return e.Br({index:La.readTimeIndex,reverse:!0},function(t,e,n){e.readTime&&(i=r.serializer.Kr(e.readTime)),n.done()}).next(function(){return i})},zu.prototype.zr=function(t){return new zu.Hr(this,!!t&&t.Yr)},zu.prototype.Jr=function(t){return this.getMetadata(t).next(function(t){return t.byteSize})},zu.prototype.getMetadata=function(t){return Wu(t).get(Ca.key).next(function(t){return Zs(!!t),t})},zu.prototype.Fr=function(t,e){return Wu(t).put(Ca.key,e)},zu.prototype.Nr=function(t){if(t){var e=this.serializer.Qr(t);return e instanceof Io&&e.version.isEqual(Pr.min())?null:e}return null},zu);function zu(t,e){this.serializer=t,this.jn=e}function Wu(t){return aa.Cr(t,Ca.store)}function Qu(t){return aa.Cr(t,La.store)}function Hu(t){return t.path.W()}function Ku(t){var e;if(t.document)e=t.document;else if(t.unknownDocument)e=t.unknownDocument;else{if(!t.noDocument)throw Js();e=t.noDocument}return JSON.stringify(e).length}function Yu(t,e){var n=this;return(n=Bu.call(this)||this).Xr=t,n.Yr=e,n.Zr=new au(function(t){return t.toString()}),n}Gu.Hr=(n(Yu,Bu=lu),Yu.prototype.xn=function(s){var u=this,a=[],h=0,c=new os(function(t,e){return ru(t.j(),e.j())});return this.Dn.forEach(function(t,e){var n=u.Zr.get(t);if(e){var r=u.Xr.serializer.th(e,u.readTime);c=c.add(t.path.M());var i=Ku(r);h+=i-n,a.push(u.Xr.Nn(s,t,r))}else if(h-=n,u.Yr){var o=u.Xr.serializer.th(new Io(t,Pr.min()),u.readTime);a.push(u.Xr.Nn(s,t,o))}else a.push(u.Xr.kn(s,t))}),c.forEach(function(t){a.push(u.Xr.jn.vr(s,t))}),a.push(this.Xr.updateMetadata(s,h)),fu.vn(a)},Yu.prototype.Ln=function(t,e){var n=this;return this.Xr.$r(t,e).next(function(t){return null===t?(n.Zr.set(e,0),null):(n.Zr.set(e,t.size),t.kr)})},Yu.prototype.On=function(t,e){var n=this;return this.Xr.Lr(t,e).next(function(t){var e=t.Or;return t.xr.forEach(function(t,e){n.Zr.set(t,e)}),e})},Yu);var Xu=(Zu.prototype.next=function(){return this.eh+=2,this.eh},Zu.sh=function(){return new Zu(0)},Zu.ih=function(){return new Zu(-1)},Zu),$u=(Ju.prototype.rh=function(n){var r=this;return this.hh(n).next(function(t){var e=new Xu(t.highestTargetId);return t.highestTargetId=e.next(),r.oh(n,t).next(function(){return t.highestTargetId})})},Ju.prototype.ah=function(t){return this.hh(t).next(function(t){return Pr.v(new Vr(t.lastRemoteSnapshotVersion.seconds,t.lastRemoteSnapshotVersion.nanoseconds))})},Ju.prototype.uh=function(t){return na(t._h)},Ju.prototype.lh=function(e,n,r){var i=this;return this.hh(e).next(function(t){return t.highestListenSequenceNumber=n,r&&(t.lastRemoteSnapshotVersion=r.C()),n>t.highestListenSequenceNumber&&(t.highestListenSequenceNumber=n),i.oh(e,t)})},Ju.prototype.dh=function(e,n){var r=this;return this.fh(e,n).next(function(){return r.hh(e).next(function(t){return t.targetCount+=1,r.Th(n,t),r.oh(e,t)})})},Ju.prototype.Eh=function(t,e){return this.fh(t,e)},Ju.prototype.Ih=function(e,t){var n=this;return this.wh(e,t.targetId).next(function(){return ta(e).delete(t.targetId)}).next(function(){return n.hh(e)}).next(function(t){return Zs(0<t.targetCount),--t.targetCount,n.oh(e,t)})},Ju.prototype.Rh=function(r,i,o){var s=this,u=0,a=[];return ta(r).Br(function(t,e){var n=s.serializer.mh(e);n.sequenceNumber<=i&&null===o.get(n.targetId)&&(u++,a.push(s.Ih(r,n)))}).next(function(){return fu.vn(a)}).next(function(){return u})},Ju.prototype.js=function(t,r){var i=this;return ta(t).Br(function(t,e){var n=i.serializer.mh(e);r(n)})},Ju.prototype.hh=function(t){return ea(t._h)},Ju.prototype.oh=function(t,e){return aa.Cr(t,Ua.store).put(Ua.key,e)},Ju.prototype.fh=function(t,e){return ta(t).put(this.serializer.Ah(e))},Ju.prototype.Th=function(t,e){var n=!1;return t.targetId>e.highestTargetId&&(e.highestTargetId=t.targetId,n=!0),t.sequenceNumber>e.highestListenSequenceNumber&&(e.highestListenSequenceNumber=t.sequenceNumber,n=!0),n},Ju.prototype.Ph=function(t){return this.hh(t).next(function(t){return t.targetCount})},Ju.prototype.Vh=function(t,i){var o=this,e=i.canonicalId(),n=IDBKeyRange.bound([e,Number.NEGATIVE_INFINITY],[e,Number.POSITIVE_INFINITY]),s=null;return ta(t).Br({range:n,index:Ma.queryTargetsIndexName},function(t,e,n){var r=o.serializer.mh(e);i.isEqual(r.target)&&(s=r,n.done())}).next(function(){return s})},Ju.prototype.gh=function(n,t,r){var i=this,o=[],s=ra(n);return t.forEach(function(t){var e=Ou(t.path);o.push(s.put(new ja(r,e))),o.push(i.nh.ph(n,r,t))}),fu.vn(o)},Ju.prototype.yh=function(n,t,r){var i=this,o=ra(n);return fu.forEach(t,function(t){var e=Ou(t.path);return fu.vn([o.delete([r,e]),i.nh.bh(n,r,t)])})},Ju.prototype.wh=function(t,e){var n=ra(t),r=IDBKeyRange.bound([e],[e+1],!1,!0);return n.delete(r)},Ju.prototype.vh=function(t,e){var n=IDBKeyRange.bound([e],[e+1],!1,!0),r=ra(t),o=ms();return r.Br({range:n,Sh:!0},function(t,e,n){var r=Pu(t[1]),i=new Xr(r);o=o.add(i)}).next(function(){return o})},Ju.prototype.Dh=function(t,e){var n=Ou(e.path),r=IDBKeyRange.bound([n],[ou(n)],!1,!0),i=0;return ra(t).Br({index:ja.documentTargetsIndex,Sh:!0,range:r},function(t,e,n){var r=t[0];t[1],0!==r&&(i++,n.done())}).next(function(){return 0<i})},Ju.prototype.si=function(t,e){var n=this;return ta(t).get(e).next(function(t){return t?n.serializer.mh(t):null})},Ju);function Ju(t,e){this.nh=t,this.serializer=e}function Zu(t){this.eh=t}function ta(t){return aa.Cr(t,Ma.store)}function ea(t){return Wa.Cr(t,Ua.store).get(Ua.key).next(function(t){return Zs(null!==t),t})}function na(t){return ea(t).next(function(t){return t.highestListenSequenceNumber})}function ra(t){return aa.Cr(t,ja.store)}var ia,oa=(fa.prototype.Qr=function(t){if(t.document)return this.Ch.Ai(t.document,!!t.hasCommittedMutations);if(t.noDocument){var e=Xr.st(t.noDocument.path),n=this.Fh(t.noDocument.readTime);return new Io(e,n,{hasCommittedMutations:!!t.hasCommittedMutations})}if(t.unknownDocument){var r=Xr.st(t.unknownDocument.path),i=this.Fh(t.unknownDocument.version);return new No(r,i)}return Js()},fa.prototype.th=function(t,e){var n=this.Ur(e),r=t.key.path.M().W();if(t instanceof To){var i=this.Ch.mi(t),o=t.hasCommittedMutations;return new La(null,null,i,o,n,r)}if(t instanceof Io){var s=t.key.path.W(),u=this.Nh(t.version),a=t.hasCommittedMutations;return new La(null,new Va(s,u),null,a,n,r)}if(t instanceof No){var h=t.key.path.W(),c=this.Nh(t.version);return new La(new Pa(h,c),null,null,!0,n,r)}return Js()},fa.prototype.Ur=function(t){var e=t.C();return[e.seconds,e.nanoseconds]},fa.prototype.Kr=function(t){var e=new Vr(t[0],t[1]);return Pr.v(e)},fa.prototype.Nh=function(t){var e=t.C();return new Aa(e.seconds,e.nanoseconds)},fa.prototype.Fh=function(t){var e=new Vr(t.seconds,t.nanoseconds);return Pr.v(e)},fa.prototype.$h=function(t,e){var n=this,r=e.baseMutations.map(function(t){return n.Ch.vi(t)}),i=e.mutations.map(function(t){return n.Ch.vi(t)});return new xa(t,e.batchId,e.Tn.toMillis(),r,i)},fa.prototype.kh=function(t){var e=this,n=(t.baseMutations||[]).map(function(t){return e.Ch.Fi(t)}),r=t.mutations.map(function(t){return e.Ch.Fi(t)}),i=Vr.fromMillis(t.localWriteTimeMs);return new hu(t.batchId,i,n,r)},fa.prototype.mh=function(t){var e,n=this.Fh(t.readTime),r=void 0!==t.lastLimboFreeSnapshotVersion?this.Fh(t.lastLimboFreeSnapshotVersion):Pr.min();return e=void 0!==t.query.documents?this.Ch.xi(t.query):this.Ch.Wi(t.query),new Lo(e,t.targetId,0,t.lastListenSequenceNumber,n,r,ei.fromBase64String(t.resumeToken))},fa.prototype.Ah=function(t){var e,n=this.Nh(t.Ee),r=this.Nh(t.lastLimboFreeSnapshotVersion);e=t.target.Ot()?this.Ch.Oi(t.target):this.Ch.Bi(t.target);var i=t.resumeToken.toBase64();return new Ma(t.targetId,t.target.canonicalId(),n,i,t.sequenceNumber,r,e)},fa),sa=\"Failed to obtain exclusive access to the persistence layer. To allow shared access, make sure to invoke `enablePersistence()` with `synchronizeTabs:true` in all tabs.\",ua=(n(ca,ia=du),ca),aa=(ha.Cr=function(t,e){if(t instanceof ua)return Wa.Cr(t._h,e);throw Js()},ha.prototype.start=function(){var e=this;return Wa.Yh(this.Kh,Na,new _a(this.serializer)).then(function(t){return e.Jh=t,e.Xh()}).then(function(){if(!e.isPrimary&&!e.allowTabSynchronization)throw new Dr(Sr.FAILED_PRECONDITION,sa);return e.Zh(),e.to(),e.eo(),e.Jh.runTransaction(\"readonly\",[Ua.store],function(t){return na(t)})}).then(function(t){e.Oh=new mu(t,e.Lh)}).then(function(){e.xh=!0}).catch(function(t){return e.Jh&&e.Jh.close(),Promise.reject(t)})},ha.prototype.so=function(n){var t=this;return this.Wh=function(e){return y(t,void 0,void 0,function(){return v(this,function(t){return this.io?[2,n(e)]:[2]})})},n(this.isPrimary)},ha.prototype.no=function(n){var t=this;this.Jh.ro(function(e){return y(t,void 0,void 0,function(){return v(this,function(t){switch(t.label){case 0:return null===e.newVersion?[4,n()]:[3,2];case 1:t.sent(),t.label=2;case 2:return[2]}})})})},ha.prototype.ho=function(t){var e=this;this.networkEnabled!==t&&(this.networkEnabled=t,this.Tr.oo(function(){return y(e,void 0,void 0,function(){return v(this,function(t){switch(t.label){case 0:return this.io?[4,this.Xh()]:[3,2];case 1:t.sent(),t.label=2;case 2:return[2]}})})}))},ha.prototype.Xh=function(){var n=this;return this.runTransaction(\"updateClientMetadataAndTryBecomePrimary\",\"readwrite\",function(e){return pa(e).put(new Ba(n.clientId,Date.now(),n.networkEnabled,n.inForeground)).next(function(){if(n.isPrimary)return n.ao(e).next(function(t){t||(n.isPrimary=!1,n.Tr.oo(function(){return n.Wh(!1)}))})}).next(function(){return n.uo(e)}).next(function(t){return n.isPrimary&&!t?n.co(e).next(function(){return!1}):!!t&&n._o(e).next(function(){return!0})})}).catch(function(t){if(n.allowTabSynchronization)return Ys(\"IndexedDbPersistence\",\"Releasing owner lease after error during lease refresh\",t),!1;if($a(t))return Ys(\"IndexedDbPersistence\",\"Failed to extend owner lease: \",t),n.isPrimary;throw t}).then(function(t){n.isPrimary!==t&&n.Tr.oo(function(){return n.Wh(t)}),n.isPrimary=t})},ha.prototype.ao=function(t){var e=this;return la(t).get(Sa.key).next(function(t){return fu.resolve(e.lo(t))})},ha.prototype.do=function(t){return pa(t).delete(this.clientId)},ha.prototype.fo=function(){return y(this,void 0,void 0,function(){var i=this;return v(this,function(t){switch(t.label){case 0:return!this.isPrimary||this.To(this.Qh,18e5)?[3,2]:(this.Qh=Date.now(),[4,this.runTransaction(\"maybeGarbageCollectMultiClientState\",\"readwrite-primary\",function(t){var r=ha.Cr(t,Ba.store);return r.Dr().next(function(t){var e=i.Eo(t,18e5),n=t.filter(function(t){return-1===e.indexOf(t)});return fu.forEach(n,function(t){return r.delete(t.clientId)}).next(function(){return n})})}).catch(function(){return[]})]);case 1:t.sent().forEach(function(t){i.window.localStorage.removeItem(i.Io(t.clientId))}),t.label=2;case 2:return[2]}})})},ha.prototype.eo=function(){var t=this;this.Uh=this.Tr.yr(\"client_metadata_refresh\",4e3,function(){return t.Xh().then(function(){return t.fo()}).then(function(){return t.eo()})})},ha.prototype.lo=function(t){return!!t&&t.ownerId===this.clientId},ha.prototype.uo=function(e){var i=this;return la(e).get(Sa.key).next(function(t){if(null!==t&&i.To(t.leaseTimestampMs,5e3)&&!i.wo(t.ownerId)){if(i.lo(t)&&i.networkEnabled)return!0;if(!i.lo(t)){if(!t.allowTabSynchronization)throw new Dr(Sr.FAILED_PRECONDITION,sa);return!1}}return!(!i.networkEnabled||!i.inForeground)||pa(e).Dr().next(function(t){return void 0===i.Eo(t,5e3).find(function(t){if(i.clientId!==t.clientId){var e=!i.networkEnabled&&t.networkEnabled,n=!i.inForeground&&t.inForeground,r=i.networkEnabled===t.networkEnabled;if(e||n&&r)return!0}return!1})})}).next(function(t){return i.isPrimary!==t&&Ys(\"IndexedDbPersistence\",\"Client \"+(t?\"is\":\"is not\")+\" eligible for a primary lease.\"),t})},ha.prototype.Ro=function(){return y(this,void 0,void 0,function(){var e=this;return v(this,function(t){switch(t.label){case 0:return this.xh=!1,this.mo(),this.Uh&&(this.Uh.cancel(),this.Uh=null),this.Ao(),this.Po(),[4,this.runTransaction(\"shutdown\",\"readwrite\",function(t){return e.co(t).next(function(){return e.do(t)})}).catch(function(t){Ys(\"IndexedDbPersistence\",\"Proceeding with shutdown despite failure: \",t)})];case 1:return t.sent(),this.Jh.close(),this.Vo(),[2]}})})},ha.prototype.Eo=function(t,e){var n=this;return t.filter(function(t){return n.To(t.updateTimeMs,e)&&!n.wo(t.clientId)})},ha.prototype.po=function(){var e=this;return this.runTransaction(\"getActiveClients\",\"readonly\",function(t){return pa(t).Dr().next(function(t){return e.Eo(t,18e5).map(function(t){return t.clientId})})})},ha.clearPersistence=function(n){return y(this,void 0,void 0,function(){var e;return v(this,function(t){switch(t.label){case 0:return ha.jh()?(e=n+ha.Gh,[4,Wa.delete(e)]):[2,Promise.resolve()];case 1:return t.sent(),[2]}})})},Object.defineProperty(ha.prototype,\"io\",{get:function(){return this.xh},enumerable:!0,configurable:!0}),ha.prototype.yo=function(t){return ma.bo(t,this.serializer,this.jn,this.nh)},ha.prototype.vo=function(){return this.zh},ha.prototype.So=function(){return this.Qn},ha.prototype.Do=function(){return this.jn},ha.prototype.runTransaction=function(e,n,r){var i=this;Ys(\"IndexedDbPersistence\",\"Starting transaction:\",e);var o,t=\"readonly\"===n?\"readonly\":\"readwrite\";return this.Jh.runTransaction(t,za,function(t){return o=new ua(t,i.Oh?i.Oh.next():mu.dr),\"readwrite-primary\"===n?i.ao(o).next(function(t){return!!t||i.uo(o)}).next(function(t){if(!t)throw Xs(\"Failed to obtain primary lease for action '\"+e+\"'.\"),i.isPrimary=!1,i.Tr.oo(function(){return i.Wh(!1)}),new Dr(Sr.FAILED_PRECONDITION,pu);return r(o)}).next(function(t){return i._o(o).next(function(){return t})}):i.Co(o).next(function(){return r(o)})}).then(function(t){return o.Un(),t})},ha.prototype.Co=function(t){var e=this;return la(t).get(Sa.key).next(function(t){if(null!==t&&e.To(t.leaseTimestampMs,5e3)&&!e.wo(t.ownerId)&&!e.lo(t)&&(!e.allowTabSynchronization||!t.allowTabSynchronization))throw new Dr(Sr.FAILED_PRECONDITION,sa)})},ha.prototype._o=function(t){var e=new Sa(this.clientId,this.allowTabSynchronization,Date.now());return la(t).put(Sa.key,e)},ha.jh=function(){return Wa.jh()},ha.Fo=function(t){var e=t.ii.projectId;return t.ii.ln||(e+=\".\"+t.ii.database),\"firestore/\"+t.persistenceKey+\"/\"+e+\"/\"},ha.prototype.co=function(t){var e=this,n=la(t);return n.get(Sa.key).next(function(t){return e.lo(t)?(Ys(\"IndexedDbPersistence\",\"Releasing primary lease.\"),n.delete(Sa.key)):fu.resolve()})},ha.prototype.To=function(t,e){var n=Date.now();return!(t<n-e||n<t&&(Xs(\"Detected an update time that is in the future: \"+t+\" > \"+n),1))},ha.prototype.Zh=function(){var t=this;null!==this.document&&\"function\"==typeof this.document.addEventListener&&(this.qh=function(){t.Tr.oo(function(){return t.inForeground=\"visible\"===t.document.visibilityState,t.Xh()})},this.document.addEventListener(\"visibilitychange\",this.qh),this.inForeground=\"visible\"===this.document.visibilityState)},ha.prototype.Ao=function(){this.qh&&(this.document.removeEventListener(\"visibilitychange\",this.qh),this.qh=null)},ha.prototype.to=function(){var t=this;\"function\"==typeof this.window.addEventListener&&(this.Bh=function(){t.mo(),t.Tr.oo(function(){return t.Ro()})},this.window.addEventListener(\"unload\",this.Bh))},ha.prototype.Po=function(){this.Bh&&(this.window.removeEventListener(\"unload\",this.Bh),this.Bh=null)},ha.prototype.wo=function(t){try{var e=null!==this.Hh.getItem(this.Io(t));return Ys(\"IndexedDbPersistence\",\"Client '\"+t+\"' \"+(e?\"is\":\"is not\")+\" zombied in LocalStorage\"),e}catch(t){return Xs(\"IndexedDbPersistence\",\"Failed to get zombied client id.\",t),!1}},ha.prototype.mo=function(){try{this.Hh.setItem(this.Io(this.clientId),String(Date.now()))}catch(t){Xs(\"Failed to set zombie client id.\",t)}},ha.prototype.Vo=function(){try{this.Hh.removeItem(this.Io(this.clientId))}catch(t){}},ha.prototype.Io=function(t){return\"firestore_zombie_\"+this.persistenceKey+\"_\"+t},ha);function ha(t,e,n,r,i,o,s,u){if(this.allowTabSynchronization=t,this.persistenceKey=e,this.clientId=n,this.Tr=o,this.Lh=u,this.Oh=null,this.xh=!1,this.isPrimary=!1,this.networkEnabled=!0,this.Bh=null,this.inForeground=!1,this.qh=null,this.Uh=null,this.Qh=Number.NEGATIVE_INFINITY,this.Wh=function(t){return Promise.resolve()},!ha.jh())throw new Dr(Sr.UNIMPLEMENTED,\"This platform is either missing IndexedDB or is known to have an incomplete implementation. Offline persistence has been disabled.\");if(this.nh=new da(this,i),this.Kh=e+ha.Gh,this.serializer=new oa(s),this.document=r.document,this.zh=new $u(this.nh,this.serializer),this.jn=new Mu,this.Qn=new Gu(this.serializer,this.jn),!r.window||!r.window.localStorage)throw new Dr(Sr.UNIMPLEMENTED,\"IndexedDB persistence is only available on platforms that support LocalStorage.\");this.window=r.window,this.Hh=this.window.localStorage}function ca(t,e){var n=this;return(n=ia.call(this)||this)._h=t,n.Mh=e,n}function fa(t){this.Ch=t}function la(t){return aa.Cr(t,Sa.store)}function pa(t){return aa.Cr(t,Ba.store)}aa.Gh=\"main\";var da=(ya.prototype.$o=function(t){var n=this.ko(t);return this.db.vo().Ph(t).next(function(e){return n.next(function(t){return e+t})})},ya.prototype.ko=function(t){var e=0;return this.Mo(t,function(t){e++}).next(function(){return e})},ya.prototype.js=function(t,e){return this.db.vo().js(t,e)},ya.prototype.Mo=function(t,n){return this.Lo(t,function(t,e){return n(e)})},ya.prototype.ph=function(t,e,n){return va(t,n)},ya.prototype.bh=function(t,e,n){return va(t,n)},ya.prototype.Rh=function(t,e,n){return this.db.vo().Rh(t,e,n)},ya.prototype.Oo=function(t,e){return va(t,e)},ya.prototype.xo=function(t,e){return r=e,i=!1,Ia(n=t).Bo(function(t){return wa(n,t,r).next(function(t){return t&&(i=!0),fu.resolve(!t)})}).next(function(){return i});var n,r,i},ya.prototype.qo=function(r,i){var o=this,s=this.db.So().zr(),u=[],a=0;return this.Lo(r,function(e,t){if(t<=i){var n=o.xo(r,e).next(function(t){if(!t)return a++,s.Mn(r,e).next(function(){return s.kn(e),ra(r).delete([0,Ou(e.path)])})});u.push(n)}}).next(function(){return fu.vn(u)}).next(function(){return s.apply(r)}).next(function(){return a})},ya.prototype.removeTarget=function(t,e){var n=e.Ie(t.Mh);return this.db.vo().Eh(t,n)},ya.prototype.Uo=function(t,e){return va(t,e)},ya.prototype.Lo=function(t,o){var s,e=ra(t),u=mu.dr;return e.Br({index:ja.documentTargetsIndex},function(t,e){var n=t[0],r=(t[1],e.path),i=e.sequenceNumber;0===n?(u!==mu.dr&&o(new Xr(Pu(s)),u),u=i,s=r):u=mu.dr}).next(function(){u!==mu.dr&&o(new Xr(Pu(s)),u)})},ya.prototype.Qo=function(t){return this.db.So().Jr(t)},ya);function ya(t,e){this.db=t,this.No=new mh(this,e)}function va(t,e){return ra(t).put((n=e,r=t.Mh,new ja(0,Ou(n.path),r)));var n,r}var ma=(ga.bo=function(t,e,n,r){return Zs(\"\"!==t.uid),new ga(t.t()?t.uid:\"\",e,n,r)},ga.prototype.jo=function(t){var r=!0,e=IDBKeyRange.bound([this.userId,Number.NEGATIVE_INFINITY],[this.userId,Number.POSITIVE_INFINITY]);return Ea(t).Br({index:xa.userMutationsIndex,range:e},function(t,e,n){r=!1,n.done()}).next(function(){return r})},ga.prototype.Ko=function(e,t,n){return this.Go(e).next(function(t){return t.lastStreamToken=n.toBase64(),Ia(e).put(t)})},ga.prototype.zo=function(t){return this.Go(t).next(function(t){return ei.fromBase64String(t.lastStreamToken)})},ga.prototype.Ho=function(e,n){return this.Go(e).next(function(t){return t.lastStreamToken=n.toBase64(),Ia(e).put(t)})},ga.prototype.Yo=function(h,c,f,l){var p=this,d=Ta(h),y=Ea(h);return y.add({}).next(function(t){Zs(\"number\"==typeof t);for(var e=new hu(t,c,f,l),n=p.serializer.$h(p.userId,e),r=[],i=new os(function(t,e){return ru(t.j(),e.j())}),o=0,s=l;o<s.length;o++){var u=s[o],a=Oa.key(p.userId,u.key.path,t);i=i.add(u.key.path.M()),r.push(y.put(n)),r.push(d.put(a,Oa.PLACEHOLDER))}return i.forEach(function(t){r.push(p.jn.vr(h,t))}),h.qn(function(){p.Wo[t]=e.keys()}),fu.vn(r).next(function(){return e})})},ga.prototype.Jo=function(t,e){var n=this;return Ea(t).get(e).next(function(t){return t?(Zs(t.userId===n.userId),n.serializer.kh(t)):null})},ga.prototype.Xo=function(t,n){var r=this;return this.Wo[n]?fu.resolve(this.Wo[n]):this.Jo(t,n).next(function(t){if(t){var e=t.keys();return r.Wo[n]=e}return null})},ga.prototype.Zo=function(t,e){var r=this,i=e+1,n=IDBKeyRange.lowerBound([this.userId,i]),o=null;return Ea(t).Br({index:xa.userMutationsIndex,range:n},function(t,e,n){e.userId===r.userId&&(Zs(e.batchId>=i),o=r.serializer.kh(e)),n.done()}).next(function(){return o})},ga.prototype.ta=function(t){var e=IDBKeyRange.upperBound([this.userId,Number.POSITIVE_INFINITY]),r=-1;return Ea(t).Br({index:xa.userMutationsIndex,range:e,reverse:!0},function(t,e,n){r=e.batchId,n.done()}).next(function(){return r})},ga.prototype.ea=function(t){var e=this,n=IDBKeyRange.bound([this.userId,-1],[this.userId,Number.POSITIVE_INFINITY]);return Ea(t).Dr(xa.userMutationsIndex,n).next(function(t){return t.map(function(t){return e.serializer.kh(t)})})},ga.prototype.Gn=function(u,a){var h=this,t=Oa.prefixForPath(this.userId,a.path),e=IDBKeyRange.lowerBound(t),c=[];return Ta(u).Br({range:e},function(t,e,n){var r=t[0],i=t[1],o=t[2],s=Pu(i);if(r===h.userId&&a.path.isEqual(s))return Ea(u).get(o).next(function(t){if(!t)throw Js();Zs(t.userId===h.userId),c.push(h.serializer.kh(t))});n.done()}).next(function(){return c})},ga.prototype.Xn=function(r,t){var a=this,h=new os(ru),i=[];return t.forEach(function(u){var t=Oa.prefixForPath(a.userId,u.path),e=IDBKeyRange.lowerBound(t),n=Ta(r).Br({range:e},function(t,e,n){var r=t[0],i=t[1],o=t[2],s=Pu(i);r===a.userId&&u.path.isEqual(s)?h=h.add(o):n.done()});i.push(n)}),fu.vn(i).next(function(){return a.sa(r,h)})},ga.prototype.nr=function(t,e){var u=this,a=e.path,h=a.length+1,n=Oa.prefixForPath(this.userId,a),r=IDBKeyRange.lowerBound(n),c=new os(ru);return Ta(t).Br({range:r},function(t,e,n){var r=t[0],i=t[1],o=t[2],s=Pu(i);r===u.userId&&a.q(s)?s.length===h&&(c=c.add(o)):n.done()}).next(function(){return u.sa(t,c)})},ga.prototype.sa=function(e,t){var n=this,r=[],i=[];return t.forEach(function(t){i.push(Ea(e).get(t).next(function(t){if(null===t)throw Js();Zs(t.userId===n.userId),r.push(n.serializer.kh(t))}))}),fu.vn(i).next(function(){return r})},ga.prototype.ia=function(e,n){var r=this;return ba(e._h,this.userId,n).next(function(t){return e.qn(function(){r.na(n.batchId)}),fu.forEach(t,function(t){return r.nh.Oo(e,t)})})},ga.prototype.na=function(t){delete this.Wo[t]},ga.prototype.ra=function(n){var o=this;return this.jo(n).next(function(t){if(!t)return fu.resolve();var e=IDBKeyRange.lowerBound(Oa.prefixForUser(o.userId)),i=[];return Ta(n).Br({range:e},function(t,e,n){if(t[0]===o.userId){var r=Pu(t[1]);i.push(r)}else n.done()}).next(function(){Zs(0===i.length)})})},ga.prototype.Dh=function(t,e){return wa(t,this.userId,e)},ga.prototype.Go=function(t){var e=this;return Ia(t).get(this.userId).next(function(t){return t||new ka(e.userId,-1,\"\")})},ga);function ga(t,e,n,r){this.userId=t,this.serializer=e,this.jn=n,this.nh=r,this.Wo={}}function wa(t,o,e){var n=Oa.prefixForPath(o,e.path),s=n[1],r=IDBKeyRange.lowerBound(n),u=!1;return Ta(t).Br({range:r,Sh:!0},function(t,e,n){var r=t[0],i=t[1];t[2],r===o&&i===s&&(u=!0),n.done()}).next(function(){return u})}function ba(t,e,n){var r=t.store(xa.store),i=t.store(Oa.store),o=[],s=IDBKeyRange.only(n.batchId),u=0,a=r.Br({range:s},function(t,e,n){return u++,n.delete()});o.push(a.next(function(){Zs(1===u)}));for(var h=[],c=0,f=n.mutations;c<f.length;c++){var l=f[c],p=Oa.key(e,l.key.path,n.batchId);o.push(i.delete(p)),h.push(l.key)}return fu.vn(o).next(function(){return h})}function Ea(t){return aa.Cr(t,xa.store)}function Ta(t){return aa.Cr(t,Oa.store)}function Ia(t){return aa.Cr(t,ka.store)}var Na=10,_a=(Da.prototype.createOrUpgrade=function(n,r,t,e){var i=this;Zs(t<e&&0<=t&&e<=Na);var o,s=new Ja(r);t<1&&1<=e&&(n.createObjectStore(Sa.store),(o=n).createObjectStore(ka.store,{keyPath:ka.keyPath}),o.createObjectStore(xa.store,{keyPath:xa.keyPath,autoIncrement:!0}).createIndex(xa.userMutationsIndex,xa.userMutationsKeyPath,{unique:!0}),o.createObjectStore(Oa.store),Fa(n),n.createObjectStore(La.store));var u,a=fu.resolve();return t<3&&3<=e&&(0!==t&&((u=n).deleteObjectStore(ja.store),u.deleteObjectStore(Ma.store),u.deleteObjectStore(Ua.store),Fa(n)),a=a.next(function(){return t=s.store(Ua.store),e=new Ua(0,0,Pr.min().C(),0),t.put(Ua.key,e);var t,e})),t<4&&4<=e&&(0!==t&&(a=a.next(function(){return r=n,(i=s).store(xa.store).Dr().next(function(t){r.deleteObjectStore(xa.store),r.createObjectStore(xa.store,{keyPath:xa.keyPath,autoIncrement:!0}).createIndex(xa.userMutationsIndex,xa.userMutationsKeyPath,{unique:!0});var e=i.store(xa.store),n=t.map(function(t){return e.put(t)});return fu.vn(n)});var r,i})),a=a.next(function(){n.createObjectStore(Ba.store,{keyPath:Ba.keyPath})})),t<5&&5<=e&&(a=a.next(function(){return i.removeAcknowledgedMutations(s)})),t<6&&6<=e&&(a=a.next(function(){return n.createObjectStore(Ca.store),i.addDocumentGlobal(s)})),t<7&&7<=e&&(a=a.next(function(){return i.ensureSequenceNumbers(s)})),t<8&&8<=e&&(a=a.next(function(){return i.createCollectionParentIndex(n,s)})),t<9&&9<=e&&(a=a.next(function(){var t,e;(e=n).objectStoreNames.contains(\"remoteDocumentChanges\")&&e.deleteObjectStore(\"remoteDocumentChanges\"),(t=r.objectStore(La.store)).createIndex(La.readTimeIndex,La.readTimeIndexPath,{unique:!1}),t.createIndex(La.collectionReadTimeIndex,La.collectionReadTimeIndexPath,{unique:!1})})),t<10&&10<=e&&(a=a.next(function(){return i.rewriteCanonicalIds(s)})),a},Da.prototype.addDocumentGlobal=function(e){var n=0;return e.store(La.store).Br(function(t,e){n+=Ku(e)}).next(function(){var t=new Ca(n);return e.store(Ca.store).put(Ca.key,t)})},Da.prototype.removeAcknowledgedMutations=function(r){var i=this,t=r.store(ka.store),e=r.store(xa.store);return t.Dr().next(function(t){return fu.forEach(t,function(n){var t=IDBKeyRange.bound([n.userId,-1],[n.userId,n.lastAcknowledgedBatchId]);return e.Dr(xa.userMutationsIndex,t).next(function(t){return fu.forEach(t,function(t){Zs(t.userId===n.userId);var e=i.serializer.kh(t);return ba(r,n.userId,e).next(function(){})})})})})},Da.prototype.ensureSequenceNumbers=function(t){var s=t.store(ja.store),e=t.store(La.store);return na(t).next(function(i){var o=[];return e.Br(function(t,e){var n=new Cr(t),r=[0,Ou(n)];o.push(s.get(r).next(function(t){return t?fu.resolve():(e=n,s.put(new ja(0,Ou(e),i)));var e}))}).next(function(){return fu.vn(o)})})},Da.prototype.createCollectionParentIndex=function(t,e){function i(t){if(o.add(t)){var e=t.O(),n=t.M();return r.put({collectionId:e,parent:Ou(n)})}}t.createObjectStore(qa.store,{keyPath:qa.keyPath});var r=e.store(qa.store),o=new Cu;return e.store(La.store).Br({Sh:!0},function(t,e){var n=new Cr(t);return i(n.M())}).next(function(){return e.store(Oa.store).Br({Sh:!0},function(t,e){t[0];var n=t[1],r=(t[2],Pu(n));return i(r.M())})})},Da.prototype.rewriteCanonicalIds=function(t){var i=this,o=t.store(Ma.store);return o.Br(function(t,e){var n=i.serializer.mh(e),r=i.serializer.Ah(n);return o.put(r)})},Da),Aa=function(t,e){this.seconds=t,this.nanoseconds=e},Sa=function(t,e,n){this.ownerId=t,this.allowTabSynchronization=e,this.leaseTimestampMs=n};function Da(t){this.serializer=t}Sa.store=\"owner\",Sa.key=\"owner\";var ka=function(t,e,n){this.userId=t,this.lastAcknowledgedBatchId=e,this.lastStreamToken=n};ka.store=\"mutationQueues\",ka.keyPath=\"userId\";var xa=function(t,e,n,r,i){this.userId=t,this.batchId=e,this.localWriteTimeMs=n,this.baseMutations=r,this.mutations=i};xa.store=\"mutations\",xa.keyPath=\"batchId\",xa.userMutationsIndex=\"userMutationsIndex\",xa.userMutationsKeyPath=[\"userId\",\"batchId\"];var Oa=(Ra.prefixForUser=function(t){return[t]},Ra.prefixForPath=function(t,e){return[t,Ou(e)]},Ra.key=function(t,e,n){return[t,Ou(e),n]},Ra);function Ra(){}Oa.store=\"documentMutations\",Oa.PLACEHOLDER=new Oa;var Va=function(t,e){this.path=t,this.readTime=e},Pa=function(t,e){this.path=t,this.version=e},La=function(t,e,n,r,i,o){this.unknownDocument=t,this.noDocument=e,this.document=n,this.hasCommittedMutations=r,this.readTime=i,this.parentPath=o};La.store=\"remoteDocuments\",La.readTimeIndex=\"readTimeIndex\",La.readTimeIndexPath=\"readTime\",La.collectionReadTimeIndex=\"collectionReadTimeIndex\",La.collectionReadTimeIndexPath=[\"parentPath\",\"readTime\"];var Ca=function(t){this.byteSize=t};Ca.store=\"remoteDocumentGlobal\",Ca.key=\"remoteDocumentGlobalKey\";var Ma=function(t,e,n,r,i,o,s){this.targetId=t,this.canonicalId=e,this.readTime=n,this.resumeToken=r,this.lastListenSequenceNumber=i,this.lastLimboFreeSnapshotVersion=o,this.query=s};Ma.store=\"targets\",Ma.keyPath=\"targetId\",Ma.queryTargetsIndexName=\"queryTargetsIndex\",Ma.queryTargetsKeyPath=[\"canonicalId\",\"targetId\"];var ja=function(t,e,n){this.targetId=t,this.path=e,this.sequenceNumber=n};ja.store=\"targetDocuments\",ja.keyPath=[\"targetId\",\"path\"],ja.documentTargetsIndex=\"documentTargetsIndex\",ja.documentTargetsKeyPath=[\"path\",\"targetId\"];var Ua=function(t,e,n,r){this.highestTargetId=t,this.highestListenSequenceNumber=e,this.lastRemoteSnapshotVersion=n,this.targetCount=r};Ua.key=\"targetGlobalKey\",Ua.store=\"targetGlobal\";var qa=function(t,e){this.collectionId=t,this.parent=e};function Fa(t){t.createObjectStore(ja.store,{keyPath:ja.keyPath}).createIndex(ja.documentTargetsIndex,ja.documentTargetsKeyPath,{unique:!0}),t.createObjectStore(Ma.store,{keyPath:Ma.keyPath}).createIndex(Ma.queryTargetsIndexName,Ma.queryTargetsKeyPath,{unique:!0}),t.createObjectStore(Ua.store)}qa.store=\"collectionParents\",qa.keyPath=[\"collectionId\",\"parent\"];var Ba=function(t,e,n,r){this.clientId=t,this.updateTimeMs=e,this.networkEnabled=n,this.inForeground=r};Ba.store=\"clientMetadata\",Ba.keyPath=\"clientId\";var Ga,za=i(i(i([ka.store,xa.store,Oa.store,La.store,Ma.store,Sa.store,Ua.store,ja.store],[Ba.store]),[Ca.store]),[qa.store]),Wa=(Xa.Yh=function(o,t,s){return Ys(\"SimpleDb\",\"Opening database:\",o),new fu(function(n,r){var i=window.indexedDB.open(o,t);i.onsuccess=function(t){var e=t.target.result;n(new Xa(e))},i.onblocked=function(){r(new Dr(Sr.FAILED_PRECONDITION,\"Cannot upgrade IndexedDB schema while another tab is open. Close all tabs that access Firestore and reload this page to proceed.\"))},i.onerror=function(t){var e=t.target.error;\"VersionError\"===e.name?r(new Dr(Sr.FAILED_PRECONDITION,\"A newer version of the Firestore SDK was previously used and so the persisted data is not compatible with the version of the SDK you are now using. The SDK will operate with persistence disabled. If you need persistence, please re-upgrade to a newer version of the SDK or else clear the persisted IndexedDB data for your app to start fresh.\")):r(e)},i.onupgradeneeded=function(t){Ys(\"SimpleDb\",'Database \"'+o+'\" requires upgrade from version:',t.oldVersion);var e=t.target.result;s.createOrUpgrade(e,i.transaction,t.oldVersion,Na).next(function(){Ys(\"SimpleDb\",\"Database upgrade to version \"+Na+\" complete\")})}}).yn()},Xa.delete=function(t){return Ys(\"SimpleDb\",\"Removing database:\",t),nh(window.indexedDB.deleteDatabase(t)).yn()},Xa.jh=function(){if(\"undefined\"==typeof window||null==window.indexedDB)return!1;if(Xa.oa())return!0;if(void 0===window.navigator)return!1;var t=p(),e=Xa.ha(t),n=0<e&&e<10,r=Xa.aa(t),i=0<r&&r<4.5;return!(0<t.indexOf(\"MSIE \")||0<t.indexOf(\"Trident/\")||0<t.indexOf(\"Edge/\")||n||i)},Xa.oa=function(){var t;return\"undefined\"!=typeof __PRIVATE_process&&\"YES\"===(null===(t=__PRIVATE_process.__PRIVATE_env)||void 0===t?void 0:t.ua)},Xa.Cr=function(t,e){return t.store(e)},Xa.ha=function(t){var e=t.match(/i(?:phone|pad|pod) os ([\\d_]+)/i),n=e?e[1].split(\"_\").slice(0,2).join(\".\"):\"-1\";return Number(n)},Xa.aa=function(t){var e=t.match(/Android ([\\d.]+)/i),n=e?e[1].split(\".\").slice(0,2).join(\".\"):\"-1\";return Number(n)},Xa.prototype.ro=function(e){this.db.onversionchange=function(t){return e(t)}},Xa.prototype.runTransaction=function(r,h,c){return y(this,void 0,void 0,function(){var s,u,e,a,n;return v(this,function(t){switch(t.label){case 0:s=\"readonly\"===r,u=0,e=function(){var e,n,r,i,o;return v(this,function(t){switch(t.label){case 0:++u,e=Ja.open(a.db,s?\"readonly\":\"readwrite\",h),t.label=1;case 1:return t.trys.push([1,3,,4]),n=c(e).catch(function(t){return e.abort(t),fu.reject(t)}).yn(),r={},n.catch(function(){}),[4,e.ca];case 2:return[2,(r.value=(t.sent(),n),r)];case 3:return i=t.sent(),o=\"FirebaseError\"!==i.name&&u<3,Ys(\"SimpleDb\",\"Transaction failed with error: %s. Retrying: %s.\",i.message,o),o?[3,4]:[2,{value:Promise.reject(i)}];case 4:return[2]}})},a=this,t.label=1;case 1:return[5,e()];case 2:if(\"object\"==typeof(n=t.sent()))return[2,n.value];t.label=3;case 3:return[3,1];case 4:return[2]}})})},Xa.prototype.close=function(){this.db.close()},Xa),Qa=(Object.defineProperty(Ya.prototype,\"Pn\",{get:function(){return this.la},enumerable:!0,configurable:!0}),Object.defineProperty(Ya.prototype,\"fa\",{get:function(){return this.da},enumerable:!0,configurable:!0}),Object.defineProperty(Ya.prototype,\"cursor\",{set:function(t){this._a=t},enumerable:!0,configurable:!0}),Ya.prototype.done=function(){this.la=!0},Ya.prototype.qr=function(t){this.da=t},Ya.prototype.delete=function(){return nh(this._a.delete())},Ya),Ha=(n(Ka,Ga=Dr),Ka);function Ka(t){var e=this;return(e=Ga.call(this,Sr.UNAVAILABLE,\"IndexedDB transaction failed: \"+t)||this).name=\"IndexedDbTransactionError\",e}function Ya(t){this._a=t,this.la=!1,this.da=null}function Xa(t){this.db=t,12.2===Xa.ha(p())&&Xs(\"Firestore persistence suffers from a bug in iOS 12.2 Safari that may cause your app to stop working. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.\")}function $a(t){return\"IndexedDbTransactionError\"===t.name}var Ja=(eh.open=function(t,e,n){return new eh(t.transaction(n,e))},Object.defineProperty(eh.prototype,\"ca\",{get:function(){return this.Ta.promise},enumerable:!0,configurable:!0}),eh.prototype.abort=function(t){t&&this.Ta.reject(t),this.aborted||(Ys(\"SimpleDb\",\"Aborting transaction:\",t?t.message:\"Client-initiated abort\"),this.aborted=!0,this.transaction.abort())},eh.prototype.store=function(t){var e=this.transaction.objectStore(t);return new Za(e)},eh),Za=(th.prototype.put=function(t,e){return nh(void 0!==e?(Ys(\"SimpleDb\",\"PUT\",this.store.name,t,e),this.store.put(e,t)):(Ys(\"SimpleDb\",\"PUT\",this.store.name,\"<auto-key>\",t),this.store.put(t)))},th.prototype.add=function(t){return Ys(\"SimpleDb\",\"ADD\",this.store.name,t,t),nh(this.store.add(t))},th.prototype.get=function(e){var n=this;return nh(this.store.get(e)).next(function(t){return void 0===t&&(t=null),Ys(\"SimpleDb\",\"GET\",n.store.name,e,t),t})},th.prototype.delete=function(t){return Ys(\"SimpleDb\",\"DELETE\",this.store.name,t),nh(this.store.delete(t))},th.prototype.count=function(){return Ys(\"SimpleDb\",\"COUNT\",this.store.name),nh(this.store.count())},th.prototype.Dr=function(t,e){var n=this.cursor(this.options(t,e)),r=[];return this.Ea(n,function(t,e){r.push(e)}).next(function(){return r})},th.prototype.Ia=function(t,e){Ys(\"SimpleDb\",\"DELETE ALL\",this.store.name);var n=this.options(t,e);n.Sh=!1;var r=this.cursor(n);return this.Ea(r,function(t,e,n){return n.delete()})},th.prototype.Br=function(t,e){var n;e?n=t:(n={},e=t);var r=this.cursor(n);return this.Ea(r,e)},th.prototype.Bo=function(i){var t=this.cursor({});return new fu(function(n,r){t.onerror=function(t){var e=ih(t.target.error);r(e)},t.onsuccess=function(t){var e=t.target.result;e?i(e.primaryKey,e.value).next(function(t){t?e.continue():n()}):n()}})},th.prototype.Ea=function(t,s){var u=[];return new fu(function(o,e){t.onerror=function(t){e(t.target.error)},t.onsuccess=function(t){var e=t.target.result;if(e){var n=new Qa(e),r=s(e.primaryKey,e.value,n);if(r instanceof fu){var i=r.catch(function(t){return n.done(),fu.reject(t)});u.push(i)}n.Pn?o():null===n.fa?e.continue():e.continue(n.fa)}else o()}}).next(function(){return fu.vn(u)})},th.prototype.options=function(t,e){var n=void 0;return void 0!==t&&(\"string\"==typeof t?n=t:e=t),{index:n,range:e}},th.prototype.cursor=function(t){var e=\"next\";if(t.reverse&&(e=\"prev\"),t.index){var n=this.store.index(t.index);return t.Sh?n.openKeyCursor(t.range,e):n.openCursor(t.range,e)}return this.store.openCursor(t.range,e)},th);function th(t){this.store=t}function eh(t){var n=this;this.transaction=t,this.aborted=!1,this.Ta=new Du,this.transaction.oncomplete=function(){n.Ta.resolve()},this.transaction.onabort=function(){t.error?n.Ta.reject(new Ha(t.error)):n.Ta.resolve()},this.transaction.onerror=function(t){var e=ih(t.target.error);n.Ta.reject(new Ha(e))}}function nh(t){return new fu(function(n,r){t.onsuccess=function(t){var e=t.target.result;n(e)},t.onerror=function(t){var e=ih(t.target.error);r(e)}})}var rh=!1;function ih(t){var e=Wa.ha(p());if(12.2<=e&&e<13){var n=\"An internal error was encountered in the Indexed Database server\";if(0<=t.message.indexOf(n)){var r=new Dr(\"internal\",\"IOS_INDEXEDDB_BUG1: IndexedDb has thrown '\"+n+\"'. This is likely due to an unavoidable bug in iOS. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.\");return rh||(rh=!0,setTimeout(function(){throw r},0)),r}}return t}var oh=(ah.Pa=function(t,e,n,r,i){var o=new ah(t,e,Date.now()+n,r,i);return o.start(n),o},ah.prototype.start=function(t){var e=this;this.Va=setTimeout(function(){return e.ga()},t)},ah.prototype.pa=function(){return this.ga()},ah.prototype.cancel=function(t){null!==this.Va&&(this.clearTimeout(),this.Aa.reject(new Dr(Sr.CANCELLED,\"Operation cancelled\"+(t?\": \"+t:\"\"))))},ah.prototype.ga=function(){var e=this;this.wa.oo(function(){return null!==e.Va?(e.clearTimeout(),e.op().then(function(t){return e.Aa.resolve(t)})):Promise.resolve()})},ah.prototype.clearTimeout=function(){null!==this.Va&&(this.ma(this),clearTimeout(this.Va),this.Va=null)},ah),sh=(Object.defineProperty(uh.prototype,\"Ma\",{get:function(){return this.va},enumerable:!0,configurable:!0}),uh.prototype.oo=function(t){this.enqueue(t)},uh.prototype.La=function(t){this.Oa(),this.xa(t)},uh.prototype.Ba=function(t){return this.Oa(),this.xa(t)},uh.prototype.qa=function(n){return y(this,void 0,void 0,function(){var e;return v(this,function(t){switch(t.label){case 0:return this.Oa(),this.va?[3,2]:(this.va=!0,(e=zs.nt().window)&&e.removeEventListener(\"visibilitychange\",this.$a),[4,this.Ba(n)]);case 1:t.sent(),t.label=2;case 2:return[2]}})})},uh.prototype.enqueue=function(t){return this.Oa(),this.va?new Promise(function(t){}):this.xa(t)},uh.prototype.Ua=function(i){var t=this;this.Oa(),this.va||(this.ba=this.ba.then(function(){var n=new Du,r=function(){return y(t,void 0,void 0,function(){var e;return v(this,function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),[4,i()];case 1:return t.sent(),n.resolve(),this.Na.reset(),[3,3];case 2:if(!$a(e=t.sent()))throw n.resolve(),e;return Ys(\"AsyncQueue\",\"Operation failed with retryable error: \"+e),this.Na.gr(r),[3,3];case 3:return[2]}})})};return t.oo(r),n.promise}))},uh.prototype.xa=function(t){var e=this,n=this.ya.then(function(){return e.Ca=!0,t().catch(function(t){throw e.Da=t,e.Ca=!1,Xs(\"INTERNAL UNHANDLED ERROR: \",t.stack||t.message||\"\"),t}).then(function(t){return e.Ca=!1,t})});return this.ya=n},uh.prototype.yr=function(t,e,n){var r=this;this.Oa(),-1<this.Fa.indexOf(t)&&(e=0);var i=oh.Pa(this,t,e,n,function(t){return r.Qa(t)});return this.Sa.push(i),i},uh.prototype.Oa=function(){this.Da&&Js()},uh.prototype.Wa=function(){},uh.prototype.ja=function(){return y(this,void 0,void 0,function(){var e;return v(this,function(t){switch(t.label){case 0:return[4,e=this.ya];case 1:t.sent(),t.label=2;case 2:if(e!==this.ya)return[3,0];t.label=3;case 3:return[2]}})})},uh.prototype.Ka=function(t){for(var e=0,n=this.Sa;e<n.length;e++)if(n[e].Er===t)return!0;return!1},uh.prototype.ka=function(r){var i=this;return this.ja().then(function(){i.Sa.sort(function(t,e){return t.Ra-e.Ra});for(var t=0,e=i.Sa;t<e.length;t++){var n=e[t];if(n.pa(),\"all\"!==r&&n.Er===r)break}return i.ja()})},uh.prototype.Ga=function(t){this.Fa.push(t)},uh.prototype.Qa=function(t){var e=this.Sa.indexOf(t);this.Sa.splice(e,1)},uh);function uh(){var t=this;this.ya=Promise.resolve(),this.ba=Promise.resolve(),this.va=!1,this.Sa=[],this.Da=null,this.Ca=!1,this.Fa=[],this.Na=new ku(this,\"async_queue_retry\"),this.$a=function(){t.ka(\"async_queue_retry\")};var e=zs.nt().window;e&&\"function\"==typeof e.addEventListener&&e.addEventListener(\"visibilitychange\",this.$a)}function ah(t,e,n,r,i){this.wa=t,this.Er=e,this.Ra=n,this.op=r,this.ma=i,this.Aa=new Du,this.then=this.Aa.promise.then.bind(this.Aa.promise),this.catch=this.Aa.promise.catch.bind(this.Aa.promise),this.Aa.promise.catch(function(t){})}function hh(t,e){if(Xs(\"AsyncQueue\",e+\": \"+t),$a(t))return new Dr(Sr.UNAVAILABLE,e+\": \"+t);throw t}function ch(t,e){var n=t[0],r=t[1],i=e[0],o=e[1],s=ru(n,i);return 0===s?ru(r,o):s}var fh=(yh.prototype.Ya=function(){return++this.Ha},yh.prototype.Ja=function(t){var e=[t,this.Ya()];if(this.buffer.size<this.za)this.buffer=this.buffer.add(e);else{var n=this.buffer.last();ch(e,n)<0&&(this.buffer=this.buffer.delete(n).add(e))}},Object.defineProperty(yh.prototype,\"maxValue\",{get:function(){return this.buffer.last()[0]},enumerable:!0,configurable:!0}),yh),lh={Xa:!1,Za:0,tu:0,eu:0},ph=(dh.ru=function(t){return new dh(t,dh.hu,dh.ou)},dh);function dh(t,e,n){this.su=t,this.iu=e,this.nu=n}function yh(t){this.za=t,this.buffer=new os(ch),this.Ha=0}ph.au=-1,ph.uu=1048576,ph.cu=41943040,ph.hu=10,ph.ou=1e3,ph._u=new ph(ph.cu,ph.hu,ph.ou),ph.DISABLED=new ph(ph.au,0,0);var vh=(Eh.prototype.start=function(t){this.No.fu.su!==ph.au&&this.Tu(t)},Eh.prototype.stop=function(){this.du&&(this.du.cancel(),this.du=null)},Object.defineProperty(Eh.prototype,\"io\",{get:function(){return null!==this.du},enumerable:!0,configurable:!0}),Eh.prototype.Tu=function(n){var t=this,e=this.lu?3e5:6e4;Ys(\"LruGarbageCollector\",\"Garbage collection scheduled in \"+e+\"ms\"),this.du=this.wa.yr(\"lru_garbage_collection\",e,function(){return y(t,void 0,void 0,function(){var e;return v(this,function(t){switch(t.label){case 0:this.du=null,this.lu=!0,t.label=1;case 1:return t.trys.push([1,3,,7]),[4,n.Eu(this.No)];case 2:return t.sent(),[3,7];case 3:return $a(e=t.sent())?(Ys(\"LruGarbageCollector\",\"Ignoring IndexedDB error during garbage collection: \",e),[3,6]):[3,4];case 4:return[4,_h(e)];case 5:t.sent(),t.label=6;case 6:return[3,7];case 7:return[4,this.Tu(n)];case 8:return t.sent(),[2]}})})})},Eh),mh=(bh.prototype.wu=function(t,e){return this.Iu.$o(t).next(function(t){return Math.floor(e/100*t)})},bh.prototype.Ru=function(t,e){var n=this;if(0===e)return fu.resolve(mu.dr);var r=new fh(e);return this.Iu.js(t,function(t){return r.Ja(t.sequenceNumber)}).next(function(){return n.Iu.Mo(t,function(t){return r.Ja(t)})}).next(function(){return r.maxValue})},bh.prototype.Rh=function(t,e,n){return this.Iu.Rh(t,e,n)},bh.prototype.qo=function(t,e){return this.Iu.qo(t,e)},bh.prototype.mu=function(e,n){var r=this;return this.fu.su===ph.au?(Ys(\"LruGarbageCollector\",\"Garbage collection skipped; disabled\"),fu.resolve(lh)):this.Qo(e).next(function(t){return t<r.fu.su?(Ys(\"LruGarbageCollector\",\"Garbage collection skipped; Cache size \"+t+\" is lower than threshold \"+r.fu.su),lh):r.Au(e,n)})},bh.prototype.Qo=function(t){return this.Iu.Qo(t)},bh.prototype.Au=function(e,n){var r,i,o,s,u,a,h,c=this,f=Date.now();return this.wu(e,this.fu.iu).next(function(t){return i=t>c.fu.nu?(Ys(\"LruGarbageCollector\",\"Capping sequence numbers to collect down to the maximum of \"+c.fu.nu+\" from \"+t),c.fu.nu):t,s=Date.now(),c.Ru(e,i)}).next(function(t){return r=t,u=Date.now(),c.Rh(e,r,n)}).next(function(t){return o=t,a=Date.now(),c.qo(e,r)}).next(function(t){return h=Date.now(),Hs()<=l.DEBUG&&Ys(\"LruGarbageCollector\",\"LRU Garbage Collection\\n\\tCounted targets in \"+(s-f)+\"ms\\n\\tDetermined least recently used \"+i+\" in \"+(u-s)+\"ms\\n\\tRemoved \"+o+\" targets in \"+(a-u)+\"ms\\n\\tRemoved \"+t+\" documents in \"+(h-a)+\"ms\\nTotal Duration: \"+(h-f)+\"ms\"),fu.resolve({Xa:!0,Za:i,tu:o,eu:t})})},bh),gh=(wh.prototype.start=function(){return Promise.resolve()},wh.prototype.Su=function(i){return y(this,void 0,void 0,function(){var e,g,n,r=this;return v(this,function(t){switch(t.label){case 0:return e=this.Wn,g=this.bu,[4,this.persistence.runTransaction(\"Handle user change\",\"readonly\",function(v){var m;return r.Wn.ea(v).next(function(t){return m=t,e=r.persistence.yo(i),g=new yu(r.yu,e,r.persistence.Do()),e.ea(v)}).next(function(t){for(var e=[],n=[],r=ms(),i=0,o=m;i<o.length;i++){var s=o[i];e.push(s.batchId);for(var u=0,a=s.mutations;u<a.length;u++){var h=a[u];r=r.add(h.key)}}for(var c=0,f=t;c<f.length;c++){var l=f[c];n.push(l.batchId);for(var p=0,d=l.mutations;p<d.length;p++){var y=d[p];r=r.add(y.key)}}return g.Yn(v,r).next(function(t){return{Du:t,Cu:e,Fu:n}})})})];case 1:return n=t.sent(),[2,(this.Wn=e,this.bu=g,this.Pu.vu(this.bu),n)]}})})},wh.prototype.Nu=function(u){var a,h=this,c=Vr.now(),t=u.reduce(function(t,e){return t.add(e.key)},ms());return this.persistence.runTransaction(\"Locally write mutations\",\"readwrite\",function(s){return h.bu.Yn(s,t).next(function(t){a=t;for(var e=[],n=0,r=u;n<r.length;n++){var i=r[n],o=i.Pt(a.get(i.key));null!=o&&e.push(new zi(i.key,o,uo(o.proto.mapValue),Fi.exists(!0)))}return h.Wn.Yo(s,c,e,u)})}).then(function(t){var e=t.In(a);return{batchId:t.batchId,Dn:e}})},wh.prototype.Ko=function(r){var i=this;return this.persistence.runTransaction(\"Acknowledge batch\",\"readwrite-primary\",function(t){var e=r.batch.keys(),n=i.yu.zr({Yr:!0});return i.Wn.Ko(t,r.batch,r.streamToken).next(function(){return i.$u(t,r,n)}).next(function(){return n.apply(t)}).next(function(){return i.Wn.ra(t)}).next(function(){return i.bu.Yn(t,e)})})},wh.prototype.ku=function(t){var r=this;return this.persistence.runTransaction(\"Reject batch\",\"readwrite-primary\",function(e){var n;return r.Wn.Jo(e,t).next(function(t){return Zs(null!==t),n=t.keys(),r.Wn.ia(e,t)}).next(function(){return r.Wn.ra(e)}).next(function(){return r.bu.Yn(e,n)})})},wh.prototype.ta=function(){var e=this;return this.persistence.runTransaction(\"Get highest unacknowledged batch id\",\"readonly\",function(t){return e.Wn.ta(t)})},wh.prototype.zo=function(){var e=this;return this.persistence.runTransaction(\"Get last stream token\",\"readonly\",function(t){return e.Wn.zo(t)})},wh.prototype.Ho=function(e){var n=this;return this.persistence.runTransaction(\"Set last stream token\",\"readwrite-primary\",function(t){return n.Wn.Ho(t,e)})},wh.prototype.ah=function(){var e=this;return this.persistence.runTransaction(\"Get last remote snapshot version\",\"readonly\",function(t){return e.zh.ah(t)})},wh.prototype.Mu=function(a){var h=this,c=a.Ee,f=this.Vu;return this.persistence.runTransaction(\"Apply remote event\",\"readwrite-primary\",function(o){var i=h.yu.zr({Yr:!0});f=h.Vu;var s=[];a.as.forEach(function(t,e){var n=f.get(e);if(n){s.push(h.zh.yh(o,t.Is,e).next(function(){return h.zh.gh(o,t.Ts,e)}));var r=t.resumeToken;if(0<r.rt()){var i=n.we(r,c).Ie(o.Mh);f=f.me(e,i),wh.Lu(n,i,t)&&s.push(h.zh.Eh(o,i))}}});var u=cs(),n=ms();if(a.cs.forEach(function(t,e){n=n.add(t)}),s.push(i.getEntries(o,n).next(function(r){a.cs.forEach(function(t,e){var n=r.get(t);e instanceof Io&&e.version.isEqual(Pr.min())?(i.kn(t,c),u=u.me(t,e)):null==n||0<e.version.S(n.version)||0===e.version.S(n.version)&&n.hasPendingWrites?(i.Nn(e,c),u=u.me(t,e)):Ys(\"LocalStore\",\"Ignoring outdated watch update for \",t,\". Current version:\",n.version,\" Watch version:\",e.version),a._s.has(t)&&s.push(h.persistence.nh.Uo(o,t))})})),!c.isEqual(Pr.min())){var t=h.zh.ah(o).next(function(t){return h.zh.lh(o,o.Mh,c)});s.push(t)}return fu.vn(s).next(function(){return i.apply(o)}).next(function(){return h.bu.Jn(o,u)})}).then(function(t){return h.Vu=f,t})},wh.Lu=function(t,e,n){return Zs(0<e.resumeToken.rt()),0===t.resumeToken.rt()||e.Ee.D()-t.Ee.D()>=this.Ou||0<n.Ts.size+n.Es.size+n.Is.size},wh.prototype.xu=function(c){return y(this,void 0,void 0,function(){var e,n,r,i,o,s,u,a,h=this;return v(this,function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),[4,this.persistence.runTransaction(\"notifyLocalViewChanges\",\"readwrite\",function(n){return fu.forEach(c,function(e){return fu.forEach(e.hr,function(t){return h.persistence.nh.ph(n,e.targetId,t)}).next(function(){return fu.forEach(e.or,function(t){return h.persistence.nh.bh(n,e.targetId,t)})})})})];case 1:return t.sent(),[3,3];case 2:if(!$a(e=t.sent()))throw e;return Ys(\"LocalStore\",\"Failed to update sequence numbers: \"+e),[3,3];case 3:for(n=0,r=c;n<r.length;n++)i=r[n],o=i.targetId,i.fromCache||(s=this.Vu.get(o),u=s.Ee,a=s.Re(u),this.Vu=this.Vu.me(o,a));return[2]}})})},wh.prototype.Bu=function(e){var n=this;return this.persistence.runTransaction(\"Get next mutation batch\",\"readonly\",function(t){return void 0===e&&(e=-1),n.Wn.Zo(t,e)})},wh.prototype.qu=function(e){var n=this;return this.persistence.runTransaction(\"read document\",\"readonly\",function(t){return n.bu.Kn(t,e)})},wh.prototype.Uu=function(r){var i=this;return this.persistence.runTransaction(\"Allocate target\",\"readwrite\",function(e){var n;return i.zh.Vh(e,r).next(function(t){return t?(n=t,fu.resolve(n)):i.zh.rh(e).next(function(t){return n=new Lo(r,t,0,e.Mh),i.zh.dh(e,n).next(function(){return n})})})}).then(function(t){return null===i.Vu.get(t.targetId)&&(i.Vu=i.Vu.me(t.targetId,t),i.gu.set(r,t.targetId)),t})},wh.prototype.Vh=function(t,e){var n=this.gu.get(e);return void 0!==n?fu.resolve(this.Vu.get(n)):this.zh.Vh(t,e)},wh.prototype.Qu=function(t,e){var n=this,r=this.Vu.get(t),i=e?\"readwrite\":\"readwrite-primary\";return this.persistence.runTransaction(\"Release target\",i,function(t){return e?fu.resolve():n.persistence.nh.removeTarget(t,r)}).then(function(){n.Vu=n.Vu.remove(t),n.gu.delete(r.target)})},wh.prototype.Wu=function(t,n){var r=this,i=Pr.min(),o=ms();return this.persistence.runTransaction(\"Execute query\",\"readonly\",function(e){return r.Vh(e,t.ee()).next(function(t){if(t)return i=t.lastLimboFreeSnapshotVersion,r.zh.vh(e,t.targetId).next(function(t){o=t})}).next(function(){return r.Pu.Zn(e,t,n?i:Pr.min(),n?o:ms())}).next(function(t){return{documents:t,ju:o}})})},wh.prototype.$u=function(t,i,o){var e=this,s=i.batch,n=s.keys(),u=fu.resolve();return n.forEach(function(r){u=u.next(function(){return o.Mn(t,r)}).next(function(t){var e=t,n=i.Rn.get(r);Zs(null!==n),(!e||e.version.S(n)<0)&&(e=s.at(r,e,i))&&o.Nn(e,i.wn)})}),u.next(function(){return e.Wn.ia(t,s)})},wh.prototype.Eu=function(e){var n=this;return this.persistence.runTransaction(\"Collect garbage\",\"readwrite-primary\",function(t){return e.mu(t,n.Vu)})},wh);function wh(t,e,n){this.persistence=t,this.Pu=e,this.Vu=new Jo(ru),this.gu=new au(function(t){return t.canonicalId()}),this.pu=Pr.min(),this.Wn=t.yo(n),this.yu=t.So(),this.zh=t.vo(),this.bu=new yu(this.yu,this.Wn,this.persistence.Do()),this.Pu.vu(this.bu)}function bh(t,e){this.Iu=t,this.fu=e}function Eh(t,e){this.No=t,this.wa=e,this.lu=!1,this.du=null}gh.Ou=3e8;var Th,Ih=(n(Nh,Th=gh),Nh.prototype.start=function(){return this.Ku()},Nh.prototype.Gu=function(t){var n=this;return this.persistence.runTransaction(\"Lookup mutation documents\",\"readonly\",function(e){return n.Wn.Xo(e,t).next(function(t){return t?n.bu.Yn(e,t):fu.resolve(null)})})},Nh.prototype.zu=function(t){this.Wn.na(t)},Nh.prototype.ho=function(t){this.persistence.ho(t)},Nh.prototype.po=function(){return this.persistence.po()},Nh.prototype.Hu=function(e){var n=this,t=this.Vu.get(e);return t?Promise.resolve(t.target):this.persistence.runTransaction(\"Get target data\",\"readonly\",function(t){return n.zh.si(t,e).next(function(t){return t?t.target:null})})},Nh.prototype.Wr=function(){var r=this;return this.persistence.runTransaction(\"Get new document changes\",\"readonly\",function(t){return r.yu.Wr(t,r.pu)}).then(function(t){var e=t.jr,n=t.readTime;return r.pu=n,e})},Nh.prototype.Ku=function(){return y(this,void 0,void 0,function(){var e,n=this;return v(this,function(t){switch(t.label){case 0:return[4,(e=this).persistence.runTransaction(\"Synchronize last document change read time\",\"readonly\",function(t){return n.yu.Gr(t)})];case 1:return e.pu=t.sent(),[2]}})})},Nh);function Nh(t,e,n){var r=this;return(r=Th.call(this,t,e,n)||this).persistence=t,r.Wn=t.yo(n),r.yu=t.So(),r.zh=t.vo(),r}function _h(e){return y(this,void 0,void 0,function(){return v(this,function(t){if(e.code!==Sr.FAILED_PRECONDITION||e.message!==pu)throw e;return Ys(\"LocalStore\",\"Unexpectedly lost primary lease\"),[2]})})}var Ah=(kh.prototype.B=function(){return this.Yu.B()},kh.prototype.ph=function(t,e){var n=new Sh(t,e);this.Yu=this.Yu.add(n),this.Xu=this.Xu.add(n)},kh.prototype.tc=function(t,e){var n=this;t.forEach(function(t){return n.ph(t,e)})},kh.prototype.bh=function(t,e){this.ec(new Sh(t,e))},kh.prototype.sc=function(t,e){var n=this;t.forEach(function(t){return n.bh(t,e)})},kh.prototype.ic=function(t){var e=this,n=Xr.EMPTY,r=new Sh(n,t),i=new Sh(n,t+1),o=[];return this.Xu.Ke([r,i],function(t){e.ec(t),o.push(t.key)}),o},kh.prototype.nc=function(){var e=this;this.Yu.forEach(function(t){return e.ec(t)})},kh.prototype.ec=function(t){this.Yu=this.Yu.delete(t),this.Xu=this.Xu.delete(t)},kh.prototype.rc=function(t){var e=Xr.EMPTY,n=new Sh(e,t),r=new Sh(e,t+1),i=ms();return this.Xu.Ke([n,r],function(t){i=i.add(t.key)}),i},kh.prototype.Dh=function(t){var e=new Sh(t,0),n=this.Yu.ze(e);return null!==n&&t.isEqual(n.key)},kh),Sh=(Dh.Ju=function(t,e){return Xr.N(t.key,e.key)||ru(t.hc,e.hc)},Dh.Zu=function(t,e){return ru(t.hc,e.hc)||Xr.N(t.key,e.key)},Dh);function Dh(t,e){this.key=t,this.hc=e}function kh(){this.Yu=new os(Sh.Ju),this.Xu=new os(Sh.Zu)}function xh(t,e){if(0!==e.length)throw new Dr(Sr.INVALID_ARGUMENT,\"Function \"+t+\"() does not support arguments, but was called with \"+Hh(e.length,\"argument\")+\".\")}function Oh(t,e,n){if(e.length!==n)throw new Dr(Sr.INVALID_ARGUMENT,\"Function \"+t+\"() requires \"+Hh(n,\"argument\")+\", but was called with \"+Hh(e.length,\"argument\")+\".\")}function Rh(t,e,n){if(e.length<n)throw new Dr(Sr.INVALID_ARGUMENT,\"Function \"+t+\"() requires at least \"+Hh(n,\"argument\")+\", but was called with \"+Hh(e.length,\"argument\")+\".\")}function Vh(t,e,n,r){if(e.length<n||e.length>r)throw new Dr(Sr.INVALID_ARGUMENT,\"Function \"+t+\"() requires between \"+n+\" and \"+r+\" arguments, but was called with \"+Hh(e.length,\"argument\")+\".\")}function Ph(t,e,n,r){Uh(t,e,Qh(n)+\" argument\",r)}function Lh(t,e,n,r){void 0!==r&&Ph(t,e,n,r)}function Ch(t,e,n,r){Uh(t,e,n+\" option\",r)}function Mh(t,e,n,r){void 0!==r&&Ch(t,e,n,r)}function jh(t,e,n,r,a){void 0!==r&&function(t,e,n){for(var r=[],i=0,o=a;i<o.length;i++){var s=o[i];if(s===n)return;r.push(Fh(s))}var u=Fh(n);throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid value \"+u+\" provided to function \"+t+'() for option \"'+e+'\". Acceptable values: '+r.join(\", \"))}(t,n,r)}function Uh(t,e,n,r){if(!(\"object\"===e?qh(r):\"non-empty string\"===e?\"string\"==typeof r&&\"\"!==r:typeof r===e)){var i=Fh(r);throw new Dr(Sr.INVALID_ARGUMENT,\"Function \"+t+\"() requires its \"+n+\" to be of type \"+e+\", but it was: \"+i)}}function qh(t){return\"object\"==typeof t&&null!==t&&(Object.getPrototypeOf(t)===Object.prototype||null===Object.getPrototypeOf(t))}function Fh(e){if(void 0===e)return\"undefined\";if(null===e)return\"null\";if(\"string\"==typeof e)return 20<e.length&&(e=e.substring(0,20)+\"...\"),JSON.stringify(e);if(\"number\"==typeof e||\"boolean\"==typeof e)return\"\"+e;if(\"object\"!=typeof e)return\"function\"==typeof e?\"a function\":Js();if(e instanceof Array)return\"an array\";var t=function(){if(e.constructor){var t=/function\\s+([^\\s(]+)\\s*\\(/.exec(e.constructor.toString());if(t&&1<t.length)return t[1]}return null}();return t?\"a custom \"+t+\" object\":\"an object\"}function Bh(t,e,n){if(void 0===n)throw new Dr(Sr.INVALID_ARGUMENT,\"Function \"+t+\"() requires a valid \"+Qh(e)+\" argument, but it was undefined.\")}function Gh(n,t,r){Zr(t,function(t,e){if(r.indexOf(t)<0)throw new Dr(Sr.INVALID_ARGUMENT,\"Unknown option '\"+t+\"' passed to function \"+n+\"(). Available options: \"+r.join(\", \"))})}function zh(t,e,n,r){var i=Fh(r);return new Dr(Sr.INVALID_ARGUMENT,\"Function \"+t+\"() requires its \"+Qh(n)+\" argument to be a \"+e+\", but it was: \"+i)}function Wh(t,e,n){if(n<=0)throw new Dr(Sr.INVALID_ARGUMENT,'Function \"'+t+'()\" requires its '+Qh(e)+\" argument to be a positive number, but it was: \"+n+\".\")}function Qh(t){switch(t){case 1:return\"first\";case 2:return\"second\";case 3:return\"third\";default:return t+\"th\"}}function Hh(t,e){return t+\" \"+e+(1===t?\"\":\"s\")}function Kh(){if(\"undefined\"==typeof Uint8Array)throw new Dr(Sr.UNIMPLEMENTED,\"Uint8Arrays are not available in this environment.\")}function Yh(){if(!zs.nt().oc)throw new Dr(Sr.UNIMPLEMENTED,\"Blobs are unavailable in Firestore in this environment.\")}var Xh=(Zh.fromBase64String=function(t){Oh(\"Blob.fromBase64String\",arguments,1),Ph(\"Blob.fromBase64String\",\"string\",1,t),Yh();try{return new Zh(ei.fromBase64String(t))}catch(t){throw new Dr(Sr.INVALID_ARGUMENT,\"Failed to construct Blob from Base64 string: \"+t)}},Zh.fromUint8Array=function(t){if(Oh(\"Blob.fromUint8Array\",arguments,1),Kh(),!(t instanceof Uint8Array))throw zh(\"Blob.fromUint8Array\",\"Uint8Array\",1,t);return new Zh(ei.fromUint8Array(t))},Zh.prototype.toBase64=function(){return Oh(\"Blob.toBase64\",arguments,0),Yh(),this.ac.toBase64()},Zh.prototype.toUint8Array=function(){return Oh(\"Blob.toUint8Array\",arguments,0),Kh(),this.ac.toUint8Array()},Zh.prototype.toString=function(){return\"Blob(base64: \"+this.toBase64()+\")\"},Zh.prototype.isEqual=function(t){return this.ac.isEqual(t.ac)},Zh),$h=(Jh.documentId=function(){return Jh.cc},Jh.prototype.isEqual=function(t){if(!(t instanceof Jh))throw zh(\"isEqual\",\"FieldPath\",1,t);return this.uc.isEqual(t.uc)},Jh);function Jh(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];!function(){if(!(t instanceof Array)||t.length<1)throw new Dr(Sr.INVALID_ARGUMENT,\"Function FieldPath() requires its fieldNames argument to be an array with at least 1 element.\")}();for(var n=0;n<t.length;++n)if(Ph(\"FieldPath\",\"string\",n,t[n]),0===t[n].length)throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid field name at argument $(i + 1). Field names must not be empty.\");this.uc=new Kr(t)}function Zh(t){Yh(),this.ac=t}$h.cc=new $h(Kr.J().j());var tc,ec,nc,rc,ic,oc=new RegExp(\"[~\\\\*/\\\\[\\\\]]\"),sc=function(t){this._c=t},uc=(n(Ic,ic=sc),Ic.prototype.Di=function(t){if(2!==t.lc)throw 1===t.lc?t.dc(\"FieldValue.delete() can only appear at the top level of your update data\"):t.dc(\"FieldValue.delete() cannot be used with set() unless you pass {merge:true}\");return t.Vt.push(t.path),null},Ic.prototype.isEqual=function(t){return t instanceof Ic},Ic),ac=(n(Tc,rc=sc),Tc.prototype.Di=function(t){return new qi(t.path,Ni.instance)},Tc.prototype.isEqual=function(t){return t instanceof Tc},Tc),hc=(n(Ec,nc=sc),Ec.prototype.Di=function(t){var e=new _c({lc:3,methodName:this._c,Tc:!0},t.ii,t.serializer),n=this.fc.map(function(t){return kc(t,e)}),r=new Ai(n);return new qi(t.path,r)},Ec.prototype.isEqual=function(t){return this===t},Ec),cc=(n(bc,ec=sc),bc.prototype.Di=function(t){var e=new _c({lc:3,methodName:this._c,Tc:!0},t.ii,t.serializer),n=this.fc.map(function(t){return kc(t,e)}),r=new Si(n);return new qi(t.path,r)},bc.prototype.isEqual=function(t){return this===t},bc),fc=(n(wc,tc=sc),wc.prototype.Di=function(t){var e=new _c({lc:3,methodName:this._c},t.ii,t.serializer),n=kc(this.Ec,e),r=new Di(t.serializer,n);return new qi(t.path,r)},wc.prototype.isEqual=function(t){return this===t},wc),lc=(Object.defineProperty(gc.prototype,\"latitude\",{get:function(){return this.Ic},enumerable:!0,configurable:!0}),Object.defineProperty(gc.prototype,\"longitude\",{get:function(){return this.wc},enumerable:!0,configurable:!0}),gc.prototype.isEqual=function(t){return this.Ic===t.Ic&&this.wc===t.wc},gc.prototype.p=function(t){return ru(this.Ic,t.Ic)||ru(this.wc,t.wc)},gc),pc=/^__.*__$/,dc=(mc.prototype.Rc=function(t,e){var n=[];return null!==this.Vt?n.push(new zi(t,this.data,this.Vt,e)):n.push(new Gi(t,this.data,e)),0<this.fieldTransforms.length&&n.push(new Wi(t,this.fieldTransforms)),n},mc),yc=(vc.prototype.Rc=function(t,e){var n=[new zi(t,this.data,this.Vt,e)];return 0<this.fieldTransforms.length&&n.push(new Wi(t,this.fieldTransforms)),n},vc);function vc(t,e,n){this.data=t,this.Vt=e,this.fieldTransforms=n}function mc(t,e,n){this.data=t,this.Vt=e,this.fieldTransforms=n}function gc(t,e){if(Oh(\"GeoPoint\",arguments,2),Ph(\"GeoPoint\",\"number\",1,t),Ph(\"GeoPoint\",\"number\",2,e),!isFinite(t)||t<-90||90<t)throw new Dr(Sr.INVALID_ARGUMENT,\"Latitude must be a number between -90 and 90, but was: \"+t);if(!isFinite(e)||e<-180||180<e)throw new Dr(Sr.INVALID_ARGUMENT,\"Longitude must be a number between -180 and 180, but was: \"+e);this.Ic=t,this.wc=e}function wc(t){var e=this;return(e=tc.call(this,\"FieldValue.increment\")||this).Ec=t,e}function bc(t){var e=this;return(e=ec.call(this,\"FieldValue.arrayRemove\")||this).fc=t,e}function Ec(t){var e=this;return(e=nc.call(this,\"FieldValue.arrayUnion\")||this).fc=t,e}function Tc(){return rc.call(this,\"FieldValue.serverTimestamp\")||this}function Ic(){return ic.call(this,\"FieldValue.delete\")||this}function Nc(t){switch(t){case 0:case 2:case 1:return 1;case 3:case 4:return;default:throw Js()}}var _c=(Object.defineProperty(Dc.prototype,\"path\",{get:function(){return this.settings.path},enumerable:!0,configurable:!0}),Object.defineProperty(Dc.prototype,\"lc\",{get:function(){return this.settings.lc},enumerable:!0,configurable:!0}),Dc.prototype.Ac=function(t){return new Dc(Object.assign(Object.assign({},this.settings),t),this.ii,this.serializer,this.fieldTransforms,this.Vt)},Dc.prototype.Pc=function(t){var e,n=null===(e=this.path)||void 0===e?void 0:e.child(t),r=this.Ac({path:n,Tc:!1});return r.Vc(t),r},Dc.prototype.gc=function(t){var e,n=null===(e=this.path)||void 0===e?void 0:e.child(t),r=this.Ac({path:n,Tc:!1});return r.mc(),r},Dc.prototype.pc=function(t){return this.Ac({path:void 0,Tc:!0})},Dc.prototype.dc=function(t){var e=!this.path||this.path.B()?\"\":\" (found in field \"+this.path.toString()+\")\";return new Dr(Sr.INVALID_ARGUMENT,\"Function \"+this.settings.methodName+\"() called with invalid data. \"+t+e)},Dc.prototype.contains=function(e){return void 0!==this.Vt.find(function(t){return e.q(t)})||void 0!==this.fieldTransforms.find(function(t){return e.q(t.field)})},Dc.prototype.mc=function(){if(this.path)for(var t=0;t<this.path.length;t++)this.Vc(this.path.get(t))},Dc.prototype.Vc=function(t){if(0===t.length)throw this.dc(\"Document fields must not be empty\");if(Nc(this.lc)&&pc.test(t))throw this.dc('Document fields cannot begin and end with \"__\"')},Dc),Ac=(Sc.prototype.bc=function(t,e){var n=this.vc(0,t);Rc(\"Data must be an object, but it was:\",n,e);var r=xc(e,n);return new dc(new Ki(r),null,n.fieldTransforms)},Sc.prototype.Sc=function(t,e,n){var r=this.vc(2,t);Rc(\"Data must be an object, but it was:\",r,e);var i,o,s=xc(e,r);if(n){for(var u=[],a=0,h=n;a<h.length;a++){var c=h[a],f=void 0;if(c instanceof $h)f=c.uc;else{if(\"string\"!=typeof c)throw Js();f=Pc(t,c)}if(!r.contains(f))throw new Dr(Sr.INVALID_ARGUMENT,\"Field '\"+f+\"' is specified in your field mask but missing from your input data.\");Lc(u,f)||u.push(f)}i=new Ui(u),o=r.fieldTransforms.filter(function(t){return i.dt(t.field)})}else i=new Ui(r.Vt),o=r.fieldTransforms;return new dc(new Ki(s),i,o)},Sc.prototype.Dc=function(o,t){var s=this.vc(1,o);Rc(\"Data must be an object, but it was:\",s,t);var u=[],a=new Yi;Zr(t,function(t,e){var n=Pc(o,t),r=s.gc(n);if(e instanceof uc)u.push(n);else{var i=kc(e,r);null!=i&&(u.push(n),a.set(n,i))}});var e=new Ui(u);return new yc(a.yt(),e,s.fieldTransforms)},Sc.prototype.Cc=function(t,e,n,r){var i=this.vc(1,t),o=[Vc(t,e)],s=[n];if(r.length%2!=0)throw new Dr(Sr.INVALID_ARGUMENT,\"Function \"+t+\"() needs to be called with an even number of arguments that alternate between field names and values.\");for(var u=0;u<r.length;u+=2)o.push(Vc(t,r[u])),s.push(r[u+1]);for(var a=[],h=new Yi,c=o.length-1;0<=c;--c)if(!Lc(a,o[c])){var f=o[c],l=s[c],p=i.gc(f);if(l instanceof uc)a.push(f);else{var d=kc(l,p);null!=d&&(a.push(f),h.set(f,d))}}var y=new Ui(a);return new yc(h.yt(),y,i.fieldTransforms)},Sc.prototype.vc=function(t,e){return new _c({lc:t,methodName:e,path:Kr.G,Tc:!1},this.ii,this.serializer)},Sc.prototype.Fc=function(t,e,n){return void 0===n&&(n=!1),kc(e,this.vc(n?4:3,t))},Sc);function Sc(t,e){this.ii=t,this.serializer=e||zs.nt().yc(t)}function Dc(t,e,n,r,i){this.settings=t,this.ii=e,this.serializer=n,void 0===r&&this.mc(),this.fieldTransforms=r||[],this.Vt=i||[]}function kc(s,t){if(Oc(s))return Rc(\"Unsupported field value:\",t,s),xc(s,t);if(s instanceof sc)return function(t,e){if(!Nc(e.lc))throw e.dc(t._c+\"() can only be used with update() and set()\");if(null===e.path)throw e.dc(t._c+\"() is not currently supported inside arrays\");var n=t.Di(e);n&&e.fieldTransforms.push(n)}(s,t),null;if(t.path&&t.Vt.push(t.path),s instanceof Array){if(t.settings.Tc&&4!==t.lc)throw t.dc(\"Nested arrays are not supported\");return function(t){for(var e=[],n=0,r=0,i=s;r<i.length;r++){var o=kc(i[r],t.pc(n));null==o&&(o={nullValue:\"NULL_VALUE\"}),e.push(o),n++}return{arrayValue:{values:e}}}(t)}return function(t,e){if(null===t)return{nullValue:\"NULL_VALUE\"};if(\"number\"==typeof t)return e.serializer.ai(t);if(\"boolean\"==typeof t)return{booleanValue:t};if(\"string\"==typeof t)return{stringValue:t};if(t instanceof Date){var n=Vr.fromDate(t);return{timestampValue:e.serializer.C(n)}}if(t instanceof Vr){var r=new Vr(t.seconds,1e3*Math.floor(t.nanoseconds/1e3));return{timestampValue:e.serializer.C(r)}}if(t instanceof lc)return{geoPointValue:{latitude:t.latitude,longitude:t.longitude}};if(t instanceof Xh)return{bytesValue:e.serializer.ui(t)};if(t instanceof vl){var i=e.ii,o=t.firestore.Nc;if(!o.isEqual(i))throw e.dc(\"Document reference is for database \"+o.projectId+\"/\"+o.database+\" but should be for database \"+i.projectId+\"/\"+i.database);return{referenceValue:e.serializer._i(t.$c.path,t.firestore.Nc)}}throw e.dc(\"Unsupported field value: \"+Fh(t))}(s,t)}function xc(t,r){var i={};return ti(t)?r.path&&0<r.path.length&&r.Vt.push(r.path):Zr(t,function(t,e){var n=kc(e,r.Pc(t));null!=n&&(i[t]=n)}),{mapValue:{fields:i}}}function Oc(t){return!(\"object\"!=typeof t||null===t||t instanceof Array||t instanceof Date||t instanceof Vr||t instanceof lc||t instanceof Xh||t instanceof vl||t instanceof sc)}function Rc(t,e,n){if(!Oc(n)||!qh(n)){var r=Fh(n);throw\"an object\"===r?e.dc(t+\" a custom object\"):e.dc(t+\" \"+r)}}function Vc(t,e){if(e instanceof $h)return e.uc;if(\"string\"==typeof e)return Pc(t,e);throw new Dr(Sr.INVALID_ARGUMENT,\"Function \"+t+\"() called with invalid data. Field path arguments must be of type string or FieldPath.\")}function Pc(t,e){try{return function(e){if(0<=e.search(oc))throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid field path (\"+e+\"). Paths must not contain '~', '*', '/', '[', or ']'\");try{return new($h.bind.apply($h,i([void 0],e.split(\".\"))))}catch(t){throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid field path (\"+e+\"). Paths must not be empty, begin with '.', end with '.', or contain '..'\")}}(e).uc}catch(e){var n=e instanceof Error?e.message:e.toString();throw new Dr(Sr.INVALID_ARGUMENT,\"Function \"+t+\"() called with invalid data. \"+n)}}function Lc(t,e){return t.some(function(t){return t.isEqual(e)})}var Cc,Mc,jc,Uc=(Jc.prototype.Bc=function(){return 1===this.state||2===this.state||4===this.state},Jc.prototype.qc=function(){return 2===this.state},Jc.prototype.start=function(){3!==this.state?this.auth():this.Uc()},Jc.prototype.stop=function(){return y(this,void 0,void 0,function(){return v(this,function(t){switch(t.label){case 0:return this.Bc()?[4,this.close(0)]:[3,2];case 1:t.sent(),t.label=2;case 2:return[2]}})})},Jc.prototype.Qc=function(){this.state=0,this.Na.reset()},Jc.prototype.Wc=function(){var t=this;this.qc()&&null===this.xc&&(this.xc=this.Tr.yr(this.kc,6e4,function(){return t.jc()}))},Jc.prototype.Kc=function(t){this.Gc(),this.stream.send(t)},Jc.prototype.jc=function(){return y(this,void 0,void 0,function(){return v(this,function(t){return this.qc()?[2,this.close(0)]:[2]})})},Jc.prototype.Gc=function(){this.xc&&(this.xc.cancel(),this.xc=null)},Jc.prototype.close=function(e,n){return y(this,void 0,void 0,function(){return v(this,function(t){switch(t.label){case 0:return this.Gc(),this.Na.cancel(),this.Oc++,3!==e?this.Na.reset():n&&n.code===Sr.RESOURCE_EXHAUSTED?(Xs(n.toString()),Xs(\"Using maximum backoff delay to prevent overloading the backend.\"),this.Na.Vr()):n&&n.code===Sr.UNAUTHENTICATED&&this.Lc._(),null!==this.stream&&(this.zc(),this.stream.close(),this.stream=null),this.state=e,[4,this.listener.Hc(n)];case 1:return t.sent(),[2]}})})},Jc.prototype.zc=function(){},Jc.prototype.auth=function(){var n=this;this.state=1;var t=this.Yc(this.Oc),e=this.Oc;this.Lc.getToken().then(function(t){n.Oc===e&&n.Jc(t)},function(e){t(function(){var t=new Dr(Sr.UNKNOWN,\"Fetching auth token failed: \"+e.message);return n.Xc(t)})})},Jc.prototype.Jc=function(t){var e=this,n=this.Yc(this.Oc);this.stream=this.Zc(t),this.stream.t_(function(){n(function(){return e.state=2,e.listener.t_()})}),this.stream.Hc(function(t){n(function(){return e.Xc(t)})}),this.stream.onMessage(function(t){n(function(){return e.onMessage(t)})})},Jc.prototype.Uc=function(){var t=this;this.state=4,this.Na.gr(function(){return y(t,void 0,void 0,function(){return v(this,function(t){return this.state=0,this.start(),[2]})})})},Jc.prototype.Xc=function(t){return Ys(\"PersistentStream\",\"close with error: \"+t),this.stream=null,this.close(3,t)},Jc.prototype.Yc=function(e){var n=this;return function(t){n.Tr.oo(function(){return n.Oc===e?t():(Ys(\"PersistentStream\",\"stream callback skipped by getCloseGuardedDispatcher.\"),Promise.resolve())})}},Jc),qc=(n($c,jc=Uc),$c.prototype.Zc=function(t){return this.Mc.e_(\"Listen\",t)},$c.prototype.onMessage=function(t){this.Na.reset();var e=this.serializer.pi(t),n=this.serializer.bi(t);return this.listener.s_(e,n)},$c.prototype.i_=function(t){var e={};e.database=this.serializer.wi,e.addTarget=this.serializer.ee(t);var n=this.serializer.zi(t);n&&(e.labels=n),this.Kc(e)},$c.prototype.n_=function(t){var e={};e.database=this.serializer.wi,e.removeTarget=t,this.Kc(e)},$c),Fc=(n(Xc,Mc=Uc),Object.defineProperty(Xc.prototype,\"h_\",{get:function(){return this.r_},enumerable:!0,configurable:!0}),Xc.prototype.start=function(){this.r_=!1,Mc.prototype.start.call(this)},Xc.prototype.zc=function(){this.r_&&this.o_([])},Xc.prototype.Zc=function(t){return this.Mc.e_(\"Write\",t)},Xc.prototype.onMessage=function(t){if(Zs(!!t.streamToken),this.lastStreamToken=this.serializer.ci(t.streamToken),this.r_){this.Na.reset();var e=this.serializer.Li(t.writeResults,t.commitTime),n=this.serializer.fromVersion(t.commitTime);return this.listener.a_(n,e)}return Zs(!t.writeResults||0===t.writeResults.length),this.r_=!0,this.listener.u_()},Xc.prototype.c_=function(){var t={};t.database=this.serializer.wi,this.Kc(t)},Xc.prototype.o_=function(t){var e=this,n={streamToken:this.serializer.ui(this.lastStreamToken),writes:t.map(function(t){return e.serializer.vi(t)})};this.Kc(n)},Xc),Bc=(n(Yc,Cc=function(){this.__=void 0}),Yc.prototype.l_=function(e,n){var r=this;return this.credentials.getToken().then(function(t){return r.Mc.l_(e,n,t)}).catch(function(t){throw t.code===Sr.UNAUTHENTICATED&&r.credentials._(),t})},Yc.prototype.d_=function(e,n){var r=this;return this.credentials.getToken().then(function(t){return r.Mc.d_(e,n,t)}).catch(function(t){throw t.code===Sr.UNAUTHENTICATED&&r.credentials._(),t})},Yc),Gc=(Kc.prototype.R_=function(r){return y(this,void 0,void 0,function(){var e,n=this;return v(this,function(t){switch(t.label){case 0:if(this.m_(),0<this.mutations.length)throw new Dr(Sr.INVALID_ARGUMENT,\"Firestore transactions require all reads to be executed before all writes.\");return[4,function(s,u){return y(this,void 0,void 0,function(){var n,e,r,i,o;return v(this,function(t){switch(t.label){case 0:return n=tu(s),e={database:n.serializer.wi,documents:u.map(function(t){return n.serializer.fi(t)})},[4,n.d_(\"BatchGetDocuments\",e)];case 1:return r=t.sent(),i=new Map,r.forEach(function(t){var e=n.serializer.gi(t);i.set(e.key.toString(),e)}),o=[],[2,(u.forEach(function(t){var e=i.get(t.toString());Zs(!!e),o.push(e)}),o)]}})})}(this.f_,r)];case 1:return[2,((e=t.sent()).forEach(function(t){t instanceof Io||t instanceof To?n.A_(t):Js()}),e)]}})})},Kc.prototype.set=function(t,e){this.write(e.Rc(t,this.Rt(t))),this.w_.add(t)},Kc.prototype.update=function(t,e){try{this.write(e.Rc(t,this.P_(t)))}catch(t){this.I_=t}this.w_.add(t)},Kc.prototype.delete=function(t){this.write([new Qi(t,this.Rt(t))]),this.w_.add(t)},Kc.prototype.commit=function(){return y(this,void 0,void 0,function(){var e,n=this;return v(this,function(t){switch(t.label){case 0:if(this.m_(),this.I_)throw this.I_;return e=this.T_,this.mutations.forEach(function(t){e=e.remove(t.key)}),e.forEach(function(t,e){n.mutations.push(new Hi(t,n.Rt(t)))}),[4,function(i,o){return y(this,void 0,void 0,function(){var e,n,r;return v(this,function(t){switch(t.label){case 0:return e=tu(i),n={database:e.serializer.wi,writes:o.map(function(t){return e.serializer.vi(t)})},[4,e.l_(\"Commit\",n)];case 1:return r=t.sent(),[2,e.serializer.Li(r.writeResults,r.commitTime)]}})})}(this.f_,this.mutations)];case 1:return t.sent(),this.E_=!0,[2]}})})},Kc.prototype.A_=function(t){var e;if(t instanceof To)e=t.version;else{if(!(t instanceof Io))throw Js();e=Pr.min()}var n=this.T_.get(t.key);if(null!==n){if(!e.isEqual(n))throw new Dr(Sr.ABORTED,\"Document version changed between two reads.\")}else this.T_=this.T_.me(t.key,e)},Kc.prototype.Rt=function(t){var e=this.T_.get(t);return!this.w_.has(t)&&e?Fi.updateTime(e):Fi.ft()},Kc.prototype.P_=function(t){var e=this.T_.get(t);if(this.w_.has(t)||!e)return Fi.exists(!0);if(e.isEqual(Pr.min()))throw new Dr(Sr.INVALID_ARGUMENT,\"Can't update a document that doesn't exist.\");return Fi.updateTime(e)},Kc.prototype.write=function(t){this.m_(),this.mutations=this.mutations.concat(t)},Kc.prototype.m_=function(){},Kc),zc=(Hc.prototype.b_=function(){var t=this;0===this.g_&&(this.v_(\"Unknown\"),this.p_=this.wa.yr(\"online_state_timeout\",1e4,function(){return t.p_=null,t.S_(\"Backend didn't respond within 10 seconds.\"),t.v_(\"Offline\"),Promise.resolve()}))},Hc.prototype.D_=function(t){\"Online\"===this.state?this.v_(\"Unknown\"):(this.g_++,1<=this.g_&&(this.C_(),this.S_(\"Connection failed 1 times. Most recent error: \"+t.toString()),this.v_(\"Offline\")))},Hc.prototype.set=function(t){this.C_(),this.g_=0,\"Online\"===t&&(this.y_=!1),this.v_(t)},Hc.prototype.v_=function(t){t!==this.state&&(this.state=t,this.V_(t))},Hc.prototype.S_=function(t){var e=\"Could not reach Cloud Firestore backend. \"+t+\"\\nThis typically indicates that your device does not have a healthy Internet connection at the moment. The client will operate in offline mode until it is able to successfully connect to the backend.\";this.y_?(Xs(e),this.y_=!1):Ys(\"OnlineStateTracker\",e)},Hc.prototype.C_=function(){null!==this.p_&&(this.p_.cancel(),this.p_=null)},Hc),Wc=(Qc.prototype.start=function(){return this.enableNetwork()},Qc.prototype.enableNetwork=function(){return this.networkEnabled=!0,this.J_()},Qc.prototype.J_=function(){return y(this,void 0,void 0,function(){var e;return v(this,function(t){switch(t.label){case 0:return this.B_()?(e=this.G_,[4,this.F_.zo()]):[3,3];case 1:return e.lastStreamToken=t.sent(),this.X_()?this.Z_():this.U_.set(\"Unknown\"),[4,this.tl()];case 2:t.sent(),t.label=3;case 3:return[2]}})})},Qc.prototype.disableNetwork=function(){return y(this,void 0,void 0,function(){return v(this,function(t){switch(t.label){case 0:return this.networkEnabled=!1,[4,this.el()];case 1:return t.sent(),this.U_.set(\"Offline\"),[2]}})})},Qc.prototype.el=function(){return y(this,void 0,void 0,function(){return v(this,function(t){switch(t.label){case 0:return[4,this.G_.stop()];case 1:return t.sent(),[4,this.Q_.stop()];case 2:return t.sent(),0<this.N_.length&&(Ys(\"RemoteStore\",\"Stopping write stream with \"+this.N_.length+\" pending writes\"),this.N_=[]),this.sl(),[2]}})})},Qc.prototype.Ro=function(){return y(this,void 0,void 0,function(){return v(this,function(t){switch(t.label){case 0:return Ys(\"RemoteStore\",\"RemoteStore shutting down.\"),this.networkEnabled=!1,[4,this.el()];case 1:return t.sent(),this.O_.Ro(),this.U_.set(\"Unknown\"),[2]}})})},Qc.prototype.listen=function(t){this.k_.has(t.targetId)||(this.k_.set(t.targetId,t),this.X_()?this.Z_():this.Q_.qc()&&this.il(t))},Qc.prototype.nl=function(t){this.k_.delete(t),this.Q_.qc()&&this.rl(t),0===this.k_.size&&(this.Q_.qc()?this.Q_.Wc():this.B_()&&this.U_.set(\"Unknown\"))},Qc.prototype.si=function(t){return this.k_.get(t)||null},Qc.prototype.ei=function(t){return this.hl.ei(t)},Qc.prototype.il=function(t){this.M_.Ns(t.targetId),this.Q_.i_(t)},Qc.prototype.rl=function(t){this.M_.Ns(t),this.Q_.n_(t)},Qc.prototype.Z_=function(){this.M_=new ks(this),this.Q_.start(),this.U_.b_()},Qc.prototype.X_=function(){return this.B_()&&!this.Q_.Bc()&&0<this.k_.size},Qc.prototype.B_=function(){return!this.L_&&this.isPrimary&&this.networkEnabled},Qc.prototype.sl=function(){this.M_=null},Qc.prototype.W_=function(){return y(this,void 0,void 0,function(){var n=this;return v(this,function(t){return this.k_.forEach(function(t,e){n.il(t)}),[2]})})},Qc.prototype.j_=function(e){return y(this,void 0,void 0,function(){return v(this,function(t){return this.sl(),this.X_()?(this.U_.D_(e),this.Z_()):this.U_.set(\"Unknown\"),[2]})})},Qc.prototype.K_=function(i,o){return y(this,void 0,void 0,function(){var e,n,r;return v(this,function(t){switch(t.label){case 0:if(this.U_.set(\"Online\"),!(i instanceof Ts&&2===i.state&&i.cause))return[3,6];t.label=1;case 1:return t.trys.push([1,3,,5]),[4,this.ol(i)];case 2:return t.sent(),[3,5];case 3:return e=t.sent(),Ys(\"RemoteStore\",\"Failed to remove targets %s: %s \",i.targetIds.join(\",\"),e),[4,this.al(e)];case 4:return t.sent(),[3,5];case 5:return[3,13];case 6:if(i instanceof bs?this.M_.qs(i):i instanceof Es?this.M_.Hs(i):this.M_.Ws(i),o.isEqual(Pr.min()))return[3,13];t.label=7;case 7:return t.trys.push([7,11,,13]),[4,this.F_.ah()];case 8:return n=t.sent(),0<=o.S(n)?[4,this.ul(o)]:[3,10];case 9:t.sent(),t.label=10;case 10:return[3,13];case 11:return Ys(\"RemoteStore\",\"Failed to raise snapshot:\",r=t.sent()),[4,this.al(r)];case 12:return t.sent(),[3,13];case 13:return[2]}})})},Qc.prototype.al=function(n){return y(this,void 0,void 0,function(){var e=this;return v(this,function(t){switch(t.label){case 0:if(!$a(n))throw n;return this.L_=!0,[4,this.el()];case 1:return t.sent(),this.U_.set(\"Offline\"),this.wa.Ua(function(){return y(e,void 0,void 0,function(){return v(this,function(t){switch(t.label){case 0:return Ys(\"RemoteStore\",\"Retrying IndexedDB access\"),[4,this.F_.ah()];case 1:return t.sent(),this.L_=!1,[4,this.J_()];case 2:return t.sent(),[2]}})})}),[2]}})})},Qc.prototype.ul=function(r){var i=this,t=this.M_.Xs(r);return t.as.forEach(function(t,e){if(0<t.resumeToken.rt()){var n=i.k_.get(e);n&&i.k_.set(e,n.we(t.resumeToken,r))}}),t.us.forEach(function(t){var e=i.k_.get(t);if(e){i.k_.set(t,e.we(ei.ht,e.Ee)),i.rl(t);var n=new Lo(e.target,t,1,e.sequenceNumber);i.il(n)}}),this.hl.Mu(t)},Qc.prototype.ol=function(o){return y(this,void 0,void 0,function(){var e,n,r,i;return v(this,function(t){switch(t.label){case 0:e=o.cause,n=0,r=o.targetIds,t.label=1;case 1:return n<r.length?(i=r[n],this.k_.has(i)?[4,this.hl.cl(i,e)]:[3,3]):[3,5];case 2:t.sent(),this.k_.delete(i),this.M_.removeTarget(i),t.label=3;case 3:t.label=4;case 4:return n++,[3,1];case 5:return[2]}})})},Qc.prototype.tl=function(){return y(this,void 0,void 0,function(){var e,n;return v(this,function(t){switch(t.label){case 0:return this._l()?(e=0<this.N_.length?this.N_[this.N_.length-1].batchId:-1,[4,this.F_.Bu(e)]):[3,5];case 1:return null!==(n=t.sent())?[3,2]:(0===this.N_.length&&this.G_.Wc(),[3,4]);case 2:return this.ll(n),[4,this.tl()];case 3:t.sent(),t.label=4;case 4:t.label=5;case 5:return this.dl()&&this.fl(),[2]}})})},Qc.prototype._l=function(){return this.B_()&&this.N_.length<10},Qc.prototype.Tl=function(){return this.N_.length},Qc.prototype.ll=function(t){this.N_.push(t),this.G_.qc()&&this.G_.h_&&this.G_.o_(t.mutations)},Qc.prototype.dl=function(){return this.B_()&&!this.G_.Bc()&&0<this.N_.length},Qc.prototype.fl=function(){this.G_.start()},Qc.prototype.z_=function(){return y(this,void 0,void 0,function(){return v(this,function(t){return this.G_.c_(),[2]})})},Qc.prototype.Y_=function(){var r=this;return this.F_.Ho(this.G_.lastStreamToken).then(function(){for(var t=0,e=r.N_;t<e.length;t++){var n=e[t];r.G_.o_(n.mutations)}}).catch(_h)},Qc.prototype.a_=function(t,e){var n=this,r=this.N_.shift(),i=cu.from(r,t,e,this.G_.lastStreamToken);return this.hl.El(i).then(function(){return n.tl()})},Qc.prototype.H_=function(e){return y(this,void 0,void 0,function(){return v(this,function(t){switch(t.label){case 0:return e&&0<this.N_.length?this.G_.h_?[4,this.Il(e)]:[3,2]:[3,5];case 1:return t.sent(),[3,4];case 2:return[4,this.wl(e)];case 3:t.sent(),t.label=4;case 4:this.dl()&&this.fl(),t.label=5;case 5:return[2]}})})},Qc.prototype.wl=function(e){return y(this,void 0,void 0,function(){return v(this,function(t){return Xo(e.code)?[2,(Ys(\"RemoteStore\",\"RemoteStore error before completed handshake; resetting stream token: \",this.G_.lastStreamToken),this.G_.lastStreamToken=ei.ht,this.F_.Ho(ei.ht).catch(_h))]:[2]})})},Qc.prototype.Il=function(i){return y(this,void 0,void 0,function(){var e,n,r=this;return v(this,function(t){return Xo(n=i.code)&&n!==Sr.ABORTED?(e=this.N_.shift(),[2,(this.G_.Qc(),this.hl.Rl(e.batchId,i).then(function(){return r.tl()}))]):[2]})})},Qc.prototype.ml=function(){return new Gc(this.f_)},Qc.prototype.q_=function(){return y(this,void 0,void 0,function(){return v(this,function(t){switch(t.label){case 0:return this.networkEnabled=!1,[4,this.el()];case 1:return t.sent(),this.U_.set(\"Unknown\"),[4,this.enableNetwork()];case 2:return t.sent(),[2]}})})},Qc.prototype.Al=function(){return y(this,void 0,void 0,function(){return v(this,function(t){switch(t.label){case 0:return this.B_()?(Ys(\"RemoteStore\",\"RemoteStore restarting streams for new credential\"),[4,this.q_()]):[3,2];case 1:t.sent(),t.label=2;case 2:return[2]}})})},Qc.prototype.Pl=function(e){return y(this,void 0,void 0,function(){return v(this,function(t){switch(t.label){case 0:return(this.isPrimary=e)&&this.networkEnabled?[4,this.enableNetwork()]:[3,2];case 1:return t.sent(),[3,5];case 2:return e?[3,4]:[4,this.el()];case 3:t.sent(),this.U_.set(\"Unknown\"),t.label=4;case 4:t.label=5;case 5:return[2]}})})},Qc);function Qc(t,e,n,r,i){var o,s,u,a,h,c,f,l,p=this;this.F_=t,this.f_=e,this.wa=n,this.N_=[],this.k_=new Map,this.M_=null,this.networkEnabled=!1,this.isPrimary=!1,this.L_=!1,this.O_=i,this.O_.x_(function(t){n.oo(function(){return y(p,void 0,void 0,function(){return v(this,function(t){switch(t.label){case 0:return this.B_()?(Ys(\"RemoteStore\",\"Restarting streams for network reachability change.\"),[4,this.q_()]):[3,2];case 1:t.sent(),t.label=2;case 2:return[2]}})})})}),this.U_=new zc(n,r),this.Q_=(h=this.f_,c=n,f={t_:this.W_.bind(this),Hc:this.j_.bind(this),s_:this.K_.bind(this)},l=tu(h),new qc(c,l.Mc,l.credentials,l.serializer,f)),this.G_=(o=this.f_,s=n,u={t_:this.z_.bind(this),Hc:this.H_.bind(this),u_:this.Y_.bind(this),a_:this.a_.bind(this)},a=tu(o),new Fc(s,a.Mc,a.credentials,a.serializer,u))}function Hc(t,e){this.wa=t,this.V_=e,this.state=\"Unknown\",this.g_=0,this.p_=null,this.y_=!0}function Kc(t){this.f_=t,this.T_=ys(),this.mutations=[],this.E_=!1,this.I_=null,this.w_=new Set}function Yc(t,e,n){var r=this;return(r=Cc.call(this)||this).Mc=t,r.credentials=e,r.serializer=n,r}function Xc(t,e,n,r,i){var o=this;return(o=Mc.call(this,t,\"write_stream_connection_backoff\",\"write_stream_idle\",e,n,i)||this).serializer=r,o.r_=!1,o.lastStreamToken=ei.ht,o}function $c(t,e,n,r,i){var o=this;return(o=jc.call(this,t,\"listen_stream_connection_backoff\",\"listen_stream_idle\",e,n,i)||this).serializer=r,o}function Jc(t,e,n,r,i,o){this.Tr=t,this.kc=n,this.Mc=r,this.Lc=i,this.listener=o,this.state=0,this.Oc=0,this.xc=null,this.stream=null,this.Na=new ku(t,e)}function Zc(t,e){return\"firestore_clients_\"+t+\"_\"+e}function tf(t,e,n){var r=\"firestore_mutations_\"+t+\"_\"+n;return e.t()&&(r+=\"_\"+e.uid),r}function ef(t,e){return\"firestore_targets_\"+t+\"_\"+e}function nf(t){this.key=t}function rf(t){this.key=t}function of(t,e,n){this.query=t,this.targetId=e,this.view=n}function sf(t){this.key=t,this.Bd=!1}function uf(){this.Vf=void 0,this.gf=[]}var af,hf,cf=(Ff.Vl=function(t,e,n){var r=JSON.parse(n),i=\"object\"==typeof r&&-1!==[\"pending\",\"acknowledged\",\"rejected\"].indexOf(r.state)&&(void 0===r.error||\"object\"==typeof r.error),o=void 0;return i&&r.error&&(i=\"string\"==typeof r.error.message&&\"string\"==typeof r.error.code)&&(o=new Dr(r.error.code,r.error.message)),i?new Ff(t,e,r.state,o):(Xs(\"SharedClientState\",\"Failed to parse mutation state for ID '\"+e+\"': \"+n),null)},Ff.prototype.gl=function(){var t={state:this.state,updateTimeMs:Date.now()};return this.error&&(t.error={code:this.error.code,message:this.error.message}),JSON.stringify(t)},Ff),ff=(qf.Vl=function(t,e){var n=JSON.parse(e),r=\"object\"==typeof n&&-1!==[\"not-current\",\"current\",\"rejected\"].indexOf(n.state)&&(void 0===n.error||\"object\"==typeof n.error),i=void 0;return r&&n.error&&(r=\"string\"==typeof n.error.message&&\"string\"==typeof n.error.code)&&(i=new Dr(n.error.code,n.error.message)),r?new qf(t,n.state,i):(Xs(\"SharedClientState\",\"Failed to parse target state for ID '\"+t+\"': \"+e),null)},qf.prototype.gl=function(){var t={state:this.state,updateTimeMs:Date.now()};return this.error&&(t.error={code:this.error.code,message:this.error.message}),JSON.stringify(t)},qf),lf=(Uf.Vl=function(t,e){for(var n=JSON.parse(e),r=\"object\"==typeof n&&n.activeTargetIds instanceof Array,i=ws(),o=0;r&&o<n.activeTargetIds.length;++o)r=oi(n.activeTargetIds[o]),i=i.add(n.activeTargetIds[o]);return r?new Uf(t,i):(Xs(\"SharedClientState\",\"Failed to parse client data for instance '\"+t+\"': \"+e),null)},Uf),pf=(jf.Vl=function(t){var e=JSON.parse(t);return\"object\"==typeof e&&-1!==[\"Unknown\",\"Online\",\"Offline\"].indexOf(e.onlineState)&&\"string\"==typeof e.clientId?new jf(e.clientId,e.onlineState):(Xs(\"SharedClientState\",\"Failed to parse online state: \"+t),null)},jf),df=(Mf.prototype.pl=function(t){this.activeTargetIds=this.activeTargetIds.add(t)},Mf.prototype.yl=function(t){this.activeTargetIds=this.activeTargetIds.delete(t)},Mf.prototype.gl=function(){var t={activeTargetIds:this.activeTargetIds.W(),updateTimeMs:Date.now()};return JSON.stringify(t)},Mf),yf=(Cf.jh=function(t){return!(!t.window||null==t.window.localStorage)},Cf.prototype.start=function(){return y(this,void 0,void 0,function(){var e,n,r,i,o,s,u,a,h,c,f,l=this;return v(this,function(t){switch(t.label){case 0:return[4,this.hl.po()];case 1:for(e=t.sent(),n=0,r=e;n<r.length;n++)(i=r[n])!==this.bl&&(o=this.getItem(Zc(this.persistenceKey,i)))&&(s=lf.Vl(i,o))&&(this.Dl=this.Dl.me(s.clientId,s));for(this.Ol(),(u=this.storage.getItem(this.Ll))&&(a=this.xl(u))&&this.Bl(a),h=0,c=this.Cl;h<c.length;h++)f=c[h],this.Sl(f);return this.Cl=[],this.platform.window.addEventListener(\"unload\",function(){return l.Ro()}),this.io=!0,[2]}})})},Cf.prototype.lr=function(t){this.setItem(this.Nl,JSON.stringify(t))},Cf.prototype.ql=function(){return this.Ul(this.Dl)},Cf.prototype.Ql=function(n){var r=!1;return this.Dl.forEach(function(t,e){e.activeTargetIds.has(n)&&(r=!0)}),r},Cf.prototype.Wl=function(t){this.jl(t,\"pending\")},Cf.prototype.Kl=function(t,e,n){this.jl(t,e,n),this.Gl(t)},Cf.prototype.zl=function(t){var e=\"not-current\";if(this.Ql(t)){var n=this.storage.getItem(ef(this.persistenceKey,t));if(n){var r=ff.Vl(t,n);r&&(e=r.state)}}return this.Hl.pl(t),this.Ol(),e},Cf.prototype.Yl=function(t){this.Hl.yl(t),this.Ol()},Cf.prototype.Jl=function(t){return this.Hl.activeTargetIds.has(t)},Cf.prototype.Xl=function(t){this.removeItem(ef(this.persistenceKey,t))},Cf.prototype.Zl=function(t,e,n){this.td(t,e,n)},Cf.prototype.Su=function(t,e,n){var r=this;e.forEach(function(t){r.Gl(t)}),this.currentUser=t,n.forEach(function(t){r.Wl(t)})},Cf.prototype.ed=function(t){this.sd(t)},Cf.prototype.Ro=function(){this.io&&(this.platform.window.removeEventListener(\"storage\",this.vl),this.removeItem(this.Fl),this.io=!1)},Cf.prototype.getItem=function(t){var e=this.storage.getItem(t);return Ys(\"SharedClientState\",\"READ\",t,e),e},Cf.prototype.setItem=function(t,e){Ys(\"SharedClientState\",\"SET\",t,e),this.storage.setItem(t,e)},Cf.prototype.removeItem=function(t){Ys(\"SharedClientState\",\"REMOVE\",t),this.storage.removeItem(t)},Cf.prototype.Sl=function(u){var t=this;if(u.storageArea===this.storage){if(Ys(\"SharedClientState\",\"EVENT\",u.key,u.newValue),u.key===this.Fl)return void Xs(\"Received WebStorage notification for local change. Another client might have garbage-collected our state\");this.Tr.Ua(function(){return y(t,void 0,void 0,function(){var e,n,r,i,o,s;return v(this,function(t){if(this.io){if(null!==u.key)if(this.$l.test(u.key)){if(null==u.newValue)return e=this.nd(u.key),[2,this.rd(e,null)];if(n=this.hd(u.key,u.newValue))return[2,this.rd(n.clientId,n)]}else if(this.kl.test(u.key)){if(null!==u.newValue&&(r=this.od(u.key,u.newValue)))return[2,this.ad(r)]}else if(this.Ml.test(u.key)){if(null!==u.newValue&&(i=this.ud(u.key,u.newValue)))return[2,this._d(i)]}else if(u.key===this.Ll){if(null!==u.newValue&&(o=this.xl(u.newValue)))return[2,this.Bl(o)]}else u.key===this.Nl&&(s=function(t){var e=mu.dr;if(null!=t)try{var n=JSON.parse(t);Zs(\"number\"==typeof n),e=n}catch(t){Xs(\"SharedClientState\",\"Failed to read sequence number from WebStorage\",t)}return e}(u.newValue))!==mu.dr&&this.ur(s)}else this.Cl.push(u);return[2]})})})}},Object.defineProperty(Cf.prototype,\"Hl\",{get:function(){return this.Dl.get(this.bl)},enumerable:!0,configurable:!0}),Cf.prototype.Ol=function(){this.setItem(this.Fl,this.Hl.gl())},Cf.prototype.jl=function(t,e,n){var r=new cf(this.currentUser,t,e,n),i=tf(this.persistenceKey,this.currentUser,t);this.setItem(i,r.gl())},Cf.prototype.Gl=function(t){var e=tf(this.persistenceKey,this.currentUser,t);this.removeItem(e)},Cf.prototype.sd=function(t){var e={clientId:this.bl,onlineState:t};this.storage.setItem(this.Ll,JSON.stringify(e))},Cf.prototype.td=function(t,e,n){var r=ef(this.persistenceKey,t),i=new ff(t,e,n);this.setItem(r,i.gl())},Cf.prototype.nd=function(t){var e=this.$l.exec(t);return e?e[1]:null},Cf.prototype.hd=function(t,e){var n=this.nd(t);return lf.Vl(n,e)},Cf.prototype.od=function(t,e){var n=this.kl.exec(t),r=Number(n[1]),i=void 0!==n[2]?n[2]:null;return cf.Vl(new Tr(i),r,e)},Cf.prototype.ud=function(t,e){var n=this.Ml.exec(t),r=Number(n[1]);return ff.Vl(r,e)},Cf.prototype.xl=function(t){return pf.Vl(t)},Cf.prototype.ad=function(e){return y(this,void 0,void 0,function(){return v(this,function(t){return e.user.uid===this.currentUser.uid?[2,this.hl.ld(e.batchId,e.state,e.error)]:(Ys(\"SharedClientState\",\"Ignoring mutation for non-active user \"+e.user.uid),[2])})})},Cf.prototype._d=function(t){return this.hl.dd(t.targetId,t.state,t.error)},Cf.prototype.rd=function(t,e){var n=this,r=e?this.Dl.me(t,e):this.Dl.remove(t),i=this.Ul(this.Dl),o=this.Ul(r),s=[],u=[];return o.forEach(function(t){i.has(t)||s.push(t)}),i.forEach(function(t){o.has(t)||u.push(t)}),this.hl.fd(s,u).then(function(){n.Dl=r})},Cf.prototype.Bl=function(t){this.Dl.get(t.clientId)&&this.V_(t.onlineState)},Cf.prototype.Ul=function(t){var n=ws();return t.forEach(function(t,e){n=n.He(e.activeTargetIds)}),n},Cf),vf=(Lf.prototype.Wl=function(t){},Lf.prototype.Kl=function(t,e,n){},Lf.prototype.zl=function(t){return this.Td.pl(t),this.Ed[t]||\"not-current\"},Lf.prototype.Zl=function(t,e,n){this.Ed[t]=e},Lf.prototype.Yl=function(t){this.Td.yl(t)},Lf.prototype.Jl=function(t){return this.Td.activeTargetIds.has(t)},Lf.prototype.Xl=function(t){delete this.Ed[t]},Lf.prototype.ql=function(){return this.Td.activeTargetIds},Lf.prototype.Ql=function(t){return this.Td.activeTargetIds.has(t)},Lf.prototype.start=function(){return this.Td=new df,Promise.resolve()},Lf.prototype.Su=function(t,e,n){},Lf.prototype.ed=function(t){},Lf.prototype.Ro=function(){},Lf.prototype.lr=function(t){},Lf),mf=(Object.defineProperty(Pf.prototype,\"Ad\",{get:function(){return this.Id},enumerable:!0,configurable:!0}),Pf.prototype.Pd=function(t,e){var u=this,a=e?e.Vd:new Ns,h=e?e.md:this.md,c=e?e.ns:this.ns,f=h,l=!1,p=this.query.oe()&&h.size===this.query.limit?h.last():null,d=this.query.ae()&&h.size===this.query.limit?h.first():null;if(t.pe(function(t,e){var n=h.get(t),r=e instanceof To?e:null;r=r&&(u.query.matches(r)?r:null);var i=!!n&&u.ns.has(n.key),o=!!r&&(r.At||u.ns.has(r.key)&&r.hasCommittedMutations),s=!1;n&&r?n.data().isEqual(r.data())?i!==o&&(a.track({type:3,doc:r}),s=!0):u.gd(n,r)||(a.track({type:2,doc:r}),s=!0,(p&&0<u.query.se(r,p)||d&&u.query.se(r,d)<0)&&(l=!0)):!n&&r?(a.track({type:0,doc:r}),s=!0):n&&!r&&(a.track({type:1,doc:n}),s=!0,(p||d)&&(l=!0)),s&&(c=r?(f=f.add(r),o?c.add(t):c.delete(t)):(f=f.delete(t),c.delete(t)))}),this.query.oe()||this.query.ae())for(;f.size>this.query.limit;){var n=this.query.oe()?f.last():f.first();f=f.delete(n.key),c=c.delete(n.key),a.track({type:1,doc:n})}return{md:f,Vd:a,pd:l,ns:c}},Pf.prototype.gd=function(t,e){return t.At&&e.hasCommittedMutations&&!e.At},Pf.prototype.xn=function(t,e,n){var o=this,r=this.md;this.md=t.md,this.ns=t.ns;var i=t.Vd.es();i.sort(function(t,e){return r=t.type,i=e.type,n(r)-n(i)||o.query.se(t.doc,e.doc);function n(t){switch(t){case 0:return 1;case 2:case 3:return 2;case 1:return 0;default:return Js()}}var r,i}),this.yd(n);var s=e?this.bd():[],u=0===this.Rd.size&&this.fs?1:0,a=u!==this.wd;return this.wd=u,0!==i.length||a?{snapshot:new _s(this.query,t.md,r,i,t.ns,0==u,a,!1),vd:s}:{vd:s}},Pf.prototype.Sd=function(t){return this.fs&&\"Offline\"===t?(this.fs=!1,this.xn({md:this.md,Vd:new Ns,ns:this.ns,pd:!1},!1)):{vd:[]}},Pf.prototype.Dd=function(t){return!this.Id.has(t)&&!!this.md.has(t)&&!this.md.get(t).At},Pf.prototype.yd=function(t){var e=this;t&&(t.Ts.forEach(function(t){return e.Id=e.Id.add(t)}),t.Es.forEach(function(t){}),t.Is.forEach(function(t){return e.Id=e.Id.delete(t)}),this.fs=t.fs)},Pf.prototype.bd=function(){var e=this;if(!this.fs)return[];var n=this.Rd;this.Rd=ms(),this.md.forEach(function(t){e.Dd(t.key)&&(e.Rd=e.Rd.add(t.key))});var r=[];return n.forEach(function(t){e.Rd.has(t)||r.push(new rf(t))}),this.Rd.forEach(function(t){n.has(t)||r.push(new nf(t))}),r},Pf.prototype.Cd=function(t){this.Id=t.ju,this.Rd=ms();var e=this.Pd(t.documents);return this.xn(e,!0)},Pf.prototype.Fd=function(){return _s.os(this.query,this.md,this.ns,0===this.wd)},Pf),gf=(Vf.prototype.kd=function(){this.Md()},Vf.prototype.Md=function(){var t=this;this.Na.gr(function(){return y(t,void 0,void 0,function(){var e,n,r=this;return v(this,function(t){return e=this.Nd.ml(),(n=this.Ld(e))&&n.then(function(t){r.wa.oo(function(){return e.commit().then(function(){r.Aa.resolve(t)}).catch(function(t){r.Od(t)})})}).catch(function(t){r.Od(t)}),[2]})})})},Vf.prototype.Ld=function(t){try{var e=this.updateFunction(t);return!ri(e)&&e.catch&&e.then?e:(this.Aa.reject(Error(\"Transaction callback must return a Promise\")),null)}catch(t){return this.Aa.reject(t),null}},Vf.prototype.Od=function(t){var e=this;0<this.$d&&this.xd(t)?(--this.$d,this.wa.oo(function(){return e.Md(),Promise.resolve()})):this.Aa.reject(t)},Vf.prototype.xd=function(t){if(\"FirebaseError\"!==t.name)return!1;var e=t.code;return\"aborted\"===e||\"failed-precondition\"===e||!Xo(e)},Vf),wf=(Object.defineProperty(Rf.prototype,\"Zd\",{get:function(){return!0},enumerable:!0,configurable:!0}),Rf.prototype.subscribe=function(t){this.Qd=t},Rf.prototype.listen=function(s){return y(this,void 0,void 0,function(){var e,n,r,i,o;return v(this,function(t){switch(t.label){case 0:return this.tf(\"listen()\"),(r=this.Wd.get(s))?(e=r.targetId,this.qd.zl(e),n=r.view.Fd(),[3,4]):[3,1];case 1:return[4,this.F_.Uu(s.ee())];case 2:return i=t.sent(),o=this.qd.zl(i.targetId),e=i.targetId,[4,this.ef(s,e,\"current\"===o)];case 3:n=t.sent(),this.Zd&&this.Nd.listen(i),t.label=4;case 4:return[2,n]}})})},Rf.prototype.ef=function(u,a,h){return y(this,void 0,void 0,function(){var e,n,r,i,o,s;return v(this,function(t){switch(t.label){case 0:return[4,this.F_.Wu(u,!0)];case 1:return e=t.sent(),n=new mf(u,e.ju),r=n.Pd(e.documents),i=Ss.ds(a,h&&\"Offline\"!==this.onlineState),o=n.xn(r,this.Zd,i),this.sf(a,o.vd),s=new of(u,a,n),[2,(this.Wd.set(u,s),this.jd.has(a)?this.jd.get(a).push(u):this.jd.set(a,[u]),o.snapshot)]}})})},Rf.prototype.nl=function(i){return y(this,void 0,void 0,function(){var e,n,r=this;return v(this,function(t){switch(t.label){case 0:return this.tf(\"unlisten()\"),e=this.Wd.get(i),1<(n=this.jd.get(e.targetId)).length?[2,(this.jd.set(e.targetId,n.filter(function(t){return!t.isEqual(i)})),void this.Wd.delete(i))]:this.Zd?(this.qd.Yl(e.targetId),this.qd.Ql(e.targetId)?[3,2]:[4,this.F_.Qu(e.targetId,!1).then(function(){r.qd.Xl(e.targetId),r.Nd.nl(e.targetId),r.if(e.targetId)}).catch(_h)]):[3,3];case 1:t.sent(),t.label=2;case 2:return[3,5];case 3:return this.if(e.targetId),[4,this.F_.Qu(e.targetId,!0)];case 4:t.sent(),t.label=5;case 5:return[2]}})})},Rf.prototype.write=function(i,o){return y(this,void 0,void 0,function(){var e,n,r;return v(this,function(t){switch(t.label){case 0:this.tf(\"write()\"),t.label=1;case 1:return t.trys.push([1,5,,6]),[4,this.F_.Nu(i)];case 2:return e=t.sent(),this.qd.Wl(e.batchId),this.nf(e.batchId,o),[4,this.rf(e.Dn)];case 3:return t.sent(),[4,this.Nd.tl()];case 4:return t.sent(),[3,6];case 5:return n=t.sent(),r=hh(n,\"Failed to persist write\"),o.reject(r),[3,6];case 6:return[2]}})})},Rf.prototype.runTransaction=function(t,e,n){new gf(t,this.Nd,e,n).kd()},Rf.prototype.Mu=function(n){return y(this,void 0,void 0,function(){var e,r=this;return v(this,function(t){switch(t.label){case 0:this.tf(\"applyRemoteEvent()\"),t.label=1;case 1:return t.trys.push([1,4,,6]),[4,this.F_.Mu(n)];case 2:return e=t.sent(),n.as.forEach(function(t,e){var n=r.zd.get(e);n&&(Zs(t.Ts.size+t.Es.size+t.Is.size<=1),0<t.Ts.size?n.Bd=!0:0<t.Es.size?Zs(n.Bd):0<t.Is.size&&(Zs(n.Bd),n.Bd=!1))}),[4,this.rf(e,n)];case 3:return t.sent(),[3,6];case 4:return[4,_h(t.sent())];case 5:return t.sent(),[3,6];case 6:return[2]}})})},Rf.prototype.Sd=function(r,t){this.tf(\"applyOnlineStateChange()\");var i=[];this.Wd.forEach(function(t,e){var n=e.view.Sd(r);n.snapshot&&i.push(n.snapshot)}),this.Qd.hf(r),this.Qd.s_(i),this.onlineState=r},Rf.prototype.cl=function(u,a){return y(this,void 0,void 0,function(){var e,n,r,i,o,s=this;return v(this,function(t){switch(t.label){case 0:return this.tf(\"rejectListens()\"),this.qd.Zl(u,\"rejected\",a),e=this.zd.get(u),(n=e&&e.key)?(r=(r=new Jo(Xr.N)).me(n,new Io(n,Pr.min())),i=ms().add(n),o=new As(Pr.min(),new Map,new os(ru),r,i),[4,this.Mu(o)]):[3,2];case 1:return t.sent(),this.Gd=this.Gd.remove(n),this.zd.delete(u),this.af(),[3,4];case 2:return[4,this.F_.Qu(u,!1).then(function(){return s.if(u,a)}).catch(_h)];case 3:t.sent(),t.label=4;case 4:return[2]}})})},Rf.prototype.El=function(r){return y(this,void 0,void 0,function(){var e,n;return v(this,function(t){switch(t.label){case 0:this.tf(\"applySuccessfulWrite()\"),e=r.batch.batchId,this.uf(e,null),this.cf(e),t.label=1;case 1:return t.trys.push([1,4,,6]),[4,this.F_.Ko(r)];case 2:return n=t.sent(),this.qd.Kl(e,\"acknowledged\"),[4,this.rf(n)];case 3:return t.sent(),[3,6];case 4:return[4,_h(t.sent())];case 5:return t.sent(),[3,6];case 6:return[2]}})})},Rf.prototype.Rl=function(n,r){return y(this,void 0,void 0,function(){var e;return v(this,function(t){switch(t.label){case 0:this.tf(\"rejectFailedWrite()\"),this.uf(n,r),this.cf(n),t.label=1;case 1:return t.trys.push([1,4,,6]),[4,this.F_.ku(n)];case 2:return e=t.sent(),this.qd.Kl(n,\"rejected\",r),[4,this.rf(e)];case 3:return t.sent(),[3,6];case 4:return[4,_h(t.sent())];case 5:return t.sent(),[3,6];case 6:return[2]}})})},Rf.prototype._f=function(o){return y(this,void 0,void 0,function(){var e,n,r,i;return v(this,function(t){switch(t.label){case 0:this.Nd.B_()||Ys(\"SyncEngine\",\"The network is disabled. The task returned by 'awaitPendingWrites()' will not complete until the network is enabled.\"),t.label=1;case 1:return t.trys.push([1,3,,4]),[4,this.F_.ta()];case 2:return-1===(e=t.sent())?[2,void o.resolve()]:((n=this.Jd.get(e)||[]).push(o),this.Jd.set(e,n),[3,4]);case 3:return r=t.sent(),i=hh(r,\"Initialization of waitForPendingWrites() operation failed\"),o.reject(i),[3,4];case 4:return[2]}})})},Rf.prototype.cf=function(t){(this.Jd.get(t)||[]).forEach(function(t){t.resolve()}),this.Jd.delete(t)},Rf.prototype.lf=function(e){this.Jd.forEach(function(t){t.forEach(function(t){t.reject(new Dr(Sr.CANCELLED,e))})}),this.Jd.clear()},Rf.prototype.nf=function(t,e){var n=this.Yd[this.currentUser.s()];n=(n=n||new Jo(ru)).me(t,e),this.Yd[this.currentUser.s()]=n},Rf.prototype.uf=function(t,e){var n=this.Yd[this.currentUser.s()];if(n){var r=n.get(t);r&&(e?r.reject(e):r.resolve(),n=n.remove(t)),this.Yd[this.currentUser.s()]=n}},Rf.prototype.if=function(t,e){var n=this;void 0===e&&(e=null),this.qd.Yl(t);for(var r=0,i=this.jd.get(t);r<i.length;r++){var o=i[r];this.Wd.delete(o),e&&this.Qd.df(o,e)}this.jd.delete(t),this.Zd&&this.Hd.ic(t).forEach(function(t){n.Hd.Dh(t)||n.ff(t)})},Rf.prototype.ff=function(t){var e=this.Gd.get(t);null!==e&&(this.Nd.nl(e),this.Gd=this.Gd.remove(t),this.zd.delete(e),this.af())},Rf.prototype.sf=function(t,e){for(var n=0,r=e;n<r.length;n++){var i=r[n];i instanceof nf?(this.Hd.ph(i.key,t),this.Tf(i)):i instanceof rf?(Ys(\"SyncEngine\",\"Document no longer in limbo: \"+i.key),this.Hd.bh(i.key,t),this.Hd.Dh(i.key)||this.ff(i.key)):Js()}},Rf.prototype.Tf=function(t){var e=t.key;this.Gd.get(e)||(Ys(\"SyncEngine\",\"New document in limbo: \"+e),this.Kd.push(e),this.af())},Rf.prototype.af=function(){for(;0<this.Kd.length&&this.Gd.size<this.Ud;){var t=this.Kd.shift(),e=this.Xd.next();this.zd.set(e,new sf(t)),this.Gd=this.Gd.me(t,e),this.Nd.listen(new Lo(Ao.Wt(t.path).ee(),e,2,mu.dr))}},Rf.prototype.Ef=function(){return this.Gd},Rf.prototype.If=function(){return this.Kd},Rf.prototype.rf=function(r,a){return y(this,void 0,void 0,function(){var o,s,e,u=this;return v(this,function(t){switch(t.label){case 0:return o=[],s=[],e=[],this.Wd.forEach(function(t,i){e.push(Promise.resolve().then(function(){var n=i.view.Pd(r);return n.pd?u.F_.Wu(i.query,!1).then(function(t){var e=t.documents;return i.view.Pd(e,n)}):n}).then(function(t){var e=a&&a.as.get(i.targetId),n=i.view.xn(t,u.Zd,e);if(u.sf(i.targetId,n.vd),n.snapshot){u.Zd&&u.qd.Zl(i.targetId,n.snapshot.fromCache?\"not-current\":\"current\"),o.push(n.snapshot);var r=vu.ar(i.targetId,n.snapshot);s.push(r)}}))}),[4,Promise.all(e)];case 1:return t.sent(),this.Qd.s_(o),[4,this.F_.xu(s)];case 2:return t.sent(),[2]}})})},Rf.prototype.tf=function(t){},Rf.prototype.Al=function(r){return y(this,void 0,void 0,function(){var e,n;return v(this,function(t){switch(t.label){case 0:return e=!this.currentUser.isEqual(r),this.currentUser=r,e?(this.lf(\"'waitForPendingWrites' promise is rejected due to a user change.\"),[4,this.F_.Su(r)]):[3,3];case 1:return n=t.sent(),this.qd.Su(r,n.Cu,n.Fu),[4,this.rf(n.Du)];case 2:t.sent(),t.label=3;case 3:return[4,this.Nd.Al()];case 4:return t.sent(),[2]}})})},Rf.prototype.enableNetwork=function(){return this.Nd.enableNetwork()},Rf.prototype.disableNetwork=function(){return this.Nd.disableNetwork()},Rf.prototype.ei=function(t){var e=this.zd.get(t);if(e&&e.Bd)return ms().add(e.key);var n=ms(),r=this.jd.get(t);if(!r)return n;for(var i=0,o=r;i<o.length;i++){var s=o[i],u=this.Wd.get(s);n=n.He(u.view.Ad)}return n},Rf),bf=(n(Of,af=wf),Object.defineProperty(Of.prototype,\"Zd\",{get:function(){return!0===this.wf},enumerable:!0,configurable:!0}),Of.prototype.enableNetwork=function(){return this.F_.ho(!0),af.prototype.enableNetwork.call(this)},Of.prototype.disableNetwork=function(){return this.F_.ho(!1),af.prototype.disableNetwork.call(this)},Of.prototype.Rf=function(r){return y(this,void 0,void 0,function(){var e,n;return v(this,function(t){switch(t.label){case 0:return[4,this.F_.Wu(r.query,!0)];case 1:return e=t.sent(),n=r.view.Cd(e),[2,(this.wf&&this.sf(r.targetId,n.vd),n)]}})})},Of.prototype.Sd=function(t,e){this.Zd&&0===e&&(af.prototype.Sd.call(this,t,e),this.qd.ed(t)),this.Zd||1!==e||af.prototype.Sd.call(this,t,e)},Of.prototype.ld=function(n,r,i){return y(this,void 0,void 0,function(){var e;return v(this,function(t){switch(t.label){case 0:return this.tf(\"applyBatchState()\"),[4,this.F_.Gu(n)];case 1:return null===(e=t.sent())?[3,6]:\"pending\"!==r?[3,3]:[4,this.Nd.tl()];case 2:return t.sent(),[3,4];case 3:\"acknowledged\"===r||\"rejected\"===r?(this.uf(n,i||null),this.F_.zu(n)):Js(),t.label=4;case 4:return[4,this.rf(e)];case 5:return t.sent(),[3,7];case 6:Ys(\"SyncEngine\",\"Cannot apply mutation batch with id: \"+n),t.label=7;case 7:return[2]}})})},Of.prototype.Pl=function(h){return y(this,void 0,void 0,function(){var e,n,r,i,o,s,u,a=this;return v(this,function(t){switch(t.label){case 0:return!0!==h||!0===this.wf?[3,3]:(e=this.qd.ql(),[4,this.mf(e.W(),!0)]);case 1:return n=t.sent(),this.wf=!0,[4,this.Nd.Pl(!0)];case 2:for(t.sent(),r=0,i=n;r<i.length;r++)o=i[r],this.Nd.listen(o);return[3,7];case 3:return!1!==h||!1===this.wf?[3,7]:(s=[],u=Promise.resolve(),this.jd.forEach(function(t,e){a.qd.Jl(e)?s.push(e):u=u.then(function(){return a.if(e),a.F_.Qu(e,!0)}),a.Nd.nl(e)}),[4,u]);case 4:return t.sent(),[4,this.mf(s,!1)];case 5:return t.sent(),this.Af(),this.wf=!1,[4,this.Nd.Pl(!1)];case 6:t.sent(),t.label=7;case 7:return[2]}})})},Of.prototype.Af=function(){var n=this;this.zd.forEach(function(t,e){n.Nd.nl(e)}),this.Hd.nc(),this.zd=new Map,this.Gd=new Jo(Xr.N)},Of.prototype.mf=function(d,t){return y(this,void 0,void 0,function(){var e,n,r,i,o,s,u,a,h,c,f,l,p;return v(this,function(t){switch(t.label){case 0:e=[],n=[],r=0,i=d,t.label=1;case 1:return r<i.length?(o=i[r],s=void 0,(u=this.jd.get(o))&&0!==u.length?[4,this.F_.Qu(o,!0)]:[3,8]):[3,14];case 2:return t.sent(),[4,this.F_.Uu(u[0].ee())];case 3:s=t.sent(),a=0,h=u,t.label=4;case 4:return a<h.length?(c=h[a],f=this.Wd.get(c),[4,this.Rf(f)]):[3,7];case 5:(l=t.sent()).snapshot&&n.push(l.snapshot),t.label=6;case 6:return a++,[3,4];case 7:return[3,12];case 8:return[4,this.F_.Hu(o)];case 9:return p=t.sent(),[4,this.F_.Uu(p)];case 10:return s=t.sent(),[4,this.ef(this.Pf(p),o,!1)];case 11:t.sent(),t.label=12;case 12:e.push(s),t.label=13;case 13:return r++,[3,1];case 14:return[2,(this.Qd.s_(n),e)]}})})},Of.prototype.Pf=function(t){return new Ao(t.path,t.collectionGroup,t.orderBy,t.filters,t.limit,\"F\",t.startAt,t.endAt)},Of.prototype.po=function(){return this.F_.po()},Of.prototype.dd=function(r,i,o){return y(this,void 0,void 0,function(){var e,n;return v(this,function(t){switch(t.label){case 0:return this.wf?(Ys(\"SyncEngine\",\"Ignoring unexpected query state notification.\"),[3,8]):[3,1];case 1:if(!this.jd.has(r))return[3,8];switch(i){case\"current\":case\"not-current\":return[3,2];case\"rejected\":return[3,5]}return[3,7];case 2:return[4,this.F_.Wr()];case 3:return e=t.sent(),n=As.ls(r,\"current\"===i),[4,this.rf(e,n)];case 4:return t.sent(),[3,8];case 5:return[4,this.F_.Qu(r,!0)];case 6:return t.sent(),this.if(r,o),[3,8];case 7:Js(),t.label=8;case 8:return[2]}})})},Of.prototype.fd=function(l,p){return y(this,void 0,void 0,function(){var e,n,r,i,o,s,u,a,h,c,f=this;return v(this,function(t){switch(t.label){case 0:if(!this.wf)return[3,10];e=0,n=l,t.label=1;case 1:return e<n.length?(r=n[e],this.jd.has(r)?(Ys(\"SyncEngine\",\"Adding an already active target \"+r),[3,5]):[4,this.F_.Hu(r)]):[3,6];case 2:return i=t.sent(),[4,this.F_.Uu(i)];case 3:return o=t.sent(),[4,this.ef(this.Pf(i),o.targetId,!1)];case 4:t.sent(),this.Nd.listen(o),t.label=5;case 5:return e++,[3,1];case 6:s=function(e){return v(this,function(t){switch(t.label){case 0:return u.jd.has(e)?[4,u.F_.Qu(e,!1).then(function(){f.Nd.nl(e),f.if(e)}).catch(_h)]:[3,2];case 1:t.sent(),t.label=2;case 2:return[2]}})},u=this,a=0,h=p,t.label=7;case 7:return a<h.length?(c=h[a],[5,s(c)]):[3,10];case 8:t.sent(),t.label=9;case 9:return a++,[3,7];case 10:return[2]}})})},Of),Ef=(xf.prototype.listen=function(u){return y(this,void 0,void 0,function(){var e,n,r,i,o,s;return v(this,function(t){switch(t.label){case 0:if(e=u.query,n=!1,(r=this.pf.get(e))||(n=!0,r=new uf),!n)return[3,4];t.label=1;case 1:return t.trys.push([1,3,,4]),i=r,[4,this.hl.listen(e)];case 2:return i.Vf=t.sent(),[3,4];case 3:return o=t.sent(),s=hh(o,\"Initialization of query '\"+u.query+\"' failed\"),[2,void u.onError(s)];case 4:return this.pf.set(e,r),r.gf.push(u),u.Sd(this.onlineState),r.Vf&&u.bf(r.Vf)&&this.vf(),[2]}})})},xf.prototype.nl=function(o){return y(this,void 0,void 0,function(){var e,n,r,i;return v(this,function(t){return e=o.query,n=!1,(r=this.pf.get(e))&&0<=(i=r.gf.indexOf(o))&&(r.gf.splice(i,1),n=0===r.gf.length),n?[2,(this.pf.delete(e),this.hl.nl(e))]:[2]})})},xf.prototype.s_=function(t){for(var e=!1,n=0,r=t;n<r.length;n++){var i=r[n],o=i.query,s=this.pf.get(o);if(s){for(var u=0,a=s.gf;u<a.length;u++)a[u].bf(i)&&(e=!0);s.Vf=i}}e&&this.vf()},xf.prototype.df=function(t,e){var n=this.pf.get(t);if(n)for(var r=0,i=n.gf;r<i.length;r++)i[r].onError(e);this.pf.delete(t)},xf.prototype.hf=function(i){this.onlineState=i;var o=!1;this.pf.forEach(function(t,e){for(var n=0,r=e.gf;n<r.length;n++)r[n].Sd(i)&&(o=!0)}),o&&this.vf()},xf.prototype.Sf=function(t){this.yf.add(t),t.next()},xf.prototype.Df=function(t){this.yf.delete(t)},xf.prototype.vf=function(){this.yf.forEach(function(t){t.next()})},xf),Tf=(kf.prototype.bf=function(t){if(!this.options.includeMetadataChanges){for(var e=[],n=0,r=t.docChanges;n<r.length;n++){var i=r[n];3!==i.type&&e.push(i)}t=new _s(t.query,t.docs,t.ss,e,t.ns,t.fromCache,t.rs,!0)}var o=!1;return this.Ff?this.$f(t)&&(this.Cf.next(t),o=!0):this.kf(t,this.onlineState)&&(this.Mf(t),o=!0),this.Nf=t,o},kf.prototype.onError=function(t){this.Cf.error(t)},kf.prototype.Sd=function(t){this.onlineState=t;var e=!1;return this.Nf&&!this.Ff&&this.kf(this.Nf,t)&&(this.Mf(this.Nf),e=!0),e},kf.prototype.kf=function(t,e){if(!t.fromCache)return!0;var n=\"Offline\"!==e;return!(this.options.Lf&&n||t.docs.B()&&\"Offline\"!==e)},kf.prototype.$f=function(t){if(0<t.docChanges.length)return!0;var e=this.Nf&&this.Nf.hasPendingWrites!==t.hasPendingWrites;return!(!t.rs&&!e)&&!0===this.options.includeMetadataChanges},kf.prototype.Mf=function(t){t=_s.os(t.query,t.docs,t.ns,t.fromCache),this.Ff=!0,this.Cf.next(t)},kf),If=(Df.prototype.vu=function(t){this.Of=t},Df.prototype.Zn=function(e,r,i,o){var s=this;return r.te()||i.isEqual(Pr.min())?this.xf(e,r):this.Of.Yn(e,o).next(function(t){var n=s.Bf(r,t);return(r.oe()||r.ae())&&s.pd(r.Bt,n,o,i)?s.xf(e,r):(Hs()<=l.DEBUG&&Ys(\"IndexFreeQueryEngine\",\"Re-using previous result from %s to execute query: %s\",i.toString(),r.toString()),s.Of.Zn(e,r,i).next(function(e){return n.forEach(function(t){e=e.me(t.key,t)}),e}))})},Df.prototype.Bf=function(n,t){var r=new os(function(t,e){return n.se(t,e)});return t.forEach(function(t,e){e instanceof To&&n.matches(e)&&(r=r.add(e))}),r},Df.prototype.pd=function(t,e,n,r){if(n.size!==e.size)return!0;var i=\"F\"===t?e.last():e.first();return!!i&&(i.hasPendingWrites||0<i.version.S(r))},Df.prototype.xf=function(t,e){return Hs()<=l.DEBUG&&Ys(\"IndexFreeQueryEngine\",\"Using full collection scan to execute query: %s\",e.toString()),this.Of.Zn(t,e,Pr.min())},Df),Nf=(Sf.prototype.jo=function(t){return fu.resolve(0===this.Wn.length)},Sf.prototype.Ko=function(t,e,n){var r=e.batchId,i=this.Qf(r,\"acknowledged\");return Zs(0===i),this.Wn[i],this.lastStreamToken=n,fu.resolve()},Sf.prototype.zo=function(t){return fu.resolve(this.lastStreamToken)},Sf.prototype.Ho=function(t,e){return this.lastStreamToken=e,fu.resolve()},Sf.prototype.Yo=function(t,e,n,r){var i=this.qf;this.qf++,0<this.Wn.length&&this.Wn[this.Wn.length-1];var o=new hu(i,e,n,r);this.Wn.push(o);for(var s=0,u=r;s<u.length;s++){var a=u[s];this.Uf=this.Uf.add(new Sh(a.key,i)),this.jn.vr(t,a.key.path.M())}return fu.resolve(o)},Sf.prototype.Jo=function(t,e){return fu.resolve(this.Wf(e))},Sf.prototype.Zo=function(t,e){var n=e+1,r=this.jf(n),i=r<0?0:r;return fu.resolve(this.Wn.length>i?this.Wn[i]:null)},Sf.prototype.ta=function(){return fu.resolve(0===this.Wn.length?-1:this.qf-1)},Sf.prototype.ea=function(t){return fu.resolve(this.Wn.slice())},Sf.prototype.Gn=function(t,e){var n=this,r=new Sh(e,0),i=new Sh(e,Number.POSITIVE_INFINITY),o=[];return this.Uf.Ke([r,i],function(t){var e=n.Wf(t.hc);o.push(e)}),fu.resolve(o)},Sf.prototype.Xn=function(t,e){var r=this,i=new os(ru);return e.forEach(function(t){var e=new Sh(t,0),n=new Sh(t,Number.POSITIVE_INFINITY);r.Uf.Ke([e,n],function(t){i=i.add(t.hc)})}),fu.resolve(this.Kf(i))},Sf.prototype.nr=function(t,e){var n=e.path,r=n.length+1,i=n;Xr.et(i)||(i=i.child(\"\"));var o=new Sh(new Xr(i),0),s=new os(ru);return this.Uf.Ge(function(t){var e=t.key.path;return!!n.q(e)&&(e.length===r&&(s=s.add(t.hc)),!0)},o),fu.resolve(this.Kf(s))},Sf.prototype.Kf=function(t){var n=this,r=[];return t.forEach(function(t){var e=n.Wf(t);null!==e&&r.push(e)}),r},Sf.prototype.ia=function(n,r){var i=this;Zs(0===this.Qf(r.batchId,\"removed\")),this.Wn.shift();var o=this.Uf;return fu.forEach(r.mutations,function(t){var e=new Sh(t.key,r.batchId);return o=o.delete(e),i.nh.Oo(n,t.key)}).next(function(){i.Uf=o})},Sf.prototype.na=function(t){},Sf.prototype.Dh=function(t,e){var n=new Sh(e,0),r=this.Uf.ze(n);return fu.resolve(e.isEqual(r&&r.key))},Sf.prototype.ra=function(t){return this.Wn.length,fu.resolve()},Sf.prototype.Qf=function(t,e){return this.jf(t)},Sf.prototype.jf=function(t){return 0===this.Wn.length?0:t-this.Wn[0].batchId},Sf.prototype.Wf=function(t){var e=this.jf(t);return e<0||e>=this.Wn.length?null:this.Wn[e]},Sf),_f=(Af.prototype.Nn=function(t,e,n){var r=e.key,i=this.docs.get(r),o=i?i.size:0,s=this.Gf(e);return this.docs=this.docs.me(r,{kr:e,size:s,readTime:n}),this.size+=s-o,this.jn.vr(t,r.path.M())},Af.prototype.kn=function(t){var e=this.docs.get(t);e&&(this.docs=this.docs.remove(t),this.size-=e.size)},Af.prototype.Mn=function(t,e){var n=this.docs.get(e);return fu.resolve(n?n.kr:null)},Af.prototype.getEntries=function(t,e){var n=this,r=fs();return e.forEach(function(t){var e=n.docs.get(t);r=r.me(t,e?e.kr:null)}),fu.resolve(r)},Af.prototype.Zn=function(t,e,n){for(var r=ps(),i=new Xr(e.path.child(\"\")),o=this.docs.ve(i);o.$e();){var s=o.Ne(),u=s.key,a=s.value,h=a.kr,c=a.readTime;if(!e.path.q(u.path))break;c.S(n)<=0||h instanceof To&&e.matches(h)&&(r=r.me(h.key,h))}return fu.resolve(r)},Af.prototype.zf=function(t,e){return fu.forEach(this.docs,function(t){return e(t)})},Af.prototype.zr=function(t){return new Af.Hr(this)},Af.prototype.Jr=function(t){return fu.resolve(this.size)},Af);function Af(t,e){this.jn=t,this.Gf=e,this.docs=new Jo(Xr.N),this.size=0}function Sf(t,e){this.jn=t,this.nh=e,this.Wn=[],this.qf=1,this.lastStreamToken=ei.ht,this.Uf=new os(Sh.Ju)}function Df(){}function kf(t,e,n){this.query=t,this.Cf=e,this.Ff=!1,this.Nf=null,this.onlineState=\"Unknown\",this.options=n||{}}function xf(t){this.hl=t,this.pf=new au(function(t){return t.canonicalId()}),this.onlineState=\"Unknown\",this.yf=new Set,this.hl.subscribe(this)}function Of(t,e,n,r,i){var o=this;return(o=af.call(this,t,e,n,r,i)||this).F_=t,o.wf=void 0,o}function Rf(t,e,n,r,i){this.F_=t,this.Nd=e,this.qd=n,this.currentUser=r,this.Ud=i,this.Qd=null,this.Wd=new au(function(t){return t.canonicalId()}),this.jd=new Map,this.Kd=[],this.Gd=new Jo(Xr.N),this.zd=new Map,this.Hd=new Ah,this.Yd={},this.Jd=new Map,this.Xd=Xu.ih(),this.onlineState=\"Unknown\"}function Vf(t,e,n,r){this.wa=t,this.Nd=e,this.updateFunction=n,this.Aa=r,this.$d=5,this.Na=new ku(this.wa,\"transaction_retry\")}function Pf(t,e){this.query=t,this.Id=e,this.wd=null,this.fs=!1,this.Rd=ms(),this.ns=ms(),this.md=new Is(t.se.bind(t))}function Lf(){this.Td=new df,this.Ed={},this.hl=null,this.V_=null,this.ur=null}function Cf(t,e,n,r,i){if(this.Tr=t,this.platform=e,this.persistenceKey=n,this.bl=r,this.hl=null,this.V_=null,this.ur=null,this.vl=this.Sl.bind(this),this.Dl=new Jo(ru),this.io=!1,this.Cl=[],!Cf.jh(this.platform))throw new Dr(Sr.UNIMPLEMENTED,\"LocalStorage is not available on this platform.\");var o=n.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\");this.storage=this.platform.window.localStorage,this.currentUser=i,this.Fl=Zc(this.persistenceKey,this.bl),this.Nl=\"firestore_sequence_number_\"+this.persistenceKey,this.Dl=this.Dl.me(this.bl,new df),this.$l=new RegExp(\"^firestore_clients_\"+o+\"_([^_]*)$\"),this.kl=new RegExp(\"^firestore_mutations_\"+o+\"_(\\\\d+)(?:_(.*))?$\"),this.Ml=new RegExp(\"^firestore_targets_\"+o+\"_(\\\\d+)$\"),this.Ll=\"firestore_online_state_\"+this.persistenceKey,this.platform.window.addEventListener(\"storage\",this.vl)}function Mf(){this.activeTargetIds=ws()}function jf(t,e){this.clientId=t,this.onlineState=e}function Uf(t,e){this.clientId=t,this.activeTargetIds=e}function qf(t,e,n){this.targetId=t,this.state=e,this.error=n}function Ff(t,e,n,r){this.user=t,this.batchId=e,this.state=n,this.error=r}function Bf(t){var e=this;return(e=hf.call(this)||this).Xr=t,e}_f.Hr=(n(Bf,hf=lu),Bf.prototype.xn=function(n){var r=this,i=[];return this.Dn.forEach(function(t,e){e?i.push(r.Xr.Nn(n,e,r.readTime)):r.Xr.kn(t)}),fu.vn(i)},Bf.prototype.Ln=function(t,e){return this.Xr.Mn(t,e)},Bf.prototype.On=function(t,e){return this.Xr.getEntries(t,e)},Bf);var Gf,zf,Wf=(sl.prototype.js=function(t,n){return this.Hf.forEach(function(t,e){return n(e)}),fu.resolve()},sl.prototype.ah=function(t){return fu.resolve(this.lastRemoteSnapshotVersion)},sl.prototype.uh=function(t){return fu.resolve(this.Yf)},sl.prototype.rh=function(t){return this.highestTargetId=this.Xf.next(),fu.resolve(this.highestTargetId)},sl.prototype.lh=function(t,e,n){return n&&(this.lastRemoteSnapshotVersion=n),e>this.Yf&&(this.Yf=e),fu.resolve()},sl.prototype.fh=function(t){this.Hf.set(t.target,t);var e=t.targetId;e>this.highestTargetId&&(this.Xf=new Xu(e),this.highestTargetId=e),t.sequenceNumber>this.Yf&&(this.Yf=t.sequenceNumber)},sl.prototype.dh=function(t,e){return this.fh(e),this.targetCount+=1,fu.resolve()},sl.prototype.Eh=function(t,e){return this.fh(e),fu.resolve()},sl.prototype.Ih=function(t,e){return this.Hf.delete(e.target),this.Jf.ic(e.targetId),--this.targetCount,fu.resolve()},sl.prototype.Rh=function(n,r,i){var o=this,s=0,u=[];return this.Hf.forEach(function(t,e){e.sequenceNumber<=r&&null===i.get(e.targetId)&&(o.Hf.delete(t),u.push(o.wh(n,e.targetId)),s++)}),fu.vn(u).next(function(){return s})},sl.prototype.Ph=function(t){return fu.resolve(this.targetCount)},sl.prototype.Vh=function(t,e){var n=this.Hf.get(e)||null;return fu.resolve(n)},sl.prototype.gh=function(t,e,n){return this.Jf.tc(e,n),fu.resolve()},sl.prototype.yh=function(e,t,n){this.Jf.sc(t,n);var r=this.persistence.nh,i=[];return r&&t.forEach(function(t){i.push(r.Oo(e,t))}),fu.vn(i)},sl.prototype.wh=function(t,e){return this.Jf.ic(e),fu.resolve()},sl.prototype.vh=function(t,e){var n=this.Jf.rc(e);return fu.resolve(n)},sl.prototype.Dh=function(t,e){return fu.resolve(this.Jf.Dh(e))},sl),Qf=(ol.prototype.start=function(){return Promise.resolve()},ol.prototype.Ro=function(){return this.xh=!1,Promise.resolve()},Object.defineProperty(ol.prototype,\"io\",{get:function(){return this.xh},enumerable:!0,configurable:!0}),ol.prototype.no=function(){},ol.prototype.Do=function(){return this.jn},ol.prototype.yo=function(t){var e=this.Zf[t.s()];return e||(e=new Nf(this.jn,this.nh),this.Zf[t.s()]=e),e},ol.prototype.vo=function(){return this.zh},ol.prototype.So=function(){return this.Qn},ol.prototype.runTransaction=function(t,e,n){var r=this;Ys(\"MemoryPersistence\",\"Starting transaction:\",t);var i=new Hf(this.Oh.next());return this.nh.eT(),n(i).next(function(t){return r.nh.sT(i).next(function(){return t})}).yn().then(function(t){return i.Un(),t})},ol.prototype.iT=function(e,n){return fu.Sn(Object.values(this.Zf).map(function(t){return function(){return t.Dh(e,n)}}))},ol),Hf=(n(il,zf=du),il),Kf=(rl.hT=function(t){return new rl(t)},Object.defineProperty(rl.prototype,\"oT\",{get:function(){if(this.rT)return this.rT;throw Js()},enumerable:!0,configurable:!0}),rl.prototype.ph=function(t,e,n){return this.nT.ph(n,e),this.oT.delete(n),fu.resolve()},rl.prototype.bh=function(t,e,n){return this.nT.bh(n,e),this.oT.add(n),fu.resolve()},rl.prototype.Oo=function(t,e){return this.oT.add(e),fu.resolve()},rl.prototype.removeTarget=function(t,e){var n=this;this.nT.ic(e.targetId).forEach(function(t){return n.oT.add(t)});var r=this.persistence.vo();return r.vh(t,e.targetId).next(function(t){t.forEach(function(t){return n.oT.add(t)})}).next(function(){return r.Ih(t,e)})},rl.prototype.eT=function(){this.rT=new Set},rl.prototype.sT=function(t){var n=this,r=this.persistence.So().zr();return fu.forEach(this.oT,function(e){return n.aT(t,e).next(function(t){t||r.kn(e)})}).next(function(){return n.rT=null,r.apply(t)})},rl.prototype.Uo=function(t,e){var n=this;return this.aT(t,e).next(function(t){t?n.oT.delete(e):n.oT.add(e)})},rl.prototype.tT=function(t){return 0},rl.prototype.aT=function(t,e){var n=this;return fu.Sn([function(){return fu.resolve(n.nT.Dh(e))},function(){return n.persistence.vo().Dh(t,e)},function(){return n.persistence.iT(t,e)}])},rl),Yf=(nl.prototype.initialize=function(n){return y(this,void 0,void 0,function(){var e=this;return v(this,function(t){switch(t.label){case 0:return this.qd=this.uT(n),this.persistence=this.cT(n),[4,this.persistence.start()];case 1:return t.sent(),this._T=this.lT(n),this.F_=this.dT(n),this.Nd=this.fT(n),this.hl=this.TT(n),this.ET=this.IT(n),this.qd.V_=function(t){return e.hl.Sd(t,1)},this.Nd.hl=this.hl,[4,this.F_.start()];case 2:return t.sent(),[4,this.qd.start()];case 3:return t.sent(),[4,this.Nd.start()];case 4:return t.sent(),[4,this.Nd.Pl(this.hl.Zd)];case 5:return t.sent(),[2]}})})},nl.prototype.IT=function(t){return new Ef(this.hl)},nl.prototype.lT=function(t){return null},nl.prototype.dT=function(t){return new gh(this.persistence,new If,t.wT)},nl.prototype.cT=function(t){return new Qf(Kf.hT)},nl.prototype.fT=function(t){var e=this;return new Wc(this.F_,t.f_,t.wa,function(t){return e.hl.Sd(t,0)},t.platform.RT())},nl.prototype.uT=function(t){return new vf},nl.prototype.TT=function(t){return new wf(this.F_,this.Nd,this.qd,t.wT,t.Ud)},nl.prototype.clearPersistence=function(t){throw new Dr(Sr.FAILED_PRECONDITION,\"You are using the memory-only build of Firestore. Persistence support is only available via the @firebase/firestore bundle or the firebase-firestore.js build.\")},nl),Xf=(n(el,Gf=Yf),el.prototype.initialize=function(e){return y(this,void 0,void 0,function(){var n=this;return v(this,function(t){switch(t.label){case 0:return[4,Gf.prototype.initialize.call(this,e)];case 1:return t.sent(),[4,this.persistence.so(function(e){return y(n,void 0,void 0,function(){return v(this,function(t){switch(t.label){case 0:return[4,this.hl.Pl(e)];case 1:return t.sent(),this._T&&(e&&!this._T.io?this._T.start(this.F_):e||this._T.stop()),[2]}})})})];case 2:return t.sent(),[2]}})})},el.prototype.dT=function(t){return new Ih(this.persistence,new If,t.wT)},el.prototype.TT=function(t){var e=new bf(this.F_,this.Nd,this.qd,t.wT,t.Ud);return this.qd instanceof yf&&(this.qd.hl=e),e},el.prototype.lT=function(t){var e=this.persistence.nh.No;return new vh(e,t.wa)},el.prototype.cT=function(t){var e=aa.Fo(t.mT),n=t.platform.yc(t.mT.ii);return new aa(t.AT.synchronizeTabs,e,t.clientId,t.platform,ph.ru(t.AT.cacheSizeBytes),t.wa,n,this.qd)},el.prototype.uT=function(t){if(t.AT.PT&&t.AT.synchronizeTabs){if(!yf.jh(t.platform))throw new Dr(Sr.UNIMPLEMENTED,\"IndexedDB persistence is only available on platforms that support LocalStorage.\");var e=aa.Fo(t.mT);return new yf(t.wa,t.platform,e,t.clientId,t.wT)}return new vf},el.prototype.clearPersistence=function(t){var e=aa.Fo(t);return aa.clearPersistence(e)},el),$f=(tl.prototype.start=function(e,n){var r=this;this.VT();var i=new Du,o=new Du,s=!1;return this.credentials.l(function(t){if(!s)return s=!0,Ys(\"FirestoreClient\",\"Initializing. user=\",t.uid),r.gT(e,n,t,o).then(i.resolve,i.reject);r.wa.oo(function(){return r.Al(t)})}),this.wa.oo(function(){return i.promise}),o.promise},tl.prototype.enableNetwork=function(){var t=this;return this.VT(),this.wa.enqueue(function(){return t.hl.enableNetwork()})},tl.prototype.gT=function(a,h,c,f){return y(this,void 0,void 0,function(){var r,i,o,s,u=this;return v(this,function(t){switch(t.label){case 0:return t.trys.push([0,3,,4]),[4,this.platform.pT(this.mT)];case 1:return r=t.sent(),i=this.platform.yc(this.mT.ii),e=r,n=this.credentials,o=new Bc(e,n,i),[4,a.initialize({wa:this.wa,mT:this.mT,platform:this.platform,f_:o,clientId:this.clientId,wT:c,Ud:100,AT:h})];case 2:return t.sent(),this.persistence=a.persistence,this.qd=a.qd,this.F_=a.F_,this.Nd=a.Nd,this.hl=a.hl,this._T=a._T,this.yT=a.ET,this.persistence.no(function(){return y(u,void 0,void 0,function(){return v(this,function(t){switch(t.label){case 0:return[4,this.terminate()];case 1:return t.sent(),[2]}})})}),f.resolve(),[3,4];case 3:if(s=t.sent(),f.reject(s),!this.bT(s))throw s;return[2,(console.warn(\"Error enabling offline persistence. Falling back to persistence disabled: \"+s),this.gT(new Yf,{PT:!1},c,f))];case 4:return[2]}var e,n})})},tl.prototype.bT=function(t){return\"FirebaseError\"===t.name?t.code===Sr.FAILED_PRECONDITION||t.code===Sr.UNIMPLEMENTED:!(\"undefined\"!=typeof DOMException&&t instanceof DOMException)||22===t.code||20===t.code||11===t.code},tl.prototype.VT=function(){if(this.wa.Ma)throw new Dr(Sr.FAILED_PRECONDITION,\"The client has already been terminated.\")},tl.prototype.Al=function(t){return this.wa.Wa(),Ys(\"FirestoreClient\",\"Credential Changed. Current user: \"+t.uid),this.hl.Al(t)},tl.prototype.disableNetwork=function(){var t=this;return this.VT(),this.wa.enqueue(function(){return t.hl.disableNetwork()})},tl.prototype.terminate=function(){var t=this;return this.wa.qa(function(){return y(t,void 0,void 0,function(){return v(this,function(t){switch(t.label){case 0:return this._T&&this._T.stop(),[4,this.Nd.Ro()];case 1:return t.sent(),[4,this.qd.Ro()];case 2:return t.sent(),[4,this.persistence.Ro()];case 3:return t.sent(),this.credentials.T(),[2]}})})})},tl.prototype.waitForPendingWrites=function(){var t=this;this.VT();var e=new Du;return this.wa.oo(function(){return t.hl._f(e)}),e.promise},tl.prototype.listen=function(t,e,n){var r=this;this.VT();var i=new Tf(t,e,n);return this.wa.oo(function(){return r.yT.listen(i)}),i},tl.prototype.nl=function(t){var e=this;this.vT||this.wa.oo(function(){return e.yT.nl(t)})},tl.prototype.ST=function(o){return y(this,void 0,void 0,function(){var i,e=this;return v(this,function(t){switch(t.label){case 0:return this.VT(),i=new Du,[4,this.wa.enqueue(function(){return y(e,void 0,void 0,function(){var e,n,r;return v(this,function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),[4,this.F_.qu(o)];case 1:return(e=t.sent())instanceof To?i.resolve(e):e instanceof Io?i.resolve(null):i.reject(new Dr(Sr.UNAVAILABLE,\"Failed to get document from cache. (However, this document may exist on the server. Run again without setting 'source' in the GetOptions to attempt to retrieve the document from the server.)\")),[3,3];case 2:return n=t.sent(),r=hh(n,\"Failed to get document '\"+o+\" from cache\"),i.reject(r),[3,3];case 3:return[2]}})})})];case 1:return[2,(t.sent(),i.promise)]}})})},tl.prototype.DT=function(a){return y(this,void 0,void 0,function(){var u,e=this;return v(this,function(t){switch(t.label){case 0:return this.VT(),u=new Du,[4,this.wa.enqueue(function(){return y(e,void 0,void 0,function(){var e,n,r,i,o,s;return v(this,function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),[4,this.F_.Wu(a,!0)];case 1:return e=t.sent(),n=new mf(a,e.ju),r=n.Pd(e.documents),i=n.xn(r,!1),u.resolve(i.snapshot),[3,3];case 2:return o=t.sent(),s=hh(o,\"Failed to execute query '\"+a+\" against cache\"),u.reject(s),[3,3];case 3:return[2]}})})})];case 1:return[2,(t.sent(),u.promise)]}})})},tl.prototype.write=function(t){var e=this;this.VT();var n=new Du;return this.wa.oo(function(){return e.hl.write(t,n)}),n.promise},tl.prototype.ii=function(){return this.mT.ii},tl.prototype.Sf=function(t){var e=this;this.VT(),this.wa.oo(function(){return e.yT.Sf(t),Promise.resolve()})},tl.prototype.Df=function(t){var e=this;this.vT||this.wa.oo(function(){return e.yT.Df(t),Promise.resolve()})},Object.defineProperty(tl.prototype,\"vT\",{get:function(){return this.wa.Ma},enumerable:!0,configurable:!0}),tl.prototype.transaction=function(t){var e=this;this.VT();var n=new Du;return this.wa.oo(function(){return e.hl.runTransaction(e.wa,t,n),Promise.resolve()}),n.promise},tl),Jf=(Zf.prototype.next=function(t){this.CT(this.observer.next,t)},Zf.prototype.error=function(t){this.CT(this.observer.error,t)},Zf.prototype.FT=function(){this.muted=!0},Zf.prototype.CT=function(t,e){var n=this;this.muted||setTimeout(function(){n.muted||t(e)},0)},Zf);function Zf(t){this.observer=t,this.muted=!1}function tl(t,e,n,r){this.platform=t,this.mT=e,this.credentials=n,this.wa=r,this.clientId=eu.cn()}function el(){return null!==Gf&&Gf.apply(this,arguments)||this}function nl(){}function rl(t){this.persistence=t,this.nT=new Ah,this.rT=null}function il(t){var e=this;return(e=zf.call(this)||this).Mh=t,e}function ol(t){var e=this;this.Zf={},this.Oh=new mu(0),this.xh=!1,this.xh=!0,this.nh=t(this),this.zh=new Wf(this),this.jn=new Lu,this.Qn=new _f(this.jn,function(t){return e.nh.tT(t)})}function sl(t){this.persistence=t,this.Hf=new au(function(t){return t.canonicalId()}),this.lastRemoteSnapshotVersion=Pr.min(),this.highestTargetId=0,this.Yf=0,this.Jf=new Ah,this.targetCount=0,this.Xf=Xu.sh()}function ul(i){return function(){if(\"object\"==typeof i&&null!==i)for(var t=i,e=0,n=[\"next\",\"error\",\"complete\"];e<n.length;e++){var r=n[e];if(r in t&&\"function\"==typeof t[r])return 1}}()}var al,hl,cl=(Pl.prototype.$T=function(t){switch(hi(t)){case 0:return null;case 1:return t.booleanValue;case 2:return vi(t.integerValue||t.doubleValue);case 3:return this.kT(t.timestampValue);case 4:return this.MT(t);case 5:return t.stringValue;case 6:return new Xh(mi(t.bytesValue));case 7:return this.LT(t.referenceValue);case 8:return this.OT(t.geoPointValue);case 9:return this.xT(t.arrayValue);case 10:return this.BT(t.mapValue);default:throw Js()}},Pl.prototype.BT=function(t){var n=this,r={};return Zr(t.fields||{},function(t,e){r[t]=n.$T(e)}),r},Pl.prototype.OT=function(t){return new lc(vi(t.latitude),vi(t.longitude))},Pl.prototype.xT=function(t){var e=this;return(t.values||[]).map(function(t){return e.$T(t)})},Pl.prototype.MT=function(t){switch(this.NT){case\"previous\":var e=function t(e){var n=e.mapValue.fields.__previous_value__;return si(n)?t(n):n}(t);return null==e?null:this.$T(e);case\"estimate\":return this.kT(ui(t));default:return null}},Pl.prototype.kT=function(t){var e=yi(t),n=new Vr(e.seconds,e.nanos);return this.timestampsInSnapshots?n:n.toDate()},Pl.prototype.LT=function(t){var e=Cr.K(t);Zs(Gs(e));var n=new uu(e.get(1),e.get(3)),r=new Xr(e.k(5));return n.isEqual(this.firestore.Nc)||Xs(\"Document \"+r+\" contains a document reference within a different database (\"+n.projectId+\"/\"+n.database+\") which is not supported. It will be treated as a reference in the current database (\"+this.firestore.Nc.projectId+\"/\"+this.firestore.Nc.database+\") instead.\"),new vl(r,this.firestore,this.converter)},Pl),fl=ph.au,ll=(Vl.prototype.isEqual=function(t){return this.host===t.host&&this.ssl===t.ssl&&this.timestampsInSnapshots===t.timestampsInSnapshots&&this.credentials===t.credentials&&this.cacheSizeBytes===t.cacheSizeBytes&&this.forceLongPolling===t.forceLongPolling},Vl),pl=(Rl.prototype.settings=function(t){Oh(\"Firestore.settings\",arguments,1),Ph(\"Firestore.settings\",\"object\",1,t);var e=new ll(t);if(this.WT&&!this.HT.isEqual(e))throw new Dr(Sr.FAILED_PRECONDITION,\"Firestore has already been started and its settings can no longer be changed. You can only call settings() before calling any other methods on a Firestore object.\");void 0!==(this.HT=e).credentials&&(this.GT=function(t){if(!t)return new kr;switch(t.type){case\"gapi\":var e=t.JT;return Zs(!(\"object\"!=typeof e||null===e||!e.auth||!e.auth.getAuthHeaderValueForFirstParty)),new Rr(e,t.V||\"0\");case\"provider\":return t.JT;default:throw new Dr(Sr.INVALID_ARGUMENT,\"makeCredentialsProvider failed due to invalid credential type\")}}(e.credentials))},Rl.prototype.enableNetwork=function(){return this.QT(),this.WT.enableNetwork()},Rl.prototype.disableNetwork=function(){return this.QT(),this.WT.disableNetwork()},Rl.prototype.enablePersistence=function(t){var e,n;if(this.WT)throw new Dr(Sr.FAILED_PRECONDITION,\"Firestore has already been started and persistence can no longer be enabled. You can only call enablePersistence() before calling any other methods on a Firestore object.\");var r=!1;return t&&(void 0!==t.experimentalTabSynchronization&&Xs(\"The 'experimentalTabSynchronization' setting will be removed. Use 'synchronizeTabs' instead.\"),r=null!==(n=null!==(e=t.synchronizeTabs)&&void 0!==e?e:t.experimentalTabSynchronization)&&void 0!==n&&n),this.XT(this.zT,{PT:!0,cacheSizeBytes:this.HT.cacheSizeBytes,synchronizeTabs:r})},Rl.prototype.clearPersistence=function(){return y(this,void 0,void 0,function(){var r,e=this;return v(this,function(t){if(void 0!==this.WT&&!this.WT.vT)throw new Dr(Sr.FAILED_PRECONDITION,\"Persistence cannot be cleared after this Firestore instance is initialized.\");return r=new Du,[2,(this.UT.La(function(){return y(e,void 0,void 0,function(){var e,n;return v(this,function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),e=this.ZT(),[4,this.zT.clearPersistence(e)];case 1:return t.sent(),r.resolve(),[3,3];case 2:return n=t.sent(),r.reject(n),[3,3];case 3:return[2]}})})}),r.promise)]})})},Rl.prototype.terminate=function(){return this.app._removeServiceInstance(\"firestore\"),this.INTERNAL.delete()},Object.defineProperty(Rl.prototype,\"tE\",{get:function(){return this.QT(),this.WT.vT},enumerable:!0,configurable:!0}),Rl.prototype.waitForPendingWrites=function(){return this.QT(),this.WT.waitForPendingWrites()},Rl.prototype.onSnapshotsInSync=function(t){if(this.QT(),ul(t))return this.eE(t);Ph(\"Firestore.onSnapshotsInSync\",\"function\",1,t);var e={next:t};return this.eE(e)},Rl.prototype.eE=function(t){var e=this,n=new Jf({next:function(){t.next&&t.next()},error:function(t){throw Js()}});return this.WT.Sf(n),function(){n.FT(),e.WT.Df(n)}},Rl.prototype.QT=function(){return this.WT||this.XT(new Yf,{PT:!1}),this.WT},Rl.prototype.ZT=function(){return new su(this.Nc,this.KT,this.HT.host,this.HT.ssl,this.HT.forceLongPolling)},Rl.prototype.XT=function(t,e){var n=this.ZT();return this.WT=new $f(zs.nt(),n,this.GT,this.UT),this.WT.start(t,e)},Rl.jT=function(t){if(e=t.options,!Object.prototype.hasOwnProperty.call(e,\"projectId\"))throw new Dr(Sr.INVALID_ARGUMENT,'\"projectId\" not provided in firebase.initializeApp.');var e,n=t.options.projectId;if(!n||\"string\"!=typeof n)throw new Dr(Sr.INVALID_ARGUMENT,\"projectId must be a string in FirebaseApp.options\");return new uu(n)},Object.defineProperty(Rl.prototype,\"app\",{get:function(){if(!this.qT)throw new Dr(Sr.FAILED_PRECONDITION,\"Firestore was not initialized using the Firebase SDK. 'app' is not available\");return this.qT},enumerable:!0,configurable:!0}),Rl.prototype.collection=function(t){return Oh(\"Firestore.collection\",arguments,1),Ph(\"Firestore.collection\",\"non-empty string\",1,t),this.QT(),new Tl(Cr.K(t),this)},Rl.prototype.doc=function(t){return Oh(\"Firestore.doc\",arguments,1),Ph(\"Firestore.doc\",\"non-empty string\",1,t),this.QT(),vl.sE(Cr.K(t),this)},Rl.prototype.collectionGroup=function(t){if(Oh(\"Firestore.collectionGroup\",arguments,1),Ph(\"Firestore.collectionGroup\",\"non-empty string\",1,t),0<=t.indexOf(\"/\"))throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid collection ID '\"+t+\"' passed to function Firestore.collectionGroup(). Collection IDs must not contain '/'.\");return this.QT(),new bl(new Ao(Cr.G,t),this)},Rl.prototype.runTransaction=function(e){var n=this;return Oh(\"Firestore.runTransaction\",arguments,1),Ph(\"Firestore.runTransaction\",\"function\",1,e),this.QT().transaction(function(t){return e(new dl(n,t))})},Rl.prototype.batch=function(){return this.QT(),new yl(this)},Object.defineProperty(Rl,\"logLevel\",{get:function(){switch(Hs()){case l.DEBUG:return\"debug\";case l.SILENT:return\"silent\";default:return\"error\"}},enumerable:!0,configurable:!0}),Rl.setLogLevel=function(t){switch(Oh(\"Firestore.setLogLevel\",arguments,1),Ph(\"Firestore.setLogLevel\",\"non-empty string\",1,t),t){case\"debug\":Ks(l.DEBUG);break;case\"error\":Ks(l.ERROR);break;case\"silent\":Ks(l.SILENT);break;default:throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid log level: \"+t)}},Rl.prototype.iE=function(){return this.HT.timestampsInSnapshots},Rl),dl=(Ol.prototype.get=function(t){var n=this;Oh(\"Transaction.get\",arguments,1);var r=jl(\"Transaction.get\",t,this.nE);return this.rE.R_([r.$c]).then(function(t){if(!t||1!==t.length)return Js();var e=t[0];if(e instanceof Io)return new gl(n.nE,r.$c,null,!1,!1,r.hE);if(e instanceof To)return new gl(n.nE,r.$c,e,!1,!1,r.hE);throw Js()})},Ol.prototype.set=function(t,e,n){Vh(\"Transaction.set\",arguments,2,3);var r=jl(\"Transaction.set\",t,this.nE);n=Ll(\"Transaction.set\",n);var i=Ul(r.hE,e,\"Transaction.set\"),o=i[0],s=i[1],u=n.merge||n.mergeFields?this.nE.YT.Sc(s,o,n.mergeFields):this.nE.YT.bc(s,o);return this.rE.set(r.$c,u),this},Ol.prototype.update=function(t,e,n){for(var r,i,o=[],s=3;s<arguments.length;s++)o[s-3]=arguments[s];return i=\"string\"==typeof e||e instanceof $h?(Rh(\"Transaction.update\",arguments,3),r=jl(\"Transaction.update\",t,this.nE),this.nE.YT.Cc(\"Transaction.update\",e,n,o)):(Oh(\"Transaction.update\",arguments,2),r=jl(\"Transaction.update\",t,this.nE),this.nE.YT.Dc(\"Transaction.update\",e)),this.rE.update(r.$c,i),this},Ol.prototype.delete=function(t){Oh(\"Transaction.delete\",arguments,1);var e=jl(\"Transaction.delete\",t,this.nE);return this.rE.delete(e.$c),this},Ol),yl=(xl.prototype.set=function(t,e,n){Vh(\"WriteBatch.set\",arguments,2,3),this.uE();var r=jl(\"WriteBatch.set\",t,this.nE);n=Ll(\"WriteBatch.set\",n);var i=Ul(r.hE,e,\"WriteBatch.set\"),o=i[0],s=i[1],u=n.merge||n.mergeFields?this.nE.YT.Sc(s,o,n.mergeFields):this.nE.YT.bc(s,o);return this.oE=this.oE.concat(u.Rc(r.$c,Fi.ft())),this},xl.prototype.update=function(t,e,n){for(var r,i,o=[],s=3;s<arguments.length;s++)o[s-3]=arguments[s];return this.uE(),i=\"string\"==typeof e||e instanceof $h?(Rh(\"WriteBatch.update\",arguments,3),r=jl(\"WriteBatch.update\",t,this.nE),this.nE.YT.Cc(\"WriteBatch.update\",e,n,o)):(Oh(\"WriteBatch.update\",arguments,2),r=jl(\"WriteBatch.update\",t,this.nE),this.nE.YT.Dc(\"WriteBatch.update\",e)),this.oE=this.oE.concat(i.Rc(r.$c,Fi.exists(!0))),this},xl.prototype.delete=function(t){Oh(\"WriteBatch.delete\",arguments,1),this.uE();var e=jl(\"WriteBatch.delete\",t,this.nE);return this.oE=this.oE.concat(new Qi(e.$c,Fi.ft())),this},xl.prototype.commit=function(){return this.uE(),this.aE=!0,0<this.oE.length?this.nE.QT().write(this.oE):Promise.resolve()},xl.prototype.uE=function(){if(this.aE)throw new Dr(Sr.FAILED_PRECONDITION,\"A write batch can no longer be used after commit() has been called.\")},xl),vl=(kl.sE=function(t,e,n){if(t.length%2!=0)throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid document reference. Document references must have an even number of segments, but \"+t.j()+\" has \"+t.length);return new kl(new Xr(t),e,n)},Object.defineProperty(kl.prototype,\"id\",{get:function(){return this.$c.path.O()},enumerable:!0,configurable:!0}),Object.defineProperty(kl.prototype,\"parent\",{get:function(){return new Tl(this.$c.path.M(),this.firestore,this.hE)},enumerable:!0,configurable:!0}),Object.defineProperty(kl.prototype,\"path\",{get:function(){return this.$c.path.j()},enumerable:!0,configurable:!0}),kl.prototype.collection=function(t){if(Oh(\"DocumentReference.collection\",arguments,1),Ph(\"DocumentReference.collection\",\"non-empty string\",1,t),!t)throw new Dr(Sr.INVALID_ARGUMENT,\"Must provide a non-empty collection name to collection()\");var e=Cr.K(t);return new Tl(this.$c.path.child(e),this.firestore)},kl.prototype.isEqual=function(t){if(!(t instanceof kl))throw zh(\"isEqual\",\"DocumentReference\",1,t);return this.firestore===t.firestore&&this.$c.isEqual(t.$c)&&this.hE===t.hE},kl.prototype.set=function(t,e){Vh(\"DocumentReference.set\",arguments,1,2),e=Ll(\"DocumentReference.set\",e);var n=Ul(this.hE,t,\"DocumentReference.set\"),r=n[0],i=n[1],o=e.merge||e.mergeFields?this.firestore.YT.Sc(i,r,e.mergeFields):this.firestore.YT.bc(i,r);return this.WT.write(o.Rc(this.$c,Fi.ft()))},kl.prototype.update=function(t,e){for(var n,r=[],i=2;i<arguments.length;i++)r[i-2]=arguments[i];return n=\"string\"==typeof t||t instanceof $h?(Rh(\"DocumentReference.update\",arguments,2),this.firestore.YT.Cc(\"DocumentReference.update\",t,e,r)):(Oh(\"DocumentReference.update\",arguments,1),this.firestore.YT.Dc(\"DocumentReference.update\",t)),this.WT.write(n.Rc(this.$c,Fi.exists(!0)))},kl.prototype.delete=function(){return Oh(\"DocumentReference.delete\",arguments,0),this.WT.write([new Qi(this.$c,Fi.ft())])},kl.prototype.onSnapshot=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];Vh(\"DocumentReference.onSnapshot\",arguments,1,4);var n,r={includeMetadataChanges:!1},i=0;\"object\"!=typeof t[i]||ul(t[i])||(Gh(\"DocumentReference.onSnapshot\",r=t[i],[\"includeMetadataChanges\"]),Mh(\"DocumentReference.onSnapshot\",\"boolean\",\"includeMetadataChanges\",r.includeMetadataChanges),i++);var o={includeMetadataChanges:r.includeMetadataChanges};return n=ul(t[i])?t[i]:(Ph(\"DocumentReference.onSnapshot\",\"function\",i,t[i]),Lh(\"DocumentReference.onSnapshot\",\"function\",i+1,t[i+1]),Lh(\"DocumentReference.onSnapshot\",\"function\",i+2,t[i+2]),{next:t[i],error:t[i+1],complete:t[i+2]}),this.cE(o,n)},kl.prototype.cE=function(t,n){var r=this,e=function(t){console.error(\"Uncaught Error in onSnapshot:\",t)};n.error&&(e=n.error.bind(n));var i=new Jf({next:function(t){if(n.next){var e=t.docs.get(r.$c);n.next(new gl(r.firestore,r.$c,e,t.fromCache,t.hasPendingWrites,r.hE))}},error:e}),o=this.WT.listen(Ao.Wt(this.$c.path),i,t);return function(){i.FT(),r.WT.nl(o)}},kl.prototype.get=function(n){var r=this;return Vh(\"DocumentReference.get\",arguments,0,1),Ml(\"DocumentReference.get\",n),new Promise(function(e,t){n&&\"cache\"===n.source?r.firestore.QT().ST(r.$c).then(function(t){e(new gl(r.firestore,r.$c,t,!0,t instanceof To&&t.At,r.hE))},t):r._E(e,t,n)})},kl.prototype._E=function(e,n,r){var i=this.cE({includeMetadataChanges:!0,Lf:!0},{next:function(t){i(),!t.exists&&t.metadata.fromCache?n(new Dr(Sr.UNAVAILABLE,\"Failed to get document because the client is offline.\")):t.exists&&t.metadata.fromCache&&r&&\"server\"===r.source?n(new Dr(Sr.UNAVAILABLE,'Failed to get document from server. (However, this document does exist in the local cache. Run again without setting source to \"server\" to retrieve the cached document.)')):e(t)},error:n})},kl.prototype.withConverter=function(t){return new kl(this.$c,this.firestore,t)},kl),ml=(Dl.prototype.isEqual=function(t){return this.hasPendingWrites===t.hasPendingWrites&&this.fromCache===t.fromCache},Dl),gl=(Sl.prototype.data=function(t){if(Vh(\"DocumentSnapshot.data\",arguments,0,1),t=Cl(\"DocumentSnapshot.data\",t),this.lE){if(this.hE){var e=new wl(this.nE,this.$c,this.lE,this.dE,this.fE);return this.hE.fromFirestore(e,t)}return new cl(this.nE,this.nE.iE(),t.serverTimestamps,void 0).$T(this.lE.Mt())}},Sl.prototype.get=function(t,e){if(Vh(\"DocumentSnapshot.get\",arguments,1,2),e=Cl(\"DocumentSnapshot.get\",e),this.lE){var n=this.lE.data().field(Vc(\"DocumentSnapshot.get\",t));if(null!==n)return new cl(this.nE,this.nE.iE(),e.serverTimestamps,this.hE).$T(n)}},Object.defineProperty(Sl.prototype,\"id\",{get:function(){return this.$c.path.O()},enumerable:!0,configurable:!0}),Object.defineProperty(Sl.prototype,\"ref\",{get:function(){return new vl(this.$c,this.nE,this.hE)},enumerable:!0,configurable:!0}),Object.defineProperty(Sl.prototype,\"exists\",{get:function(){return null!==this.lE},enumerable:!0,configurable:!0}),Object.defineProperty(Sl.prototype,\"metadata\",{get:function(){return new ml(this.fE,this.dE)},enumerable:!0,configurable:!0}),Sl.prototype.isEqual=function(t){if(!(t instanceof Sl))throw zh(\"isEqual\",\"DocumentSnapshot\",1,t);return this.nE===t.nE&&this.dE===t.dE&&this.$c.isEqual(t.$c)&&(null===this.lE?null===t.lE:this.lE.isEqual(t.lE))&&this.hE===t.hE},Sl),wl=(n(Al,hl=gl),Al.prototype.data=function(t){return hl.prototype.data.call(this,t)},Al),bl=(_l.prototype.where=function(t,e,n){Oh(\"Query.where\",arguments,3),Bh(\"Query.where\",3,n);var r,i=function(t,e){if(!t.some(function(t){return t===e}))throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid value \"+Fh(e)+\" provided to function Query.where() for its \"+Qh(2)+\" argument. Acceptable values: \"+t.join(\", \"));return e}([\"<\",\"<=\",\"==\",\">=\",\">\",\"array-contains\",\"in\",\"array-contains-any\"],e),o=Vc(\"Query.where\",t);if(o.Y()){if(\"array-contains\"===i||\"array-contains-any\"===i)throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid Query. You can't perform '\"+i+\"' queries on FieldPath.documentId().\");if(\"in\"===i){this.EE(n,i);for(var s=[],u=0,a=n;u<a.length;u++){var h=a[u];s.push(this.IE(h))}r={arrayValue:{values:s}}}else r=this.IE(n)}else\"in\"!==i&&\"array-contains-any\"!==i||this.EE(n,i),r=this.firestore.YT.Fc(\"Query.where\",n,\"in\"===i);var c=So.create(o,i,r);return this.wE(c),new _l(this.TE.Gt(c),this.firestore,this.hE)},_l.prototype.orderBy=function(t,e){var n;if(Vh(\"Query.orderBy\",arguments,1,2),Lh(\"Query.orderBy\",\"non-empty string\",2,e),void 0===e||\"asc\"===e)n=\"asc\";else{if(\"desc\"!==e)throw new Dr(Sr.INVALID_ARGUMENT,\"Function Query.orderBy() has unknown direction '\"+e+\"', expected 'asc' or 'desc'.\");n=\"desc\"}if(null!==this.TE.startAt)throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid query. You must not call Query.startAt() or Query.startAfter() before calling Query.orderBy().\");if(null!==this.TE.endAt)throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid query. You must not call Query.endAt() or Query.endBefore() before calling Query.orderBy().\");var r=Vc(\"Query.orderBy\",t),i=new Po(r,n);return this.RE(i),new _l(this.TE.zt(i),this.firestore,this.hE)},_l.prototype.limit=function(t){return Oh(\"Query.limit\",arguments,1),Ph(\"Query.limit\",\"number\",1,t),Wh(\"Query.limit\",1,t),new _l(this.TE.Ht(t),this.firestore,this.hE)},_l.prototype.limitToLast=function(t){return Oh(\"Query.limitToLast\",arguments,1),Ph(\"Query.limitToLast\",\"number\",1,t),Wh(\"Query.limitToLast\",1,t),new _l(this.TE.Yt(t),this.firestore,this.hE)},_l.prototype.startAt=function(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];Rh(\"Query.startAt\",arguments,1);var r=this.mE(\"Query.startAt\",t,e,!0);return new _l(this.TE.Jt(r),this.firestore,this.hE)},_l.prototype.startAfter=function(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];Rh(\"Query.startAfter\",arguments,1);var r=this.mE(\"Query.startAfter\",t,e,!1);return new _l(this.TE.Jt(r),this.firestore,this.hE)},_l.prototype.endBefore=function(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];Rh(\"Query.endBefore\",arguments,1);var r=this.mE(\"Query.endBefore\",t,e,!0);return new _l(this.TE.Xt(r),this.firestore,this.hE)},_l.prototype.endAt=function(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];Rh(\"Query.endAt\",arguments,1);var r=this.mE(\"Query.endAt\",t,e,!1);return new _l(this.TE.Xt(r),this.firestore,this.hE)},_l.prototype.isEqual=function(t){if(!(t instanceof _l))throw zh(\"isEqual\",\"Query\",1,t);return this.firestore===t.firestore&&this.TE.isEqual(t.TE)},_l.prototype.withConverter=function(t){return new _l(this.TE,this.firestore,t)},_l.prototype.mE=function(t,e,n,r){if(Bh(t,1,e),e instanceof gl){if(0<n.length)throw new Dr(Sr.INVALID_ARGUMENT,\"Too many arguments provided to \"+t+\"().\");var i=e;if(!i.exists)throw new Dr(Sr.NOT_FOUND,\"Can't use a DocumentSnapshot that doesn't exist for \"+t+\"().\");return this.AE(i.lE,r)}var o=[e].concat(n);return this.PE(t,o,r)},_l.prototype.AE=function(t,e){for(var n=[],r=0,i=this.TE.orderBy;r<i.length;r++){var o=i[r];if(o.field.Y())n.push(gi(this.firestore.Nc,t.key));else{var s=t.field(o.field);if(si(s))throw new Dr(Sr.INVALID_ARGUMENT,'Invalid query. You are trying to start or end a query using a document for which the field \"'+o.field+'\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');if(null===s){var u=o.field.j();throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid query. You are trying to start or end a query using a document for which the field '\"+u+\"' (used as the orderBy) does not exist.\")}n.push(s)}}return new Vo(n,e)},_l.prototype.PE=function(t,e,n){var r=this.TE.xt;if(e.length>r.length)throw new Dr(Sr.INVALID_ARGUMENT,\"Too many arguments provided to \"+t+\"(). The number of arguments must be less than or equal to the number of Query.orderBy() clauses\");for(var i=[],o=0;o<e.length;o++){var s=e[o];if(r[o].field.Y()){if(\"string\"!=typeof s)throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid query. Expected a string for document ID in \"+t+\"(), but got a \"+typeof s);if(!this.TE._e()&&-1!==s.indexOf(\"/\"))throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid query. When querying a collection and ordering by FieldPath.documentId(), the value passed to \"+t+\"() must be a plain document ID, but '\"+s+\"' contains a slash.\");var u=this.TE.path.child(Cr.K(s));if(!Xr.et(u))throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid query. When querying a collection group and ordering by FieldPath.documentId(), the value passed to \"+t+\"() must result in a valid document path, but '\"+u+\"' is not because it contains an odd number of segments.\");var a=new Xr(u);i.push(gi(this.firestore.Nc,a))}else{var h=this.firestore.YT.Fc(t,s);i.push(h)}}return new Vo(i,n)},_l.prototype.onSnapshot=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];Vh(\"Query.onSnapshot\",arguments,1,4);var n,r={},i=0;return\"object\"!=typeof t[i]||ul(t[i])||(Gh(\"Query.onSnapshot\",r=t[i],[\"includeMetadataChanges\"]),Mh(\"Query.onSnapshot\",\"boolean\",\"includeMetadataChanges\",r.includeMetadataChanges),i++),n=ul(t[i])?t[i]:(Ph(\"Query.onSnapshot\",\"function\",i,t[i]),Lh(\"Query.onSnapshot\",\"function\",i+1,t[i+1]),Lh(\"Query.onSnapshot\",\"function\",i+2,t[i+2]),{next:t[i],error:t[i+1],complete:t[i+2]}),this.VE(this.TE),this.cE(r,n)},_l.prototype.cE=function(t,e){var n=this,r=function(t){console.error(\"Uncaught Error in onSnapshot:\",t)};e.error&&(r=e.error.bind(e));var i=new Jf({next:function(t){e.next&&e.next(new El(n.firestore,n.TE,t,n.hE))},error:r}),o=this.firestore.QT(),s=o.listen(this.TE,i,t);return function(){i.FT(),o.nl(s)}},_l.prototype.VE=function(t){if(t.ae()&&0===t.xt.length)throw new Dr(Sr.UNIMPLEMENTED,\"limitToLast() queries require specifying at least one orderBy() clause\")},_l.prototype.get=function(n){var r=this;return Vh(\"Query.get\",arguments,0,1),Ml(\"Query.get\",n),this.VE(this.TE),new Promise(function(e,t){n&&\"cache\"===n.source?r.firestore.QT().DT(r.TE).then(function(t){e(new El(r.firestore,r.TE,t,r.hE))},t):r._E(e,t,n)})},_l.prototype._E=function(e,n,r){var i=this.cE({includeMetadataChanges:!0,Lf:!0},{next:function(t){i(),t.metadata.fromCache&&r&&\"server\"===r.source?n(new Dr(Sr.UNAVAILABLE,'Failed to get documents from server. (However, these documents may exist in the local cache. Run again without setting source to \"server\" to retrieve the cached documents.)')):e(t)},error:n})},_l.prototype.IE=function(t){if(\"string\"==typeof t){if(\"\"===t)throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid query. When querying with FieldPath.documentId(), you must provide a valid document ID, but it was an empty string.\");if(!this.TE._e()&&-1!==t.indexOf(\"/\"))throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid query. When querying a collection by FieldPath.documentId(), you must provide a plain document ID, but '\"+t+\"' contains a '/' character.\");var e=this.TE.path.child(Cr.K(t));if(!Xr.et(e))throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid query. When querying a collection group by FieldPath.documentId(), the value provided must result in a valid document path, but '\"+e+\"' is not because it has an odd number of segments (\"+e.length+\").\");return gi(this.firestore.Nc,new Xr(e))}if(t instanceof vl){var n=t;return gi(this.firestore.Nc,n.$c)}throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid query. When querying with FieldPath.documentId(), you must provide a valid string or a DocumentReference, but it was: \"+Fh(t)+\".\")},_l.prototype.EE=function(t,e){if(!Array.isArray(t)||0===t.length)throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid Query. A non-empty array is required for '\"+e.toString()+\"' filters.\");if(10<t.length)throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid Query. '\"+e.toString()+\"' filters support a maximum of 10 elements in the value array.\");if(0<=t.indexOf(null))throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid Query. '\"+e.toString()+\"' filters cannot contain 'null' in the value array.\");if(0<t.filter(function(t){return Number.isNaN(t)}).length)throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid Query. '\"+e.toString()+\"' filters cannot contain 'NaN' in the value array.\")},_l.prototype.wE=function(t){if(t instanceof So){var e=[\"array-contains\",\"array-contains-any\"],n=[\"in\",\"array-contains-any\"],r=0<=e.indexOf(t.op),i=0<=n.indexOf(t.op);if(t.ue()){var o=this.TE.jt();if(null!==o&&!o.isEqual(t.field))throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid query. All where filters with an inequality (<, <=, >, or >=) must be on the same field. But you have inequality filters on '\"+o.toString()+\"' and '\"+t.field.toString()+\"'\");var s=this.TE.Kt();null!==s&&this.gE(t.field,s)}else if(i||r){var u=null;if(i&&(u=this.TE.ce(n)),null===u&&r&&(u=this.TE.ce(e)),null!=u)throw u===t.op?new Dr(Sr.INVALID_ARGUMENT,\"Invalid query. You cannot use more than one '\"+t.op.toString()+\"' filter.\"):new Dr(Sr.INVALID_ARGUMENT,\"Invalid query. You cannot use '\"+t.op.toString()+\"' filters with '\"+u.toString()+\"' filters.\")}}},_l.prototype.RE=function(t){if(null===this.TE.Kt()){var e=this.TE.jt();null!==e&&this.gE(e,t.field)}},_l.prototype.gE=function(t,e){if(!e.isEqual(t))throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid query. You have a where filter with an inequality (<, <=, >, or >=) on field '\"+t.toString()+\"' and so you must also use '\"+t.toString()+\"' as your first Query.orderBy(), but your first Query.orderBy() is on field '\"+e.toString()+\"' instead.\")},_l),El=(Object.defineProperty(Nl.prototype,\"docs\",{get:function(){var e=[];return this.forEach(function(t){return e.push(t)}),e},enumerable:!0,configurable:!0}),Object.defineProperty(Nl.prototype,\"empty\",{get:function(){return this.yE.docs.B()},enumerable:!0,configurable:!0}),Object.defineProperty(Nl.prototype,\"size\",{get:function(){return this.yE.docs.size},enumerable:!0,configurable:!0}),Nl.prototype.forEach=function(e,n){var r=this;Vh(\"QuerySnapshot.forEach\",arguments,1,2),Ph(\"QuerySnapshot.forEach\",\"function\",1,e),this.yE.docs.forEach(function(t){e.call(n,r.SE(t))})},Object.defineProperty(Nl.prototype,\"query\",{get:function(){return new bl(this.pE,this.nE,this.hE)},enumerable:!0,configurable:!0}),Nl.prototype.docChanges=function(t){t&&(Gh(\"QuerySnapshot.docChanges\",t,[\"includeMetadataChanges\"]),Mh(\"QuerySnapshot.docChanges\",\"boolean\",\"includeMetadataChanges\",t.includeMetadataChanges));var e=!(!t||!t.includeMetadataChanges);if(e&&this.yE.hs)throw new Dr(Sr.INVALID_ARGUMENT,\"To include metadata changes with your document changes, you must also pass { includeMetadataChanges:true } to onSnapshot().\");return this.bE&&this.vE===e||(this.bE=function(i,e,o,s){if(o.ss.B()){var n=0;return o.docChanges.map(function(t){var e=new wl(i,t.doc.key,t.doc,o.fromCache,o.ns.has(t.doc.key),s);return t.doc,{type:\"added\",doc:e,oldIndex:-1,newIndex:n++}})}var u=o.ss;return o.docChanges.filter(function(t){return e||3!==t.type}).map(function(t){var e=new wl(i,t.doc.key,t.doc,o.fromCache,o.ns.has(t.doc.key),s),n=-1,r=-1;return 0!==t.type&&(n=u.indexOf(t.doc.key),u=u.delete(t.doc.key)),1!==t.type&&(r=(u=u.add(t.doc)).indexOf(t.doc.key)),{type:function(t){switch(t){case 0:return\"added\";case 2:case 3:return\"modified\";case 1:return\"removed\";default:return Js()}}(t.type),doc:e,oldIndex:n,newIndex:r}})}(this.nE,e,this.yE,this.hE),this.vE=e),this.bE},Nl.prototype.isEqual=function(t){if(!(t instanceof Nl))throw zh(\"isEqual\",\"QuerySnapshot\",1,t);return this.nE===t.nE&&this.pE.isEqual(t.pE)&&this.yE.isEqual(t.yE)&&this.hE===t.hE},Nl.prototype.SE=function(t){return new wl(this.nE,t.key,t,this.metadata.fromCache,this.yE.ns.has(t.key),this.hE)},Nl),Tl=(n(Il,al=bl),Object.defineProperty(Il.prototype,\"id\",{get:function(){return this.TE.path.O()},enumerable:!0,configurable:!0}),Object.defineProperty(Il.prototype,\"parent\",{get:function(){var t=this.TE.path.M();return t.B()?null:new vl(new Xr(t),this.firestore)},enumerable:!0,configurable:!0}),Object.defineProperty(Il.prototype,\"path\",{get:function(){return this.TE.path.j()},enumerable:!0,configurable:!0}),Il.prototype.doc=function(t){if(Vh(\"CollectionReference.doc\",arguments,0,1),0===arguments.length&&(t=eu.cn()),Ph(\"CollectionReference.doc\",\"non-empty string\",1,t),\"\"===t)throw new Dr(Sr.INVALID_ARGUMENT,\"Document path must be a non-empty string\");var e=Cr.K(t);return vl.sE(this.TE.path.child(e),this.firestore,this.hE)},Il.prototype.add=function(t){Oh(\"CollectionReference.add\",arguments,1),Ph(\"CollectionReference.add\",\"object\",1,this.hE?this.hE.toFirestore(t):t);var e=this.doc();return e.set(t).then(function(){return e})},Il.prototype.withConverter=function(t){return new Il(this.DE,this.firestore,t)},Il);function Il(t,e,n){var r=this;if(((r=al.call(this,Ao.Wt(t),e,n)||this).DE=t).length%2!=1)throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid collection reference. Collection references must have an odd number of segments, but \"+t.j()+\" has \"+t.length);return r}function Nl(t,e,n,r){this.nE=t,this.pE=e,this.yE=n,this.hE=r,this.bE=null,this.vE=null,this.metadata=new ml(n.hasPendingWrites,n.fromCache)}function _l(t,e,n){this.TE=t,this.firestore=e,this.hE=n}function Al(){return null!==hl&&hl.apply(this,arguments)||this}function Sl(t,e,n,r,i,o){this.nE=t,this.$c=e,this.lE=n,this.dE=r,this.fE=i,this.hE=o}function Dl(t,e){this.hasPendingWrites=t,this.fromCache=e}function kl(t,e,n){this.$c=t,this.firestore=e,this.hE=n,this.WT=this.firestore.QT()}function xl(t){this.nE=t,this.oE=[],this.aE=!1}function Ol(t,e){this.nE=t,this.rE=e}function Rl(t,e,n){var r=this;if(void 0===n&&(n=new Yf),this.qT=null,this.UT=new sh,this.INTERNAL={delete:function(){return y(r,void 0,void 0,function(){return v(this,function(t){switch(t.label){case 0:return this.QT(),[4,this.WT.terminate()];case 1:return t.sent(),[2]}})})}},\"object\"==typeof t.options){var i=t;this.qT=i,this.Nc=Rl.jT(i),this.KT=i.name,this.GT=new xr(e)}else{var o=t;if(!o.projectId)throw new Dr(Sr.INVALID_ARGUMENT,\"Must provide projectId\");this.Nc=new uu(o.projectId,o.database),this.KT=\"[DEFAULT]\",this.GT=new kr}this.zT=n,this.HT=new ll({}),this.YT=new Ac(this.Nc)}function Vl(t){var e,n;if(void 0===t.host){if(void 0!==t.ssl)throw new Dr(Sr.INVALID_ARGUMENT,\"Can't provide ssl option if host option is not set\");this.host=\"firestore.googleapis.com\",this.ssl=!0}else Ch(\"settings\",\"non-empty string\",\"host\",t.host),this.host=t.host,Mh(\"settings\",\"boolean\",\"ssl\",t.ssl),this.ssl=null===(e=t.ssl)||void 0===e||e;if(Gh(\"settings\",t,[\"host\",\"ssl\",\"credentials\",\"timestampsInSnapshots\",\"cacheSizeBytes\",\"experimentalForceLongPolling\"]),Mh(\"settings\",\"object\",\"credentials\",t.credentials),this.credentials=t.credentials,Mh(\"settings\",\"boolean\",\"timestampsInSnapshots\",t.timestampsInSnapshots),!0===t.timestampsInSnapshots?Xs(\"The setting 'timestampsInSnapshots: true' is no longer required and should be removed.\"):!1===t.timestampsInSnapshots&&Xs(\"Support for 'timestampsInSnapshots: false' will be removed soon. You must update your code to handle Timestamp objects.\"),this.timestampsInSnapshots=null===(n=t.timestampsInSnapshots)||void 0===n||n,Mh(\"settings\",\"number\",\"cacheSizeBytes\",t.cacheSizeBytes),void 0===t.cacheSizeBytes)this.cacheSizeBytes=ph.cu;else{if(t.cacheSizeBytes!==fl&&t.cacheSizeBytes<ph.uu)throw new Dr(Sr.INVALID_ARGUMENT,\"cacheSizeBytes must be at least \"+ph.uu);this.cacheSizeBytes=t.cacheSizeBytes}Mh(\"settings\",\"boolean\",\"experimentalForceLongPolling\",t.experimentalForceLongPolling),this.forceLongPolling=void 0!==t.experimentalForceLongPolling&&t.experimentalForceLongPolling}function Pl(t,e,n,r){this.firestore=t,this.timestampsInSnapshots=e,this.NT=n,this.converter=r}function Ll(t,e){if(void 0===e)return{merge:!1};if(Gh(t,e,[\"merge\",\"mergeFields\"]),Mh(t,\"boolean\",\"merge\",e.merge),n=t,void 0!==(r=e.mergeFields)&&function(t,e,n,r){if(!(n instanceof Array))throw new Dr(Sr.INVALID_ARGUMENT,\"Function \"+t+\"() requires its \"+e+\" option to be an array, but it was: \"+Fh(n));for(var i=0;i<n.length;++i)if(!r(n[i]))throw new Dr(Sr.INVALID_ARGUMENT,\"Function \"+t+\"() requires all \"+e+\" elements to be a string or a FieldPath, but the value at index \"+i+\" was: \"+Fh(n[i]))}(n,\"mergeFields\",r,function(t){return\"string\"==typeof t||t instanceof $h}),void 0!==e.mergeFields&&void 0!==e.merge)throw new Dr(Sr.INVALID_ARGUMENT,\"Invalid options passed to function \"+t+'(): You cannot specify both \"merge\" and \"mergeFields\".');var n,r;return e}function Cl(t,e){return void 0===e?{}:(Gh(t,e,[\"serverTimestamps\"]),jh(t,0,\"serverTimestamps\",e.serverTimestamps,[\"estimate\",\"previous\",\"none\"]),e)}function Ml(t,e){Lh(t,\"object\",1,e),e&&(Gh(t,e,[\"source\"]),jh(t,0,\"source\",e.source,[\"default\",\"server\",\"cache\"]))}function jl(t,e,n){if(e instanceof vl){if(e.firestore!==n)throw new Dr(Sr.INVALID_ARGUMENT,\"Provided document reference is from a different Firestore instance.\");return e}throw zh(t,\"DocumentReference\",1,e)}function Ul(t,e,n){var r;return t?(r=t.toFirestore(e),n=\"toFirestore() in \"+n):r=e,[r,n]}function ql(t,e){function n(){var t=\"This constructor is private.\";throw e&&(t+=\" \",t+=e),new Dr(Sr.INVALID_ARGUMENT,t)}return n.prototype=t.prototype,Object.assign(n,t),n}var Fl,Bl=ql(pl,\"Use firebase.firestore() instead.\"),Gl=ql(dl,\"Use firebase.firestore().runTransaction() instead.\"),zl=ql(yl,\"Use firebase.firestore().batch() instead.\"),Wl=ql(vl,\"Use firebase.firestore().doc() instead.\"),Ql=ql(gl),Hl=ql(wl),Kl=ql(bl),Yl=ql(El),Xl=ql(Tl,\"Use firebase.firestore().collection() instead.\"),$l=ql((cp.delete=function(){return xh(\"FieldValue.delete\",arguments),new uc},cp.serverTimestamp=function(){return xh(\"FieldValue.serverTimestamp\",arguments),new ac},cp.arrayUnion=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return Rh(\"FieldValue.arrayUnion\",arguments,1),new hc(t)},cp.arrayRemove=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return Rh(\"FieldValue.arrayRemove\",arguments,1),new cc(t)},cp.increment=function(t){return Ph(\"FieldValue.increment\",\"number\",1,t),Oh(\"FieldValue.increment\",arguments,1),new fc(t)},cp.prototype.isEqual=function(t){return this===t},cp),\"Use FieldValue.<field>() instead.\"),Jl=ql(Xh,\"Use Blob.fromUint8Array() or Blob.fromBase64String() instead.\"),Zl={Firestore:Bl,GeoPoint:lc,Timestamp:Vr,Blob:Jl,Transaction:Gl,WriteBatch:zl,DocumentReference:Wl,DocumentSnapshot:Ql,Query:Kl,QueryDocumentSnapshot:Hl,QuerySnapshot:Yl,CollectionReference:Xl,FieldPath:$h,FieldValue:$l,setLogLevel:pl.setLogLevel,CACHE_SIZE_UNLIMITED:fl},tp=(hp.prototype.x_=function(t){},hp.prototype.Ro=function(){},hp),ep=(ap.prototype.x_=function(t){this.kE.push(t)},ap.prototype.Ro=function(){window.removeEventListener(\"online\",this.CE),window.removeEventListener(\"offline\",this.NE)},ap.prototype.ME=function(){window.addEventListener(\"online\",this.CE),window.addEventListener(\"offline\",this.NE)},ap.prototype.FE=function(){Ys(\"ConnectivityMonitor\",\"Network connectivity changed: AVAILABLE\");for(var t=0,e=this.kE;t<e.length;t++)(0,e[t])(0)},ap.prototype.$E=function(){Ys(\"ConnectivityMonitor\",\"Network connectivity changed: UNAVAILABLE\");for(var t=0,e=this.kE;t<e.length;t++)(0,e[t])(1)},ap.jh=function(){return\"undefined\"!=typeof window&&void 0!==window.addEventListener&&void 0!==window.removeEventListener},ap),np=(up.prototype.t_=function(t){this.xE=t},up.prototype.Hc=function(t){this.BE=t},up.prototype.onMessage=function(t){this.qE=t},up.prototype.close=function(){this.OE()},up.prototype.send=function(t){this.LE(t)},up.prototype.UE=function(){this.xE()},up.prototype.QE=function(t){this.BE(t)},up.prototype.WE=function(t){this.qE(t)},up),rp={BatchGetDocuments:\"batchGet\",Commit:\"commit\"},ip=\"gl-js/ fire/\"+Er,op=(sp.prototype.KE=function(t,e){if(e)for(var n in e.o)e.o.hasOwnProperty(n)&&(t[n]=e.o[n]);t[\"X-Goog-Api-Client\"]=ip},sp.prototype.l_=function(a,r,i){var h=this,c=this.GE(a);return new Promise(function(o,s){var u=new br;u.listenOnce(gr.COMPLETE,function(){try{switch(u.getLastErrorCode()){case mr.NO_ERROR:var t=u.getResponseJson();Ys(\"Connection\",\"XHR received:\",JSON.stringify(t)),o(t);break;case mr.TIMEOUT:Ys(\"Connection\",'RPC \"'+a+'\" timed out'),s(new Dr(Sr.DEADLINE_EXCEEDED,\"Request time out\"));break;case mr.HTTP_ERROR:var e=u.getStatus();if(Ys(\"Connection\",'RPC \"'+a+'\" failed with status:',e,\"response text:\",u.getResponseText()),0<e){var n=u.getResponseJson().error;if(n&&n.status&&n.message){var r=(i=n.status.toLowerCase().replace(\"_\",\"-\"),0<=Object.values(Sr).indexOf(i)?i:Sr.UNKNOWN);s(new Dr(r,n.message))}else s(new Dr(Sr.UNKNOWN,\"Server responded with status \"+u.getStatus()))}else Ys(\"Connection\",'RPC \"'+a+'\" failed'),s(new Dr(Sr.UNAVAILABLE,\"Connection failed.\"));break;default:Js()}}finally{Ys(\"Connection\",'RPC \"'+a+'\" completed.')}var i});var t=Object.assign({},r);delete t.database;var e=JSON.stringify(t);Ys(\"Connection\",\"XHR sending: \",c+\" \"+e);var n={\"Content-Type\":\"text/plain\"};h.KE(n,i),u.send(c,\"POST\",e,n,15)})},sp.prototype.d_=function(t,e,n){return this.l_(t,e,n)},sp.prototype.e_=function(t,e){var n,r,i=[this.jE,\"/\",\"google.firestore.v1.Firestore\",\"/\",t,\"/channel\"],o=vr(),s={httpSessionIdParam:\"gsessionid\",initMessageHeaders:{},messageUrlParams:{database:\"projects/\"+this.ii.projectId+\"/databases/\"+this.ii.database},sendRawJson:!0,supportsCrossDomainXhr:!0,internalChannelParams:{forwardChannelRequestTimeoutMs:6e5},forceLongPolling:this.forceLongPolling};this.KE(s.initMessageHeaders,e),\"undefined\"!=typeof window&&(window.cordova||window.phonegap||window.PhoneGap)&&/ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(p())||\"object\"==typeof navigator&&\"ReactNative\"===navigator.product||0<=p().indexOf(\"Electron/\")||0<=(r=p()).indexOf(\"MSIE \")||0<=r.indexOf(\"Trident/\")||0<=p().indexOf(\"MSAppHost/\")||\"object\"==typeof(n=\"object\"==typeof chrome?chrome.runtime:\"object\"==typeof browser?browser.runtime:void 0)&&void 0!==n.id||(s.httpHeadersOverwriteParam=\"$httpHeaders\");var u=i.join(\"\");function a(t,e){h.listen(t,function(t){try{e(t)}catch(t){setTimeout(function(){throw t},0)}})}Ys(\"Connection\",\"Creating WebChannel: \"+u+\" \"+s);var h=o.createWebChannel(u,s),c=!1,f=!1,l=new np({LE:function(t){f?Ys(\"Connection\",\"Not sending because WebChannel is closed:\",t):(c||(Ys(\"Connection\",\"Opening WebChannel transport.\"),h.open(),c=!0),Ys(\"Connection\",\"WebChannel sending:\",t),h.send(t))},OE:function(){return h.close()}});return a(wr.EventType.OPEN,function(){f||Ys(\"Connection\",\"WebChannel transport opened.\")}),a(wr.EventType.CLOSE,function(){f||(f=!0,Ys(\"Connection\",\"WebChannel transport closed\"),l.QE())}),a(wr.EventType.ERROR,function(t){f||(f=!0,Ys(\"Connection\",\"WebChannel transport errored:\",t),l.QE(new Dr(Sr.UNAVAILABLE,\"The operation could not be completed\")))}),a(wr.EventType.MESSAGE,function(t){var e;if(!f){var n=t.data[0];Zs(!!n);var r=n.error||(null===(e=n[0])||void 0===e?void 0:e.error);if(r){Ys(\"Connection\",\"WebChannel received error:\",r);var i=r.status,o=function(){var t=co[i];if(void 0!==t)return $o(t)}(),s=r.message;void 0===o&&(o=Sr.INTERNAL,s=\"Unknown error status: \"+i+\" with message \"+r.message),f=!0,l.QE(new Dr(o,s)),h.close()}else Ys(\"Connection\",\"WebChannel received:\",n),l.WE(n)}}),setTimeout(function(){l.UE()},0),l},sp.prototype.GE=function(t){var e=rp[t];return this.jE+\"/v1/projects/\"+this.ii.projectId+\"/databases/\"+this.ii.database+\"/documents:\"+e},sp);function sp(t){this.ii=t.ii;var e=t.ssl?\"https\":\"http\";this.jE=e+\"://\"+t.host,this.forceLongPolling=t.forceLongPolling}function up(t){this.LE=t.LE,this.OE=t.OE}function ap(){var t=this;this.CE=function(){return t.FE()},this.NE=function(){return t.$E()},this.kE=[],this.ME()}function hp(){}function cp(){}function fp(){this.oc=\"undefined\"!=typeof atob}zs.an((Object.defineProperty(fp.prototype,\"document\",{get:function(){return\"undefined\"!=typeof document?document:null},enumerable:!0,configurable:!0}),Object.defineProperty(fp.prototype,\"window\",{get:function(){return\"undefined\"!=typeof window?window:null},enumerable:!0,configurable:!0}),fp.prototype.pT=function(t){return Promise.resolve(new op(t))},fp.prototype.RT=function(){return new(ep.jh()?ep:tp)},fp.prototype.yc=function(t){return new Fs(t,{hi:!0})},fp.prototype.un=function(t){return JSON.stringify(t)},fp.prototype.atob=function(t){return atob(t)},fp.prototype.btoa=function(t){return btoa(t)},fp.prototype._n=function(t){var e=\"undefined\"!=typeof self&&(self.crypto||self.msCrypto),n=new Uint8Array(t);if(e)e.getRandomValues(n);else for(var r=0;r<t;r++)n[r]=Math.floor(256*Math.random());return n},new fp)),(Fl=lp).INTERNAL.registerComponent(new E(\"firestore\",function(t){return e=t.getProvider(\"app\").getImmediate(),n=t.getProvider(\"auth-internal\"),new pl(e,n,new Xf);var e,n},\"PUBLIC\").setServiceProps(Object.assign({},Zl))),Fl.registerVersion(\"@firebase/firestore\",\"1.14.5\")}).apply(this,arguments)}catch(t){throw console.error(t),new Error(\"Cannot instantiate firebase-firestore.js - be sure to load firebase-app.js first.\")}});\n//# sourceMappingURL=firebase-firestore.js.map\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/firebase/firebase-firestore.js\n");

/***/ }),

/***/ "./node_modules/firebase/storage/dist/index.esm.js":
/*!*********************************************************!*\
  !*** ./node_modules/firebase/storage/dist/index.esm.js ***!
  \*********************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _firebase_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/storage */ \"./node_modules/@firebase/storage/dist/index.esm.js\");\n\n//# sourceMappingURL=index.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmlyZWJhc2Uvc3RvcmFnZS9kaXN0L2luZGV4LmVzbS5qcz81ODhlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBMkI7QUFDM0IiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZmlyZWJhc2Uvc3RvcmFnZS9kaXN0L2luZGV4LmVzbS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnQGZpcmViYXNlL3N0b3JhZ2UnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguZXNtLmpzLm1hcFxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/firebase/storage/dist/index.esm.js\n");

/***/ }),

/***/ "./node_modules/native-url/dist/index.js":
/*!***********************************************!*\
  !*** ./node_modules/native-url/dist/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var e,t=(e=__webpack_require__(/*! querystring */ \"./node_modules/querystring-es3/index.js\"))&&\"object\"==typeof e&&\"default\"in e?e.default:e,r=/https?|ftp|gopher|file/;function o(e){\"string\"==typeof e&&(e=g(e));var o=function(e,t,r){var o=e.auth,a=e.hostname,s=e.protocol||\"\",c=e.pathname||\"\",h=e.hash||\"\",p=e.query||\"\",n=!1;o=o?encodeURIComponent(o).replace(/%3A/i,\":\")+\"@\":\"\",e.host?n=o+e.host:a&&(n=o+(~a.indexOf(\":\")?\"[\"+a+\"]\":a),e.port&&(n+=\":\"+e.port)),p&&\"object\"==typeof p&&(p=t.encode(p));var l=e.search||p&&\"?\"+p||\"\";return s&&\":\"!==s.substr(-1)&&(s+=\":\"),e.slashes||(!s||r.test(s))&&!1!==n?(n=\"//\"+(n||\"\"),c&&\"/\"!==c[0]&&(c=\"/\"+c)):n||(n=\"\"),h&&\"#\"!==h[0]&&(h=\"#\"+h),l&&\"?\"!==l[0]&&(l=\"?\"+l),{protocol:s,host:n,pathname:c=c.replace(/[?#]/g,encodeURIComponent),search:l=l.replace(\"#\",\"%23\"),hash:h}}(e,t,r);return\"\"+o.protocol+o.host+o.pathname+o.search+o.hash}var a=\"http://\",s=\"w.w\",c=a+s,h=/^([a-z0-9.+-]*:\\/\\/\\/)([a-z0-9.+-]:\\/*)?/i,p=/https?|ftp|gopher|file/;function n(e,t){var r=\"string\"==typeof e?g(e):e;e=\"object\"==typeof e?o(e):e;var s=g(t),n=\"\";r.protocol&&!r.slashes&&(n=r.protocol,e=e.replace(r.protocol,\"\"),n+=\"/\"===t[0]||\"/\"===e[0]?\"/\":\"\"),n&&s.protocol&&(n=\"\",s.slashes||(n=s.protocol,t=t.replace(s.protocol,\"\")));var l=e.match(h);l&&!s.protocol&&(e=e.substr((n=l[1]+(l[2]||\"\")).length),/^\\/\\/[^/]/.test(t)&&(n=n.slice(0,-1)));var i=new URL(e,c+\"/\"),f=new URL(t,i).toString().replace(c,\"\"),u=s.protocol||r.protocol;return u+=r.slashes||s.slashes?\"//\":\"\",!n&&u?f=f.replace(a,u):n&&(f=f.replace(a,\"\")),p.test(f)||~t.indexOf(\".\")||\"/\"===e.slice(-1)||\"/\"===t.slice(-1)||\"/\"!==f.slice(-1)||(f=f.slice(0,-1)),n&&(f=n+(\"/\"===f[0]?f.substr(1):f)),f}function l(){}l.parse=g,l.format=o,l.resolve=n,l.resolveObject=n;var i=/^https?|ftp|gopher|file/,f=/^(.*?)([#?].*)/,u=/^([a-z0-9.+-]*:)(\\/{0,3})(.*)/i,m=/^([a-z0-9.+-]*:)?\\/\\/\\/*/i,v=/^([a-z0-9.+-]*:)(\\/{0,2})\\[(.*)\\]$/i;function d(e){try{return decodeURI(e)}catch(t){return e}}function g(e,r,a){if(void 0===r&&(r=!1),void 0===a&&(a=!1),e&&\"object\"==typeof e&&e instanceof l)return e;var h=(e=e.trim()).match(f);e=h?d(h[1]).replace(/\\\\/g,\"/\")+h[2]:d(e).replace(/\\\\/g,\"/\"),v.test(e)&&\"/\"!==e.slice(-1)&&(e+=\"/\");var p=!/(^javascript)/.test(e)&&e.match(u),n=m.test(e),g=\"\";p&&(i.test(p[1])||(g=p[1].toLowerCase(),e=\"\"+p[2]+p[3]),p[2]||(n=!1,i.test(p[1])?(g=p[1],e=\"\"+p[3]):e=\"//\"+p[3]),3!==p[2].length&&1!==p[2].length||(g=p[1],e=\"/\"+p[3]));var b,y=(h?h[1]:e).match(/(:[0-9]+)/),j=\"\";y&&y[1]&&3===y[1].length&&(e=e.replace(j=y[1],j+\"00\"));var w=new l,x=\"\",U=\"\";try{b=new URL(e)}catch(t){x=t,g||a||!/^\\/\\//.test(e)||/^\\/\\/.+[@.]/.test(e)||(U=\"/\",e=e.substr(1));try{b=new URL(e,c)}catch(e){return w.protocol=g,w.href=g,w}}w.slashes=n&&!U,w.host=b.host===s?\"\":b.host,w.hostname=b.hostname===s?\"\":b.hostname.replace(/(\\[|\\])/g,\"\"),w.protocol=x?g||null:b.protocol,w.search=b.search.replace(/\\\\/g,\"%5C\"),w.hash=b.hash.replace(/\\\\/g,\"%5C\");var R=e.split(\"#\");!w.search&&~R[0].indexOf(\"?\")&&(w.search=\"?\"),w.hash||\"\"!==R[1]||(w.hash=\"#\"),w.query=r?t.decode(b.search.substr(1)):w.search.substr(1),w.pathname=U+d(b.pathname).replace(/\"/g,\"%22\"),\"about:\"===w.protocol&&\"blank\"===w.pathname&&(w.protocol=\"\",w.pathname=\"\"),x&&\"/\"!==e[0]&&(w.pathname=w.pathname.substr(1)),g&&!i.test(g)&&\"/\"!==e.slice(-1)&&\"/\"===w.pathname&&(w.pathname=\"\"),w.path=w.pathname+w.search,w.auth=[b.username,b.password].map(decodeURIComponent).filter(Boolean).join(\":\"),w.port=b.port,j&&(w.host=w.host.replace(j+\"00\",j),w.port=w.port.slice(0,-2)),w.href=U?\"\"+w.pathname+w.search+w.hash:o(w);var O=/^(file)/.test(w.href)?[\"host\",\"hostname\"]:[];return Object.keys(w).forEach(function(e){~O.indexOf(e)||(w[e]=w[e]||null)}),w}exports.parse=g,exports.format=o,exports.resolve=n,exports.resolveObject=function(e,t){return g(n(e,t))},exports.Url=l;\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbmF0aXZlLXVybC9kaXN0L2luZGV4LmpzPzQyNjUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsV0FBVyxtQkFBTyxDQUFDLDREQUFhLDZFQUE2RSxjQUFjLDZCQUE2QixzQkFBc0IsNEZBQTRGLDZLQUE2Syw2QkFBNkIsaUxBQWlMLHlHQUF5RyxRQUFRLHNEQUFzRCx1R0FBdUcsZ0JBQWdCLGdDQUFnQyw0QkFBNEIsZ0JBQWdCLDhLQUE4SyxpQkFBaUIsZ0dBQWdHLHdGQUF3RixrT0FBa08sY0FBYyxtREFBbUQsMEVBQTBFLElBQUksNkRBQTZELElBQUksYUFBYSxjQUFjLElBQUksb0JBQW9CLFNBQVMsVUFBVSxrQkFBa0Isd0ZBQXdGLDRCQUE0QixtR0FBbUcsNERBQTRELHdLQUF3SywyQ0FBMkMsdURBQXVELHNCQUFzQixJQUFJLGFBQWEsU0FBUyx5RUFBeUUsSUFBSSxlQUFlLFNBQVMsZ0NBQWdDLHFOQUFxTixtQkFBbUIsNGxCQUE0bEIsb0RBQW9ELDBDQUEwQyxpQ0FBaUMsSUFBSSx1RkFBdUYsaUJBQWlCO0FBQ2puSCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9uYXRpdmUtdXJsL2Rpc3QvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZSx0PShlPXJlcXVpcmUoXCJxdWVyeXN0cmluZ1wiKSkmJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZcImRlZmF1bHRcImluIGU/ZS5kZWZhdWx0OmUscj0vaHR0cHM/fGZ0cHxnb3BoZXJ8ZmlsZS87ZnVuY3Rpb24gbyhlKXtcInN0cmluZ1wiPT10eXBlb2YgZSYmKGU9ZyhlKSk7dmFyIG89ZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUuYXV0aCxhPWUuaG9zdG5hbWUscz1lLnByb3RvY29sfHxcIlwiLGM9ZS5wYXRobmFtZXx8XCJcIixoPWUuaGFzaHx8XCJcIixwPWUucXVlcnl8fFwiXCIsbj0hMTtvPW8/ZW5jb2RlVVJJQ29tcG9uZW50KG8pLnJlcGxhY2UoLyUzQS9pLFwiOlwiKStcIkBcIjpcIlwiLGUuaG9zdD9uPW8rZS5ob3N0OmEmJihuPW8rKH5hLmluZGV4T2YoXCI6XCIpP1wiW1wiK2ErXCJdXCI6YSksZS5wb3J0JiYobis9XCI6XCIrZS5wb3J0KSkscCYmXCJvYmplY3RcIj09dHlwZW9mIHAmJihwPXQuZW5jb2RlKHApKTt2YXIgbD1lLnNlYXJjaHx8cCYmXCI/XCIrcHx8XCJcIjtyZXR1cm4gcyYmXCI6XCIhPT1zLnN1YnN0cigtMSkmJihzKz1cIjpcIiksZS5zbGFzaGVzfHwoIXN8fHIudGVzdChzKSkmJiExIT09bj8obj1cIi8vXCIrKG58fFwiXCIpLGMmJlwiL1wiIT09Y1swXSYmKGM9XCIvXCIrYykpOm58fChuPVwiXCIpLGgmJlwiI1wiIT09aFswXSYmKGg9XCIjXCIraCksbCYmXCI/XCIhPT1sWzBdJiYobD1cIj9cIitsKSx7cHJvdG9jb2w6cyxob3N0Om4scGF0aG5hbWU6Yz1jLnJlcGxhY2UoL1s/I10vZyxlbmNvZGVVUklDb21wb25lbnQpLHNlYXJjaDpsPWwucmVwbGFjZShcIiNcIixcIiUyM1wiKSxoYXNoOmh9fShlLHQscik7cmV0dXJuXCJcIitvLnByb3RvY29sK28uaG9zdCtvLnBhdGhuYW1lK28uc2VhcmNoK28uaGFzaH12YXIgYT1cImh0dHA6Ly9cIixzPVwidy53XCIsYz1hK3MsaD0vXihbYS16MC05ListXSo6XFwvXFwvXFwvKShbYS16MC05ListXTpcXC8qKT8vaSxwPS9odHRwcz98ZnRwfGdvcGhlcnxmaWxlLztmdW5jdGlvbiBuKGUsdCl7dmFyIHI9XCJzdHJpbmdcIj09dHlwZW9mIGU/ZyhlKTplO2U9XCJvYmplY3RcIj09dHlwZW9mIGU/byhlKTplO3ZhciBzPWcodCksbj1cIlwiO3IucHJvdG9jb2wmJiFyLnNsYXNoZXMmJihuPXIucHJvdG9jb2wsZT1lLnJlcGxhY2Uoci5wcm90b2NvbCxcIlwiKSxuKz1cIi9cIj09PXRbMF18fFwiL1wiPT09ZVswXT9cIi9cIjpcIlwiKSxuJiZzLnByb3RvY29sJiYobj1cIlwiLHMuc2xhc2hlc3x8KG49cy5wcm90b2NvbCx0PXQucmVwbGFjZShzLnByb3RvY29sLFwiXCIpKSk7dmFyIGw9ZS5tYXRjaChoKTtsJiYhcy5wcm90b2NvbCYmKGU9ZS5zdWJzdHIoKG49bFsxXSsobFsyXXx8XCJcIikpLmxlbmd0aCksL15cXC9cXC9bXi9dLy50ZXN0KHQpJiYobj1uLnNsaWNlKDAsLTEpKSk7dmFyIGk9bmV3IFVSTChlLGMrXCIvXCIpLGY9bmV3IFVSTCh0LGkpLnRvU3RyaW5nKCkucmVwbGFjZShjLFwiXCIpLHU9cy5wcm90b2NvbHx8ci5wcm90b2NvbDtyZXR1cm4gdSs9ci5zbGFzaGVzfHxzLnNsYXNoZXM/XCIvL1wiOlwiXCIsIW4mJnU/Zj1mLnJlcGxhY2UoYSx1KTpuJiYoZj1mLnJlcGxhY2UoYSxcIlwiKSkscC50ZXN0KGYpfHx+dC5pbmRleE9mKFwiLlwiKXx8XCIvXCI9PT1lLnNsaWNlKC0xKXx8XCIvXCI9PT10LnNsaWNlKC0xKXx8XCIvXCIhPT1mLnNsaWNlKC0xKXx8KGY9Zi5zbGljZSgwLC0xKSksbiYmKGY9bisoXCIvXCI9PT1mWzBdP2Yuc3Vic3RyKDEpOmYpKSxmfWZ1bmN0aW9uIGwoKXt9bC5wYXJzZT1nLGwuZm9ybWF0PW8sbC5yZXNvbHZlPW4sbC5yZXNvbHZlT2JqZWN0PW47dmFyIGk9L15odHRwcz98ZnRwfGdvcGhlcnxmaWxlLyxmPS9eKC4qPykoWyM/XS4qKS8sdT0vXihbYS16MC05ListXSo6KShcXC97MCwzfSkoLiopL2ksbT0vXihbYS16MC05ListXSo6KT9cXC9cXC9cXC8qL2ksdj0vXihbYS16MC05ListXSo6KShcXC97MCwyfSlcXFsoLiopXFxdJC9pO2Z1bmN0aW9uIGQoZSl7dHJ5e3JldHVybiBkZWNvZGVVUkkoZSl9Y2F0Y2godCl7cmV0dXJuIGV9fWZ1bmN0aW9uIGcoZSxyLGEpe2lmKHZvaWQgMD09PXImJihyPSExKSx2b2lkIDA9PT1hJiYoYT0hMSksZSYmXCJvYmplY3RcIj09dHlwZW9mIGUmJmUgaW5zdGFuY2VvZiBsKXJldHVybiBlO3ZhciBoPShlPWUudHJpbSgpKS5tYXRjaChmKTtlPWg/ZChoWzFdKS5yZXBsYWNlKC9cXFxcL2csXCIvXCIpK2hbMl06ZChlKS5yZXBsYWNlKC9cXFxcL2csXCIvXCIpLHYudGVzdChlKSYmXCIvXCIhPT1lLnNsaWNlKC0xKSYmKGUrPVwiL1wiKTt2YXIgcD0hLyheamF2YXNjcmlwdCkvLnRlc3QoZSkmJmUubWF0Y2godSksbj1tLnRlc3QoZSksZz1cIlwiO3AmJihpLnRlc3QocFsxXSl8fChnPXBbMV0udG9Mb3dlckNhc2UoKSxlPVwiXCIrcFsyXStwWzNdKSxwWzJdfHwobj0hMSxpLnRlc3QocFsxXSk/KGc9cFsxXSxlPVwiXCIrcFszXSk6ZT1cIi8vXCIrcFszXSksMyE9PXBbMl0ubGVuZ3RoJiYxIT09cFsyXS5sZW5ndGh8fChnPXBbMV0sZT1cIi9cIitwWzNdKSk7dmFyIGIseT0oaD9oWzFdOmUpLm1hdGNoKC8oOlswLTldKykvKSxqPVwiXCI7eSYmeVsxXSYmMz09PXlbMV0ubGVuZ3RoJiYoZT1lLnJlcGxhY2Uoaj15WzFdLGorXCIwMFwiKSk7dmFyIHc9bmV3IGwseD1cIlwiLFU9XCJcIjt0cnl7Yj1uZXcgVVJMKGUpfWNhdGNoKHQpe3g9dCxnfHxhfHwhL15cXC9cXC8vLnRlc3QoZSl8fC9eXFwvXFwvLitbQC5dLy50ZXN0KGUpfHwoVT1cIi9cIixlPWUuc3Vic3RyKDEpKTt0cnl7Yj1uZXcgVVJMKGUsYyl9Y2F0Y2goZSl7cmV0dXJuIHcucHJvdG9jb2w9Zyx3LmhyZWY9Zyx3fX13LnNsYXNoZXM9biYmIVUsdy5ob3N0PWIuaG9zdD09PXM/XCJcIjpiLmhvc3Qsdy5ob3N0bmFtZT1iLmhvc3RuYW1lPT09cz9cIlwiOmIuaG9zdG5hbWUucmVwbGFjZSgvKFxcW3xcXF0pL2csXCJcIiksdy5wcm90b2NvbD14P2d8fG51bGw6Yi5wcm90b2NvbCx3LnNlYXJjaD1iLnNlYXJjaC5yZXBsYWNlKC9cXFxcL2csXCIlNUNcIiksdy5oYXNoPWIuaGFzaC5yZXBsYWNlKC9cXFxcL2csXCIlNUNcIik7dmFyIFI9ZS5zcGxpdChcIiNcIik7IXcuc2VhcmNoJiZ+UlswXS5pbmRleE9mKFwiP1wiKSYmKHcuc2VhcmNoPVwiP1wiKSx3Lmhhc2h8fFwiXCIhPT1SWzFdfHwody5oYXNoPVwiI1wiKSx3LnF1ZXJ5PXI/dC5kZWNvZGUoYi5zZWFyY2guc3Vic3RyKDEpKTp3LnNlYXJjaC5zdWJzdHIoMSksdy5wYXRobmFtZT1VK2QoYi5wYXRobmFtZSkucmVwbGFjZSgvXCIvZyxcIiUyMlwiKSxcImFib3V0OlwiPT09dy5wcm90b2NvbCYmXCJibGFua1wiPT09dy5wYXRobmFtZSYmKHcucHJvdG9jb2w9XCJcIix3LnBhdGhuYW1lPVwiXCIpLHgmJlwiL1wiIT09ZVswXSYmKHcucGF0aG5hbWU9dy5wYXRobmFtZS5zdWJzdHIoMSkpLGcmJiFpLnRlc3QoZykmJlwiL1wiIT09ZS5zbGljZSgtMSkmJlwiL1wiPT09dy5wYXRobmFtZSYmKHcucGF0aG5hbWU9XCJcIiksdy5wYXRoPXcucGF0aG5hbWUrdy5zZWFyY2gsdy5hdXRoPVtiLnVzZXJuYW1lLGIucGFzc3dvcmRdLm1hcChkZWNvZGVVUklDb21wb25lbnQpLmZpbHRlcihCb29sZWFuKS5qb2luKFwiOlwiKSx3LnBvcnQ9Yi5wb3J0LGomJih3Lmhvc3Q9dy5ob3N0LnJlcGxhY2UoaitcIjAwXCIsaiksdy5wb3J0PXcucG9ydC5zbGljZSgwLC0yKSksdy5ocmVmPVU/XCJcIit3LnBhdGhuYW1lK3cuc2VhcmNoK3cuaGFzaDpvKHcpO3ZhciBPPS9eKGZpbGUpLy50ZXN0KHcuaHJlZik/W1wiaG9zdFwiLFwiaG9zdG5hbWVcIl06W107cmV0dXJuIE9iamVjdC5rZXlzKHcpLmZvckVhY2goZnVuY3Rpb24oZSl7fk8uaW5kZXhPZihlKXx8KHdbZV09d1tlXXx8bnVsbCl9KSx3fWV4cG9ydHMucGFyc2U9ZyxleHBvcnRzLmZvcm1hdD1vLGV4cG9ydHMucmVzb2x2ZT1uLGV4cG9ydHMucmVzb2x2ZU9iamVjdD1mdW5jdGlvbihlLHQpe3JldHVybiBnKG4oZSx0KSl9LGV4cG9ydHMuVXJsPWw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/native-url/dist/index.js\n");

/***/ }),

/***/ "./node_modules/next/app.js":
/*!**********************************!*\
  !*** ./node_modules/next/app.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./dist/pages/_app */ \"./node_modules/next/dist/pages/_app.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbmV4dC9hcHAuanM/ZjAxNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIsbUJBQU8sQ0FBQyxpRUFBbUIiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9hcHAuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZGlzdC9wYWdlcy9fYXBwJylcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/app.js\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js!./":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js ***!
  \*********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return __webpack_require__(/*! private-next-pages/_app.js */ \"./pages/_app.js\");\n      }\n    ]);\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/NWEwNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLG1EQUE0QjtBQUNuRDtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1jbGllbnQtcGFnZXMtbG9hZGVyLmpzP3BhZ2U9JTJGX2FwcCZhYnNvbHV0ZVBhZ2VQYXRoPXByaXZhdGUtbmV4dC1wYWdlcyUyRl9hcHAuanMhLi8uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAod2luZG93Ll9fTkVYVF9QID0gd2luZG93Ll9fTkVYVF9QIHx8IFtdKS5wdXNoKFtcbiAgICAgIFwiL19hcHBcIixcbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHJlcXVpcmUoXCJwcml2YXRlLW5leHQtcGFnZXMvX2FwcC5qc1wiKTtcbiAgICAgIH1cbiAgICBdKTtcbiAgIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js!./\n");

/***/ }),

/***/ "./node_modules/next/dist/client/router.js":
/*!*************************************************!*\
  !*** ./node_modules/next/dist/client/router.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nvar _construct = __webpack_require__(/*! @babel/runtime/helpers/construct */ \"./node_modules/@babel/runtime/helpers/construct.js\");\n\nvar _s = $RefreshSig$();\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ \"./node_modules/@babel/runtime/helpers/interopRequireWildcard.js\");\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nexports.__esModule = true;\nexports.useRouter = useRouter;\nexports.makePublicRouterInstance = makePublicRouterInstance;\nexports.createRouter = exports.withRouter = exports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\nvar _router2 = _interopRequireWildcard(__webpack_require__(/*! ../next-server/lib/router/router */ \"./node_modules/next/dist/next-server/lib/router/router.js\"));\n\nexports.Router = _router2[\"default\"];\nexports.NextRouter = _router2.NextRouter;\n\nvar _routerContext = __webpack_require__(/*! ../next-server/lib/router-context */ \"./node_modules/next/dist/next-server/lib/router-context.js\");\n\nvar _withRouter = _interopRequireDefault(__webpack_require__(/*! ./with-router */ \"./node_modules/next/dist/client/with-router.js\"));\n\nexports.withRouter = _withRouter[\"default\"];\n/* global window */\n\nvar singletonRouter = {\n  router: null,\n  // holds the actual router instance\n  readyCallbacks: [],\n  ready: function ready(cb) {\n    if (this.router) return cb();\n\n    if (true) {\n      this.readyCallbacks.push(cb);\n    }\n  }\n}; // Create public properties and methods of the router in the singletonRouter\n\nvar urlPropertyFields = ['pathname', 'route', 'query', 'asPath', 'components', 'isFallback', 'basePath'];\nvar routerEvents = ['routeChangeStart', 'beforeHistoryChange', 'routeChangeComplete', 'routeChangeError', 'hashChangeStart', 'hashChangeComplete'];\nvar coreMethodFields = ['push', 'replace', 'reload', 'back', 'prefetch', 'beforePopState']; // Events is a static property on the router, the router doesn't have to be initialized to use it\n\nObject.defineProperty(singletonRouter, 'events', {\n  get: function get() {\n    return _router2[\"default\"].events;\n  }\n});\nurlPropertyFields.forEach(function (field) {\n  // Here we need to use Object.defineProperty because, we need to return\n  // the property assigned to the actual router\n  // The value might get changed as we change routes and this is the\n  // proper way to access it\n  Object.defineProperty(singletonRouter, field, {\n    get: function get() {\n      var router = getRouter();\n      return router[field];\n    }\n  });\n});\ncoreMethodFields.forEach(function (field) {\n  // We don't really know the types here, so we add them later instead\n  ;\n\n  singletonRouter[field] = function () {\n    var router = getRouter();\n    return router[field].apply(router, arguments);\n  };\n});\nrouterEvents.forEach(function (event) {\n  singletonRouter.ready(function () {\n    _router2[\"default\"].events.on(event, function () {\n      var eventField = \"on\".concat(event.charAt(0).toUpperCase()).concat(event.substring(1));\n      var _singletonRouter = singletonRouter;\n\n      if (_singletonRouter[eventField]) {\n        try {\n          _singletonRouter[eventField].apply(_singletonRouter, arguments);\n        } catch (err) {\n          // tslint:disable-next-line:no-console\n          console.error(\"Error when running the Router event: \".concat(eventField)); // tslint:disable-next-line:no-console\n\n          console.error(\"\".concat(err.message, \"\\n\").concat(err.stack));\n        }\n      }\n    });\n  });\n});\n\nfunction getRouter() {\n  if (!singletonRouter.router) {\n    var message = 'No router instance found.\\n' + 'You should only use \"next/router\" inside the client side of your app.\\n';\n    throw new Error(message);\n  }\n\n  return singletonRouter.router;\n} // Export the singletonRouter and this is the public API.\n\n\nvar _default = singletonRouter; // Reexport the withRoute HOC\n\nexports[\"default\"] = _default;\n\nfunction useRouter() {\n  _s();\n\n  return _react[\"default\"].useContext(_routerContext.RouterContext);\n} // INTERNAL APIS\n// -------------\n// (do not use following exports inside the app)\n// Create a router and assign it as the singleton instance.\n// This is used in client side when we are initilizing the app.\n// This should **not** use inside the server.\n\n\n_s(useRouter, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar createRouter = function createRouter() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  singletonRouter.router = _construct(_router2[\"default\"], args);\n  singletonRouter.readyCallbacks.forEach(function (cb) {\n    return cb();\n  });\n  singletonRouter.readyCallbacks = [];\n  return singletonRouter.router;\n}; // This function is used to create the `withRouter` router instance\n\n\nexports.createRouter = createRouter;\n\nfunction makePublicRouterInstance(router) {\n  var _router = router;\n  var instance = {};\n\n  var _iterator = _createForOfIteratorHelper(urlPropertyFields),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var property = _step.value;\n\n      if (typeof _router[property] === 'object') {\n        instance[property] = Object.assign({}, _router[property]); // makes sure query is not stateful\n\n        continue;\n      }\n\n      instance[property] = _router[property];\n    } // Events is a static property on the router, the router doesn't have to be initialized to use it\n\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  instance.events = _router2[\"default\"].events;\n  coreMethodFields.forEach(function (field) {\n    instance[field] = function () {\n      return _router[field].apply(_router, arguments);\n    };\n  });\n  return instance;\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vLi4vY2xpZW50L3JvdXRlci50cz8wNmZmIl0sIm5hbWVzIjpbInNpbmdsZXRvblJvdXRlciIsInJvdXRlciIsInJlYWR5Q2FsbGJhY2tzIiwicmVhZHkiLCJjYiIsInVybFByb3BlcnR5RmllbGRzIiwicm91dGVyRXZlbnRzIiwiY29yZU1ldGhvZEZpZWxkcyIsIk9iamVjdCIsImdldCIsIlJvdXRlciIsImZpZWxkIiwiZ2V0Um91dGVyIiwiZXZlbnQiLCJldmVudEZpZWxkIiwiX3NpbmdsZXRvblJvdXRlciIsImNvbnNvbGUiLCJlcnIiLCJtZXNzYWdlIiwiUmVhY3QiLCJSb3V0ZXJDb250ZXh0IiwiY3JlYXRlUm91dGVyIiwiX3JvdXRlciIsImluc3RhbmNlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQTs7QUFDQTs7Ozs7QUFDQTs7QUFxSEE7OztBQXhIQTs7QUFtQkEsSUFBTUEsZUFBb0MsR0FBRztBQUMzQ0MsUUFBTSxFQURxQztBQUM3QjtBQUNkQyxnQkFBYyxFQUY2QjtBQUczQ0MsT0FIMkMsaUJBR3RDLEVBSHNDLEVBR3JCO0FBQ3BCLFFBQUksS0FBSixRQUFpQixPQUFPQyxFQUFQOztBQUNqQixjQUFtQztBQUNqQztBQUVIO0FBUkg7QUFBNkMsQ0FBN0MsQyxDQVdBOztBQUNBLElBQU1DLGlCQUFpQixHQUFHLHFFQUExQixVQUEwQixDQUExQjtBQVNBLElBQU1DLFlBQVksR0FBRywwR0FBckIsb0JBQXFCLENBQXJCO0FBUUEsSUFBTUMsZ0JBQWdCLEdBQUcsa0RBQXpCLGdCQUF5QixDQUF6QixDLENBU0E7O0FBQ0FDLE1BQU0sQ0FBTkEsMENBQWlEO0FBQy9DQyxLQUQrQyxpQkFDekM7QUFDSixXQUFPQyxvQkFBUDtBQUZKRjtBQUFpRCxDQUFqREE7QUFNQUgsaUJBQWlCLENBQWpCQSxRQUEyQk0sZUFBRCxFQUFXO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0FILFFBQU0sQ0FBTkEsdUNBQThD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dC9yb3V0ZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWwgd2luZG93ICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgUm91dGVyLCB7IE5leHRSb3V0ZXIgfSBmcm9tICcuLi9uZXh0LXNlcnZlci9saWIvcm91dGVyL3JvdXRlcidcbmltcG9ydCB7IFJvdXRlckNvbnRleHQgfSBmcm9tICcuLi9uZXh0LXNlcnZlci9saWIvcm91dGVyLWNvbnRleHQnXG5cbnR5cGUgQ2xhc3NBcmd1bWVudHM8VD4gPSBUIGV4dGVuZHMgbmV3ICguLi5hcmdzOiBpbmZlciBVKSA9PiBhbnkgPyBVIDogYW55XG5cbnR5cGUgUm91dGVyQXJncyA9IENsYXNzQXJndW1lbnRzPHR5cGVvZiBSb3V0ZXI+XG5cbnR5cGUgU2luZ2xldG9uUm91dGVyQmFzZSA9IHtcbiAgcm91dGVyOiBSb3V0ZXIgfCBudWxsXG4gIHJlYWR5Q2FsbGJhY2tzOiBBcnJheTwoKSA9PiBhbnk+XG4gIHJlYWR5KGNiOiAoKSA9PiBhbnkpOiB2b2lkXG59XG5cbmV4cG9ydCB7IFJvdXRlciwgTmV4dFJvdXRlciB9XG5cbmV4cG9ydCB0eXBlIFNpbmdsZXRvblJvdXRlciA9IFNpbmdsZXRvblJvdXRlckJhc2UgJiBOZXh0Um91dGVyXG5cbmNvbnN0IHNpbmdsZXRvblJvdXRlcjogU2luZ2xldG9uUm91dGVyQmFzZSA9IHtcbiAgcm91dGVyOiBudWxsLCAvLyBob2xkcyB0aGUgYWN0dWFsIHJvdXRlciBpbnN0YW5jZVxuICByZWFkeUNhbGxiYWNrczogW10sXG4gIHJlYWR5KGNiOiAoKSA9PiB2b2lkKSB7XG4gICAgaWYgKHRoaXMucm91dGVyKSByZXR1cm4gY2IoKVxuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhpcy5yZWFkeUNhbGxiYWNrcy5wdXNoKGNiKVxuICAgIH1cbiAgfSxcbn1cblxuLy8gQ3JlYXRlIHB1YmxpYyBwcm9wZXJ0aWVzIGFuZCBtZXRob2RzIG9mIHRoZSByb3V0ZXIgaW4gdGhlIHNpbmdsZXRvblJvdXRlclxuY29uc3QgdXJsUHJvcGVydHlGaWVsZHMgPSBbXG4gICdwYXRobmFtZScsXG4gICdyb3V0ZScsXG4gICdxdWVyeScsXG4gICdhc1BhdGgnLFxuICAnY29tcG9uZW50cycsXG4gICdpc0ZhbGxiYWNrJyxcbiAgJ2Jhc2VQYXRoJyxcbl1cbmNvbnN0IHJvdXRlckV2ZW50cyA9IFtcbiAgJ3JvdXRlQ2hhbmdlU3RhcnQnLFxuICAnYmVmb3JlSGlzdG9yeUNoYW5nZScsXG4gICdyb3V0ZUNoYW5nZUNvbXBsZXRlJyxcbiAgJ3JvdXRlQ2hhbmdlRXJyb3InLFxuICAnaGFzaENoYW5nZVN0YXJ0JyxcbiAgJ2hhc2hDaGFuZ2VDb21wbGV0ZScsXG5dXG5jb25zdCBjb3JlTWV0aG9kRmllbGRzID0gW1xuICAncHVzaCcsXG4gICdyZXBsYWNlJyxcbiAgJ3JlbG9hZCcsXG4gICdiYWNrJyxcbiAgJ3ByZWZldGNoJyxcbiAgJ2JlZm9yZVBvcFN0YXRlJyxcbl1cblxuLy8gRXZlbnRzIGlzIGEgc3RhdGljIHByb3BlcnR5IG9uIHRoZSByb3V0ZXIsIHRoZSByb3V0ZXIgZG9lc24ndCBoYXZlIHRvIGJlIGluaXRpYWxpemVkIHRvIHVzZSBpdFxuT2JqZWN0LmRlZmluZVByb3BlcnR5KHNpbmdsZXRvblJvdXRlciwgJ2V2ZW50cycsIHtcbiAgZ2V0KCkge1xuICAgIHJldHVybiBSb3V0ZXIuZXZlbnRzXG4gIH0sXG59KVxuXG51cmxQcm9wZXJ0eUZpZWxkcy5mb3JFYWNoKChmaWVsZCkgPT4ge1xuICAvLyBIZXJlIHdlIG5lZWQgdG8gdXNlIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSBiZWNhdXNlLCB3ZSBuZWVkIHRvIHJldHVyblxuICAvLyB0aGUgcHJvcGVydHkgYXNzaWduZWQgdG8gdGhlIGFjdHVhbCByb3V0ZXJcbiAgLy8gVGhlIHZhbHVlIG1pZ2h0IGdldCBjaGFuZ2VkIGFzIHdlIGNoYW5nZSByb3V0ZXMgYW5kIHRoaXMgaXMgdGhlXG4gIC8vIHByb3BlciB3YXkgdG8gYWNjZXNzIGl0XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzaW5nbGV0b25Sb3V0ZXIsIGZpZWxkLCB7XG4gICAgZ2V0KCkge1xuICAgICAgY29uc3Qgcm91dGVyID0gZ2V0Um91dGVyKCkgYXMgYW55XG4gICAgICByZXR1cm4gcm91dGVyW2ZpZWxkXSBhcyBzdHJpbmdcbiAgICB9LFxuICB9KVxufSlcblxuY29yZU1ldGhvZEZpZWxkcy5mb3JFYWNoKChmaWVsZCkgPT4ge1xuICAvLyBXZSBkb24ndCByZWFsbHkga25vdyB0aGUgdHlwZXMgaGVyZSwgc28gd2UgYWRkIHRoZW0gbGF0ZXIgaW5zdGVhZFxuICA7KHNpbmdsZXRvblJvdXRlciBhcyBhbnkpW2ZpZWxkXSA9ICguLi5hcmdzOiBhbnlbXSkgPT4ge1xuICAgIGNvbnN0IHJvdXRlciA9IGdldFJvdXRlcigpIGFzIGFueVxuICAgIHJldHVybiByb3V0ZXJbZmllbGRdKC4uLmFyZ3MpXG4gIH1cbn0pXG5cbnJvdXRlckV2ZW50cy5mb3JFYWNoKChldmVudCkgPT4ge1xuICBzaW5nbGV0b25Sb3V0ZXIucmVhZHkoKCkgPT4ge1xuICAgIFJvdXRlci5ldmVudHMub24oZXZlbnQsICguLi5hcmdzKSA9PiB7XG4gICAgICBjb25zdCBldmVudEZpZWxkID0gYG9uJHtldmVudC5jaGFyQXQoMCkudG9VcHBlckNhc2UoKX0ke2V2ZW50LnN1YnN0cmluZyhcbiAgICAgICAgMVxuICAgICAgKX1gXG4gICAgICBjb25zdCBfc2luZ2xldG9uUm91dGVyID0gc2luZ2xldG9uUm91dGVyIGFzIGFueVxuICAgICAgaWYgKF9zaW5nbGV0b25Sb3V0ZXJbZXZlbnRGaWVsZF0pIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBfc2luZ2xldG9uUm91dGVyW2V2ZW50RmllbGRdKC4uLmFyZ3MpXG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1jb25zb2xlXG4gICAgICAgICAgY29uc29sZS5lcnJvcihgRXJyb3Igd2hlbiBydW5uaW5nIHRoZSBSb3V0ZXIgZXZlbnQ6ICR7ZXZlbnRGaWVsZH1gKVxuICAgICAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1jb25zb2xlXG4gICAgICAgICAgY29uc29sZS5lcnJvcihgJHtlcnIubWVzc2FnZX1cXG4ke2Vyci5zdGFja31gKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSlcbiAgfSlcbn0pXG5cbmZ1bmN0aW9uIGdldFJvdXRlcigpOiBSb3V0ZXIge1xuICBpZiAoIXNpbmdsZXRvblJvdXRlci5yb3V0ZXIpIHtcbiAgICBjb25zdCBtZXNzYWdlID1cbiAgICAgICdObyByb3V0ZXIgaW5zdGFuY2UgZm91bmQuXFxuJyArXG4gICAgICAnWW91IHNob3VsZCBvbmx5IHVzZSBcIm5leHQvcm91dGVyXCIgaW5zaWRlIHRoZSBjbGllbnQgc2lkZSBvZiB5b3VyIGFwcC5cXG4nXG4gICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpXG4gIH1cbiAgcmV0dXJuIHNpbmdsZXRvblJvdXRlci5yb3V0ZXJcbn1cblxuLy8gRXhwb3J0IHRoZSBzaW5nbGV0b25Sb3V0ZXIgYW5kIHRoaXMgaXMgdGhlIHB1YmxpYyBBUEkuXG5leHBvcnQgZGVmYXVsdCBzaW5nbGV0b25Sb3V0ZXIgYXMgU2luZ2xldG9uUm91dGVyXG5cbi8vIFJlZXhwb3J0IHRoZSB3aXRoUm91dGUgSE9DXG5leHBvcnQgeyBkZWZhdWx0IGFzIHdpdGhSb3V0ZXIgfSBmcm9tICcuL3dpdGgtcm91dGVyJ1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlUm91dGVyKCk6IE5leHRSb3V0ZXIge1xuICByZXR1cm4gUmVhY3QudXNlQ29udGV4dChSb3V0ZXJDb250ZXh0KVxufVxuXG4vLyBJTlRFUk5BTCBBUElTXG4vLyAtLS0tLS0tLS0tLS0tXG4vLyAoZG8gbm90IHVzZSBmb2xsb3dpbmcgZXhwb3J0cyBpbnNpZGUgdGhlIGFwcClcblxuLy8gQ3JlYXRlIGEgcm91dGVyIGFuZCBhc3NpZ24gaXQgYXMgdGhlIHNpbmdsZXRvbiBpbnN0YW5jZS5cbi8vIFRoaXMgaXMgdXNlZCBpbiBjbGllbnQgc2lkZSB3aGVuIHdlIGFyZSBpbml0aWxpemluZyB0aGUgYXBwLlxuLy8gVGhpcyBzaG91bGQgKipub3QqKiB1c2UgaW5zaWRlIHRoZSBzZXJ2ZXIuXG5leHBvcnQgY29uc3QgY3JlYXRlUm91dGVyID0gKC4uLmFyZ3M6IFJvdXRlckFyZ3MpOiBSb3V0ZXIgPT4ge1xuICBzaW5nbGV0b25Sb3V0ZXIucm91dGVyID0gbmV3IFJvdXRlciguLi5hcmdzKVxuICBzaW5nbGV0b25Sb3V0ZXIucmVhZHlDYWxsYmFja3MuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gIHNpbmdsZXRvblJvdXRlci5yZWFkeUNhbGxiYWNrcyA9IFtdXG5cbiAgcmV0dXJuIHNpbmdsZXRvblJvdXRlci5yb3V0ZXJcbn1cblxuLy8gVGhpcyBmdW5jdGlvbiBpcyB1c2VkIHRvIGNyZWF0ZSB0aGUgYHdpdGhSb3V0ZXJgIHJvdXRlciBpbnN0YW5jZVxuZXhwb3J0IGZ1bmN0aW9uIG1ha2VQdWJsaWNSb3V0ZXJJbnN0YW5jZShyb3V0ZXI6IFJvdXRlcik6IE5leHRSb3V0ZXIge1xuICBjb25zdCBfcm91dGVyID0gcm91dGVyIGFzIGFueVxuICBjb25zdCBpbnN0YW5jZSA9IHt9IGFzIGFueVxuXG4gIGZvciAoY29uc3QgcHJvcGVydHkgb2YgdXJsUHJvcGVydHlGaWVsZHMpIHtcbiAgICBpZiAodHlwZW9mIF9yb3V0ZXJbcHJvcGVydHldID09PSAnb2JqZWN0Jykge1xuICAgICAgaW5zdGFuY2VbcHJvcGVydHldID0gT2JqZWN0LmFzc2lnbih7fSwgX3JvdXRlcltwcm9wZXJ0eV0pIC8vIG1ha2VzIHN1cmUgcXVlcnkgaXMgbm90IHN0YXRlZnVsXG4gICAgICBjb250aW51ZVxuICAgIH1cblxuICAgIGluc3RhbmNlW3Byb3BlcnR5XSA9IF9yb3V0ZXJbcHJvcGVydHldXG4gIH1cblxuICAvLyBFdmVudHMgaXMgYSBzdGF0aWMgcHJvcGVydHkgb24gdGhlIHJvdXRlciwgdGhlIHJvdXRlciBkb2Vzbid0IGhhdmUgdG8gYmUgaW5pdGlhbGl6ZWQgdG8gdXNlIGl0XG4gIGluc3RhbmNlLmV2ZW50cyA9IFJvdXRlci5ldmVudHNcblxuICBjb3JlTWV0aG9kRmllbGRzLmZvckVhY2goKGZpZWxkKSA9PiB7XG4gICAgaW5zdGFuY2VbZmllbGRdID0gKC4uLmFyZ3M6IGFueVtdKSA9PiB7XG4gICAgICByZXR1cm4gX3JvdXRlcltmaWVsZF0oLi4uYXJncylcbiAgICB9XG4gIH0pXG5cbiAgcmV0dXJuIGluc3RhbmNlXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/router.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/with-router.js":
/*!******************************************************!*\
  !*** ./node_modules/next/dist/client/with-router.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nexports.__esModule = true;\nexports[\"default\"] = withRouter;\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\nvar _router = __webpack_require__(/*! ./router */ \"./node_modules/next/dist/client/router.js\");\n\nfunction withRouter(ComposedComponent) {\n  function WithRouterWrapper(props) {\n    return /*#__PURE__*/_react[\"default\"].createElement(ComposedComponent, Object.assign({\n      router: (0, _router.useRouter)()\n    }, props));\n  }\n\n  WithRouterWrapper.getInitialProps = ComposedComponent.getInitialProps // This is needed to allow checking for custom getInitialProps in _app\n  ;\n  WithRouterWrapper.origGetInitialProps = ComposedComponent.origGetInitialProps;\n\n  if (true) {\n    var name = ComposedComponent.displayName || ComposedComponent.name || 'Unknown';\n    WithRouterWrapper.displayName = \"withRouter(\".concat(name, \")\");\n  }\n\n  return WithRouterWrapper;\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vLi4vY2xpZW50L3dpdGgtcm91dGVyLnRzeD80ZmNiIl0sIm5hbWVzIjpbIkNvbXBvc2VkQ29tcG9uZW50IiwiZ2V0SW5pdGlhbFByb3BzIiwiV2l0aFJvdXRlcldyYXBwZXIiLCJuYW1lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUE7O0FBV2UsdUNBSytCO0FBQzVDLG9DQUF1QztBQUNyQyx3QkFBTztBQUFtQixZQUFNLEVBQUUsWUFBM0IsU0FBMkI7QUFBM0IsT0FBUCxLQUFPLEVBQVA7QUFHRjs7QUFBQSxtQkFBaUIsQ0FBakIsa0JBQW9DQSxpQkFBaUIsQ0FBQ0MsZUFBdEQsQ0FDQTtBQURBO0FBRUVDLG1CQUFELG9CQUFDQSxHQUFpREYsaUJBQUQsQ0FBakQsbUJBQUNFOztBQUNGLFlBQTJDO0FBQ3pDLFFBQU1DLElBQUksR0FDUkgsaUJBQWlCLENBQWpCQSxlQUFpQ0EsaUJBQWlCLENBQWxEQSxRQURGO0FBRUFFLHFCQUFpQixDQUFqQkE7QUFHRjs7QUFBQTtBQUNEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvd2l0aC1yb3V0ZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBOZXh0Q29tcG9uZW50VHlwZSwgTmV4dFBhZ2VDb250ZXh0IH0gZnJvbSAnLi4vbmV4dC1zZXJ2ZXIvbGliL3V0aWxzJ1xuaW1wb3J0IHsgTmV4dFJvdXRlciwgdXNlUm91dGVyIH0gZnJvbSAnLi9yb3V0ZXInXG5cbmV4cG9ydCB0eXBlIFdpdGhSb3V0ZXJQcm9wcyA9IHtcbiAgcm91dGVyOiBOZXh0Um91dGVyXG59XG5cbmV4cG9ydCB0eXBlIEV4Y2x1ZGVSb3V0ZXJQcm9wczxQPiA9IFBpY2s8XG4gIFAsXG4gIEV4Y2x1ZGU8a2V5b2YgUCwga2V5b2YgV2l0aFJvdXRlclByb3BzPlxuPlxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB3aXRoUm91dGVyPFxuICBQIGV4dGVuZHMgV2l0aFJvdXRlclByb3BzLFxuICBDID0gTmV4dFBhZ2VDb250ZXh0XG4+KFxuICBDb21wb3NlZENvbXBvbmVudDogTmV4dENvbXBvbmVudFR5cGU8QywgYW55LCBQPlxuKTogUmVhY3QuQ29tcG9uZW50VHlwZTxFeGNsdWRlUm91dGVyUHJvcHM8UD4+IHtcbiAgZnVuY3Rpb24gV2l0aFJvdXRlcldyYXBwZXIocHJvcHM6IGFueSkge1xuICAgIHJldHVybiA8Q29tcG9zZWRDb21wb25lbnQgcm91dGVyPXt1c2VSb3V0ZXIoKX0gey4uLnByb3BzfSAvPlxuICB9XG5cbiAgV2l0aFJvdXRlcldyYXBwZXIuZ2V0SW5pdGlhbFByb3BzID0gQ29tcG9zZWRDb21wb25lbnQuZ2V0SW5pdGlhbFByb3BzXG4gIC8vIFRoaXMgaXMgbmVlZGVkIHRvIGFsbG93IGNoZWNraW5nIGZvciBjdXN0b20gZ2V0SW5pdGlhbFByb3BzIGluIF9hcHBcbiAgOyhXaXRoUm91dGVyV3JhcHBlciBhcyBhbnkpLm9yaWdHZXRJbml0aWFsUHJvcHMgPSAoQ29tcG9zZWRDb21wb25lbnQgYXMgYW55KS5vcmlnR2V0SW5pdGlhbFByb3BzXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgY29uc3QgbmFtZSA9XG4gICAgICBDb21wb3NlZENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBDb21wb3NlZENvbXBvbmVudC5uYW1lIHx8ICdVbmtub3duJ1xuICAgIFdpdGhSb3V0ZXJXcmFwcGVyLmRpc3BsYXlOYW1lID0gYHdpdGhSb3V0ZXIoJHtuYW1lfSlgXG4gIH1cblxuICByZXR1cm4gV2l0aFJvdXRlcldyYXBwZXJcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/with-router.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/mitt.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/mitt.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nexports.__esModule = true;\nexports[\"default\"] = mitt;\n/*\nMIT License\nCopyright (c) Jason Miller (https://jasonformat.com/)\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n// This file is based on https://github.com/developit/mitt/blob/v1.1.3/src/index.js\n// It's been edited for the needs of this script\n// See the LICENSE at the top of the file\n\nfunction mitt() {\n  var all = Object.create(null);\n  return {\n    on: function on(type, handler) {\n      ;\n      (all[type] || (all[type] = [])).push(handler);\n    },\n    off: function off(type, handler) {\n      if (all[type]) {\n        // tslint:disable-next-line:no-bitwise\n        all[type].splice(all[type].indexOf(handler) >>> 0, 1);\n      }\n    },\n    emit: function emit(type) {\n      for (var _len = arguments.length, evts = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        evts[_key - 1] = arguments[_key];\n      }\n\n      // eslint-disable-next-line array-callback-return\n      ;\n      (all[type] || []).slice().map(function (handler) {\n        handler.apply(void 0, evts);\n      });\n    }\n  };\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vLi4vLi4vbmV4dC1zZXJ2ZXIvbGliL21pdHQudHM/ZjRlYyJdLCJuYW1lcyI6WyJhbGwiLCJPYmplY3QiLCJvbiIsIm9mZiIsImVtaXQiLCJoYW5kbGVyIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Ozs7QUFZQTtBQUNBO0FBQ0E7O0FBVWUsZ0JBQTZCO0FBQzFDLE1BQU1BLEdBQStCLEdBQUdDLE1BQU0sQ0FBTkEsT0FBeEMsSUFBd0NBLENBQXhDO0FBRUEsU0FBTztBQUNMQyxNQURLLGNBQ0gsSUFERyxFQUNILE9BREcsRUFDOEI7QUFDakM7QUFBQyxPQUFDRixHQUFHLENBQUhBLElBQUcsQ0FBSEEsS0FBY0EsR0FBRyxDQUFIQSxJQUFHLENBQUhBLEdBQWYsRUFBQ0EsQ0FBRDtBQUZFO0FBS0xHLE9BTEssZUFLRixJQUxFLEVBS0YsT0FMRSxFQUsrQjtBQUNsQyxVQUFJSCxHQUFHLENBQVAsSUFBTyxDQUFQLEVBQWU7QUFDYjtBQUNBQSxXQUFHLENBQUhBLElBQUcsQ0FBSEEsUUFBaUJBLEdBQUcsQ0FBSEEsSUFBRyxDQUFIQSxzQkFBakJBO0FBRUg7QUFWSTtBQVlMSSxRQVpLLGdCQVlELElBWkMsRUFZOEI7QUFBQSx3Q0FBL0IsSUFBK0I7QUFBL0IsWUFBK0I7QUFBQTs7QUFDakM7QUFDQTtBQUFDLE9BQUNKLEdBQUcsQ0FBSEEsSUFBRyxDQUFIQSxJQUFELGdCQUErQkssaUJBQUQsRUFBc0I7QUFDbkRBLGVBQU8sTUFBUEE7QUFERDtBQWRMO0FBQU8sR0FBUDtBQW1CRCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvbmV4dC1zZXJ2ZXIvbGliL21pdHQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuTUlUIExpY2Vuc2VcblxuQ29weXJpZ2h0IChjKSBKYXNvbiBNaWxsZXIgKGh0dHBzOi8vamFzb25mb3JtYXQuY29tLylcblxuUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcblxuVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG5cblRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuKi9cblxuLy8gVGhpcyBmaWxlIGlzIGJhc2VkIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS9kZXZlbG9waXQvbWl0dC9ibG9iL3YxLjEuMy9zcmMvaW5kZXguanNcbi8vIEl0J3MgYmVlbiBlZGl0ZWQgZm9yIHRoZSBuZWVkcyBvZiB0aGlzIHNjcmlwdFxuLy8gU2VlIHRoZSBMSUNFTlNFIGF0IHRoZSB0b3Agb2YgdGhlIGZpbGVcblxudHlwZSBIYW5kbGVyID0gKC4uLmV2dHM6IGFueVtdKSA9PiB2b2lkXG5cbmV4cG9ydCB0eXBlIE1pdHRFbWl0dGVyID0ge1xuICBvbih0eXBlOiBzdHJpbmcsIGhhbmRsZXI6IEhhbmRsZXIpOiB2b2lkXG4gIG9mZih0eXBlOiBzdHJpbmcsIGhhbmRsZXI6IEhhbmRsZXIpOiB2b2lkXG4gIGVtaXQodHlwZTogc3RyaW5nLCAuLi5ldnRzOiBhbnlbXSk6IHZvaWRcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbWl0dCgpOiBNaXR0RW1pdHRlciB7XG4gIGNvbnN0IGFsbDogeyBbczogc3RyaW5nXTogSGFuZGxlcltdIH0gPSBPYmplY3QuY3JlYXRlKG51bGwpXG5cbiAgcmV0dXJuIHtcbiAgICBvbih0eXBlOiBzdHJpbmcsIGhhbmRsZXI6IEhhbmRsZXIpIHtcbiAgICAgIDsoYWxsW3R5cGVdIHx8IChhbGxbdHlwZV0gPSBbXSkpLnB1c2goaGFuZGxlcilcbiAgICB9LFxuXG4gICAgb2ZmKHR5cGU6IHN0cmluZywgaGFuZGxlcjogSGFuZGxlcikge1xuICAgICAgaWYgKGFsbFt0eXBlXSkge1xuICAgICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tYml0d2lzZVxuICAgICAgICBhbGxbdHlwZV0uc3BsaWNlKGFsbFt0eXBlXS5pbmRleE9mKGhhbmRsZXIpID4+PiAwLCAxKVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBlbWl0KHR5cGU6IHN0cmluZywgLi4uZXZ0czogYW55W10pIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBhcnJheS1jYWxsYmFjay1yZXR1cm5cbiAgICAgIDsoYWxsW3R5cGVdIHx8IFtdKS5zbGljZSgpLm1hcCgoaGFuZGxlcjogSGFuZGxlcikgPT4ge1xuICAgICAgICBoYW5kbGVyKC4uLmV2dHMpXG4gICAgICB9KVxuICAgIH0sXG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/mitt.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router-context.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router-context.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nexports.__esModule = true;\nexports.RouterContext = void 0;\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar RouterContext = _react[\"default\"].createContext(null);\n\nexports.RouterContext = RouterContext;\n\nif (true) {\n  RouterContext.displayName = 'RouterContext';\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vLi4vLi4vbmV4dC1zZXJ2ZXIvbGliL3JvdXRlci1jb250ZXh0LnRzPzg5NDUiXSwibmFtZXMiOlsiUm91dGVyQ29udGV4dCIsIlJlYWN0Il0sIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7Ozs7QUFHTzs7QUFBQSxJQUFNQSxhQUFhLEdBQUdDLGdDQUF0QixJQUFzQkEsQ0FBdEI7Ozs7QUFFUCxVQUEyQztBQUN6Q0QsZUFBYSxDQUFiQTtBQUNEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9uZXh0LXNlcnZlci9saWIvcm91dGVyLWNvbnRleHQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBOZXh0Um91dGVyIH0gZnJvbSAnLi9yb3V0ZXIvcm91dGVyJ1xuXG5leHBvcnQgY29uc3QgUm91dGVyQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQ8TmV4dFJvdXRlcj4obnVsbCBhcyBhbnkpXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIFJvdXRlckNvbnRleHQuZGlzcGxheU5hbWUgPSAnUm91dGVyQ29udGV4dCdcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/router-context.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/router.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/router.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nvar _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n\nvar _slicedToArray = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"./node_modules/@babel/runtime/helpers/slicedToArray.js\");\n\nvar _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n\nvar _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n\nexports.__esModule = true;\nexports.addBasePath = addBasePath;\nexports.delBasePath = delBasePath;\nexports[\"default\"] = void 0;\n\nvar _url2 = __webpack_require__(/*! url */ \"./node_modules/native-url/dist/index.js\");\n\nvar _mitt = _interopRequireDefault(__webpack_require__(/*! ../mitt */ \"./node_modules/next/dist/next-server/lib/mitt.js\"));\n\nvar _utils = __webpack_require__(/*! ../utils */ \"./node_modules/next/dist/next-server/lib/utils.js\");\n\nvar _isDynamic = __webpack_require__(/*! ./utils/is-dynamic */ \"./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js\");\n\nvar _routeMatcher = __webpack_require__(/*! ./utils/route-matcher */ \"./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js\");\n\nvar _routeRegex = __webpack_require__(/*! ./utils/route-regex */ \"./node_modules/next/dist/next-server/lib/router/utils/route-regex.js\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/* global __NEXT_DATA__ */\n// tslint:disable:no-console\n\n\nvar basePath =  false || '';\n\nfunction addBasePath(path) {\n  return path.indexOf(basePath) !== 0 ? basePath + path : path;\n}\n\nfunction delBasePath(path) {\n  return path.indexOf(basePath) === 0 ? path.substr(basePath.length) || '/' : path;\n}\n\nfunction toRoute(path) {\n  return path.replace(/\\/$/, '') || '/';\n}\n\nvar prepareRoute = function prepareRoute(path) {\n  return toRoute(!path || path === '/' ? '/index' : path);\n};\n\nfunction fetchNextData(pathname, query, isServerRender, cb) {\n  var attempts = isServerRender ? 3 : 1;\n\n  function getResponse() {\n    return fetch((0, _utils.formatWithValidation)({\n      pathname: addBasePath( // @ts-ignore __NEXT_DATA__\n      \"/_next/data/\".concat(__NEXT_DATA__.buildId).concat(delBasePath(pathname), \".json\")),\n      query: query\n    }), {\n      // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n      // Cookies may also be required for `getServerSideProps`.\n      //\n      // > `fetch` won’t send cookies, unless you set the credentials init\n      // > option.\n      // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n      //\n      // > For maximum browser compatibility when it comes to sending &\n      // > receiving cookies, always supply the `credentials: 'same-origin'`\n      // > option instead of relying on the default.\n      // https://github.com/github/fetch#caveats\n      credentials: 'same-origin'\n    }).then(function (res) {\n      if (!res.ok) {\n        if (--attempts > 0 && res.status >= 500) {\n          return getResponse();\n        }\n\n        throw new Error(\"Failed to load static props\");\n      }\n\n      return res.json();\n    });\n  }\n\n  return getResponse().then(function (data) {\n    return cb ? cb(data) : data;\n  })[\"catch\"](function (err) {\n    // We should only trigger a server-side transition if this was caused\n    // on a client-side transition. Otherwise, we'd get into an infinite\n    // loop.\n    if (!isServerRender) {\n      ;\n      err.code = 'PAGE_LOAD_ERROR';\n    }\n\n    throw err;\n  });\n}\n\nvar Router = /*#__PURE__*/function () {\n  /**\n  * Map of all components loaded in `Router`\n  */\n  // Static Data Cache\n  function Router(_pathname, _query, _as2, _ref) {\n    var _this = this;\n\n    var initialProps = _ref.initialProps,\n        pageLoader = _ref.pageLoader,\n        App = _ref.App,\n        wrapApp = _ref.wrapApp,\n        Component = _ref.Component,\n        err = _ref.err,\n        subscription = _ref.subscription,\n        isFallback = _ref.isFallback;\n\n    _classCallCheck(this, Router);\n\n    this.route = void 0;\n    this.pathname = void 0;\n    this.query = void 0;\n    this.asPath = void 0;\n    this.basePath = void 0;\n    this.components = void 0;\n    this.sdc = {};\n    this.sub = void 0;\n    this.clc = void 0;\n    this.pageLoader = void 0;\n    this._bps = void 0;\n    this.events = void 0;\n    this._wrapApp = void 0;\n    this.isSsr = void 0;\n    this.isFallback = void 0;\n\n    this.onPopState = function (e) {\n      if (!e.state) {\n        // We get state as undefined for two reasons.\n        //  1. With older safari (< 8) and older chrome (< 34)\n        //  2. When the URL changed with #\n        //\n        // In the both cases, we don't need to proceed and change the route.\n        // (as it's already changed)\n        // But we can simply replace the state with the new changes.\n        // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n        // So, doing the following for (1) does no harm.\n        var pathname = _this.pathname,\n            query = _this.query;\n\n        _this.changeState('replaceState', (0, _utils.formatWithValidation)({\n          pathname: pathname,\n          query: query\n        }), (0, _utils.getURL)());\n\n        return;\n      } // Make sure we don't re-render on initial load,\n      // can be caused by navigating back from an external site\n\n\n      if (e.state && _this.isSsr && e.state.as === _this.asPath && (0, _url2.parse)(e.state.url).pathname === _this.pathname) {\n        return;\n      } // If the downstream application returns falsy, return.\n      // They will then be responsible for handling the event.\n\n\n      if (_this._bps && !_this._bps(e.state)) {\n        return;\n      }\n\n      var _e$state = e.state,\n          url = _e$state.url,\n          as = _e$state.as,\n          options = _e$state.options;\n\n      if (true) {\n        if (typeof url === 'undefined' || typeof as === 'undefined') {\n          console.warn('`popstate` event triggered but `event.state` did not have `url` or `as` https://err.sh/zeit/next.js/popstate-state-empty');\n        }\n      }\n\n      _this.replace(url, as, options);\n    };\n\n    this._getStaticData = function (asPath) {\n      var pathname = prepareRoute((0, _url2.parse)(asPath).pathname);\n      return  false ? undefined : fetchNextData(pathname, null, _this.isSsr, function (data) {\n        return _this.sdc[pathname] = data;\n      });\n    };\n\n    this._getServerData = function (asPath) {\n      var _ref2 = (0, _url2.parse)(asPath, true),\n          pathname = _ref2.pathname,\n          query = _ref2.query;\n\n      pathname = prepareRoute(pathname);\n      return fetchNextData(pathname, query, _this.isSsr);\n    }; // represents the current component key\n\n\n    this.route = toRoute(_pathname); // set up the component cache (by route keys)\n\n    this.components = {}; // We should not keep the cache, if there's an error\n    // Otherwise, this cause issues when when going back and\n    // come again to the errored page.\n\n    if (_pathname !== '/_error') {\n      this.components[this.route] = {\n        Component: Component,\n        props: initialProps,\n        err: err,\n        __N_SSG: initialProps && initialProps.__N_SSG,\n        __N_SSP: initialProps && initialProps.__N_SSP\n      };\n    }\n\n    this.components['/_app'] = {\n      Component: App\n    }; // Backwards compat for Router.router.events\n    // TODO: Should be remove the following major version as it was never documented\n\n    this.events = Router.events;\n    this.pageLoader = pageLoader;\n    this.pathname = _pathname;\n    this.query = _query; // if auto prerendered and dynamic route wait to update asPath\n    // until after mount to prevent hydration mismatch\n\n    this.asPath = // @ts-ignore this is temporarily global (attached to window)\n    (0, _isDynamic.isDynamicRoute)(_pathname) && __NEXT_DATA__.autoExport ? _pathname : _as2;\n    this.basePath = basePath;\n    this.sub = subscription;\n    this.clc = null;\n    this._wrapApp = wrapApp; // make sure to ignore extra popState in safari on navigating\n    // back from external site\n\n    this.isSsr = true;\n    this.isFallback = isFallback;\n\n    if (true) {\n      // make sure \"as\" doesn't start with double slashes or else it can\n      // throw an error as it's considered invalid\n      if (_as2.substr(0, 2) !== '//') {\n        // in order for `e.state` to work on the `onpopstate` event\n        // we have to register the initial route upon initialization\n        this.changeState('replaceState', (0, _utils.formatWithValidation)({\n          pathname: _pathname,\n          query: _query\n        }), _as2);\n      }\n\n      window.addEventListener('popstate', this.onPopState);\n    }\n  } // @deprecated backwards compatibility even though it's a private method.\n\n\n  _createClass(Router, [{\n    key: \"update\",\n    value: function update(route, mod) {\n      var Component = mod[\"default\"] || mod;\n      var data = this.components[route];\n\n      if (!data) {\n        throw new Error(\"Cannot update unavailable route: \".concat(route));\n      }\n\n      var newData = Object.assign({}, data, {\n        Component: Component,\n        __N_SSG: mod.__N_SSG,\n        __N_SSP: mod.__N_SSP\n      });\n      this.components[route] = newData; // pages/_app.js updated\n\n      if (route === '/_app') {\n        this.notify(this.components[this.route]);\n        return;\n      }\n\n      if (route === this.route) {\n        this.notify(newData);\n      }\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      window.location.reload();\n    }\n    /**\n    * Go back in history\n    */\n\n  }, {\n    key: \"back\",\n    value: function back() {\n      window.history.back();\n    }\n    /**\n    * Performs a `pushState` with arguments\n    * @param url of the route\n    * @param as masks `url` for the browser\n    * @param options object you can define `shallow` and other options\n    */\n\n  }, {\n    key: \"push\",\n    value: function push(url) {\n      var as = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.change('pushState', url, as, options);\n    }\n    /**\n    * Performs a `replaceState` with arguments\n    * @param url of the route\n    * @param as masks `url` for the browser\n    * @param options object you can define `shallow` and other options\n    */\n\n  }, {\n    key: \"replace\",\n    value: function replace(url) {\n      var as = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.change('replaceState', url, as, options);\n    }\n  }, {\n    key: \"change\",\n    value: function change(method, _url, _as, options) {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!options._h) {\n          _this2.isSsr = false;\n        } // marking route changes as a navigation start entry\n\n\n        if (_utils.ST) {\n          performance.mark('routeChange');\n        } // If url and as provided as an object representation,\n        // we'll format them into the string version here.\n\n\n        var url = typeof _url === 'object' ? (0, _utils.formatWithValidation)(_url) : _url;\n        var as = typeof _as === 'object' ? (0, _utils.formatWithValidation)(_as) : _as;\n        url = addBasePath(url);\n        as = addBasePath(as); // Add the ending slash to the paths. So, we can serve the\n        // \"<page>/index.html\" directly for the SSR page.\n\n        if (false) { var rewriteUrlForNextExport; }\n\n        _this2.abortComponentLoad(as); // If the url change is only related to a hash change\n        // We should not proceed. We should only change the state.\n        // WARNING: `_h` is an internal option for handing Next.js client-side\n        // hydration. Your app should _never_ use this property. It may change at\n        // any time without notice.\n\n\n        if (!options._h && _this2.onlyAHashChange(as)) {\n          _this2.asPath = as;\n          Router.events.emit('hashChangeStart', as);\n\n          _this2.changeState(method, url, as, options);\n\n          _this2.scrollToHash(as);\n\n          Router.events.emit('hashChangeComplete', as);\n          return resolve(true);\n        }\n\n        var _ref3 = (0, _url2.parse)(url, true),\n            pathname = _ref3.pathname,\n            query = _ref3.query,\n            protocol = _ref3.protocol;\n\n        if (!pathname || protocol) {\n          if (true) {\n            throw new Error(\"Invalid href passed to router: \".concat(url, \" https://err.sh/zeit/next.js/invalid-href-passed\"));\n          }\n\n          return resolve(false);\n        } // If asked to change the current URL we should reload the current page\n        // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n        // We also need to set the method = replaceState always\n        // as this should not go into the history (That's how browsers work)\n        // We should compare the new asPath to the current asPath, not the url\n\n\n        if (!_this2.urlIsNew(as)) {\n          method = 'replaceState';\n        }\n\n        var route = toRoute(pathname);\n        var _options$shallow = options.shallow,\n            shallow = _options$shallow === void 0 ? false : _options$shallow;\n\n        if ((0, _isDynamic.isDynamicRoute)(route)) {\n          var _ref4 = (0, _url2.parse)(as),\n              asPathname = _ref4.pathname;\n\n          var routeRegex = (0, _routeRegex.getRouteRegex)(route);\n          var routeMatch = (0, _routeMatcher.getRouteMatcher)(routeRegex)(asPathname);\n\n          if (!routeMatch) {\n            var missingParams = Object.keys(routeRegex.groups).filter(function (param) {\n              return !query[param];\n            });\n\n            if (missingParams.length > 0) {\n              if (true) {\n                console.warn(\"Mismatching `as` and `href` failed to manually provide \" + \"the params: \".concat(missingParams.join(', '), \" in the `href`'s `query`\"));\n              }\n\n              return reject(new Error(\"The provided `as` value (\".concat(asPathname, \") is incompatible with the `href` value (\").concat(route, \"). \") + \"Read more: https://err.sh/zeit/next.js/incompatible-href-as\"));\n            }\n          } else {\n            // Merge params into `query`, overwriting any specified in search\n            Object.assign(query, routeMatch);\n          }\n        }\n\n        Router.events.emit('routeChangeStart', as); // If shallow is true and the route exists in the router cache we reuse the previous result\n\n        _this2.getRouteInfo(route, pathname, query, as, shallow).then(function (routeInfo) {\n          var error = routeInfo.error;\n\n          if (error && error.cancelled) {\n            return resolve(false);\n          }\n\n          Router.events.emit('beforeHistoryChange', as);\n\n          _this2.changeState(method, url, as, options);\n\n          if (true) {\n            var appComp = _this2.components['/_app'].Component;\n            window.next.isPrerendered = appComp.getInitialProps === appComp.origGetInitialProps && !routeInfo.Component.getInitialProps;\n          }\n\n          _this2.set(route, pathname, query, as, routeInfo);\n\n          if (error) {\n            Router.events.emit('routeChangeError', error, as);\n            throw error;\n          }\n\n          Router.events.emit('routeChangeComplete', as);\n          return resolve(true);\n        }, reject);\n      });\n    }\n  }, {\n    key: \"changeState\",\n    value: function changeState(method, url, as) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n      if (true) {\n        if (typeof window.history === 'undefined') {\n          console.error(\"Warning: window.history is not available.\");\n          return;\n        }\n\n        if (typeof window.history[method] === 'undefined') {\n          console.error(\"Warning: window.history.\".concat(method, \" is not available\"));\n          return;\n        }\n      }\n\n      if (method !== 'pushState' || (0, _utils.getURL)() !== as) {\n        window.history[method]({\n          url: url,\n          as: as,\n          options: options\n        }, // Most browsers currently ignores this parameter, although they may use it in the future.\n        // Passing the empty string here should be safe against future changes to the method.\n        // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\n        '', as);\n      }\n    }\n  }, {\n    key: \"getRouteInfo\",\n    value: function getRouteInfo(route, pathname, query, as) {\n      var _this3 = this;\n\n      var shallow = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var cachedRouteInfo = this.components[route]; // If there is a shallow route transition possible\n      // If the route is already rendered on the screen.\n\n      if (shallow && cachedRouteInfo && this.route === route) {\n        return Promise.resolve(cachedRouteInfo);\n      }\n\n      var handleError = function handleError(err, loadErrorFail) {\n        return new Promise(function (resolve) {\n          if (err.code === 'PAGE_LOAD_ERROR' || loadErrorFail) {\n            // If we can't load the page it could be one of following reasons\n            //  1. Page doesn't exists\n            //  2. Page does exist in a different zone\n            //  3. Internal error while loading the page\n            // So, doing a hard reload is the proper way to deal with this.\n            window.location.href = as; // Changing the URL doesn't block executing the current code path.\n            // So, we need to mark it as a cancelled error and stop the routing logic.\n\n            err.cancelled = true; // @ts-ignore TODO: fix the control flow here\n\n            return resolve({\n              error: err\n            });\n          }\n\n          if (err.cancelled) {\n            // @ts-ignore TODO: fix the control flow here\n            return resolve({\n              error: err\n            });\n          }\n\n          resolve(_this3.fetchComponent('/_error').then(function (res) {\n            var Component = res.page;\n            var routeInfo = {\n              Component: Component,\n              err: err\n            };\n            return new Promise(function (resolve) {\n              _this3.getInitialProps(Component, {\n                err: err,\n                pathname: pathname,\n                query: query\n              }).then(function (props) {\n                routeInfo.props = props;\n                routeInfo.error = err;\n                resolve(routeInfo);\n              }, function (gipErr) {\n                console.error('Error in error page `getInitialProps`: ', gipErr);\n                routeInfo.error = err;\n                routeInfo.props = {};\n                resolve(routeInfo);\n              });\n            });\n          })[\"catch\"](function (err) {\n            return handleError(err, true);\n          }));\n        });\n      };\n\n      return new Promise(function (resolve, reject) {\n        if (cachedRouteInfo) {\n          return resolve(cachedRouteInfo);\n        }\n\n        _this3.fetchComponent(route).then(function (res) {\n          return resolve({\n            Component: res.page,\n            __N_SSG: res.mod.__N_SSG,\n            __N_SSP: res.mod.__N_SSP\n          });\n        }, reject);\n      }).then(function (routeInfo) {\n        var Component = routeInfo.Component,\n            __N_SSG = routeInfo.__N_SSG,\n            __N_SSP = routeInfo.__N_SSP;\n\n        if (true) {\n          var _require = __webpack_require__(/*! react-is */ \"./node_modules/react-is/index.js\"),\n              isValidElementType = _require.isValidElementType;\n\n          if (!isValidElementType(Component)) {\n            throw new Error(\"The default export is not a React Component in page: \\\"\".concat(pathname, \"\\\"\"));\n          }\n        }\n\n        return _this3._getData(function () {\n          return __N_SSG ? _this3._getStaticData(as) : __N_SSP ? _this3._getServerData(as) : _this3.getInitialProps(Component, // we provide AppTree later so this needs to be `any`\n          {\n            pathname: pathname,\n            query: query,\n            asPath: as\n          });\n        }).then(function (props) {\n          routeInfo.props = props;\n          _this3.components[route] = routeInfo;\n          return routeInfo;\n        });\n      })[\"catch\"](handleError);\n    }\n  }, {\n    key: \"set\",\n    value: function set(route, pathname, query, as, data) {\n      this.isFallback = false;\n      this.route = route;\n      this.pathname = pathname;\n      this.query = query;\n      this.asPath = as;\n      this.notify(data);\n    }\n    /**\n    * Callback to execute before replacing router state\n    * @param cb callback to be executed\n    */\n\n  }, {\n    key: \"beforePopState\",\n    value: function beforePopState(cb) {\n      this._bps = cb;\n    }\n  }, {\n    key: \"onlyAHashChange\",\n    value: function onlyAHashChange(as) {\n      if (!this.asPath) return false;\n\n      var _this$asPath$split = this.asPath.split('#'),\n          _this$asPath$split2 = _slicedToArray(_this$asPath$split, 2),\n          oldUrlNoHash = _this$asPath$split2[0],\n          oldHash = _this$asPath$split2[1];\n\n      var _as$split = as.split('#'),\n          _as$split2 = _slicedToArray(_as$split, 2),\n          newUrlNoHash = _as$split2[0],\n          newHash = _as$split2[1]; // Makes sure we scroll to the provided hash if the url/hash are the same\n\n\n      if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n        return true;\n      } // If the urls are change, there's more than a hash change\n\n\n      if (oldUrlNoHash !== newUrlNoHash) {\n        return false;\n      } // If the hash has changed, then it's a hash only change.\n      // This check is necessary to handle both the enter and\n      // leave hash === '' cases. The identity case falls through\n      // and is treated as a next reload.\n\n\n      return oldHash !== newHash;\n    }\n  }, {\n    key: \"scrollToHash\",\n    value: function scrollToHash(as) {\n      var _as$split3 = as.split('#'),\n          _as$split4 = _slicedToArray(_as$split3, 2),\n          hash = _as$split4[1]; // Scroll to top if the hash is just `#` with no value\n\n\n      if (hash === '') {\n        window.scrollTo(0, 0);\n        return;\n      } // First we check if the element by id is found\n\n\n      var idEl = document.getElementById(hash);\n\n      if (idEl) {\n        idEl.scrollIntoView();\n        return;\n      } // If there's no element with the id, we check the `name` property\n      // To mirror browsers\n\n\n      var nameEl = document.getElementsByName(hash)[0];\n\n      if (nameEl) {\n        nameEl.scrollIntoView();\n      }\n    }\n  }, {\n    key: \"urlIsNew\",\n    value: function urlIsNew(asPath) {\n      return this.asPath !== asPath;\n    }\n    /**\n    * Prefetch page code, you may wait for the data during page rendering.\n    * This feature only works in production!\n    * @param url the href of prefetched page\n    * @param asPath the as path of the prefetched page\n    */\n\n  }, {\n    key: \"prefetch\",\n    value: function prefetch(url) {\n      var _this4 = this;\n\n      var asPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return new Promise(function (resolve, reject) {\n        var _ref5 = (0, _url2.parse)(url),\n            pathname = _ref5.pathname,\n            protocol = _ref5.protocol;\n\n        if (!pathname || protocol) {\n          if (true) {\n            throw new Error(\"Invalid href passed to router: \".concat(url, \" https://err.sh/zeit/next.js/invalid-href-passed\"));\n          }\n\n          return;\n        } // Prefetch is not supported in development mode because it would trigger on-demand-entries\n\n\n        if (true) {\n          return;\n        }\n\n        var route = delBasePath(toRoute(pathname));\n        Promise.all([_this4.pageLoader.prefetchData(url, delBasePath(asPath)), _this4.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route)]).then(function () {\n          return resolve();\n        }, reject);\n      });\n    }\n  }, {\n    key: \"fetchComponent\",\n    value: function () {\n      var _fetchComponent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(route) {\n        var cancelled, cancel, componentResult, error;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                cancelled = false;\n\n                cancel = this.clc = function () {\n                  cancelled = true;\n                };\n\n                route = delBasePath(route);\n                _context.next = 5;\n                return this.pageLoader.loadPage(route);\n\n              case 5:\n                componentResult = _context.sent;\n\n                if (!cancelled) {\n                  _context.next = 10;\n                  break;\n                }\n\n                error = new Error(\"Abort fetching component for route: \\\"\".concat(route, \"\\\"\"));\n                error.cancelled = true;\n                throw error;\n\n              case 10:\n                if (cancel === this.clc) {\n                  this.clc = null;\n                }\n\n                return _context.abrupt(\"return\", componentResult);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetchComponent(_x) {\n        return _fetchComponent.apply(this, arguments);\n      }\n\n      return fetchComponent;\n    }()\n  }, {\n    key: \"_getData\",\n    value: function _getData(fn) {\n      var _this5 = this;\n\n      var cancelled = false;\n\n      var cancel = function cancel() {\n        cancelled = true;\n      };\n\n      this.clc = cancel;\n      return fn().then(function (data) {\n        if (cancel === _this5.clc) {\n          _this5.clc = null;\n        }\n\n        if (cancelled) {\n          var err = new Error('Loading initial props cancelled');\n          err.cancelled = true;\n          throw err;\n        }\n\n        return data;\n      });\n    }\n  }, {\n    key: \"getInitialProps\",\n    value: function getInitialProps(Component, ctx) {\n      var App = this.components['/_app'].Component;\n\n      var AppTree = this._wrapApp(App);\n\n      ctx.AppTree = AppTree;\n      return (0, _utils.loadGetInitialProps)(App, {\n        AppTree: AppTree,\n        Component: Component,\n        router: this,\n        ctx: ctx\n      });\n    }\n  }, {\n    key: \"abortComponentLoad\",\n    value: function abortComponentLoad(as) {\n      if (this.clc) {\n        var e = new Error('Route Cancelled');\n        e.cancelled = true;\n        Router.events.emit('routeChangeError', e, as);\n        this.clc();\n        this.clc = null;\n      }\n    }\n  }, {\n    key: \"notify\",\n    value: function notify(data) {\n      this.sub(data, this.components['/_app'].Component);\n    }\n  }], [{\n    key: \"_rewriteUrlForNextExport\",\n    value: function _rewriteUrlForNextExport(url) {\n      if (false) { var rewriteUrlForNextExport; } else {\n        return url;\n      }\n    }\n  }]);\n\n  return Router;\n}();\n\nexports[\"default\"] = Router;\nRouter.events = (0, _mitt[\"default\"])();\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vLi4vLi4vLi4vbmV4dC1zZXJ2ZXIvbGliL3JvdXRlci9yb3V0ZXIudHM/MzViOCJdLCJuYW1lcyI6WyJiYXNlUGF0aCIsInByb2Nlc3MiLCJwYXRoIiwicHJlcGFyZVJvdXRlIiwidG9Sb3V0ZSIsImF0dGVtcHRzIiwiaXNTZXJ2ZXJSZW5kZXIiLCJwYXRobmFtZSIsImFkZEJhc2VQYXRoIiwiX19ORVhUX0RBVEFfXyIsImJ1aWxkSWQiLCJkZWxCYXNlUGF0aCIsInF1ZXJ5IiwiY3JlZGVudGlhbHMiLCJyZXMiLCJnZXRSZXNwb25zZSIsImRhdGEiLCJjYiIsImVyciIsIlJvdXRlciIsImNvbnN0cnVjdG9yIiwicm91dGUiLCJhc1BhdGgiLCJjb21wb25lbnRzIiwic2RjIiwic3ViIiwiY2xjIiwicGFnZUxvYWRlciIsIl9icHMiLCJldmVudHMiLCJfd3JhcEFwcCIsImlzU3NyIiwiaXNGYWxsYmFjayIsImUiLCJjb25zb2xlIiwiUHJvbWlzZSIsImZldGNoTmV4dERhdGEiLCJDb21wb25lbnQiLCJwcm9wcyIsIl9fTl9TU0ciLCJpbml0aWFsUHJvcHMiLCJfX05fU1NQIiwiYXMiLCJ3aW5kb3ciLCJtb2QiLCJuZXdEYXRhIiwiT2JqZWN0IiwicmVsb2FkIiwib3B0aW9ucyIsImNoYW5nZSIsIlNUIiwicGVyZm9ybWFuY2UiLCJ1cmwiLCJyZXNvbHZlIiwibWV0aG9kIiwic2hhbGxvdyIsInJvdXRlUmVnZXgiLCJyb3V0ZU1hdGNoIiwibWlzc2luZ1BhcmFtcyIsInBhcmFtIiwicmVqZWN0IiwiYXNQYXRobmFtZSIsInJvdXRlSW5mbyIsImVycm9yIiwiYXBwQ29tcCIsImNoYW5nZVN0YXRlIiwiZ2V0Um91dGVJbmZvIiwiY2FjaGVkUm91dGVJbmZvIiwiaGFuZGxlRXJyb3IiLCJwYWdlIiwiZ2lwRXJyIiwicmVxdWlyZSIsImlzVmFsaWRFbGVtZW50VHlwZSIsInNldCIsIm9ubHlBSGFzaENoYW5nZSIsIm5ld0hhc2giLCJvbGRVcmxOb0hhc2giLCJvbGRIYXNoIiwic2Nyb2xsVG9IYXNoIiwiaGFzaCIsImlkRWwiLCJkb2N1bWVudCIsIm5hbWVFbCIsInVybElzTmV3IiwiY2FuY2VsbGVkIiwiY2FuY2VsIiwiY29tcG9uZW50UmVzdWx0IiwiZm4iLCJnZXRJbml0aWFsUHJvcHMiLCJBcHBUcmVlIiwiY3R4Iiwicm91dGVyIiwiYWJvcnRDb21wb25lbnRMb2FkIiwibm90aWZ5IiwidXBkYXRlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUlBOztBQUNBOztBQUNBOztBQVFBOztBQUNBOztBQUNBOzs7Ozs7QUFoQkE7QUFBQTtBQUNBOzs7QUFpQkEsSUFBTUEsUUFBUSxHQUFJQyxVQUFsQjs7QUFFTywyQkFBMkM7QUFDaEQsU0FBT0MsSUFBSSxDQUFKQSwwQkFBK0JGLFFBQVEsR0FBdkNFLE9BQVA7QUFHSzs7QUFBQSwyQkFBMkM7QUFDaEQsU0FBT0EsSUFBSSxDQUFKQSwwQkFDSEEsSUFBSSxDQUFKQSxPQUFZRixRQUFRLENBQXBCRSxXQURHQSxNQUFQO0FBS0Y7O0FBQUEsdUJBQXVDO0FBQ3JDLFNBQU9BLElBQUksQ0FBSkEsc0JBQVA7QUFHRjs7QUFBQSxJQUFNQyxZQUFZLEdBQUlELFNBQWhCQyxZQUFnQkQsS0FBRDtBQUFBLFNBQ25CRSxPQUFPLENBQUMsU0FBU0YsSUFBSSxLQUFiLGlCQURWLElBQ1MsQ0FEWTtBQUFBLENBQXJCOztBQWlEQSw0REFLRTtBQUNBLE1BQUlHLFFBQVEsR0FBR0MsY0FBYyxPQUE3Qjs7QUFDQSx5QkFBcUM7QUFDbkMsV0FBTyxLQUFLLENBQ1YsaUNBQXFCO0FBQ25CQyxjQUFRLEVBQUVDLFdBQVcsRUFDbkI7QUFEbUIsNEJBRUpDLGFBQWEsQ0FBQ0MsT0FGVixTQUVvQkMsV0FBVyxDQUhqQyxRQUdpQyxDQUYvQixXQURGO0FBS25CQyxXQU5RLEVBTVJBO0FBTG1CLEtBQXJCLENBRFUsRUFRVjtBQUNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNB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VixHQXNCVSx1QkF0QlZBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9uZXh0LXNlcnZlci9saWIvcm91dGVyL3JvdXRlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbCBfX05FWFRfREFUQV9fICovXG4vLyB0c2xpbnQ6ZGlzYWJsZTpuby1jb25zb2xlXG5pbXBvcnQgeyBQYXJzZWRVcmxRdWVyeSB9IGZyb20gJ3F1ZXJ5c3RyaW5nJ1xuaW1wb3J0IHsgQ29tcG9uZW50VHlwZSB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgcGFyc2UsIFVybE9iamVjdCB9IGZyb20gJ3VybCdcbmltcG9ydCBtaXR0LCB7IE1pdHRFbWl0dGVyIH0gZnJvbSAnLi4vbWl0dCdcbmltcG9ydCB7XG4gIEFwcENvbnRleHRUeXBlLFxuICBmb3JtYXRXaXRoVmFsaWRhdGlvbixcbiAgZ2V0VVJMLFxuICBsb2FkR2V0SW5pdGlhbFByb3BzLFxuICBOZXh0UGFnZUNvbnRleHQsXG4gIFNULFxufSBmcm9tICcuLi91dGlscydcbmltcG9ydCB7IGlzRHluYW1pY1JvdXRlIH0gZnJvbSAnLi91dGlscy9pcy1keW5hbWljJ1xuaW1wb3J0IHsgZ2V0Um91dGVNYXRjaGVyIH0gZnJvbSAnLi91dGlscy9yb3V0ZS1tYXRjaGVyJ1xuaW1wb3J0IHsgZ2V0Um91dGVSZWdleCB9IGZyb20gJy4vdXRpbHMvcm91dGUtcmVnZXgnXG5cbmNvbnN0IGJhc2VQYXRoID0gKHByb2Nlc3MuZW52Ll9fTkVYVF9ST1VURVJfQkFTRVBBVEggYXMgc3RyaW5nKSB8fCAnJ1xuXG5leHBvcnQgZnVuY3Rpb24gYWRkQmFzZVBhdGgocGF0aDogc3RyaW5nKTogc3RyaW5nIHtcbiAgcmV0dXJuIHBhdGguaW5kZXhPZihiYXNlUGF0aCkgIT09IDAgPyBiYXNlUGF0aCArIHBhdGggOiBwYXRoXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkZWxCYXNlUGF0aChwYXRoOiBzdHJpbmcpOiBzdHJpbmcge1xuICByZXR1cm4gcGF0aC5pbmRleE9mKGJhc2VQYXRoKSA9PT0gMFxuICAgID8gcGF0aC5zdWJzdHIoYmFzZVBhdGgubGVuZ3RoKSB8fCAnLydcbiAgICA6IHBhdGhcbn1cblxuZnVuY3Rpb24gdG9Sb3V0ZShwYXRoOiBzdHJpbmcpOiBzdHJpbmcge1xuICByZXR1cm4gcGF0aC5yZXBsYWNlKC9cXC8kLywgJycpIHx8ICcvJ1xufVxuXG5jb25zdCBwcmVwYXJlUm91dGUgPSAocGF0aDogc3RyaW5nKSA9PlxuICB0b1JvdXRlKCFwYXRoIHx8IHBhdGggPT09ICcvJyA/ICcvaW5kZXgnIDogcGF0aClcblxudHlwZSBVcmwgPSBVcmxPYmplY3QgfCBzdHJpbmdcblxudHlwZSBDb21wb25lbnRSZXMgPSB7IHBhZ2U6IENvbXBvbmVudFR5cGU7IG1vZDogYW55IH1cblxuZXhwb3J0IHR5cGUgQmFzZVJvdXRlciA9IHtcbiAgcm91dGU6IHN0cmluZ1xuICBwYXRobmFtZTogc3RyaW5nXG4gIHF1ZXJ5OiBQYXJzZWRVcmxRdWVyeVxuICBhc1BhdGg6IHN0cmluZ1xuICBiYXNlUGF0aDogc3RyaW5nXG59XG5cbmV4cG9ydCB0eXBlIE5leHRSb3V0ZXIgPSBCYXNlUm91dGVyICZcbiAgUGljazxcbiAgICBSb3V0ZXIsXG4gICAgfCAncHVzaCdcbiAgICB8ICdyZXBsYWNlJ1xuICAgIHwgJ3JlbG9hZCdcbiAgICB8ICdiYWNrJ1xuICAgIHwgJ3ByZWZldGNoJ1xuICAgIHwgJ2JlZm9yZVBvcFN0YXRlJ1xuICAgIHwgJ2V2ZW50cydcbiAgICB8ICdpc0ZhbGxiYWNrJ1xuICA+XG5cbmV4cG9ydCB0eXBlIFByZWZldGNoT3B0aW9ucyA9IHtcbiAgcHJpb3JpdHk/OiBib29sZWFuXG59XG5cbnR5cGUgUm91dGVJbmZvID0ge1xuICBDb21wb25lbnQ6IENvbXBvbmVudFR5cGVcbiAgX19OX1NTRz86IGJvb2xlYW5cbiAgX19OX1NTUD86IGJvb2xlYW5cbiAgcHJvcHM/OiBhbnlcbiAgZXJyPzogRXJyb3JcbiAgZXJyb3I/OiBhbnlcbn1cblxudHlwZSBTdWJzY3JpcHRpb24gPSAoZGF0YTogUm91dGVJbmZvLCBBcHA/OiBDb21wb25lbnRUeXBlKSA9PiB2b2lkXG5cbnR5cGUgQmVmb3JlUG9wU3RhdGVDYWxsYmFjayA9IChzdGF0ZTogYW55KSA9PiBib29sZWFuXG5cbnR5cGUgQ29tcG9uZW50TG9hZENhbmNlbCA9ICgoKSA9PiB2b2lkKSB8IG51bGxcblxudHlwZSBIaXN0b3J5TWV0aG9kID0gJ3JlcGxhY2VTdGF0ZScgfCAncHVzaFN0YXRlJ1xuXG5mdW5jdGlvbiBmZXRjaE5leHREYXRhKFxuICBwYXRobmFtZTogc3RyaW5nLFxuICBxdWVyeTogUGFyc2VkVXJsUXVlcnkgfCBudWxsLFxuICBpc1NlcnZlclJlbmRlcjogYm9vbGVhbixcbiAgY2I/OiAoLi4uYXJnczogYW55KSA9PiBhbnlcbikge1xuICBsZXQgYXR0ZW1wdHMgPSBpc1NlcnZlclJlbmRlciA/IDMgOiAxXG4gIGZ1bmN0aW9uIGdldFJlc3BvbnNlKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuIGZldGNoKFxuICAgICAgZm9ybWF0V2l0aFZhbGlkYXRpb24oe1xuICAgICAgICBwYXRobmFtZTogYWRkQmFzZVBhdGgoXG4gICAgICAgICAgLy8gQHRzLWlnbm9yZSBfX05FWFRfREFUQV9fXG4gICAgICAgICAgYC9fbmV4dC9kYXRhLyR7X19ORVhUX0RBVEFfXy5idWlsZElkfSR7ZGVsQmFzZVBhdGgocGF0aG5hbWUpfS5qc29uYFxuICAgICAgICApLFxuICAgICAgICBxdWVyeSxcbiAgICAgIH0pLFxuICAgICAge1xuICAgICAgICAvLyBDb29raWVzIGFyZSByZXF1aXJlZCB0byBiZSBwcmVzZW50IGZvciBOZXh0LmpzJyBTU0cgXCJQcmV2aWV3IE1vZGVcIi5cbiAgICAgICAgLy8gQ29va2llcyBtYXkgYWxzbyBiZSByZXF1aXJlZCBmb3IgYGdldFNlcnZlclNpZGVQcm9wc2AuXG4gICAgICAgIC8vXG4gICAgICAgIC8vID4gYGZldGNoYCB3b27igJl0IHNlbmQgY29va2llcywgdW5sZXNzIHlvdSBzZXQgdGhlIGNyZWRlbnRpYWxzIGluaXRcbiAgICAgICAgLy8gPiBvcHRpb24uXG4gICAgICAgIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9GZXRjaF9BUEkvVXNpbmdfRmV0Y2hcbiAgICAgICAgLy9cbiAgICAgICAgLy8gPiBGb3IgbWF4aW11bSBicm93c2VyIGNvbXBhdGliaWxpdHkgd2hlbiBpdCBjb21lcyB0byBzZW5kaW5nICZcbiAgICAgICAgLy8gPiByZWNlaXZpbmcgY29va2llcywgYWx3YXlzIHN1cHBseSB0aGUgYGNyZWRlbnRpYWxzOiAnc2FtZS1vcmlnaW4nYFxuICAgICAgICAvLyA+IG9wdGlvbiBpbnN0ZWFkIG9mIHJlbHlpbmcgb24gdGhlIGRlZmF1bHQuXG4gICAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9naXRodWIvZmV0Y2gjY2F2ZWF0c1xuICAgICAgICBjcmVkZW50aWFsczogJ3NhbWUtb3JpZ2luJyxcbiAgICAgIH1cbiAgICApLnRoZW4oKHJlcykgPT4ge1xuICAgICAgaWYgKCFyZXMub2spIHtcbiAgICAgICAgaWYgKC0tYXR0ZW1wdHMgPiAwICYmIHJlcy5zdGF0dXMgPj0gNTAwKSB7XG4gICAgICAgICAgcmV0dXJuIGdldFJlc3BvbnNlKClcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBsb2FkIHN0YXRpYyBwcm9wc2ApXG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzLmpzb24oKVxuICAgIH0pXG4gIH1cblxuICByZXR1cm4gZ2V0UmVzcG9uc2UoKVxuICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICByZXR1cm4gY2IgPyBjYihkYXRhKSA6IGRhdGFcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyOiBFcnJvcikgPT4ge1xuICAgICAgLy8gV2Ugc2hvdWxkIG9ubHkgdHJpZ2dlciBhIHNlcnZlci1zaWRlIHRyYW5zaXRpb24gaWYgdGhpcyB3YXMgY2F1c2VkXG4gICAgICAvLyBvbiBhIGNsaWVudC1zaWRlIHRyYW5zaXRpb24uIE90aGVyd2lzZSwgd2UnZCBnZXQgaW50byBhbiBpbmZpbml0ZVxuICAgICAgLy8gbG9vcC5cbiAgICAgIGlmICghaXNTZXJ2ZXJSZW5kZXIpIHtcbiAgICAgICAgOyhlcnIgYXMgYW55KS5jb2RlID0gJ1BBR0VfTE9BRF9FUlJPUidcbiAgICAgIH1cbiAgICAgIHRocm93IGVyclxuICAgIH0pXG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJvdXRlciBpbXBsZW1lbnRzIEJhc2VSb3V0ZXIge1xuICByb3V0ZTogc3RyaW5nXG4gIHBhdGhuYW1lOiBzdHJpbmdcbiAgcXVlcnk6IFBhcnNlZFVybFF1ZXJ5XG4gIGFzUGF0aDogc3RyaW5nXG4gIGJhc2VQYXRoOiBzdHJpbmdcblxuICAvKipcbiAgICogTWFwIG9mIGFsbCBjb21wb25lbnRzIGxvYWRlZCBpbiBgUm91dGVyYFxuICAgKi9cbiAgY29tcG9uZW50czogeyBbcGF0aG5hbWU6IHN0cmluZ106IFJvdXRlSW5mbyB9XG4gIC8vIFN0YXRpYyBEYXRhIENhY2hlXG4gIHNkYzogeyBbYXNQYXRoOiBzdHJpbmddOiBvYmplY3QgfSA9IHt9XG4gIHN1YjogU3Vic2NyaXB0aW9uXG4gIGNsYzogQ29tcG9uZW50TG9hZENhbmNlbFxuICBwYWdlTG9hZGVyOiBhbnlcbiAgX2JwczogQmVmb3JlUG9wU3RhdGVDYWxsYmFjayB8IHVuZGVmaW5lZFxuICBldmVudHM6IE1pdHRFbWl0dGVyXG4gIF93cmFwQXBwOiAoQXBwOiBDb21wb25lbnRUeXBlKSA9PiBhbnlcbiAgaXNTc3I6IGJvb2xlYW5cbiAgaXNGYWxsYmFjazogYm9vbGVhblxuXG4gIHN0YXRpYyBldmVudHM6IE1pdHRFbWl0dGVyID0gbWl0dCgpXG5cbiAgY29uc3RydWN0b3IoXG4gICAgcGF0aG5hbWU6IHN0cmluZyxcbiAgICBxdWVyeTogUGFyc2VkVXJsUXVlcnksXG4gICAgYXM6IHN0cmluZyxcbiAgICB7XG4gICAgICBpbml0aWFsUHJvcHMsXG4gICAgICBwYWdlTG9hZGVyLFxuICAgICAgQXBwLFxuICAgICAgd3JhcEFwcCxcbiAgICAgIENvbXBvbmVudCxcbiAgICAgIGVycixcbiAgICAgIHN1YnNjcmlwdGlvbixcbiAgICAgIGlzRmFsbGJhY2ssXG4gICAgfToge1xuICAgICAgc3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb25cbiAgICAgIGluaXRpYWxQcm9wczogYW55XG4gICAgICBwYWdlTG9hZGVyOiBhbnlcbiAgICAgIENvbXBvbmVudDogQ29tcG9uZW50VHlwZVxuICAgICAgQXBwOiBDb21wb25lbnRUeXBlXG4gICAgICB3cmFwQXBwOiAoQXBwOiBDb21wb25lbnRUeXBlKSA9PiBhbnlcbiAgICAgIGVycj86IEVycm9yXG4gICAgICBpc0ZhbGxiYWNrOiBib29sZWFuXG4gICAgfVxuICApIHtcbiAgICAvLyByZXByZXNlbnRzIHRoZSBjdXJyZW50IGNvbXBvbmVudCBrZXlcbiAgICB0aGlzLnJvdXRlID0gdG9Sb3V0ZShwYXRobmFtZSlcblxuICAgIC8vIHNldCB1cCB0aGUgY29tcG9uZW50IGNhY2hlIChieSByb3V0ZSBrZXlzKVxuICAgIHRoaXMuY29tcG9uZW50cyA9IHt9XG4gICAgLy8gV2Ugc2hvdWxkIG5vdCBrZWVwIHRoZSBjYWNoZSwgaWYgdGhlcmUncyBhbiBlcnJvclxuICAgIC8vIE90aGVyd2lzZSwgdGhpcyBjYXVzZSBpc3N1ZXMgd2hlbiB3aGVuIGdvaW5nIGJhY2sgYW5kXG4gICAgLy8gY29tZSBhZ2FpbiB0byB0aGUgZXJyb3JlZCBwYWdlLlxuICAgIGlmIChwYXRobmFtZSAhPT0gJy9fZXJyb3InKSB7XG4gICAgICB0aGlzLmNvbXBvbmVudHNbdGhpcy5yb3V0ZV0gPSB7XG4gICAgICAgIENvbXBvbmVudCxcbiAgICAgICAgcHJvcHM6IGluaXRpYWxQcm9wcyxcbiAgICAgICAgZXJyLFxuICAgICAgICBfX05fU1NHOiBpbml0aWFsUHJvcHMgJiYgaW5pdGlhbFByb3BzLl9fTl9TU0csXG4gICAgICAgIF9fTl9TU1A6IGluaXRpYWxQcm9wcyAmJiBpbml0aWFsUHJvcHMuX19OX1NTUCxcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLmNvbXBvbmVudHNbJy9fYXBwJ10gPSB7IENvbXBvbmVudDogQXBwIH1cblxuICAgIC8vIEJhY2t3YXJkcyBjb21wYXQgZm9yIFJvdXRlci5yb3V0ZXIuZXZlbnRzXG4gICAgLy8gVE9ETzogU2hvdWxkIGJlIHJlbW92ZSB0aGUgZm9sbG93aW5nIG1ham9yIHZlcnNpb24gYXMgaXQgd2FzIG5ldmVyIGRvY3VtZW50ZWRcbiAgICB0aGlzLmV2ZW50cyA9IFJvdXRlci5ldmVudHNcblxuICAgIHRoaXMucGFnZUxvYWRlciA9IHBhZ2VMb2FkZXJcbiAgICB0aGlzLnBhdGhuYW1lID0gcGF0aG5hbWVcbiAgICB0aGlzLnF1ZXJ5ID0gcXVlcnlcbiAgICAvLyBpZiBhdXRvIHByZXJlbmRlcmVkIGFuZCBkeW5hbWljIHJvdXRlIHdhaXQgdG8gdXBkYXRlIGFzUGF0aFxuICAgIC8vIHVudGlsIGFmdGVyIG1vdW50IHRvIHByZXZlbnQgaHlkcmF0aW9uIG1pc21hdGNoXG4gICAgdGhpcy5hc1BhdGggPVxuICAgICAgLy8gQHRzLWlnbm9yZSB0aGlzIGlzIHRlbXBvcmFyaWx5IGdsb2JhbCAoYXR0YWNoZWQgdG8gd2luZG93KVxuICAgICAgaXNEeW5hbWljUm91dGUocGF0aG5hbWUpICYmIF9fTkVYVF9EQVRBX18uYXV0b0V4cG9ydCA/IHBhdGhuYW1lIDogYXNcbiAgICB0aGlzLmJhc2VQYXRoID0gYmFzZVBhdGhcbiAgICB0aGlzLnN1YiA9IHN1YnNjcmlwdGlvblxuICAgIHRoaXMuY2xjID0gbnVsbFxuICAgIHRoaXMuX3dyYXBBcHAgPSB3cmFwQXBwXG4gICAgLy8gbWFrZSBzdXJlIHRvIGlnbm9yZSBleHRyYSBwb3BTdGF0ZSBpbiBzYWZhcmkgb24gbmF2aWdhdGluZ1xuICAgIC8vIGJhY2sgZnJvbSBleHRlcm5hbCBzaXRlXG4gICAgdGhpcy5pc1NzciA9IHRydWVcblxuICAgIHRoaXMuaXNGYWxsYmFjayA9IGlzRmFsbGJhY2tcblxuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgLy8gbWFrZSBzdXJlIFwiYXNcIiBkb2Vzbid0IHN0YXJ0IHdpdGggZG91YmxlIHNsYXNoZXMgb3IgZWxzZSBpdCBjYW5cbiAgICAgIC8vIHRocm93IGFuIGVycm9yIGFzIGl0J3MgY29uc2lkZXJlZCBpbnZhbGlkXG4gICAgICBpZiAoYXMuc3Vic3RyKDAsIDIpICE9PSAnLy8nKSB7XG4gICAgICAgIC8vIGluIG9yZGVyIGZvciBgZS5zdGF0ZWAgdG8gd29yayBvbiB0aGUgYG9ucG9wc3RhdGVgIGV2ZW50XG4gICAgICAgIC8vIHdlIGhhdmUgdG8gcmVnaXN0ZXIgdGhlIGluaXRpYWwgcm91dGUgdXBvbiBpbml0aWFsaXphdGlvblxuICAgICAgICB0aGlzLmNoYW5nZVN0YXRlKFxuICAgICAgICAgICdyZXBsYWNlU3RhdGUnLFxuICAgICAgICAgIGZvcm1hdFdpdGhWYWxpZGF0aW9uKHsgcGF0aG5hbWUsIHF1ZXJ5IH0pLFxuICAgICAgICAgIGFzXG4gICAgICAgIClcbiAgICAgIH1cblxuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3BvcHN0YXRlJywgdGhpcy5vblBvcFN0YXRlKVxuICAgIH1cbiAgfVxuXG4gIC8vIEBkZXByZWNhdGVkIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5IGV2ZW4gdGhvdWdoIGl0J3MgYSBwcml2YXRlIG1ldGhvZC5cbiAgc3RhdGljIF9yZXdyaXRlVXJsRm9yTmV4dEV4cG9ydCh1cmw6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgaWYgKHByb2Nlc3MuZW52Ll9fTkVYVF9FWFBPUlRfVFJBSUxJTkdfU0xBU0gpIHtcbiAgICAgIGNvbnN0IHJld3JpdGVVcmxGb3JOZXh0RXhwb3J0ID0gcmVxdWlyZSgnLi9yZXdyaXRlLXVybC1mb3ItZXhwb3J0JylcbiAgICAgICAgLnJld3JpdGVVcmxGb3JOZXh0RXhwb3J0XG4gICAgICByZXR1cm4gcmV3cml0ZVVybEZvck5leHRFeHBvcnQodXJsKVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gdXJsXG4gICAgfVxuICB9XG5cbiAgb25Qb3BTdGF0ZSA9IChlOiBQb3BTdGF0ZUV2ZW50KTogdm9pZCA9PiB7XG4gICAgaWYgKCFlLnN0YXRlKSB7XG4gICAgICAvLyBXZSBnZXQgc3RhdGUgYXMgdW5kZWZpbmVkIGZvciB0d28gcmVhc29ucy5cbiAgICAgIC8vICAxLiBXaXRoIG9sZGVyIHNhZmFyaSAoPCA4KSBhbmQgb2xkZXIgY2hyb21lICg8IDM0KVxuICAgICAgLy8gIDIuIFdoZW4gdGhlIFVSTCBjaGFuZ2VkIHdpdGggI1xuICAgICAgLy9cbiAgICAgIC8vIEluIHRoZSBib3RoIGNhc2VzLCB3ZSBkb24ndCBuZWVkIHRvIHByb2NlZWQgYW5kIGNoYW5nZSB0aGUgcm91dGUuXG4gICAgICAvLyAoYXMgaXQncyBhbHJlYWR5IGNoYW5nZWQpXG4gICAgICAvLyBCdXQgd2UgY2FuIHNpbXBseSByZXBsYWNlIHRoZSBzdGF0ZSB3aXRoIHRoZSBuZXcgY2hhbmdlcy5cbiAgICAgIC8vIEFjdHVhbGx5LCBmb3IgKDEpIHdlIGRvbid0IG5lZWQgdG8gbm90aGluZy4gQnV0IGl0J3MgaGFyZCB0byBkZXRlY3QgdGhhdCBldmVudC5cbiAgICAgIC8vIFNvLCBkb2luZyB0aGUgZm9sbG93aW5nIGZvciAoMSkgZG9lcyBubyBoYXJtLlxuICAgICAgY29uc3QgeyBwYXRobmFtZSwgcXVlcnkgfSA9IHRoaXNcbiAgICAgIHRoaXMuY2hhbmdlU3RhdGUoXG4gICAgICAgICdyZXBsYWNlU3RhdGUnLFxuICAgICAgICBmb3JtYXRXaXRoVmFsaWRhdGlvbih7IHBhdGhuYW1lLCBxdWVyeSB9KSxcbiAgICAgICAgZ2V0VVJMKClcbiAgICAgIClcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIC8vIE1ha2Ugc3VyZSB3ZSBkb24ndCByZS1yZW5kZXIgb24gaW5pdGlhbCBsb2FkLFxuICAgIC8vIGNhbiBiZSBjYXVzZWQgYnkgbmF2aWdhdGluZyBiYWNrIGZyb20gYW4gZXh0ZXJuYWwgc2l0ZVxuICAgIGlmIChcbiAgICAgIGUuc3RhdGUgJiZcbiAgICAgIHRoaXMuaXNTc3IgJiZcbiAgICAgIGUuc3RhdGUuYXMgPT09IHRoaXMuYXNQYXRoICYmXG4gICAgICBwYXJzZShlLnN0YXRlLnVybCkucGF0aG5hbWUgPT09IHRoaXMucGF0aG5hbWVcbiAgICApIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIC8vIElmIHRoZSBkb3duc3RyZWFtIGFwcGxpY2F0aW9uIHJldHVybnMgZmFsc3ksIHJldHVybi5cbiAgICAvLyBUaGV5IHdpbGwgdGhlbiBiZSByZXNwb25zaWJsZSBmb3IgaGFuZGxpbmcgdGhlIGV2ZW50LlxuICAgIGlmICh0aGlzLl9icHMgJiYgIXRoaXMuX2JwcyhlLnN0YXRlKSkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgY29uc3QgeyB1cmwsIGFzLCBvcHRpb25zIH0gPSBlLnN0YXRlXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmICh0eXBlb2YgdXJsID09PSAndW5kZWZpbmVkJyB8fCB0eXBlb2YgYXMgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcbiAgICAgICAgICAnYHBvcHN0YXRlYCBldmVudCB0cmlnZ2VyZWQgYnV0IGBldmVudC5zdGF0ZWAgZGlkIG5vdCBoYXZlIGB1cmxgIG9yIGBhc2AgaHR0cHM6Ly9lcnIuc2gvemVpdC9uZXh0LmpzL3BvcHN0YXRlLXN0YXRlLWVtcHR5J1xuICAgICAgICApXG4gICAgICB9XG4gICAgfVxuICAgIHRoaXMucmVwbGFjZSh1cmwsIGFzLCBvcHRpb25zKVxuICB9XG5cbiAgdXBkYXRlKHJvdXRlOiBzdHJpbmcsIG1vZDogYW55KSB7XG4gICAgY29uc3QgQ29tcG9uZW50OiBDb21wb25lbnRUeXBlID0gbW9kLmRlZmF1bHQgfHwgbW9kXG4gICAgY29uc3QgZGF0YSA9IHRoaXMuY29tcG9uZW50c1tyb3V0ZV1cbiAgICBpZiAoIWRhdGEpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgQ2Fubm90IHVwZGF0ZSB1bmF2YWlsYWJsZSByb3V0ZTogJHtyb3V0ZX1gKVxuICAgIH1cblxuICAgIGNvbnN0IG5ld0RhdGEgPSBPYmplY3QuYXNzaWduKHt9LCBkYXRhLCB7XG4gICAgICBDb21wb25lbnQsXG4gICAgICBfX05fU1NHOiBtb2QuX19OX1NTRyxcbiAgICAgIF9fTl9TU1A6IG1vZC5fX05fU1NQLFxuICAgIH0pXG4gICAgdGhpcy5jb21wb25lbnRzW3JvdXRlXSA9IG5ld0RhdGFcblxuICAgIC8vIHBhZ2VzL19hcHAuanMgdXBkYXRlZFxuICAgIGlmIChyb3V0ZSA9PT0gJy9fYXBwJykge1xuICAgICAgdGhpcy5ub3RpZnkodGhpcy5jb21wb25lbnRzW3RoaXMucm91dGVdKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgaWYgKHJvdXRlID09PSB0aGlzLnJvdXRlKSB7XG4gICAgICB0aGlzLm5vdGlmeShuZXdEYXRhKVxuICAgIH1cbiAgfVxuXG4gIHJlbG9hZCgpOiB2b2lkIHtcbiAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKClcbiAgfVxuXG4gIC8qKlxuICAgKiBHbyBiYWNrIGluIGhpc3RvcnlcbiAgICovXG4gIGJhY2soKSB7XG4gICAgd2luZG93Lmhpc3RvcnkuYmFjaygpXG4gIH1cblxuICAvKipcbiAgICogUGVyZm9ybXMgYSBgcHVzaFN0YXRlYCB3aXRoIGFyZ3VtZW50c1xuICAgKiBAcGFyYW0gdXJsIG9mIHRoZSByb3V0ZVxuICAgKiBAcGFyYW0gYXMgbWFza3MgYHVybGAgZm9yIHRoZSBicm93c2VyXG4gICAqIEBwYXJhbSBvcHRpb25zIG9iamVjdCB5b3UgY2FuIGRlZmluZSBgc2hhbGxvd2AgYW5kIG90aGVyIG9wdGlvbnNcbiAgICovXG4gIHB1c2godXJsOiBVcmwsIGFzOiBVcmwgPSB1cmwsIG9wdGlvbnMgPSB7fSkge1xuICAgIHJldHVybiB0aGlzLmNoYW5nZSgncHVzaFN0YXRlJywgdXJsLCBhcywgb3B0aW9ucylcbiAgfVxuXG4gIC8qKlxuICAgKiBQZXJmb3JtcyBhIGByZXBsYWNlU3RhdGVgIHdpdGggYXJndW1lbnRzXG4gICAqIEBwYXJhbSB1cmwgb2YgdGhlIHJvdXRlXG4gICAqIEBwYXJhbSBhcyBtYXNrcyBgdXJsYCBmb3IgdGhlIGJyb3dzZXJcbiAgICogQHBhcmFtIG9wdGlvbnMgb2JqZWN0IHlvdSBjYW4gZGVmaW5lIGBzaGFsbG93YCBhbmQgb3RoZXIgb3B0aW9uc1xuICAgKi9cbiAgcmVwbGFjZSh1cmw6IFVybCwgYXM6IFVybCA9IHVybCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgcmV0dXJuIHRoaXMuY2hhbmdlKCdyZXBsYWNlU3RhdGUnLCB1cmwsIGFzLCBvcHRpb25zKVxuICB9XG5cbiAgY2hhbmdlKFxuICAgIG1ldGhvZDogSGlzdG9yeU1ldGhvZCxcbiAgICBfdXJsOiBVcmwsXG4gICAgX2FzOiBVcmwsXG4gICAgb3B0aW9uczogYW55XG4gICk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBpZiAoIW9wdGlvbnMuX2gpIHtcbiAgICAgICAgdGhpcy5pc1NzciA9IGZhbHNlXG4gICAgICB9XG4gICAgICAvLyBtYXJraW5nIHJvdXRlIGNoYW5nZXMgYXMgYSBuYXZpZ2F0aW9uIHN0YXJ0IGVudHJ5XG4gICAgICBpZiAoU1QpIHtcbiAgICAgICAgcGVyZm9ybWFuY2UubWFyaygncm91dGVDaGFuZ2UnKVxuICAgICAgfVxuXG4gICAgICAvLyBJZiB1cmwgYW5kIGFzIHByb3ZpZGVkIGFzIGFuIG9iamVjdCByZXByZXNlbnRhdGlvbixcbiAgICAgIC8vIHdlJ2xsIGZvcm1hdCB0aGVtIGludG8gdGhlIHN0cmluZyB2ZXJzaW9uIGhlcmUuXG4gICAgICBsZXQgdXJsID0gdHlwZW9mIF91cmwgPT09ICdvYmplY3QnID8gZm9ybWF0V2l0aFZhbGlkYXRpb24oX3VybCkgOiBfdXJsXG4gICAgICBsZXQgYXMgPSB0eXBlb2YgX2FzID09PSAnb2JqZWN0JyA/IGZvcm1hdFdpdGhWYWxpZGF0aW9uKF9hcykgOiBfYXNcblxuICAgICAgdXJsID0gYWRkQmFzZVBhdGgodXJsKVxuICAgICAgYXMgPSBhZGRCYXNlUGF0aChhcylcblxuICAgICAgLy8gQWRkIHRoZSBlbmRpbmcgc2xhc2ggdG8gdGhlIHBhdGhzLiBTbywgd2UgY2FuIHNlcnZlIHRoZVxuICAgICAgLy8gXCI8cGFnZT4vaW5kZXguaHRtbFwiIGRpcmVjdGx5IGZvciB0aGUgU1NSIHBhZ2UuXG4gICAgICBpZiAocHJvY2Vzcy5lbnYuX19ORVhUX0VYUE9SVF9UUkFJTElOR19TTEFTSCkge1xuICAgICAgICBjb25zdCByZXdyaXRlVXJsRm9yTmV4dEV4cG9ydCA9IHJlcXVpcmUoJy4vcmV3cml0ZS11cmwtZm9yLWV4cG9ydCcpXG4gICAgICAgICAgLnJld3JpdGVVcmxGb3JOZXh0RXhwb3J0XG4gICAgICAgIC8vIEB0cy1pZ25vcmUgdGhpcyBpcyB0ZW1wb3JhcmlseSBnbG9iYWwgKGF0dGFjaGVkIHRvIHdpbmRvdylcbiAgICAgICAgaWYgKF9fTkVYVF9EQVRBX18ubmV4dEV4cG9ydCkge1xuICAgICAgICAgIGFzID0gcmV3cml0ZVVybEZvck5leHRFeHBvcnQoYXMpXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhpcy5hYm9ydENvbXBvbmVudExvYWQoYXMpXG5cbiAgICAgIC8vIElmIHRoZSB1cmwgY2hhbmdlIGlzIG9ubHkgcmVsYXRlZCB0byBhIGhhc2ggY2hhbmdlXG4gICAgICAvLyBXZSBzaG91bGQgbm90IHByb2NlZWQuIFdlIHNob3VsZCBvbmx5IGNoYW5nZSB0aGUgc3RhdGUuXG5cbiAgICAgIC8vIFdBUk5JTkc6IGBfaGAgaXMgYW4gaW50ZXJuYWwgb3B0aW9uIGZvciBoYW5kaW5nIE5leHQuanMgY2xpZW50LXNpZGVcbiAgICAgIC8vIGh5ZHJhdGlvbi4gWW91ciBhcHAgc2hvdWxkIF9uZXZlcl8gdXNlIHRoaXMgcHJvcGVydHkuIEl0IG1heSBjaGFuZ2UgYXRcbiAgICAgIC8vIGFueSB0aW1lIHdpdGhvdXQgbm90aWNlLlxuICAgICAgaWYgKCFvcHRpb25zLl9oICYmIHRoaXMub25seUFIYXNoQ2hhbmdlKGFzKSkge1xuICAgICAgICB0aGlzLmFzUGF0aCA9IGFzXG4gICAgICAgIFJvdXRlci5ldmVudHMuZW1pdCgnaGFzaENoYW5nZVN0YXJ0JywgYXMpXG4gICAgICAgIHRoaXMuY2hhbmdlU3RhdGUobWV0aG9kLCB1cmwsIGFzLCBvcHRpb25zKVxuICAgICAgICB0aGlzLnNjcm9sbFRvSGFzaChhcylcbiAgICAgICAgUm91dGVyLmV2ZW50cy5lbWl0KCdoYXNoQ2hhbmdlQ29tcGxldGUnLCBhcylcbiAgICAgICAgcmV0dXJuIHJlc29sdmUodHJ1ZSlcbiAgICAgIH1cblxuICAgICAgY29uc3QgeyBwYXRobmFtZSwgcXVlcnksIHByb3RvY29sIH0gPSBwYXJzZSh1cmwsIHRydWUpXG5cbiAgICAgIGlmICghcGF0aG5hbWUgfHwgcHJvdG9jb2wpIHtcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICBgSW52YWxpZCBocmVmIHBhc3NlZCB0byByb3V0ZXI6ICR7dXJsfSBodHRwczovL2Vyci5zaC96ZWl0L25leHQuanMvaW52YWxpZC1ocmVmLXBhc3NlZGBcbiAgICAgICAgICApXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc29sdmUoZmFsc2UpXG4gICAgICB9XG5cbiAgICAgIC8vIElmIGFza2VkIHRvIGNoYW5nZSB0aGUgY3VycmVudCBVUkwgd2Ugc2hvdWxkIHJlbG9hZCB0aGUgY3VycmVudCBwYWdlXG4gICAgICAvLyAobm90IGxvY2F0aW9uLnJlbG9hZCgpIGJ1dCByZWxvYWQgZ2V0SW5pdGlhbFByb3BzIGFuZCBvdGhlciBOZXh0LmpzIHN0dWZmcylcbiAgICAgIC8vIFdlIGFsc28gbmVlZCB0byBzZXQgdGhlIG1ldGhvZCA9IHJlcGxhY2VTdGF0ZSBhbHdheXNcbiAgICAgIC8vIGFzIHRoaXMgc2hvdWxkIG5vdCBnbyBpbnRvIHRoZSBoaXN0b3J5IChUaGF0J3MgaG93IGJyb3dzZXJzIHdvcmspXG4gICAgICAvLyBXZSBzaG91bGQgY29tcGFyZSB0aGUgbmV3IGFzUGF0aCB0byB0aGUgY3VycmVudCBhc1BhdGgsIG5vdCB0aGUgdXJsXG4gICAgICBpZiAoIXRoaXMudXJsSXNOZXcoYXMpKSB7XG4gICAgICAgIG1ldGhvZCA9ICdyZXBsYWNlU3RhdGUnXG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHJvdXRlID0gdG9Sb3V0ZShwYXRobmFtZSlcbiAgICAgIGNvbnN0IHsgc2hhbGxvdyA9IGZhbHNlIH0gPSBvcHRpb25zXG5cbiAgICAgIGlmIChpc0R5bmFtaWNSb3V0ZShyb3V0ZSkpIHtcbiAgICAgICAgY29uc3QgeyBwYXRobmFtZTogYXNQYXRobmFtZSB9ID0gcGFyc2UoYXMpXG4gICAgICAgIGNvbnN0IHJvdXRlUmVnZXggPSBnZXRSb3V0ZVJlZ2V4KHJvdXRlKVxuICAgICAgICBjb25zdCByb3V0ZU1hdGNoID0gZ2V0Um91dGVNYXRjaGVyKHJvdXRlUmVnZXgpKGFzUGF0aG5hbWUpXG4gICAgICAgIGlmICghcm91dGVNYXRjaCkge1xuICAgICAgICAgIGNvbnN0IG1pc3NpbmdQYXJhbXMgPSBPYmplY3Qua2V5cyhyb3V0ZVJlZ2V4Lmdyb3VwcykuZmlsdGVyKFxuICAgICAgICAgICAgKHBhcmFtKSA9PiAhcXVlcnlbcGFyYW1dXG4gICAgICAgICAgKVxuXG4gICAgICAgICAgaWYgKG1pc3NpbmdQYXJhbXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICAgICAgICAgIGBNaXNtYXRjaGluZyBcXGBhc1xcYCBhbmQgXFxgaHJlZlxcYCBmYWlsZWQgdG8gbWFudWFsbHkgcHJvdmlkZSBgICtcbiAgICAgICAgICAgICAgICAgIGB0aGUgcGFyYW1zOiAke21pc3NpbmdQYXJhbXMuam9pbihcbiAgICAgICAgICAgICAgICAgICAgJywgJ1xuICAgICAgICAgICAgICAgICAgKX0gaW4gdGhlIFxcYGhyZWZcXGAncyBcXGBxdWVyeVxcYGBcbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gcmVqZWN0KFxuICAgICAgICAgICAgICBuZXcgRXJyb3IoXG4gICAgICAgICAgICAgICAgYFRoZSBwcm92aWRlZCBcXGBhc1xcYCB2YWx1ZSAoJHthc1BhdGhuYW1lfSkgaXMgaW5jb21wYXRpYmxlIHdpdGggdGhlIFxcYGhyZWZcXGAgdmFsdWUgKCR7cm91dGV9KS4gYCArXG4gICAgICAgICAgICAgICAgICBgUmVhZCBtb3JlOiBodHRwczovL2Vyci5zaC96ZWl0L25leHQuanMvaW5jb21wYXRpYmxlLWhyZWYtYXNgXG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgIClcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gTWVyZ2UgcGFyYW1zIGludG8gYHF1ZXJ5YCwgb3ZlcndyaXRpbmcgYW55IHNwZWNpZmllZCBpbiBzZWFyY2hcbiAgICAgICAgICBPYmplY3QuYXNzaWduKHF1ZXJ5LCByb3V0ZU1hdGNoKVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIFJvdXRlci5ldmVudHMuZW1pdCgncm91dGVDaGFuZ2VTdGFydCcsIGFzKVxuXG4gICAgICAvLyBJZiBzaGFsbG93IGlzIHRydWUgYW5kIHRoZSByb3V0ZSBleGlzdHMgaW4gdGhlIHJvdXRlciBjYWNoZSB3ZSByZXVzZSB0aGUgcHJldmlvdXMgcmVzdWx0XG4gICAgICB0aGlzLmdldFJvdXRlSW5mbyhyb3V0ZSwgcGF0aG5hbWUsIHF1ZXJ5LCBhcywgc2hhbGxvdykudGhlbihcbiAgICAgICAgKHJvdXRlSW5mbykgPT4ge1xuICAgICAgICAgIGNvbnN0IHsgZXJyb3IgfSA9IHJvdXRlSW5mb1xuXG4gICAgICAgICAgaWYgKGVycm9yICYmIGVycm9yLmNhbmNlbGxlZCkge1xuICAgICAgICAgICAgcmV0dXJuIHJlc29sdmUoZmFsc2UpXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgUm91dGVyLmV2ZW50cy5lbWl0KCdiZWZvcmVIaXN0b3J5Q2hhbmdlJywgYXMpXG4gICAgICAgICAgdGhpcy5jaGFuZ2VTdGF0ZShtZXRob2QsIHVybCwgYXMsIG9wdGlvbnMpXG5cbiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgY29uc3QgYXBwQ29tcDogYW55ID0gdGhpcy5jb21wb25lbnRzWycvX2FwcCddLkNvbXBvbmVudFxuICAgICAgICAgICAgOyh3aW5kb3cgYXMgYW55KS5uZXh0LmlzUHJlcmVuZGVyZWQgPVxuICAgICAgICAgICAgICBhcHBDb21wLmdldEluaXRpYWxQcm9wcyA9PT0gYXBwQ29tcC5vcmlnR2V0SW5pdGlhbFByb3BzICYmXG4gICAgICAgICAgICAgICEocm91dGVJbmZvLkNvbXBvbmVudCBhcyBhbnkpLmdldEluaXRpYWxQcm9wc1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHRoaXMuc2V0KHJvdXRlLCBwYXRobmFtZSwgcXVlcnksIGFzLCByb3V0ZUluZm8pXG5cbiAgICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICAgIFJvdXRlci5ldmVudHMuZW1pdCgncm91dGVDaGFuZ2VFcnJvcicsIGVycm9yLCBhcylcbiAgICAgICAgICAgIHRocm93IGVycm9yXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgUm91dGVyLmV2ZW50cy5lbWl0KCdyb3V0ZUNoYW5nZUNvbXBsZXRlJywgYXMpXG4gICAgICAgICAgcmV0dXJuIHJlc29sdmUodHJ1ZSlcbiAgICAgICAgfSxcbiAgICAgICAgcmVqZWN0XG4gICAgICApXG4gICAgfSlcbiAgfVxuXG4gIGNoYW5nZVN0YXRlKFxuICAgIG1ldGhvZDogSGlzdG9yeU1ldGhvZCxcbiAgICB1cmw6IHN0cmluZyxcbiAgICBhczogc3RyaW5nLFxuICAgIG9wdGlvbnMgPSB7fVxuICApOiB2b2lkIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgaWYgKHR5cGVvZiB3aW5kb3cuaGlzdG9yeSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihgV2FybmluZzogd2luZG93Lmhpc3RvcnkgaXMgbm90IGF2YWlsYWJsZS5gKVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiB3aW5kb3cuaGlzdG9yeVttZXRob2RdID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICBjb25zb2xlLmVycm9yKGBXYXJuaW5nOiB3aW5kb3cuaGlzdG9yeS4ke21ldGhvZH0gaXMgbm90IGF2YWlsYWJsZWApXG4gICAgICAgIHJldHVyblxuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChtZXRob2QgIT09ICdwdXNoU3RhdGUnIHx8IGdldFVSTCgpICE9PSBhcykge1xuICAgICAgd2luZG93Lmhpc3RvcnlbbWV0aG9kXShcbiAgICAgICAge1xuICAgICAgICAgIHVybCxcbiAgICAgICAgICBhcyxcbiAgICAgICAgICBvcHRpb25zLFxuICAgICAgICB9LFxuICAgICAgICAvLyBNb3N0IGJyb3dzZXJzIGN1cnJlbnRseSBpZ25vcmVzIHRoaXMgcGFyYW1ldGVyLCBhbHRob3VnaCB0aGV5IG1heSB1c2UgaXQgaW4gdGhlIGZ1dHVyZS5cbiAgICAgICAgLy8gUGFzc2luZyB0aGUgZW1wdHkgc3RyaW5nIGhlcmUgc2hvdWxkIGJlIHNhZmUgYWdhaW5zdCBmdXR1cmUgY2hhbmdlcyB0byB0aGUgbWV0aG9kLlxuICAgICAgICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvSGlzdG9yeS9yZXBsYWNlU3RhdGVcbiAgICAgICAgJycsXG4gICAgICAgIGFzXG4gICAgICApXG4gICAgfVxuICB9XG5cbiAgZ2V0Um91dGVJbmZvKFxuICAgIHJvdXRlOiBzdHJpbmcsXG4gICAgcGF0aG5hbWU6IHN0cmluZyxcbiAgICBxdWVyeTogYW55LFxuICAgIGFzOiBzdHJpbmcsXG4gICAgc2hhbGxvdzogYm9vbGVhbiA9IGZhbHNlXG4gICk6IFByb21pc2U8Um91dGVJbmZvPiB7XG4gICAgY29uc3QgY2FjaGVkUm91dGVJbmZvID0gdGhpcy5jb21wb25lbnRzW3JvdXRlXVxuXG4gICAgLy8gSWYgdGhlcmUgaXMgYSBzaGFsbG93IHJvdXRlIHRyYW5zaXRpb24gcG9zc2libGVcbiAgICAvLyBJZiB0aGUgcm91dGUgaXMgYWxyZWFkeSByZW5kZXJlZCBvbiB0aGUgc2NyZWVuLlxuICAgIGlmIChzaGFsbG93ICYmIGNhY2hlZFJvdXRlSW5mbyAmJiB0aGlzLnJvdXRlID09PSByb3V0ZSkge1xuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShjYWNoZWRSb3V0ZUluZm8pXG4gICAgfVxuXG4gICAgY29uc3QgaGFuZGxlRXJyb3IgPSAoXG4gICAgICBlcnI6IEVycm9yICYgeyBjb2RlOiBhbnk7IGNhbmNlbGxlZDogYm9vbGVhbiB9LFxuICAgICAgbG9hZEVycm9yRmFpbD86IGJvb2xlYW5cbiAgICApID0+IHtcbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICBpZiAoZXJyLmNvZGUgPT09ICdQQUdFX0xPQURfRVJST1InIHx8IGxvYWRFcnJvckZhaWwpIHtcbiAgICAgICAgICAvLyBJZiB3ZSBjYW4ndCBsb2FkIHRoZSBwYWdlIGl0IGNvdWxkIGJlIG9uZSBvZiBmb2xsb3dpbmcgcmVhc29uc1xuICAgICAgICAgIC8vICAxLiBQYWdlIGRvZXNuJ3QgZXhpc3RzXG4gICAgICAgICAgLy8gIDIuIFBhZ2UgZG9lcyBleGlzdCBpbiBhIGRpZmZlcmVudCB6b25lXG4gICAgICAgICAgLy8gIDMuIEludGVybmFsIGVycm9yIHdoaWxlIGxvYWRpbmcgdGhlIHBhZ2VcblxuICAgICAgICAgIC8vIFNvLCBkb2luZyBhIGhhcmQgcmVsb2FkIGlzIHRoZSBwcm9wZXIgd2F5IHRvIGRlYWwgd2l0aCB0aGlzLlxuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gYXNcblxuICAgICAgICAgIC8vIENoYW5naW5nIHRoZSBVUkwgZG9lc24ndCBibG9jayBleGVjdXRpbmcgdGhlIGN1cnJlbnQgY29kZSBwYXRoLlxuICAgICAgICAgIC8vIFNvLCB3ZSBuZWVkIHRvIG1hcmsgaXQgYXMgYSBjYW5jZWxsZWQgZXJyb3IgYW5kIHN0b3AgdGhlIHJvdXRpbmcgbG9naWMuXG4gICAgICAgICAgZXJyLmNhbmNlbGxlZCA9IHRydWVcbiAgICAgICAgICAvLyBAdHMtaWdub3JlIFRPRE86IGZpeCB0aGUgY29udHJvbCBmbG93IGhlcmVcbiAgICAgICAgICByZXR1cm4gcmVzb2x2ZSh7IGVycm9yOiBlcnIgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChlcnIuY2FuY2VsbGVkKSB7XG4gICAgICAgICAgLy8gQHRzLWlnbm9yZSBUT0RPOiBmaXggdGhlIGNvbnRyb2wgZmxvdyBoZXJlXG4gICAgICAgICAgcmV0dXJuIHJlc29sdmUoeyBlcnJvcjogZXJyIH0pXG4gICAgICAgIH1cblxuICAgICAgICByZXNvbHZlKFxuICAgICAgICAgIHRoaXMuZmV0Y2hDb21wb25lbnQoJy9fZXJyb3InKVxuICAgICAgICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICAgICAgICBjb25zdCB7IHBhZ2U6IENvbXBvbmVudCB9ID0gcmVzXG4gICAgICAgICAgICAgIGNvbnN0IHJvdXRlSW5mbzogUm91dGVJbmZvID0geyBDb21wb25lbnQsIGVyciB9XG4gICAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuZ2V0SW5pdGlhbFByb3BzKENvbXBvbmVudCwge1xuICAgICAgICAgICAgICAgICAgZXJyLFxuICAgICAgICAgICAgICAgICAgcGF0aG5hbWUsXG4gICAgICAgICAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICAgICAgICB9IGFzIGFueSkudGhlbihcbiAgICAgICAgICAgICAgICAgIChwcm9wcykgPT4ge1xuICAgICAgICAgICAgICAgICAgICByb3V0ZUluZm8ucHJvcHMgPSBwcm9wc1xuICAgICAgICAgICAgICAgICAgICByb3V0ZUluZm8uZXJyb3IgPSBlcnJcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShyb3V0ZUluZm8pXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgKGdpcEVycikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFxuICAgICAgICAgICAgICAgICAgICAgICdFcnJvciBpbiBlcnJvciBwYWdlIGBnZXRJbml0aWFsUHJvcHNgOiAnLFxuICAgICAgICAgICAgICAgICAgICAgIGdpcEVyclxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgIHJvdXRlSW5mby5lcnJvciA9IGVyclxuICAgICAgICAgICAgICAgICAgICByb3V0ZUluZm8ucHJvcHMgPSB7fVxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHJvdXRlSW5mbylcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgIH0pIGFzIFByb21pc2U8Um91dGVJbmZvPlxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiBoYW5kbGVFcnJvcihlcnIsIHRydWUpKVxuICAgICAgICApXG4gICAgICB9KSBhcyBQcm9taXNlPFJvdXRlSW5mbz5cbiAgICB9XG5cbiAgICByZXR1cm4gKG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGlmIChjYWNoZWRSb3V0ZUluZm8pIHtcbiAgICAgICAgcmV0dXJuIHJlc29sdmUoY2FjaGVkUm91dGVJbmZvKVxuICAgICAgfVxuXG4gICAgICB0aGlzLmZldGNoQ29tcG9uZW50KHJvdXRlKS50aGVuKFxuICAgICAgICAocmVzKSA9PlxuICAgICAgICAgIHJlc29sdmUoe1xuICAgICAgICAgICAgQ29tcG9uZW50OiByZXMucGFnZSxcbiAgICAgICAgICAgIF9fTl9TU0c6IHJlcy5tb2QuX19OX1NTRyxcbiAgICAgICAgICAgIF9fTl9TU1A6IHJlcy5tb2QuX19OX1NTUCxcbiAgICAgICAgICB9KSxcbiAgICAgICAgcmVqZWN0XG4gICAgICApXG4gICAgfSkgYXMgUHJvbWlzZTxSb3V0ZUluZm8+KVxuICAgICAgLnRoZW4oKHJvdXRlSW5mbzogUm91dGVJbmZvKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgQ29tcG9uZW50LCBfX05fU1NHLCBfX05fU1NQIH0gPSByb3V0ZUluZm9cblxuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgIGNvbnN0IHsgaXNWYWxpZEVsZW1lbnRUeXBlIH0gPSByZXF1aXJlKCdyZWFjdC1pcycpXG4gICAgICAgICAgaWYgKCFpc1ZhbGlkRWxlbWVudFR5cGUoQ29tcG9uZW50KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgICAgICBgVGhlIGRlZmF1bHQgZXhwb3J0IGlzIG5vdCBhIFJlYWN0IENvbXBvbmVudCBpbiBwYWdlOiBcIiR7cGF0aG5hbWV9XCJgXG4gICAgICAgICAgICApXG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldERhdGE8Um91dGVJbmZvPigoKSA9PlxuICAgICAgICAgIF9fTl9TU0dcbiAgICAgICAgICAgID8gdGhpcy5fZ2V0U3RhdGljRGF0YShhcylcbiAgICAgICAgICAgIDogX19OX1NTUFxuICAgICAgICAgICAgPyB0aGlzLl9nZXRTZXJ2ZXJEYXRhKGFzKVxuICAgICAgICAgICAgOiB0aGlzLmdldEluaXRpYWxQcm9wcyhcbiAgICAgICAgICAgICAgICBDb21wb25lbnQsXG4gICAgICAgICAgICAgICAgLy8gd2UgcHJvdmlkZSBBcHBUcmVlIGxhdGVyIHNvIHRoaXMgbmVlZHMgdG8gYmUgYGFueWBcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBwYXRobmFtZSxcbiAgICAgICAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgICAgICAgYXNQYXRoOiBhcyxcbiAgICAgICAgICAgICAgICB9IGFzIGFueVxuICAgICAgICAgICAgICApXG4gICAgICAgICkudGhlbigocHJvcHMpID0+IHtcbiAgICAgICAgICByb3V0ZUluZm8ucHJvcHMgPSBwcm9wc1xuICAgICAgICAgIHRoaXMuY29tcG9uZW50c1tyb3V0ZV0gPSByb3V0ZUluZm9cbiAgICAgICAgICByZXR1cm4gcm91dGVJbmZvXG4gICAgICAgIH0pXG4gICAgICB9KVxuICAgICAgLmNhdGNoKGhhbmRsZUVycm9yKVxuICB9XG5cbiAgc2V0KFxuICAgIHJvdXRlOiBzdHJpbmcsXG4gICAgcGF0aG5hbWU6IHN0cmluZyxcbiAgICBxdWVyeTogYW55LFxuICAgIGFzOiBzdHJpbmcsXG4gICAgZGF0YTogUm91dGVJbmZvXG4gICk6IHZvaWQge1xuICAgIHRoaXMuaXNGYWxsYmFjayA9IGZhbHNlXG5cbiAgICB0aGlzLnJvdXRlID0gcm91dGVcbiAgICB0aGlzLnBhdGhuYW1lID0gcGF0aG5hbWVcbiAgICB0aGlzLnF1ZXJ5ID0gcXVlcnlcbiAgICB0aGlzLmFzUGF0aCA9IGFzXG4gICAgdGhpcy5ub3RpZnkoZGF0YSlcbiAgfVxuXG4gIC8qKlxuICAgKiBDYWxsYmFjayB0byBleGVjdXRlIGJlZm9yZSByZXBsYWNpbmcgcm91dGVyIHN0YXRlXG4gICAqIEBwYXJhbSBjYiBjYWxsYmFjayB0byBiZSBleGVjdXRlZFxuICAgKi9cbiAgYmVmb3JlUG9wU3RhdGUoY2I6IEJlZm9yZVBvcFN0YXRlQ2FsbGJhY2spIHtcbiAgICB0aGlzLl9icHMgPSBjYlxuICB9XG5cbiAgb25seUFIYXNoQ2hhbmdlKGFzOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgICBpZiAoIXRoaXMuYXNQYXRoKSByZXR1cm4gZmFsc2VcbiAgICBjb25zdCBbb2xkVXJsTm9IYXNoLCBvbGRIYXNoXSA9IHRoaXMuYXNQYXRoLnNwbGl0KCcjJylcbiAgICBjb25zdCBbbmV3VXJsTm9IYXNoLCBuZXdIYXNoXSA9IGFzLnNwbGl0KCcjJylcblxuICAgIC8vIE1ha2VzIHN1cmUgd2Ugc2Nyb2xsIHRvIHRoZSBwcm92aWRlZCBoYXNoIGlmIHRoZSB1cmwvaGFzaCBhcmUgdGhlIHNhbWVcbiAgICBpZiAobmV3SGFzaCAmJiBvbGRVcmxOb0hhc2ggPT09IG5ld1VybE5vSGFzaCAmJiBvbGRIYXNoID09PSBuZXdIYXNoKSB7XG4gICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cblxuICAgIC8vIElmIHRoZSB1cmxzIGFyZSBjaGFuZ2UsIHRoZXJlJ3MgbW9yZSB0aGFuIGEgaGFzaCBjaGFuZ2VcbiAgICBpZiAob2xkVXJsTm9IYXNoICE9PSBuZXdVcmxOb0hhc2gpIHtcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cblxuICAgIC8vIElmIHRoZSBoYXNoIGhhcyBjaGFuZ2VkLCB0aGVuIGl0J3MgYSBoYXNoIG9ubHkgY2hhbmdlLlxuICAgIC8vIFRoaXMgY2hlY2sgaXMgbmVjZXNzYXJ5IHRvIGhhbmRsZSBib3RoIHRoZSBlbnRlciBhbmRcbiAgICAvLyBsZWF2ZSBoYXNoID09PSAnJyBjYXNlcy4gVGhlIGlkZW50aXR5IGNhc2UgZmFsbHMgdGhyb3VnaFxuICAgIC8vIGFuZCBpcyB0cmVhdGVkIGFzIGEgbmV4dCByZWxvYWQuXG4gICAgcmV0dXJuIG9sZEhhc2ggIT09IG5ld0hhc2hcbiAgfVxuXG4gIHNjcm9sbFRvSGFzaChhczogc3RyaW5nKTogdm9pZCB7XG4gICAgY29uc3QgWywgaGFzaF0gPSBhcy5zcGxpdCgnIycpXG4gICAgLy8gU2Nyb2xsIHRvIHRvcCBpZiB0aGUgaGFzaCBpcyBqdXN0IGAjYCB3aXRoIG5vIHZhbHVlXG4gICAgaWYgKGhhc2ggPT09ICcnKSB7XG4gICAgICB3aW5kb3cuc2Nyb2xsVG8oMCwgMClcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIC8vIEZpcnN0IHdlIGNoZWNrIGlmIHRoZSBlbGVtZW50IGJ5IGlkIGlzIGZvdW5kXG4gICAgY29uc3QgaWRFbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGhhc2gpXG4gICAgaWYgKGlkRWwpIHtcbiAgICAgIGlkRWwuc2Nyb2xsSW50b1ZpZXcoKVxuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIC8vIElmIHRoZXJlJ3Mgbm8gZWxlbWVudCB3aXRoIHRoZSBpZCwgd2UgY2hlY2sgdGhlIGBuYW1lYCBwcm9wZXJ0eVxuICAgIC8vIFRvIG1pcnJvciBicm93c2Vyc1xuICAgIGNvbnN0IG5hbWVFbCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlOYW1lKGhhc2gpWzBdXG4gICAgaWYgKG5hbWVFbCkge1xuICAgICAgbmFtZUVsLnNjcm9sbEludG9WaWV3KClcbiAgICB9XG4gIH1cblxuICB1cmxJc05ldyhhc1BhdGg6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmFzUGF0aCAhPT0gYXNQYXRoXG4gIH1cblxuICAvKipcbiAgICogUHJlZmV0Y2ggcGFnZSBjb2RlLCB5b3UgbWF5IHdhaXQgZm9yIHRoZSBkYXRhIGR1cmluZyBwYWdlIHJlbmRlcmluZy5cbiAgICogVGhpcyBmZWF0dXJlIG9ubHkgd29ya3MgaW4gcHJvZHVjdGlvbiFcbiAgICogQHBhcmFtIHVybCB0aGUgaHJlZiBvZiBwcmVmZXRjaGVkIHBhZ2VcbiAgICogQHBhcmFtIGFzUGF0aCB0aGUgYXMgcGF0aCBvZiB0aGUgcHJlZmV0Y2hlZCBwYWdlXG4gICAqL1xuICBwcmVmZXRjaChcbiAgICB1cmw6IHN0cmluZyxcbiAgICBhc1BhdGg6IHN0cmluZyA9IHVybCxcbiAgICBvcHRpb25zOiBQcmVmZXRjaE9wdGlvbnMgPSB7fVxuICApOiBQcm9taXNlPHZvaWQ+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgY29uc3QgeyBwYXRobmFtZSwgcHJvdG9jb2wgfSA9IHBhcnNlKHVybClcblxuICAgICAgaWYgKCFwYXRobmFtZSB8fCBwcm90b2NvbCkge1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICAgIGBJbnZhbGlkIGhyZWYgcGFzc2VkIHRvIHJvdXRlcjogJHt1cmx9IGh0dHBzOi8vZXJyLnNoL3plaXQvbmV4dC5qcy9pbnZhbGlkLWhyZWYtcGFzc2VkYFxuICAgICAgICAgIClcbiAgICAgICAgfVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgLy8gUHJlZmV0Y2ggaXMgbm90IHN1cHBvcnRlZCBpbiBkZXZlbG9wbWVudCBtb2RlIGJlY2F1c2UgaXQgd291bGQgdHJpZ2dlciBvbi1kZW1hbmQtZW50cmllc1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICBjb25zdCByb3V0ZSA9IGRlbEJhc2VQYXRoKHRvUm91dGUocGF0aG5hbWUpKVxuICAgICAgUHJvbWlzZS5hbGwoW1xuICAgICAgICB0aGlzLnBhZ2VMb2FkZXIucHJlZmV0Y2hEYXRhKHVybCwgZGVsQmFzZVBhdGgoYXNQYXRoKSksXG4gICAgICAgIHRoaXMucGFnZUxvYWRlcltvcHRpb25zLnByaW9yaXR5ID8gJ2xvYWRQYWdlJyA6ICdwcmVmZXRjaCddKHJvdXRlKSxcbiAgICAgIF0pLnRoZW4oKCkgPT4gcmVzb2x2ZSgpLCByZWplY3QpXG4gICAgfSlcbiAgfVxuXG4gIGFzeW5jIGZldGNoQ29tcG9uZW50KHJvdXRlOiBzdHJpbmcpOiBQcm9taXNlPENvbXBvbmVudFJlcz4ge1xuICAgIGxldCBjYW5jZWxsZWQgPSBmYWxzZVxuICAgIGNvbnN0IGNhbmNlbCA9ICh0aGlzLmNsYyA9ICgpID0+IHtcbiAgICAgIGNhbmNlbGxlZCA9IHRydWVcbiAgICB9KVxuICAgIHJvdXRlID0gZGVsQmFzZVBhdGgocm91dGUpXG5cbiAgICBjb25zdCBjb21wb25lbnRSZXN1bHQgPSBhd2FpdCB0aGlzLnBhZ2VMb2FkZXIubG9hZFBhZ2Uocm91dGUpXG5cbiAgICBpZiAoY2FuY2VsbGVkKSB7XG4gICAgICBjb25zdCBlcnJvcjogYW55ID0gbmV3IEVycm9yKFxuICAgICAgICBgQWJvcnQgZmV0Y2hpbmcgY29tcG9uZW50IGZvciByb3V0ZTogXCIke3JvdXRlfVwiYFxuICAgICAgKVxuICAgICAgZXJyb3IuY2FuY2VsbGVkID0gdHJ1ZVxuICAgICAgdGhyb3cgZXJyb3JcbiAgICB9XG5cbiAgICBpZiAoY2FuY2VsID09PSB0aGlzLmNsYykge1xuICAgICAgdGhpcy5jbGMgPSBudWxsXG4gICAgfVxuXG4gICAgcmV0dXJuIGNvbXBvbmVudFJlc3VsdFxuICB9XG5cbiAgX2dldERhdGE8VD4oZm46ICgpID0+IFByb21pc2U8VD4pOiBQcm9taXNlPFQ+IHtcbiAgICBsZXQgY2FuY2VsbGVkID0gZmFsc2VcbiAgICBjb25zdCBjYW5jZWwgPSAoKSA9PiB7XG4gICAgICBjYW5jZWxsZWQgPSB0cnVlXG4gICAgfVxuICAgIHRoaXMuY2xjID0gY2FuY2VsXG4gICAgcmV0dXJuIGZuKCkudGhlbigoZGF0YSkgPT4ge1xuICAgICAgaWYgKGNhbmNlbCA9PT0gdGhpcy5jbGMpIHtcbiAgICAgICAgdGhpcy5jbGMgPSBudWxsXG4gICAgICB9XG5cbiAgICAgIGlmIChjYW5jZWxsZWQpIHtcbiAgICAgICAgY29uc3QgZXJyOiBhbnkgPSBuZXcgRXJyb3IoJ0xvYWRpbmcgaW5pdGlhbCBwcm9wcyBjYW5jZWxsZWQnKVxuICAgICAgICBlcnIuY2FuY2VsbGVkID0gdHJ1ZVxuICAgICAgICB0aHJvdyBlcnJcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGRhdGFcbiAgICB9KVxuICB9XG5cbiAgX2dldFN0YXRpY0RhdGEgPSAoYXNQYXRoOiBzdHJpbmcpOiBQcm9taXNlPG9iamVjdD4gPT4ge1xuICAgIGNvbnN0IHBhdGhuYW1lID0gcHJlcGFyZVJvdXRlKHBhcnNlKGFzUGF0aCkucGF0aG5hbWUhKVxuXG4gICAgcmV0dXJuIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgJiYgdGhpcy5zZGNbcGF0aG5hbWVdXG4gICAgICA/IFByb21pc2UucmVzb2x2ZSh0aGlzLnNkY1twYXRobmFtZV0pXG4gICAgICA6IGZldGNoTmV4dERhdGEoXG4gICAgICAgICAgcGF0aG5hbWUsXG4gICAgICAgICAgbnVsbCxcbiAgICAgICAgICB0aGlzLmlzU3NyLFxuICAgICAgICAgIChkYXRhKSA9PiAodGhpcy5zZGNbcGF0aG5hbWVdID0gZGF0YSlcbiAgICAgICAgKVxuICB9XG5cbiAgX2dldFNlcnZlckRhdGEgPSAoYXNQYXRoOiBzdHJpbmcpOiBQcm9taXNlPG9iamVjdD4gPT4ge1xuICAgIGxldCB7IHBhdGhuYW1lLCBxdWVyeSB9ID0gcGFyc2UoYXNQYXRoLCB0cnVlKVxuICAgIHBhdGhuYW1lID0gcHJlcGFyZVJvdXRlKHBhdGhuYW1lISlcbiAgICByZXR1cm4gZmV0Y2hOZXh0RGF0YShwYXRobmFtZSwgcXVlcnksIHRoaXMuaXNTc3IpXG4gIH1cblxuICBnZXRJbml0aWFsUHJvcHMoXG4gICAgQ29tcG9uZW50OiBDb21wb25lbnRUeXBlLFxuICAgIGN0eDogTmV4dFBhZ2VDb250ZXh0XG4gICk6IFByb21pc2U8YW55PiB7XG4gICAgY29uc3QgeyBDb21wb25lbnQ6IEFwcCB9ID0gdGhpcy5jb21wb25lbnRzWycvX2FwcCddXG4gICAgY29uc3QgQXBwVHJlZSA9IHRoaXMuX3dyYXBBcHAoQXBwKVxuICAgIGN0eC5BcHBUcmVlID0gQXBwVHJlZVxuICAgIHJldHVybiBsb2FkR2V0SW5pdGlhbFByb3BzPEFwcENvbnRleHRUeXBlPFJvdXRlcj4+KEFwcCwge1xuICAgICAgQXBwVHJlZSxcbiAgICAgIENvbXBvbmVudCxcbiAgICAgIHJvdXRlcjogdGhpcyxcbiAgICAgIGN0eCxcbiAgICB9KVxuICB9XG5cbiAgYWJvcnRDb21wb25lbnRMb2FkKGFzOiBzdHJpbmcpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5jbGMpIHtcbiAgICAgIGNvbnN0IGUgPSBuZXcgRXJyb3IoJ1JvdXRlIENhbmNlbGxlZCcpXG4gICAgICA7KGUgYXMgYW55KS5jYW5jZWxsZWQgPSB0cnVlXG4gICAgICBSb3V0ZXIuZXZlbnRzLmVtaXQoJ3JvdXRlQ2hhbmdlRXJyb3InLCBlLCBhcylcbiAgICAgIHRoaXMuY2xjKClcbiAgICAgIHRoaXMuY2xjID0gbnVsbFxuICAgIH1cbiAgfVxuXG4gIG5vdGlmeShkYXRhOiBSb3V0ZUluZm8pOiB2b2lkIHtcbiAgICB0aGlzLnN1YihkYXRhLCB0aGlzLmNvbXBvbmVudHNbJy9fYXBwJ10uQ29tcG9uZW50KVxuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/router/router.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nexports.__esModule = true;\nexports.isDynamicRoute = isDynamicRoute; // Identify /[param]/ in route string\n\nvar TEST_ROUTE = /\\/\\[[^/]+?\\](?=\\/|$)/;\n\nfunction isDynamicRoute(route) {\n  return TEST_ROUTE.test(route);\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vLi4vLi4vLi4vLi4vbmV4dC1zZXJ2ZXIvbGliL3JvdXRlci91dGlscy9pcy1keW5hbWljLnRzP2NkZTUiXSwibmFtZXMiOlsiVEVTVF9ST1VURSJdLCJtYXBwaW5ncyI6Ijs7O3lDQUFBOztBQUNBLElBQU1BLFVBQVUsR0FBaEI7O0FBRU8sK0JBQWdEO0FBQ3JELFNBQU9BLFVBQVUsQ0FBVkEsS0FBUCxLQUFPQSxDQUFQO0FBQ0QiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L25leHQtc2VydmVyL2xpYi9yb3V0ZXIvdXRpbHMvaXMtZHluYW1pYy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIElkZW50aWZ5IC9bcGFyYW1dLyBpbiByb3V0ZSBzdHJpbmdcbmNvbnN0IFRFU1RfUk9VVEUgPSAvXFwvXFxbW14vXSs/XFxdKD89XFwvfCQpL1xuXG5leHBvcnQgZnVuY3Rpb24gaXNEeW5hbWljUm91dGUocm91dGU6IHN0cmluZyk6IGJvb2xlYW4ge1xuICByZXR1cm4gVEVTVF9ST1VURS50ZXN0KHJvdXRlKVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nexports.__esModule = true;\nexports.getRouteMatcher = getRouteMatcher;\n\nfunction getRouteMatcher(routeRegex) {\n  var re = routeRegex.re,\n      groups = routeRegex.groups;\n  return function (pathname) {\n    var routeMatch = re.exec(pathname);\n\n    if (!routeMatch) {\n      return false;\n    }\n\n    var decode = function decode(param) {\n      try {\n        return decodeURIComponent(param);\n      } catch (_) {\n        var err = new Error('failed to decode param');\n        err.code = 'DECODE_FAILED';\n        throw err;\n      }\n    };\n\n    var params = {};\n    Object.keys(groups).forEach(function (slugName) {\n      var g = groups[slugName];\n      var m = routeMatch[g.pos];\n\n      if (m !== undefined) {\n        params[slugName] = ~m.indexOf('/') ? m.split('/').map(function (entry) {\n          return decode(entry);\n        }) : g.repeat ? [decode(m)] : decode(m);\n      }\n    });\n    return params;\n  };\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vLi4vLi4vLi4vLi4vbmV4dC1zZXJ2ZXIvbGliL3JvdXRlci91dGlscy9yb3V0ZS1tYXRjaGVyLnRzP2E2NzIiXSwibmFtZXMiOlsicGF0aG5hbWUiLCJyb3V0ZU1hdGNoIiwicmUiLCJkZWNvZGUiLCJwYXJhbSIsImRlY29kZVVSSUNvbXBvbmVudCIsImVyciIsInBhcmFtcyIsIk9iamVjdCIsInNsdWdOYW1lIiwiZyIsImdyb3VwcyIsIm0iLCJlbnRyeSJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFFTyxxQ0FBdUU7QUFBQSxNQUN0RSxFQURzRSxHQUM1RSxVQUQ0RSxDQUN0RSxFQURzRTtBQUFBLE1BQ3RFLE1BRHNFLEdBQzVFLFVBRDRFLENBQ3RFLE1BRHNFO0FBRTVFLFNBQVFBLGtCQUFELEVBQXlDO0FBQzlDLFFBQU1DLFVBQVUsR0FBR0MsRUFBRSxDQUFGQSxLQUFuQixRQUFtQkEsQ0FBbkI7O0FBQ0EsUUFBSSxDQUFKLFlBQWlCO0FBQ2Y7QUFHRjs7QUFBQSxRQUFNQyxNQUFNLEdBQUlDLFNBQVZELE1BQVVDLE1BQUQsRUFBbUI7QUFDaEMsVUFBSTtBQUNGLGVBQU9DLGtCQUFrQixDQUF6QixLQUF5QixDQUF6QjtBQUNBLE9BRkYsQ0FFRSxVQUFVO0FBQ1YsWUFBTUMsR0FBOEIsR0FBRyxVQUF2Qyx3QkFBdUMsQ0FBdkM7QUFHQUEsV0FBRyxDQUFIQTtBQUNBO0FBRUg7QUFWRDs7QUFXQSxRQUFNQyxNQUFrRCxHQUF4RDtBQUVBQyxVQUFNLENBQU5BLHFCQUE2QkMsa0JBQUQsRUFBc0I7QUFDaEQsVUFBTUMsQ0FBQyxHQUFHQyxNQUFNLENBQWhCLFFBQWdCLENBQWhCO0FBQ0EsVUFBTUMsQ0FBQyxHQUFHWCxVQUFVLENBQUNTLENBQUMsQ0FBdEIsR0FBb0IsQ0FBcEI7O0FBQ0EsVUFBSUUsQ0FBQyxLQUFMLFdBQXFCO0FBQ25CTCxjQUFNLENBQU5BLFFBQU0sQ0FBTkEsR0FBbUIsQ0FBQ0ssQ0FBQyxDQUFEQSxRQUFELEdBQUNBLENBQUQsR0FDZkEsQ0FBQyxDQUFEQSxlQUFrQkMsZUFBRDtBQUFBLGlCQUFXVixNQUFNLENBRG5CLEtBQ21CLENBQWpCO0FBQUEsU0FBakJTLENBRGUsR0FFZkYsQ0FBQyxDQUFEQSxTQUNBLENBQUNQLE1BQU0sQ0FEUE8sQ0FDTyxDQUFQLENBREFBLEdBRUFQLE1BQU0sQ0FKVkksQ0FJVSxDQUpWQTtBQU1IO0FBVkRDO0FBV0E7QUE5QkY7QUFnQ0QiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L25leHQtc2VydmVyL2xpYi9yb3V0ZXIvdXRpbHMvcm91dGUtbWF0Y2hlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldFJvdXRlUmVnZXggfSBmcm9tICcuL3JvdXRlLXJlZ2V4J1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Um91dGVNYXRjaGVyKHJvdXRlUmVnZXg6IFJldHVyblR5cGU8dHlwZW9mIGdldFJvdXRlUmVnZXg+KSB7XG4gIGNvbnN0IHsgcmUsIGdyb3VwcyB9ID0gcm91dGVSZWdleFxuICByZXR1cm4gKHBhdGhuYW1lOiBzdHJpbmcgfCBudWxsIHwgdW5kZWZpbmVkKSA9PiB7XG4gICAgY29uc3Qgcm91dGVNYXRjaCA9IHJlLmV4ZWMocGF0aG5hbWUhKVxuICAgIGlmICghcm91dGVNYXRjaCkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuXG4gICAgY29uc3QgZGVjb2RlID0gKHBhcmFtOiBzdHJpbmcpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBkZWNvZGVVUklDb21wb25lbnQocGFyYW0pXG4gICAgICB9IGNhdGNoIChfKSB7XG4gICAgICAgIGNvbnN0IGVycjogRXJyb3IgJiB7IGNvZGU/OiBzdHJpbmcgfSA9IG5ldyBFcnJvcihcbiAgICAgICAgICAnZmFpbGVkIHRvIGRlY29kZSBwYXJhbSdcbiAgICAgICAgKVxuICAgICAgICBlcnIuY29kZSA9ICdERUNPREVfRkFJTEVEJ1xuICAgICAgICB0aHJvdyBlcnJcbiAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgcGFyYW1zOiB7IFtwYXJhbU5hbWU6IHN0cmluZ106IHN0cmluZyB8IHN0cmluZ1tdIH0gPSB7fVxuXG4gICAgT2JqZWN0LmtleXMoZ3JvdXBzKS5mb3JFYWNoKChzbHVnTmFtZTogc3RyaW5nKSA9PiB7XG4gICAgICBjb25zdCBnID0gZ3JvdXBzW3NsdWdOYW1lXVxuICAgICAgY29uc3QgbSA9IHJvdXRlTWF0Y2hbZy5wb3NdXG4gICAgICBpZiAobSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHBhcmFtc1tzbHVnTmFtZV0gPSB+bS5pbmRleE9mKCcvJylcbiAgICAgICAgICA/IG0uc3BsaXQoJy8nKS5tYXAoKGVudHJ5KSA9PiBkZWNvZGUoZW50cnkpKVxuICAgICAgICAgIDogZy5yZXBlYXRcbiAgICAgICAgICA/IFtkZWNvZGUobSldXG4gICAgICAgICAgOiBkZWNvZGUobSlcbiAgICAgIH1cbiAgICB9KVxuICAgIHJldHVybiBwYXJhbXNcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/route-regex.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/route-regex.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nexports.__esModule = true;\nexports.getRouteRegex = getRouteRegex; // this isn't importing the escape-string-regex module\n// to reduce bytes\n\nfunction escapeRegex(str) {\n  return str.replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&');\n}\n\nfunction getRouteRegex(normalizedRoute) {\n  // Escape all characters that could be considered RegEx\n  var escapedRoute = escapeRegex(normalizedRoute.replace(/\\/$/, '') || '/');\n  var groups = {};\n  var groupIndex = 1;\n  var parameterizedRoute = escapedRoute.replace(/\\/\\\\\\[([^/]+?)\\\\\\](?=\\/|$)/g, function (_, $1) {\n    var isOptional = /^\\\\\\[.*\\\\\\]$/.test($1);\n\n    if (isOptional) {\n      $1 = $1.slice(2, -2);\n    }\n\n    var isCatchAll = /^(\\\\\\.){3}/.test($1);\n\n    if (isCatchAll) {\n      $1 = $1.slice(6);\n    }\n\n    groups[$1 // Un-escape key\n    .replace(/\\\\([|\\\\{}()[\\]^$+*?.-])/g, '$1') // eslint-disable-next-line no-sequences\n    ] = {\n      pos: groupIndex++,\n      repeat: isCatchAll\n    };\n    return isCatchAll ? isOptional ? '(?:/(.+?))?' : '/(.+?)' : '/([^/]+?)';\n  });\n  var namedParameterizedRoute; // dead code eliminate for browser since it's only needed\n  // while generating routes-manifest\n\n  if (false) {}\n\n  return {\n    re: new RegExp('^' + parameterizedRoute + '(?:/)?$', 'i'),\n    groups: groups,\n    namedRegex: namedParameterizedRoute ? \"^\".concat(namedParameterizedRoute, \"(?:/)?$\") : undefined\n  };\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vLi4vLi4vLi4vLi4vbmV4dC1zZXJ2ZXIvbGliL3JvdXRlci91dGlscy9yb3V0ZS1yZWdleC50cz85ZGJjIl0sIm5hbWVzIjpbInN0ciIsImVzY2FwZWRSb3V0ZSIsImVzY2FwZVJlZ2V4Iiwibm9ybWFsaXplZFJvdXRlIiwiZ3JvdXBzIiwiZ3JvdXBJbmRleCIsInBhcmFtZXRlcml6ZWRSb3V0ZSIsImlzT3B0aW9uYWwiLCIkMSIsImlzQ2F0Y2hBbGwiLCJwb3MiLCJyZXBlYXQiLCJyZSIsIm5hbWVkUmVnZXgiLCJuYW1lZFBhcmFtZXRlcml6ZWRSb3V0ZSJdLCJtYXBwaW5ncyI6Ijs7O3VDQUFBO0FBQ0E7O0FBQ0EsMEJBQWtDO0FBQ2hDLFNBQU9BLEdBQUcsQ0FBSEEsZ0NBQVAsTUFBT0EsQ0FBUDtBQUdLOztBQUFBLHdDQU1MO0FBQ0E7QUFDQSxNQUFNQyxZQUFZLEdBQUdDLFdBQVcsQ0FBQ0MsZUFBZSxDQUFmQSxzQkFBakMsR0FBZ0MsQ0FBaEM7QUFFQSxNQUFNQyxNQUFpRSxHQUF2RTtBQUNBLE1BQUlDLFVBQVUsR0FBZDtBQUVBLE1BQU1DLGtCQUFrQixHQUFHLFlBQVksQ0FBWix1Q0FFekIsaUJBQVc7QUFDVCxRQUFNQyxVQUFVLEdBQUcsb0JBQW5CLEVBQW1CLENBQW5COztBQUNBLG9CQUFnQjtBQUNkQyxRQUFFLEdBQUdBLEVBQUUsQ0FBRkEsU0FBWSxDQUFqQkEsQ0FBS0EsQ0FBTEE7QUFFRjs7QUFBQSxRQUFNQyxVQUFVLEdBQUcsa0JBQW5CLEVBQW1CLENBQW5COztBQUNBLG9CQUFnQjtBQUNkRCxRQUFFLEdBQUdBLEVBQUUsQ0FBRkEsTUFBTEEsQ0FBS0EsQ0FBTEE7QUFFRjs7QUFBQSxVQUFNLENBQ0osRUFDRTtBQUFBLEtBREYseUNBREksQ0FJSjtBQUpJLEtBQU4sR0FLSTtBQUFFRSxTQUFHLEVBQUVMLFVBQVA7QUFBcUJNLFlBQU0sRUFML0I7QUFLSSxLQUxKO0FBTUEsV0FBT0YsVUFBVSxHQUFJRixVQUFVLG1CQUFkLFdBQWpCO0FBakJKLEdBQTJCLENBQTNCO0FBcUJBLDhCQTVCQSxDQThCQTtBQUNBOztBQUNBLGFBQW1DLEVBaUJuQzs7QUFBQSxTQUFPO0FBQ0xLLE1BQUUsRUFBRSxXQUFXLDJCQUFYLFdBREMsR0FDRCxDQURDO0FBRUxSLFVBRkssRUFFTEEsTUFGSztBQUdMUyxjQUFVLEVBQUVDLHVCQUF1QixvREFIckM7QUFBTyxHQUFQO0FBT0QiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L25leHQtc2VydmVyL2xpYi9yb3V0ZXIvdXRpbHMvcm91dGUtcmVnZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyB0aGlzIGlzbid0IGltcG9ydGluZyB0aGUgZXNjYXBlLXN0cmluZy1yZWdleCBtb2R1bGVcbi8vIHRvIHJlZHVjZSBieXRlc1xuZnVuY3Rpb24gZXNjYXBlUmVnZXgoc3RyOiBzdHJpbmcpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC9bfFxcXFx7fSgpW1xcXV4kKyo/Li1dL2csICdcXFxcJCYnKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Um91dGVSZWdleChcbiAgbm9ybWFsaXplZFJvdXRlOiBzdHJpbmdcbik6IHtcbiAgcmU6IFJlZ0V4cFxuICBuYW1lZFJlZ2V4Pzogc3RyaW5nXG4gIGdyb3VwczogeyBbZ3JvdXBOYW1lOiBzdHJpbmddOiB7IHBvczogbnVtYmVyOyByZXBlYXQ6IGJvb2xlYW4gfSB9XG59IHtcbiAgLy8gRXNjYXBlIGFsbCBjaGFyYWN0ZXJzIHRoYXQgY291bGQgYmUgY29uc2lkZXJlZCBSZWdFeFxuICBjb25zdCBlc2NhcGVkUm91dGUgPSBlc2NhcGVSZWdleChub3JtYWxpemVkUm91dGUucmVwbGFjZSgvXFwvJC8sICcnKSB8fCAnLycpXG5cbiAgY29uc3QgZ3JvdXBzOiB7IFtncm91cE5hbWU6IHN0cmluZ106IHsgcG9zOiBudW1iZXI7IHJlcGVhdDogYm9vbGVhbiB9IH0gPSB7fVxuICBsZXQgZ3JvdXBJbmRleCA9IDFcblxuICBjb25zdCBwYXJhbWV0ZXJpemVkUm91dGUgPSBlc2NhcGVkUm91dGUucmVwbGFjZShcbiAgICAvXFwvXFxcXFxcWyhbXi9dKz8pXFxcXFxcXSg/PVxcL3wkKS9nLFxuICAgIChfLCAkMSkgPT4ge1xuICAgICAgY29uc3QgaXNPcHRpb25hbCA9IC9eXFxcXFxcWy4qXFxcXFxcXSQvLnRlc3QoJDEpXG4gICAgICBpZiAoaXNPcHRpb25hbCkge1xuICAgICAgICAkMSA9ICQxLnNsaWNlKDIsIC0yKVxuICAgICAgfVxuICAgICAgY29uc3QgaXNDYXRjaEFsbCA9IC9eKFxcXFxcXC4pezN9Ly50ZXN0KCQxKVxuICAgICAgaWYgKGlzQ2F0Y2hBbGwpIHtcbiAgICAgICAgJDEgPSAkMS5zbGljZSg2KVxuICAgICAgfVxuICAgICAgZ3JvdXBzW1xuICAgICAgICAkMVxuICAgICAgICAgIC8vIFVuLWVzY2FwZSBrZXlcbiAgICAgICAgICAucmVwbGFjZSgvXFxcXChbfFxcXFx7fSgpW1xcXV4kKyo/Li1dKS9nLCAnJDEnKVxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VxdWVuY2VzXG4gICAgICBdID0geyBwb3M6IGdyb3VwSW5kZXgrKywgcmVwZWF0OiBpc0NhdGNoQWxsIH1cbiAgICAgIHJldHVybiBpc0NhdGNoQWxsID8gKGlzT3B0aW9uYWwgPyAnKD86LyguKz8pKT8nIDogJy8oLis/KScpIDogJy8oW14vXSs/KSdcbiAgICB9XG4gIClcblxuICBsZXQgbmFtZWRQYXJhbWV0ZXJpemVkUm91dGU6IHN0cmluZyB8IHVuZGVmaW5lZFxuXG4gIC8vIGRlYWQgY29kZSBlbGltaW5hdGUgZm9yIGJyb3dzZXIgc2luY2UgaXQncyBvbmx5IG5lZWRlZFxuICAvLyB3aGlsZSBnZW5lcmF0aW5nIHJvdXRlcy1tYW5pZmVzdFxuICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBuYW1lZFBhcmFtZXRlcml6ZWRSb3V0ZSA9IGVzY2FwZWRSb3V0ZS5yZXBsYWNlKFxuICAgICAgL1xcL1xcXFxcXFsoW14vXSs/KVxcXFxcXF0oPz1cXC98JCkvZyxcbiAgICAgIChfLCAkMSkgPT4ge1xuICAgICAgICBjb25zdCBpc0NhdGNoQWxsID0gL14oXFxcXFxcLil7M30vLnRlc3QoJDEpXG4gICAgICAgIGNvbnN0IGtleSA9ICQxXG4gICAgICAgICAgLy8gVW4tZXNjYXBlIGtleVxuICAgICAgICAgIC5yZXBsYWNlKC9cXFxcKFt8XFxcXHt9KClbXFxdXiQrKj8uLV0pL2csICckMScpXG4gICAgICAgICAgLnJlcGxhY2UoL15cXC57M30vLCAnJylcblxuICAgICAgICByZXR1cm4gaXNDYXRjaEFsbFxuICAgICAgICAgID8gYC8oPzwke2VzY2FwZVJlZ2V4KGtleSl9Pi4rPylgXG4gICAgICAgICAgOiBgLyg/PCR7ZXNjYXBlUmVnZXgoa2V5KX0+W14vXSs/KWBcbiAgICAgIH1cbiAgICApXG4gIH1cblxuICByZXR1cm4ge1xuICAgIHJlOiBuZXcgUmVnRXhwKCdeJyArIHBhcmFtZXRlcml6ZWRSb3V0ZSArICcoPzovKT8kJywgJ2knKSxcbiAgICBncm91cHMsXG4gICAgbmFtZWRSZWdleDogbmFtZWRQYXJhbWV0ZXJpemVkUm91dGVcbiAgICAgID8gYF4ke25hbWVkUGFyYW1ldGVyaXplZFJvdXRlfSg/Oi8pPyRgXG4gICAgICA6IHVuZGVmaW5lZCxcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/router/utils/route-regex.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/utils.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nvar _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n\nexports.__esModule = true;\nexports.execOnce = execOnce;\nexports.getLocationOrigin = getLocationOrigin;\nexports.getURL = getURL;\nexports.getDisplayName = getDisplayName;\nexports.isResSent = isResSent;\nexports.loadGetInitialProps = loadGetInitialProps;\nexports.formatWithValidation = formatWithValidation;\nexports.ST = exports.SP = exports.urlObjectKeys = void 0;\n\nvar _url = __webpack_require__(/*! url */ \"./node_modules/native-url/dist/index.js\");\n/**\n* Utils\n*/\n\n\nfunction execOnce(fn) {\n  var used = false;\n  var result;\n  return function () {\n    if (!used) {\n      used = true;\n      result = fn.apply(void 0, arguments);\n    }\n\n    return result;\n  };\n}\n\nfunction getLocationOrigin() {\n  var _window$location = window.location,\n      protocol = _window$location.protocol,\n      hostname = _window$location.hostname,\n      port = _window$location.port;\n  return \"\".concat(protocol, \"//\").concat(hostname).concat(port ? ':' + port : '');\n}\n\nfunction getURL() {\n  var href = window.location.href;\n  var origin = getLocationOrigin();\n  return href.substring(origin.length);\n}\n\nfunction getDisplayName(Component) {\n  return typeof Component === 'string' ? Component : Component.displayName || Component.name || 'Unknown';\n}\n\nfunction isResSent(res) {\n  return res.finished || res.headersSent;\n}\n\nfunction loadGetInitialProps(_x, _x2) {\n  return _loadGetInitialProps.apply(this, arguments);\n}\n\nfunction _loadGetInitialProps() {\n  _loadGetInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(App, ctx) {\n    var _App$prototype, message, res, props, _message;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (false) {}\n\n            if (!((_App$prototype = App.prototype) === null || _App$prototype === void 0 ? void 0 : _App$prototype.getInitialProps)) {\n              _context.next = 4;\n              break;\n            }\n\n            message = \"\\\"\".concat(getDisplayName(App), \".getInitialProps()\\\" is defined as an instance method - visit https://err.sh/zeit/next.js/get-initial-props-as-an-instance-method for more information.\");\n            throw new Error(message);\n\n          case 4:\n            // when called from _app `ctx` is nested in `ctx`\n            res = ctx.res || ctx.ctx && ctx.ctx.res;\n\n            if (App.getInitialProps) {\n              _context.next = 12;\n              break;\n            }\n\n            if (!(ctx.ctx && ctx.Component)) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 9;\n            return loadGetInitialProps(ctx.Component, ctx.ctx);\n\n          case 9:\n            _context.t0 = _context.sent;\n            return _context.abrupt(\"return\", {\n              pageProps: _context.t0\n            });\n\n          case 11:\n            return _context.abrupt(\"return\", {});\n\n          case 12:\n            _context.next = 14;\n            return App.getInitialProps(ctx);\n\n          case 14:\n            props = _context.sent;\n\n            if (!(res && isResSent(res))) {\n              _context.next = 17;\n              break;\n            }\n\n            return _context.abrupt(\"return\", props);\n\n          case 17:\n            if (props) {\n              _context.next = 20;\n              break;\n            }\n\n            _message = \"\\\"\".concat(getDisplayName(App), \".getInitialProps()\\\" should resolve to an object. But found \\\"\").concat(props, \"\\\" instead.\");\n            throw new Error(_message);\n\n          case 20:\n            if (true) {\n              if (Object.keys(props).length === 0 && !ctx.ctx) {\n                console.warn(\"\".concat(getDisplayName(App), \" returned an empty object from `getInitialProps`. This de-optimizes and prevents automatic static optimization. https://err.sh/zeit/next.js/empty-object-getInitialProps\"));\n              }\n            }\n\n            return _context.abrupt(\"return\", props);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loadGetInitialProps.apply(this, arguments);\n}\n\nvar urlObjectKeys = ['auth', 'hash', 'host', 'hostname', 'href', 'path', 'pathname', 'port', 'protocol', 'query', 'search', 'slashes'];\nexports.urlObjectKeys = urlObjectKeys;\n\nfunction formatWithValidation(url, options) {\n  if (true) {\n    if (url !== null && typeof url === 'object') {\n      Object.keys(url).forEach(function (key) {\n        if (urlObjectKeys.indexOf(key) === -1) {\n          console.warn(\"Unknown key passed via urlObject into url.format: \".concat(key));\n        }\n      });\n    }\n  }\n\n  return (0, _url.format)(url, options);\n}\n\nvar SP = typeof performance !== 'undefined';\nexports.SP = SP;\nvar ST = SP && typeof performance.mark === 'function' && typeof performance.measure === 'function';\nexports.ST = ST;\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/utils.js\n");

/***/ }),

/***/ "./node_modules/next/dist/pages/_app.js":
/*!**********************************************!*\
  !*** ./node_modules/next/dist/pages/_app.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nvar _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n\nvar _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n\nvar _inherits = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/inherits.js\");\n\nvar _possibleConstructorReturn = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\");\n\nvar _getPrototypeOf = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\");\n\nvar _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nexports.__esModule = true;\nexports.Container = Container;\nexports.createUrl = createUrl;\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\nvar _utils = __webpack_require__(/*! ../next-server/lib/utils */ \"./node_modules/next/dist/next-server/lib/utils.js\");\n\nexports.AppInitialProps = _utils.AppInitialProps;\n/**\n* `App` component is used for initialize of pages. It allows for overwriting and full control of the `page` initialization.\n* This allows for keeping state between navigation, custom error handling, injecting additional data.\n*/\n\nfunction appGetInitialProps(_x) {\n  return _appGetInitialProps.apply(this, arguments);\n}\n\nfunction _appGetInitialProps() {\n  _appGetInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var Component, ctx, pageProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            Component = _ref.Component, ctx = _ref.ctx;\n            _context.next = 3;\n            return (0, _utils.loadGetInitialProps)(Component, ctx);\n\n          case 3:\n            pageProps = _context.sent;\n            return _context.abrupt(\"return\", {\n              pageProps: pageProps\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _appGetInitialProps.apply(this, arguments);\n}\n\nvar App = /*#__PURE__*/function (_react$default$Compon) {\n  _inherits(App, _react$default$Compon);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"componentDidCatch\",\n    // Kept here for backwards compatibility.\n    // When someone ended App they could call `super.componentDidCatch`.\n    // @deprecated This method is no longer needed. Errors are caught at the top level\n    value: function componentDidCatch(error, _errorInfo) {\n      throw error;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          router = _this$props.router,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          __N_SSG = _this$props.__N_SSG,\n          __N_SSP = _this$props.__N_SSP;\n      return /*#__PURE__*/_react[\"default\"].createElement(Component, Object.assign({}, pageProps, // we don't add the legacy URL prop if it's using non-legacy\n      // methods like getStaticProps and getServerSideProps\n      !(__N_SSG || __N_SSP) ? {\n        url: createUrl(router)\n      } : {}));\n    }\n  }]);\n\n  return App;\n}(_react[\"default\"].Component);\n\nexports[\"default\"] = App;\nApp.origGetInitialProps = appGetInitialProps;\nApp.getInitialProps = appGetInitialProps;\nvar warnContainer;\nvar warnUrl;\n\nif (true) {\n  warnContainer = (0, _utils.execOnce)(function () {\n    console.warn(\"Warning: the `Container` in `_app` has been deprecated and should be removed. https://err.sh/zeit/next.js/app-container-deprecated\");\n  });\n  warnUrl = (0, _utils.execOnce)(function () {\n    console.error(\"Warning: the 'url' property is deprecated. https://err.sh/zeit/next.js/url-deprecated\");\n  });\n} // @deprecated noop for now until removal\n\n\nfunction Container(p) {\n  if (true) warnContainer();\n  return p.children;\n}\n\n_c = Container;\n\nfunction createUrl(router) {\n  // This is to make sure we don't references the router object at call time\n  var pathname = router.pathname,\n      asPath = router.asPath,\n      query = router.query;\n  return {\n    get query() {\n      if (true) warnUrl();\n      return query;\n    },\n\n    get pathname() {\n      if (true) warnUrl();\n      return pathname;\n    },\n\n    get asPath() {\n      if (true) warnUrl();\n      return asPath;\n    },\n\n    back: function back() {\n      if (true) warnUrl();\n      router.back();\n    },\n    push: function push(url, as) {\n      if (true) warnUrl();\n      return router.push(url, as);\n    },\n    pushTo: function pushTo(href, as) {\n      if (true) warnUrl();\n      var pushRoute = as ? href : '';\n      var pushUrl = as || href;\n      return router.push(pushRoute, pushUrl);\n    },\n    replace: function replace(url, as) {\n      if (true) warnUrl();\n      return router.replace(url, as);\n    },\n    replaceTo: function replaceTo(href, as) {\n      if (true) warnUrl();\n      var replaceRoute = as ? href : '';\n      var replaceUrl = as || href;\n      return router.replace(replaceRoute, replaceUrl);\n    }\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/pages/_app.js\n");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/process/browser.js\n");

/***/ }),

/***/ "./node_modules/querystring-es3/decode.js":
/*!************************************************!*\
  !*** ./node_modules/querystring-es3/decode.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmctZXMzL2RlY29kZS5qcz85MWRkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUJBQWlCLFNBQVM7QUFDMUI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9xdWVyeXN0cmluZy1lczMvZGVjb2RlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbid1c2Ugc3RyaWN0JztcblxuLy8gSWYgb2JqLmhhc093blByb3BlcnR5IGhhcyBiZWVuIG92ZXJyaWRkZW4sIHRoZW4gY2FsbGluZ1xuLy8gb2JqLmhhc093blByb3BlcnR5KHByb3ApIHdpbGwgYnJlYWsuXG4vLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9qb3llbnQvbm9kZS9pc3N1ZXMvMTcwN1xuZnVuY3Rpb24gaGFzT3duUHJvcGVydHkob2JqLCBwcm9wKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihxcywgc2VwLCBlcSwgb3B0aW9ucykge1xuICBzZXAgPSBzZXAgfHwgJyYnO1xuICBlcSA9IGVxIHx8ICc9JztcbiAgdmFyIG9iaiA9IHt9O1xuXG4gIGlmICh0eXBlb2YgcXMgIT09ICdzdHJpbmcnIHx8IHFzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBvYmo7XG4gIH1cblxuICB2YXIgcmVnZXhwID0gL1xcKy9nO1xuICBxcyA9IHFzLnNwbGl0KHNlcCk7XG5cbiAgdmFyIG1heEtleXMgPSAxMDAwO1xuICBpZiAob3B0aW9ucyAmJiB0eXBlb2Ygb3B0aW9ucy5tYXhLZXlzID09PSAnbnVtYmVyJykge1xuICAgIG1heEtleXMgPSBvcHRpb25zLm1heEtleXM7XG4gIH1cblxuICB2YXIgbGVuID0gcXMubGVuZ3RoO1xuICAvLyBtYXhLZXlzIDw9IDAgbWVhbnMgdGhhdCB3ZSBzaG91bGQgbm90IGxpbWl0IGtleXMgY291bnRcbiAgaWYgKG1heEtleXMgPiAwICYmIGxlbiA+IG1heEtleXMpIHtcbiAgICBsZW4gPSBtYXhLZXlzO1xuICB9XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47ICsraSkge1xuICAgIHZhciB4ID0gcXNbaV0ucmVwbGFjZShyZWdleHAsICclMjAnKSxcbiAgICAgICAgaWR4ID0geC5pbmRleE9mKGVxKSxcbiAgICAgICAga3N0ciwgdnN0ciwgaywgdjtcblxuICAgIGlmIChpZHggPj0gMCkge1xuICAgICAga3N0ciA9IHguc3Vic3RyKDAsIGlkeCk7XG4gICAgICB2c3RyID0geC5zdWJzdHIoaWR4ICsgMSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGtzdHIgPSB4O1xuICAgICAgdnN0ciA9ICcnO1xuICAgIH1cblxuICAgIGsgPSBkZWNvZGVVUklDb21wb25lbnQoa3N0cik7XG4gICAgdiA9IGRlY29kZVVSSUNvbXBvbmVudCh2c3RyKTtcblxuICAgIGlmICghaGFzT3duUHJvcGVydHkob2JqLCBrKSkge1xuICAgICAgb2JqW2tdID0gdjtcbiAgICB9IGVsc2UgaWYgKGlzQXJyYXkob2JqW2tdKSkge1xuICAgICAgb2JqW2tdLnB1c2godik7XG4gICAgfSBlbHNlIHtcbiAgICAgIG9ialtrXSA9IFtvYmpba10sIHZdO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBvYmo7XG59O1xuXG52YXIgaXNBcnJheSA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKHhzKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoeHMpID09PSAnW29iamVjdCBBcnJheV0nO1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/querystring-es3/decode.js\n");

/***/ }),

/***/ "./node_modules/querystring-es3/encode.js":
/*!************************************************!*\
  !*** ./node_modules/querystring-es3/encode.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmctZXMzL2VuY29kZS5qcz9lMDk5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0E7QUFDQSxLQUFLOztBQUVMOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsZUFBZTtBQUNoQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9xdWVyeXN0cmluZy1lczMvZW5jb2RlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIHN0cmluZ2lmeVByaW1pdGl2ZSA9IGZ1bmN0aW9uKHYpIHtcbiAgc3dpdGNoICh0eXBlb2Ygdikge1xuICAgIGNhc2UgJ3N0cmluZyc6XG4gICAgICByZXR1cm4gdjtcblxuICAgIGNhc2UgJ2Jvb2xlYW4nOlxuICAgICAgcmV0dXJuIHYgPyAndHJ1ZScgOiAnZmFsc2UnO1xuXG4gICAgY2FzZSAnbnVtYmVyJzpcbiAgICAgIHJldHVybiBpc0Zpbml0ZSh2KSA/IHYgOiAnJztcblxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJyc7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ob2JqLCBzZXAsIGVxLCBuYW1lKSB7XG4gIHNlcCA9IHNlcCB8fCAnJic7XG4gIGVxID0gZXEgfHwgJz0nO1xuICBpZiAob2JqID09PSBudWxsKSB7XG4gICAgb2JqID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBvYmogPT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIG1hcChvYmplY3RLZXlzKG9iaiksIGZ1bmN0aW9uKGspIHtcbiAgICAgIHZhciBrcyA9IGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUoaykpICsgZXE7XG4gICAgICBpZiAoaXNBcnJheShvYmpba10pKSB7XG4gICAgICAgIHJldHVybiBtYXAob2JqW2tdLCBmdW5jdGlvbih2KSB7XG4gICAgICAgICAgcmV0dXJuIGtzICsgZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZSh2KSk7XG4gICAgICAgIH0pLmpvaW4oc2VwKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBrcyArIGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUob2JqW2tdKSk7XG4gICAgICB9XG4gICAgfSkuam9pbihzZXApO1xuXG4gIH1cblxuICBpZiAoIW5hbWUpIHJldHVybiAnJztcbiAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUobmFtZSkpICsgZXEgK1xuICAgICAgICAgZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShvYmopKTtcbn07XG5cbnZhciBpc0FycmF5ID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiAoeHMpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh4cykgPT09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xuXG5mdW5jdGlvbiBtYXAgKHhzLCBmKSB7XG4gIGlmICh4cy5tYXApIHJldHVybiB4cy5tYXAoZik7XG4gIHZhciByZXMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB4cy5sZW5ndGg7IGkrKykge1xuICAgIHJlcy5wdXNoKGYoeHNbaV0sIGkpKTtcbiAgfVxuICByZXR1cm4gcmVzO1xufVxuXG52YXIgb2JqZWN0S2V5cyA9IE9iamVjdC5rZXlzIHx8IGZ1bmN0aW9uIChvYmopIHtcbiAgdmFyIHJlcyA9IFtdO1xuICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHJlcy5wdXNoKGtleSk7XG4gIH1cbiAgcmV0dXJuIHJlcztcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/querystring-es3/encode.js\n");

/***/ }),

/***/ "./node_modules/querystring-es3/index.js":
/*!***********************************************!*\
  !*** ./node_modules/querystring-es3/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.decode = exports.parse = __webpack_require__(/*! ./decode */ \"./node_modules/querystring-es3/decode.js\");\nexports.encode = exports.stringify = __webpack_require__(/*! ./encode */ \"./node_modules/querystring-es3/encode.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmctZXMzL2luZGV4LmpzP2IzODMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsaUNBQWlDLG1CQUFPLENBQUMsMERBQVU7QUFDbkQscUNBQXFDLG1CQUFPLENBQUMsMERBQVUiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmctZXMzL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLmRlY29kZSA9IGV4cG9ydHMucGFyc2UgPSByZXF1aXJlKCcuL2RlY29kZScpO1xuZXhwb3J0cy5lbmNvZGUgPSBleHBvcnRzLnN0cmluZ2lmeSA9IHJlcXVpcmUoJy4vZW5jb2RlJyk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/querystring-es3/index.js\n");

/***/ }),

/***/ "./node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-is/cjs/react-is.development.js\n");

/***/ }),

/***/ "./node_modules/react-is/index.js":
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ \"./node_modules/react-is/cjs/react-is.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanM/NGNlYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixJQUFJLEtBQXFDLEVBQUUsRUFFMUM7QUFDRCxtQkFBbUIsbUJBQU8sQ0FBQywwRkFBK0I7QUFDMUQiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-is/index.js\n");

/***/ }),

/***/ "./node_modules/react/index.js":
/*!*******************************************************************************************!*\
  !*** delegated ./node_modules/react/index.js from dll-reference dll_5030f387d328e4415785 ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = (__webpack_require__(/*! dll-reference dll_5030f387d328e4415785 */ \"dll-reference dll_5030f387d328e4415785\"))(\"./node_modules/react/index.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZGVsZWdhdGVkIC4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIGZyb20gZGxsLXJlZmVyZW5jZSBkbGxfNTAzMGYzODdkMzI4ZTQ0MTU3ODU/ODU3NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKF9fd2VicGFja19yZXF1aXJlX18oLyohIGRsbC1yZWZlcmVuY2UgZGxsXzUwMzBmMzg3ZDMyOGU0NDE1Nzg1ICovIFwiZGxsLXJlZmVyZW5jZSBkbGxfNTAzMGYzODdkMzI4ZTQ0MTU3ODVcIikpKFwiLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanNcIik7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react/index.js\n");

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n   true ? module.exports : undefined\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/regenerator-runtime/runtime.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzP2NkMDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw0Q0FBNEM7O0FBRTVDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3dlYnBhY2svYnVpbGRpbi9nbG9iYWwuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/global.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/harmony-module.js":
/*!*******************************************!*\
  !*** (webpack)/buildin/harmony-module.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vaGFybW9ueS1tb2R1bGUuanM/ODJiMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL2hhcm1vbnktbW9kdWxlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihvcmlnaW5hbE1vZHVsZSkge1xuXHRpZiAoIW9yaWdpbmFsTW9kdWxlLndlYnBhY2tQb2x5ZmlsbCkge1xuXHRcdHZhciBtb2R1bGUgPSBPYmplY3QuY3JlYXRlKG9yaWdpbmFsTW9kdWxlKTtcblx0XHQvLyBtb2R1bGUucGFyZW50ID0gdW5kZWZpbmVkIGJ5IGRlZmF1bHRcblx0XHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJsb2FkZWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUubDtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImlkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJleHBvcnRzXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWVcblx0XHR9KTtcblx0XHRtb2R1bGUud2VicGFja1BvbHlmaWxsID0gMTtcblx0fVxuXHRyZXR1cm4gbW9kdWxlO1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/harmony-module.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vbW9kdWxlLmpzP2NlZDIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3dlYnBhY2svYnVpbGRpbi9tb2R1bGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuXHRpZiAoIW1vZHVsZS53ZWJwYWNrUG9seWZpbGwpIHtcblx0XHRtb2R1bGUuZGVwcmVjYXRlID0gZnVuY3Rpb24oKSB7fTtcblx0XHRtb2R1bGUucGF0aHMgPSBbXTtcblx0XHQvLyBtb2R1bGUucGFyZW50ID0gdW5kZWZpbmVkIGJ5IGRlZmF1bHRcblx0XHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJsb2FkZWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUubDtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImlkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0bW9kdWxlLndlYnBhY2tQb2x5ZmlsbCA9IDE7XG5cdH1cblx0cmV0dXJuIG1vZHVsZTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/module.js\n");

/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/app */ \"./node_modules/next/app.js\");\n/* harmony import */ var next_app__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_app__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../firebase */ \"./firebase/index.js\");\n/* harmony import */ var _hooks_useAutenticacion__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../hooks/useAutenticacion */ \"./hooks/useAutenticacion.js\");\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n\n\nvar _this = undefined,\n    _jsxFileName = \"/Users/gerardorosas/Documents/producthunt/pages/_app.js\",\n    _s = $RefreshSig$();\n\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;\n\n\n\n\n\nvar myApp = function myApp(props) {\n  _s();\n\n  var usuario = Object(_hooks_useAutenticacion__WEBPACK_IMPORTED_MODULE_4__[\"default\"])();\n  var Component = props.Component,\n      pageProps = props.pageProps;\n  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(_firebase__WEBPACK_IMPORTED_MODULE_3__[\"FirebaseContext\"].Provider, {\n    value: {\n      firebase: _firebase__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n      usuario: usuario\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(Component, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, pageProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  })));\n};\n\n_s(myApp, \"V/6LhHam2ctZwIOyzYzjkHyk9rc=\", false, function () {\n  return [_hooks_useAutenticacion__WEBPACK_IMPORTED_MODULE_4__[\"default\"]];\n});\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (myApp);\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWdlcy9fYXBwLmpzP2Q1MzAiXSwibmFtZXMiOlsibXlBcHAiLCJwcm9wcyIsInVzdWFyaW8iLCJ1c2VBdXRlbnRpY2FjaW9uIiwiQ29tcG9uZW50IiwicGFnZVByb3BzIiwiZmlyZWJhc2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBOzs7QUFFQSxJQUFNQSxLQUFLLEdBQUcsU0FBUkEsS0FBUSxDQUFDQyxLQUFELEVBQVc7QUFBQTs7QUFDckIsTUFBTUMsT0FBTyxHQUFHQyx1RUFBZ0IsRUFBaEM7QUFEcUIsTUFJZEMsU0FKYyxHQUlXSCxLQUpYLENBSWRHLFNBSmM7QUFBQSxNQUlIQyxTQUpHLEdBSVdKLEtBSlgsQ0FJSEksU0FKRztBQUtyQixTQUNJLDBEQUFDLHlEQUFELENBQWlCLFFBQWpCO0FBQ0ksU0FBSyxFQUFFO0FBQ0hDLGNBQVEsRUFBUkEsaURBREc7QUFFSEosYUFBTyxFQUFQQTtBQUZHLEtBRFg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQU1JLDBEQUFDLFNBQUQseUZBQWVHLFNBQWY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQU5KLENBREo7QUFVSCxDQWZEOztHQUFNTCxLO1VBQ2NHLCtEOzs7QUFnQkxILG9FQUFmIiwiZmlsZSI6Ii4vcGFnZXMvX2FwcC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBBcHAgZnJvbSAnbmV4dC9hcHAnO1xuaW1wb3J0IGZpcmViYXNlLCB7IEZpcmViYXNlQ29udGV4dCB9IGZyb20gJy4uL2ZpcmViYXNlJztcbmltcG9ydCB1c2VBdXRlbnRpY2FjaW9uIGZyb20gJy4uL2hvb2tzL3VzZUF1dGVudGljYWNpb24nO1xuXG5jb25zdCBteUFwcCA9IChwcm9wcykgPT4ge1xuICAgIGNvbnN0IHVzdWFyaW8gPSB1c2VBdXRlbnRpY2FjaW9uKCk7XG4gICAgXG4gICAgXG4gICAgY29uc3Qge0NvbXBvbmVudCwgcGFnZVByb3BzIH0gPSBwcm9wcztcbiAgICByZXR1cm4gKFxuICAgICAgICA8RmlyZWJhc2VDb250ZXh0LlByb3ZpZGVyXG4gICAgICAgICAgICB2YWx1ZT17e1xuICAgICAgICAgICAgICAgIGZpcmViYXNlLFxuICAgICAgICAgICAgICAgIHVzdWFyaW9cbiAgICAgICAgICAgIH19XG4gICAgICAgID5cbiAgICAgICAgICAgIDxDb21wb25lbnQgey4uLnBhZ2VQcm9wc30vPlxuICAgICAgICA8L0ZpcmViYXNlQ29udGV4dC5Qcm92aWRlcj5cbiAgICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IG15QXBwOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/_app.js\n");

/***/ }),

/***/ 0:
/*!*******************************************************************************************************************************************!*\
  !*** multi next-client-pages-loader?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js ./node_modules/next/dist/client/router.js ***!
  \*******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! next-client-pages-loader?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js! */"./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js!./");
module.exports = __webpack_require__(/*! /Users/gerardorosas/Documents/producthunt/node_modules/next/dist/client/router.js */"./node_modules/next/dist/client/router.js");


/***/ }),

/***/ "dll-reference dll_5030f387d328e4415785":
/*!*******************************************!*\
  !*** external "dll_5030f387d328e4415785" ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = dll_5030f387d328e4415785;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJkbGxfNTAzMGYzODdkMzI4ZTQ0MTU3ODVcIj9mZDIzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6ImRsbC1yZWZlcmVuY2UgZGxsXzUwMzBmMzg3ZDMyOGU0NDE1Nzg1LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBkbGxfNTAzMGYzODdkMzI4ZTQ0MTU3ODU7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///dll-reference dll_5030f387d328e4415785\n");

/***/ })

},[[0,"static/runtime/webpack.js"]]]);