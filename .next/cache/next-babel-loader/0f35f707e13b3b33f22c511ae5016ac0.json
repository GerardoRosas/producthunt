{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\n\nconst useValidacion = (stateInicial, validar, fn) => {\n  const {\n    0: valores,\n    1: guardaValores\n  } = useState(stateInicial);\n  const {\n    0: errores,\n    1: guardarErrores\n  } = useState({});\n  const {\n    0: submitForm,\n    1: guardarSubmitForm\n  } = useState(false);\n  useEffect(() => {\n    if (submitForm) {\n      const noErrores = Object.keys(errores).length === 0;\n\n      if (noErrores) {\n        fn();\n      }\n\n      guardarSubmitForm(false);\n    }\n  }, [errores]); //Funcion que se ejecuta conforme el usuario escribe algo\n\n  const handleChange = e => {\n    guardaValores(_objectSpread(_objectSpread({}, valores), {}, {\n      [e.target.name]: e.target.value\n    }));\n  }; //Funcion que se ejecuta cuando el usuario hace submit\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const erroresvalidacion = validar(valores);\n    guardarErrores(erroresvalidacion);\n    guardarSubmitForm(true);\n  }; //Cuando se realiza el evento\n\n\n  const handleBlur = () => {\n    const erroresvalidacion = validar(valores);\n    guardarErrores(erroresvalidacion);\n  };\n\n  return {\n    valores,\n    errores,\n    handleChange,\n    handleSubmit,\n    handleBlur\n  };\n};\n\nexport default useValidacion;","map":{"version":3,"sources":["/Users/gerardorosas/Documents/producthunt/hooks/useValidacion.js"],"names":["React","useState","useEffect","useValidacion","stateInicial","validar","fn","valores","guardaValores","errores","guardarErrores","submitForm","guardarSubmitForm","noErrores","Object","keys","length","handleChange","e","target","name","value","handleSubmit","preventDefault","erroresvalidacion","handleBlur"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,aAAa,GAAG,CAACC,YAAD,EAAeC,OAAf,EAAwBC,EAAxB,KAA+B;AAEjD,QAAM;AAAA,OAAEC,OAAF;AAAA,OAAWC;AAAX,MAA6BP,QAAQ,CAACG,YAAD,CAA3C;AACA,QAAM;AAAA,OAAEK,OAAF;AAAA,OAAWC;AAAX,MAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAA,OAAEU,UAAF;AAAA,OAAcC;AAAd,MAAoCX,QAAQ,CAAC,KAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGS,UAAH,EAAc;AACV,YAAME,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYN,OAAZ,EAAqBO,MAArB,KAAgC,CAAlD;;AACA,UAAGH,SAAH,EAAa;AACTP,QAAAA,EAAE;AACL;;AACDM,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH;AACJ,GARQ,EAQN,CAACH,OAAD,CARM,CAAT,CANiD,CAiBjD;;AACA,QAAMQ,YAAY,GAAGC,CAAC,IAAI;AACtBV,IAAAA,aAAa,iCACND,OADM;AAET,OAACW,CAAC,CAACC,MAAF,CAASC,IAAV,GAAkBF,CAAC,CAACC,MAAF,CAASE;AAFlB,OAAb;AAIH,GALD,CAlBiD,CAyBjD;;;AACA,QAAMC,YAAY,GAAGJ,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACK,cAAF;AACA,UAAMC,iBAAiB,GAAGnB,OAAO,CAACE,OAAD,CAAjC;AACAG,IAAAA,cAAc,CAACc,iBAAD,CAAd;AACAZ,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GALD,CA1BiD,CAiCjD;;;AACA,QAAMa,UAAU,GAAG,MAAM;AACrB,UAAMD,iBAAiB,GAAGnB,OAAO,CAACE,OAAD,CAAjC;AACAG,IAAAA,cAAc,CAACc,iBAAD,CAAd;AACH,GAHD;;AAKA,SAAM;AACFjB,IAAAA,OADE;AAEFE,IAAAA,OAFE;AAGFQ,IAAAA,YAHE;AAIFK,IAAAA,YAJE;AAKFG,IAAAA;AALE,GAAN;AAOH,CA9CD;;AAgDA,eAAetB,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst useValidacion = (stateInicial, validar, fn) => {\n\n    const [ valores, guardaValores ] = useState(stateInicial);\n    const [ errores, guardarErrores ] = useState({});\n    const [ submitForm, guardarSubmitForm ] = useState(false);\n\n    useEffect(() => {\n        if(submitForm){\n            const noErrores = Object.keys(errores).length === 0;\n            if(noErrores){\n                fn();\n            }\n            guardarSubmitForm(false);\n        }\n    }, [errores])\n\n\n    //Funcion que se ejecuta conforme el usuario escribe algo\n    const handleChange = e => {\n        guardaValores({\n            ...valores,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    //Funcion que se ejecuta cuando el usuario hace submit\n    const handleSubmit = e => {\n        e.preventDefault();\n        const erroresvalidacion = validar(valores);\n        guardarErrores(erroresvalidacion);\n        guardarSubmitForm(true);\n    }\n\n    //Cuando se realiza el evento\n    const handleBlur = () => {\n        const erroresvalidacion = validar(valores);\n        guardarErrores(erroresvalidacion);\n    }\n\n    return{\n        valores,\n        errores,\n        handleChange,\n        handleSubmit,\n        handleBlur\n    }\n}\n \nexport default useValidacion;"]},"metadata":{},"sourceType":"module"}