{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\n\nvar useValidacion = function useValidacion(stateInicial, validar, fn) {\n  var _useState = useState(stateInicial),\n      valores = _useState[0],\n      guardaValores = _useState[1];\n\n  var _useState2 = useState({}),\n      errores = _useState2[0],\n      guardarErrores = _useState2[1];\n\n  var _useState3 = useState(false),\n      submitForm = _useState3[0],\n      guardarSubmitForm = _useState3[1];\n\n  useEffect(function () {\n    if (submitForm) {\n      var noErrores = Object.keys(errores).length === 0;\n\n      if (noErrores) {\n        fn();\n      }\n\n      guardarSubmitForm(false);\n    }\n  }, [errores]); //Funcion que se ejecuta conforme el usuario escribe algo\n\n  var handleChange = function handleChange(e) {\n    guardaValores(_objectSpread(_objectSpread({}, valores), {}, _defineProperty({}, e.target.name, e.target.value)));\n  }; //Funcion que se ejecuta cuando el usuario hace submit\n\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    var erroresvalidacion = validar(valores);\n    guardarErrores(erroresvalidacion);\n    guardarSubmitForm(true);\n  }; //Cuando se realiza el evento\n\n\n  var handleBlur = function handleBlur() {\n    var erroresvalidacion = validar(valores);\n    guardarErrores(erroresvalidacion);\n  };\n\n  return {\n    valores: valores,\n    errores: errores,\n    handleChange: handleChange,\n    handleSubmit: handleSubmit,\n    handleBlur: handleBlur\n  };\n};\n\nexport default useValidacion;","map":null,"metadata":{},"sourceType":"module"}